alert("Modified js loaded!");
/*! jQuery v3.3.1 | (c) JS Foundation and other contributors | jquery.org/license */
!function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document)
            throw new Error("jQuery requires a window with a document");
        return t(e)
    }
    : t(e)
}("undefined" != typeof window ? window : this, function(e, t) {
    "use strict";
    var n = []
      , r = e.document
      , i = Object.getPrototypeOf
      , o = n.slice
      , a = n.concat
      , s = n.push
      , u = n.indexOf
      , l = {}
      , c = l.toString
      , f = l.hasOwnProperty
      , p = f.toString
      , d = p.call(Object)
      , h = {}
      , g = function e(t) {
        return "function" == typeof t && "number" != typeof t.nodeType
    }
      , y = function e(t) {
        return null != t && t === t.window
    }
      , v = {
        type: !0,
        src: !0,
        noModule: !0
    };
    function m(e, t, n) {
        var i, o = (t = t || r).createElement("script");
        if (o.text = e,
        n)
            for (i in v)
                n[i] && (o[i] = n[i]);
        t.head.appendChild(o).parentNode.removeChild(o)
    }
    function x(e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? l[c.call(e)] || "object" : typeof e
    }
    var b = "3.3.1"
      , w = function(e, t) {
        return new w.fn.init(e,t)
    }
      , T = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    w.fn = w.prototype = {
        jquery: "3.3.1",
        constructor: w,
        length: 0,
        toArray: function() {
            return o.call(this)
        },
        get: function(e) {
            return null == e ? o.call(this) : e < 0 ? this[e + this.length] : this[e]
        },
        pushStack: function(e) {
            var t = w.merge(this.constructor(), e);
            return t.prevObject = this,
            t
        },
        each: function(e) {
            return w.each(this, e)
        },
        map: function(e) {
            return this.pushStack(w.map(this, function(t, n) {
                return e.call(t, n, t)
            }))
        },
        slice: function() {
            return this.pushStack(o.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(e) {
            var t = this.length
              , n = +e + (e < 0 ? t : 0);
            return this.pushStack(n >= 0 && n < t ? [this[n]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor()
        },
        push: s,
        sort: n.sort,
        splice: n.splice
    },
    w.extend = w.fn.extend = function() {
        var e, t, n, r, i, o, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1;
        for ("boolean" == typeof a && (l = a,
        a = arguments[s] || {},
        s++),
        "object" == typeof a || g(a) || (a = {}),
        s === u && (a = this,
        s--); s < u; s++)
            if (null != (e = arguments[s]))
                for (t in e)
                    n = a[t],
                    a !== (r = e[t]) && (l && r && (w.isPlainObject(r) || (i = Array.isArray(r))) ? (i ? (i = !1,
                    o = n && Array.isArray(n) ? n : []) : o = n && w.isPlainObject(n) ? n : {},
                    a[t] = w.extend(l, o, r)) : void 0 !== r && (a[t] = r));
        return a
    }
    ,
    w.extend({
        expando: "jQuery" + ("3.3.1" + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e)
        },
        noop: function() {},
        isPlainObject: function(e) {
            var t, n;
            return !(!e || "[object Object]" !== c.call(e)) && (!(t = i(e)) || "function" == typeof (n = f.call(t, "constructor") && t.constructor) && p.call(n) === d)
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e)
                return !1;
            return !0
        },
        globalEval: function(e) {
            m(e)
        },
        each: function(e, t) {
            var n, r = 0;
            if (C(e)) {
                for (n = e.length; r < n; r++)
                    if (!1 === t.call(e[r], r, e[r]))
                        break
            } else
                for (r in e)
                    if (!1 === t.call(e[r], r, e[r]))
                        break;
            return e
        },
        trim: function(e) {
            return null == e ? "" : (e + "").replace(T, "")
        },
        makeArray: function(e, t) {
            var n = t || [];
            return null != e && (C(Object(e)) ? w.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)),
            n
        },
        inArray: function(e, t, n) {
            return null == t ? -1 : u.call(t, e, n)
        },
        merge: function(e, t) {
            for (var n = +t.length, r = 0, i = e.length; r < n; r++)
                e[i++] = t[r];
            return e.length = i,
            e
        },
        grep: function(e, t, n) {
            for (var r, i = [], o = 0, a = e.length, s = !n; o < a; o++)
                (r = !t(e[o], o)) !== s && i.push(e[o]);
            return i
        },
        map: function(e, t, n) {
            var r, i, o = 0, s = [];
            if (C(e))
                for (r = e.length; o < r; o++)
                    null != (i = t(e[o], o, n)) && s.push(i);
            else
                for (o in e)
                    null != (i = t(e[o], o, n)) && s.push(i);
            return a.apply([], s)
        },
        guid: 1,
        support: h
    }),
    "function" == typeof Symbol && (w.fn[Symbol.iterator] = n[Symbol.iterator]),
    w.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        l["[object " + t + "]"] = t.toLowerCase()
    });
    function C(e) {
        var t = !!e && "length"in e && e.length
          , n = x(e);
        return !g(e) && !y(e) && ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e)
    }
    var E = function(e) {
        var t, n, r, i, o, a, s, u, l, c, f, p, d, h, g, y, v, m, x, b = "sizzle" + 1 * new Date, w = e.document, T = 0, C = 0, E = ae(), k = ae(), S = ae(), D = function(e, t) {
            return e === t && (f = !0),
            0
        }, N = {}.hasOwnProperty, A = [], j = A.pop, q = A.push, L = A.push, H = A.slice, O = function(e, t) {
            for (var n = 0, r = e.length; n < r; n++)
                if (e[n] === t)
                    return n;
            return -1
        }, P = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", M = "[\\x20\\t\\r\\n\\f]", R = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", I = "\\[" + M + "*(" + R + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + R + "))|)" + M + "*\\]", W = ":(" + R + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + I + ")*)|.*)\\)|)", $ = new RegExp(M + "+","g"), B = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$","g"), F = new RegExp("^" + M + "*," + M + "*"), _ = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"), z = new RegExp("=" + M + "*([^\\]'\"]*?)" + M + "*\\]","g"), X = new RegExp(W), U = new RegExp("^" + R + "$"), V = {
            ID: new RegExp("^#(" + R + ")"),
            CLASS: new RegExp("^\\.(" + R + ")"),
            TAG: new RegExp("^(" + R + "|[*])"),
            ATTR: new RegExp("^" + I),
            PSEUDO: new RegExp("^" + W),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)","i"),
            bool: new RegExp("^(?:" + P + ")$","i"),
            needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)","i")
        }, G = /^(?:input|select|textarea|button)$/i, Y = /^h\d$/i, Q = /^[^{]+\{\s*\[native \w/, J = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, K = /[+~]/, Z = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)","ig"), ee = function(e, t, n) {
            var r = "0x" + t - 65536;
            return r !== r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320)
        }, te = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ne = function(e, t) {
            return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
        }, re = function() {
            p()
        }, ie = me(function(e) {
            return !0 === e.disabled && ("form"in e || "label"in e)
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            L.apply(A = H.call(w.childNodes), w.childNodes),
            A[w.childNodes.length].nodeType
        } catch (e) {
            L = {
                apply: A.length ? function(e, t) {
                    q.apply(e, H.call(t))
                }
                : function(e, t) {
                    var n = e.length
                      , r = 0;
                    while (e[n++] = t[r++])
                        ;
                    e.length = n - 1
                }
            }
        }
        function oe(e, t, r, i) {
            var o, s, l, c, f, h, v, m = t && t.ownerDocument, T = t ? t.nodeType : 9;
            if (r = r || [],
            "string" != typeof e || !e || 1 !== T && 9 !== T && 11 !== T)
                return r;
            if (!i && ((t ? t.ownerDocument || t : w) !== d && p(t),
            t = t || d,
            g)) {
                if (11 !== T && (f = J.exec(e)))
                    if (o = f[1]) {
                        if (9 === T) {
                            if (!(l = t.getElementById(o)))
                                return r;
                            if (l.id === o)
                                return r.push(l),
                                r
                        } else if (m && (l = m.getElementById(o)) && x(t, l) && l.id === o)
                            return r.push(l),
                            r
                    } else {
                        if (f[2])
                            return L.apply(r, t.getElementsByTagName(e)),
                            r;
                        if ((o = f[3]) && n.getElementsByClassName && t.getElementsByClassName)
                            return L.apply(r, t.getElementsByClassName(o)),
                            r
                    }
                if (n.qsa && !S[e + " "] && (!y || !y.test(e))) {
                    if (1 !== T)
                        m = t,
                        v = e;
                    else if ("object" !== t.nodeName.toLowerCase()) {
                        (c = t.getAttribute("id")) ? c = c.replace(te, ne) : t.setAttribute("id", c = b),
                        s = (h = a(e)).length;
                        while (s--)
                            h[s] = "#" + c + " " + ve(h[s]);
                        v = h.join(","),
                        m = K.test(e) && ge(t.parentNode) || t
                    }
                    if (v)
                        try {
                            return L.apply(r, m.querySelectorAll(v)),
                            r
                        } catch (e) {} finally {
                            c === b && t.removeAttribute("id")
                        }
                }
            }
            return u(e.replace(B, "$1"), t, r, i)
        }
        function ae() {
            var e = [];
            function t(n, i) {
                return e.push(n + " ") > r.cacheLength && delete t[e.shift()],
                t[n + " "] = i
            }
            return t
        }
        function se(e) {
            return e[b] = !0,
            e
        }
        function ue(e) {
            var t = d.createElement("fieldset");
            try {
                return !!e(t)
            } catch (e) {
                return !1
            } finally {
                t.parentNode && t.parentNode.removeChild(t),
                t = null
            }
        }
        function le(e, t) {
            var n = e.split("|")
              , i = n.length;
            while (i--)
                r.attrHandle[n[i]] = t
        }
        function ce(e, t) {
            var n = t && e
              , r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
            if (r)
                return r;
            if (n)
                while (n = n.nextSibling)
                    if (n === t)
                        return -1;
            return e ? 1 : -1
        }
        function fe(e) {
            return function(t) {
                return "input" === t.nodeName.toLowerCase() && t.type === e
            }
        }
        function pe(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return ("input" === n || "button" === n) && t.type === e
            }
        }
        function de(e) {
            return function(t) {
                return "form"in t ? t.parentNode && !1 === t.disabled ? "label"in t ? "label"in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ie(t) === e : t.disabled === e : "label"in t && t.disabled === e
            }
        }
        function he(e) {
            return se(function(t) {
                return t = +t,
                se(function(n, r) {
                    var i, o = e([], n.length, t), a = o.length;
                    while (a--)
                        n[i = o[a]] && (n[i] = !(r[i] = n[i]))
                })
            })
        }
        function ge(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e
        }
        n = oe.support = {},
        o = oe.isXML = function(e) {
            var t = e && (e.ownerDocument || e).documentElement;
            return !!t && "HTML" !== t.nodeName
        }
        ,
        p = oe.setDocument = function(e) {
            var t, i, a = e ? e.ownerDocument || e : w;
            return a !== d && 9 === a.nodeType && a.documentElement ? (d = a,
            h = d.documentElement,
            g = !o(d),
            w !== d && (i = d.defaultView) && i.top !== i && (i.addEventListener ? i.addEventListener("unload", re, !1) : i.attachEvent && i.attachEvent("onunload", re)),
            n.attributes = ue(function(e) {
                return e.className = "i",
                !e.getAttribute("className")
            }),
            n.getElementsByTagName = ue(function(e) {
                return e.appendChild(d.createComment("")),
                !e.getElementsByTagName("*").length
            }),
            n.getElementsByClassName = Q.test(d.getElementsByClassName),
            n.getById = ue(function(e) {
                return h.appendChild(e).id = b,
                !d.getElementsByName || !d.getElementsByName(b).length
            }),
            n.getById ? (r.filter.ID = function(e) {
                var t = e.replace(Z, ee);
                return function(e) {
                    return e.getAttribute("id") === t
                }
            }
            ,
            r.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && g) {
                    var n = t.getElementById(e);
                    return n ? [n] : []
                }
            }
            ) : (r.filter.ID = function(e) {
                var t = e.replace(Z, ee);
                return function(e) {
                    var n = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                    return n && n.value === t
                }
            }
            ,
            r.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && g) {
                    var n, r, i, o = t.getElementById(e);
                    if (o) {
                        if ((n = o.getAttributeNode("id")) && n.value === e)
                            return [o];
                        i = t.getElementsByName(e),
                        r = 0;
                        while (o = i[r++])
                            if ((n = o.getAttributeNode("id")) && n.value === e)
                                return [o]
                    }
                    return []
                }
            }
            ),
            r.find.TAG = n.getElementsByTagName ? function(e, t) {
                return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : n.qsa ? t.querySelectorAll(e) : void 0
            }
            : function(e, t) {
                var n, r = [], i = 0, o = t.getElementsByTagName(e);
                if ("*" === e) {
                    while (n = o[i++])
                        1 === n.nodeType && r.push(n);
                    return r
                }
                return o
            }
            ,
            r.find.CLASS = n.getElementsByClassName && function(e, t) {
                if ("undefined" != typeof t.getElementsByClassName && g)
                    return t.getElementsByClassName(e)
            }
            ,
            v = [],
            y = [],
            (n.qsa = Q.test(d.querySelectorAll)) && (ue(function(e) {
                h.appendChild(e).innerHTML = "<a id='" + b + "'></a><select id='" + b + "-\r\\' msallowcapture=''><option selected=''></option></select>",
                e.querySelectorAll("[msallowcapture^='']").length && y.push("[*^$]=" + M + "*(?:''|\"\")"),
                e.querySelectorAll("[selected]").length || y.push("\\[" + M + "*(?:value|" + P + ")"),
                e.querySelectorAll("[id~=" + b + "-]").length || y.push("~="),
                e.querySelectorAll(":checked").length || y.push(":checked"),
                e.querySelectorAll("a#" + b + "+*").length || y.push(".#.+[+~]")
            }),
            ue(function(e) {
                e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var t = d.createElement("input");
                t.setAttribute("type", "hidden"),
                e.appendChild(t).setAttribute("name", "D"),
                e.querySelectorAll("[name=d]").length && y.push("name" + M + "*[*^$|!~]?="),
                2 !== e.querySelectorAll(":enabled").length && y.push(":enabled", ":disabled"),
                h.appendChild(e).disabled = !0,
                2 !== e.querySelectorAll(":disabled").length && y.push(":enabled", ":disabled"),
                e.querySelectorAll("*,:x"),
                y.push(",.*:")
            })),
            (n.matchesSelector = Q.test(m = h.matches || h.webkitMatchesSelector || h.mozMatchesSelector || h.oMatchesSelector || h.msMatchesSelector)) && ue(function(e) {
                n.disconnectedMatch = m.call(e, "*"),
                m.call(e, "[s!='']:x"),
                v.push("!=", W)
            }),
            y = y.length && new RegExp(y.join("|")),
            v = v.length && new RegExp(v.join("|")),
            t = Q.test(h.compareDocumentPosition),
            x = t || Q.test(h.contains) ? function(e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e
                  , r = t && t.parentNode;
                return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)))
            }
            : function(e, t) {
                if (t)
                    while (t = t.parentNode)
                        if (t === e)
                            return !0;
                return !1
            }
            ,
            D = t ? function(e, t) {
                if (e === t)
                    return f = !0,
                    0;
                var r = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return r || (1 & (r = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !n.sortDetached && t.compareDocumentPosition(e) === r ? e === d || e.ownerDocument === w && x(w, e) ? -1 : t === d || t.ownerDocument === w && x(w, t) ? 1 : c ? O(c, e) - O(c, t) : 0 : 4 & r ? -1 : 1)
            }
            : function(e, t) {
                if (e === t)
                    return f = !0,
                    0;
                var n, r = 0, i = e.parentNode, o = t.parentNode, a = [e], s = [t];
                if (!i || !o)
                    return e === d ? -1 : t === d ? 1 : i ? -1 : o ? 1 : c ? O(c, e) - O(c, t) : 0;
                if (i === o)
                    return ce(e, t);
                n = e;
                while (n = n.parentNode)
                    a.unshift(n);
                n = t;
                while (n = n.parentNode)
                    s.unshift(n);
                while (a[r] === s[r])
                    r++;
                return r ? ce(a[r], s[r]) : a[r] === w ? -1 : s[r] === w ? 1 : 0
            }
            ,
            d) : d
        }
        ,
        oe.matches = function(e, t) {
            return oe(e, null, null, t)
        }
        ,
        oe.matchesSelector = function(e, t) {
            if ((e.ownerDocument || e) !== d && p(e),
            t = t.replace(z, "='$1']"),
            n.matchesSelector && g && !S[t + " "] && (!v || !v.test(t)) && (!y || !y.test(t)))
                try {
                    var r = m.call(e, t);
                    if (r || n.disconnectedMatch || e.document && 11 !== e.document.nodeType)
                        return r
                } catch (e) {}
            return oe(t, d, null, [e]).length > 0
        }
        ,
        oe.contains = function(e, t) {
            return (e.ownerDocument || e) !== d && p(e),
            x(e, t)
        }
        ,
        oe.attr = function(e, t) {
            (e.ownerDocument || e) !== d && p(e);
            var i = r.attrHandle[t.toLowerCase()]
              , o = i && N.call(r.attrHandle, t.toLowerCase()) ? i(e, t, !g) : void 0;
            return void 0 !== o ? o : n.attributes || !g ? e.getAttribute(t) : (o = e.getAttributeNode(t)) && o.specified ? o.value : null
        }
        ,
        oe.escape = function(e) {
            return (e + "").replace(te, ne)
        }
        ,
        oe.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        }
        ,
        oe.uniqueSort = function(e) {
            var t, r = [], i = 0, o = 0;
            if (f = !n.detectDuplicates,
            c = !n.sortStable && e.slice(0),
            e.sort(D),
            f) {
                while (t = e[o++])
                    t === e[o] && (i = r.push(o));
                while (i--)
                    e.splice(r[i], 1)
            }
            return c = null,
            e
        }
        ,
        i = oe.getText = function(e) {
            var t, n = "", r = 0, o = e.nodeType;
            if (o) {
                if (1 === o || 9 === o || 11 === o) {
                    if ("string" == typeof e.textContent)
                        return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling)
                        n += i(e)
                } else if (3 === o || 4 === o)
                    return e.nodeValue
            } else
                while (t = e[r++])
                    n += i(t);
            return n
        }
        ,
        (r = oe.selectors = {
            cacheLength: 50,
            createPseudo: se,
            match: V,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace(Z, ee),
                    e[3] = (e[3] || e[4] || e[5] || "").replace(Z, ee),
                    "~=" === e[2] && (e[3] = " " + e[3] + " "),
                    e.slice(0, 4)
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(),
                    "nth" === e[1].slice(0, 3) ? (e[3] || oe.error(e[0]),
                    e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])),
                    e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && oe.error(e[0]),
                    e
                },
                PSEUDO: function(e) {
                    var t, n = !e[6] && e[2];
                    return V.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = a(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t),
                    e[2] = n.slice(0, t)),
                    e.slice(0, 3))
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(Z, ee).toLowerCase();
                    return "*" === e ? function() {
                        return !0
                    }
                    : function(e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t
                    }
                },
                CLASS: function(e) {
                    var t = E[e + " "];
                    return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) && E(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "")
                    })
                },
                ATTR: function(e, t, n) {
                    return function(r) {
                        var i = oe.attr(r, e);
                        return null == i ? "!=" === t : !t || (i += "",
                        "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i.replace($, " ") + " ").indexOf(n) > -1 : "|=" === t && (i === n || i.slice(0, n.length + 1) === n + "-"))
                    }
                },
                CHILD: function(e, t, n, r, i) {
                    var o = "nth" !== e.slice(0, 3)
                      , a = "last" !== e.slice(-4)
                      , s = "of-type" === t;
                    return 1 === r && 0 === i ? function(e) {
                        return !!e.parentNode
                    }
                    : function(t, n, u) {
                        var l, c, f, p, d, h, g = o !== a ? "nextSibling" : "previousSibling", y = t.parentNode, v = s && t.nodeName.toLowerCase(), m = !u && !s, x = !1;
                        if (y) {
                            if (o) {
                                while (g) {
                                    p = t;
                                    while (p = p[g])
                                        if (s ? p.nodeName.toLowerCase() === v : 1 === p.nodeType)
                                            return !1;
                                    h = g = "only" === e && !h && "nextSibling"
                                }
                                return !0
                            }
                            if (h = [a ? y.firstChild : y.lastChild],
                            a && m) {
                                x = (d = (l = (c = (f = (p = y)[b] || (p[b] = {}))[p.uniqueID] || (f[p.uniqueID] = {}))[e] || [])[0] === T && l[1]) && l[2],
                                p = d && y.childNodes[d];
                                while (p = ++d && p && p[g] || (x = d = 0) || h.pop())
                                    if (1 === p.nodeType && ++x && p === t) {
                                        c[e] = [T, d, x];
                                        break
                                    }
                            } else if (m && (x = d = (l = (c = (f = (p = t)[b] || (p[b] = {}))[p.uniqueID] || (f[p.uniqueID] = {}))[e] || [])[0] === T && l[1]),
                            !1 === x)
                                while (p = ++d && p && p[g] || (x = d = 0) || h.pop())
                                    if ((s ? p.nodeName.toLowerCase() === v : 1 === p.nodeType) && ++x && (m && ((c = (f = p[b] || (p[b] = {}))[p.uniqueID] || (f[p.uniqueID] = {}))[e] = [T, x]),
                                    p === t))
                                        break;
                            return (x -= i) === r || x % r == 0 && x / r >= 0
                        }
                    }
                },
                PSEUDO: function(e, t) {
                    var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || oe.error("unsupported pseudo: " + e);
                    return i[b] ? i(t) : i.length > 1 ? (n = [e, e, "", t],
                    r.setFilters.hasOwnProperty(e.toLowerCase()) ? se(function(e, n) {
                        var r, o = i(e, t), a = o.length;
                        while (a--)
                            e[r = O(e, o[a])] = !(n[r] = o[a])
                    }) : function(e) {
                        return i(e, 0, n)
                    }
                    ) : i
                }
            },
            pseudos: {
                not: se(function(e) {
                    var t = []
                      , n = []
                      , r = s(e.replace(B, "$1"));
                    return r[b] ? se(function(e, t, n, i) {
                        var o, a = r(e, null, i, []), s = e.length;
                        while (s--)
                            (o = a[s]) && (e[s] = !(t[s] = o))
                    }) : function(e, i, o) {
                        return t[0] = e,
                        r(t, null, o, n),
                        t[0] = null,
                        !n.pop()
                    }
                }),
                has: se(function(e) {
                    return function(t) {
                        return oe(e, t).length > 0
                    }
                }),
                contains: se(function(e) {
                    return e = e.replace(Z, ee),
                    function(t) {
                        return (t.textContent || t.innerText || i(t)).indexOf(e) > -1
                    }
                }),
                lang: se(function(e) {
                    return U.test(e || "") || oe.error("unsupported lang: " + e),
                    e = e.replace(Z, ee).toLowerCase(),
                    function(t) {
                        var n;
                        do {
                            if (n = g ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang"))
                                return (n = n.toLowerCase()) === e || 0 === n.indexOf(e + "-")
                        } while ((t = t.parentNode) && 1 === t.nodeType);return !1
                    }
                }),
                target: function(t) {
                    var n = e.location && e.location.hash;
                    return n && n.slice(1) === t.id
                },
                root: function(e) {
                    return e === h
                },
                focus: function(e) {
                    return e === d.activeElement && (!d.hasFocus || d.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                },
                enabled: de(!1),
                disabled: de(!0),
                checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && !!e.checked || "option" === t && !!e.selected
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex,
                    !0 === e.selected
                },
                empty: function(e) {
                    for (e = e.firstChild; e; e = e.nextSibling)
                        if (e.nodeType < 6)
                            return !1;
                    return !0
                },
                parent: function(e) {
                    return !r.pseudos.empty(e)
                },
                header: function(e) {
                    return Y.test(e.nodeName)
                },
                input: function(e) {
                    return G.test(e.nodeName)
                },
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && "button" === e.type || "button" === t
                },
                text: function(e) {
                    var t;
                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                },
                first: he(function() {
                    return [0]
                }),
                last: he(function(e, t) {
                    return [t - 1]
                }),
                eq: he(function(e, t, n) {
                    return [n < 0 ? n + t : n]
                }),
                even: he(function(e, t) {
                    for (var n = 0; n < t; n += 2)
                        e.push(n);
                    return e
                }),
                odd: he(function(e, t) {
                    for (var n = 1; n < t; n += 2)
                        e.push(n);
                    return e
                }),
                lt: he(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; --r >= 0; )
                        e.push(r);
                    return e
                }),
                gt: he(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; ++r < t; )
                        e.push(r);
                    return e
                })
            }
        }).pseudos.nth = r.pseudos.eq;
        for (t in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        })
            r.pseudos[t] = fe(t);
        for (t in {
            submit: !0,
            reset: !0
        })
            r.pseudos[t] = pe(t);
        function ye() {}
        ye.prototype = r.filters = r.pseudos,
        r.setFilters = new ye,
        a = oe.tokenize = function(e, t) {
            var n, i, o, a, s, u, l, c = k[e + " "];
            if (c)
                return t ? 0 : c.slice(0);
            s = e,
            u = [],
            l = r.preFilter;
            while (s) {
                n && !(i = F.exec(s)) || (i && (s = s.slice(i[0].length) || s),
                u.push(o = [])),
                n = !1,
                (i = _.exec(s)) && (n = i.shift(),
                o.push({
                    value: n,
                    type: i[0].replace(B, " ")
                }),
                s = s.slice(n.length));
                for (a in r.filter)
                    !(i = V[a].exec(s)) || l[a] && !(i = l[a](i)) || (n = i.shift(),
                    o.push({
                        value: n,
                        type: a,
                        matches: i
                    }),
                    s = s.slice(n.length));
                if (!n)
                    break
            }
            return t ? s.length : s ? oe.error(e) : k(e, u).slice(0)
        }
        ;
        function ve(e) {
            for (var t = 0, n = e.length, r = ""; t < n; t++)
                r += e[t].value;
            return r
        }
        function me(e, t, n) {
            var r = t.dir
              , i = t.next
              , o = i || r
              , a = n && "parentNode" === o
              , s = C++;
            return t.first ? function(t, n, i) {
                while (t = t[r])
                    if (1 === t.nodeType || a)
                        return e(t, n, i);
                return !1
            }
            : function(t, n, u) {
                var l, c, f, p = [T, s];
                if (u) {
                    while (t = t[r])
                        if ((1 === t.nodeType || a) && e(t, n, u))
                            return !0
                } else
                    while (t = t[r])
                        if (1 === t.nodeType || a)
                            if (f = t[b] || (t[b] = {}),
                            c = f[t.uniqueID] || (f[t.uniqueID] = {}),
                            i && i === t.nodeName.toLowerCase())
                                t = t[r] || t;
                            else {
                                if ((l = c[o]) && l[0] === T && l[1] === s)
                                    return p[2] = l[2];
                                if (c[o] = p,
                                p[2] = e(t, n, u))
                                    return !0
                            }
                return !1
            }
        }
        function xe(e) {
            return e.length > 1 ? function(t, n, r) {
                var i = e.length;
                while (i--)
                    if (!e[i](t, n, r))
                        return !1;
                return !0
            }
            : e[0]
        }
        function be(e, t, n) {
            for (var r = 0, i = t.length; r < i; r++)
                oe(e, t[r], n);
            return n
        }
        function we(e, t, n, r, i) {
            for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)
                (o = e[s]) && (n && !n(o, r, i) || (a.push(o),
                l && t.push(s)));
            return a
        }
        function Te(e, t, n, r, i, o) {
            return r && !r[b] && (r = Te(r)),
            i && !i[b] && (i = Te(i, o)),
            se(function(o, a, s, u) {
                var l, c, f, p = [], d = [], h = a.length, g = o || be(t || "*", s.nodeType ? [s] : s, []), y = !e || !o && t ? g : we(g, p, e, s, u), v = n ? i || (o ? e : h || r) ? [] : a : y;
                if (n && n(y, v, s, u),
                r) {
                    l = we(v, d),
                    r(l, [], s, u),
                    c = l.length;
                    while (c--)
                        (f = l[c]) && (v[d[c]] = !(y[d[c]] = f))
                }
                if (o) {
                    if (i || e) {
                        if (i) {
                            l = [],
                            c = v.length;
                            while (c--)
                                (f = v[c]) && l.push(y[c] = f);
                            i(null, v = [], l, u)
                        }
                        c = v.length;
                        while (c--)
                            (f = v[c]) && (l = i ? O(o, f) : p[c]) > -1 && (o[l] = !(a[l] = f))
                    }
                } else
                    v = we(v === a ? v.splice(h, v.length) : v),
                    i ? i(null, a, v, u) : L.apply(a, v)
            })
        }
        function Ce(e) {
            for (var t, n, i, o = e.length, a = r.relative[e[0].type], s = a || r.relative[" "], u = a ? 1 : 0, c = me(function(e) {
                return e === t
            }, s, !0), f = me(function(e) {
                return O(t, e) > -1
            }, s, !0), p = [function(e, n, r) {
                var i = !a && (r || n !== l) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r));
                return t = null,
                i
            }
            ]; u < o; u++)
                if (n = r.relative[e[u].type])
                    p = [me(xe(p), n)];
                else {
                    if ((n = r.filter[e[u].type].apply(null, e[u].matches))[b]) {
                        for (i = ++u; i < o; i++)
                            if (r.relative[e[i].type])
                                break;
                        return Te(u > 1 && xe(p), u > 1 && ve(e.slice(0, u - 1).concat({
                            value: " " === e[u - 2].type ? "*" : ""
                        })).replace(B, "$1"), n, u < i && Ce(e.slice(u, i)), i < o && Ce(e = e.slice(i)), i < o && ve(e))
                    }
                    p.push(n)
                }
            return xe(p)
        }
        function Ee(e, t) {
            var n = t.length > 0
              , i = e.length > 0
              , o = function(o, a, s, u, c) {
                var f, h, y, v = 0, m = "0", x = o && [], b = [], w = l, C = o || i && r.find.TAG("*", c), E = T += null == w ? 1 : Math.random() || .1, k = C.length;
                for (c && (l = a === d || a || c); m !== k && null != (f = C[m]); m++) {
                    if (i && f) {
                        h = 0,
                        a || f.ownerDocument === d || (p(f),
                        s = !g);
                        while (y = e[h++])
                            if (y(f, a || d, s)) {
                                u.push(f);
                                break
                            }
                        c && (T = E)
                    }
                    n && ((f = !y && f) && v--,
                    o && x.push(f))
                }
                if (v += m,
                n && m !== v) {
                    h = 0;
                    while (y = t[h++])
                        y(x, b, a, s);
                    if (o) {
                        if (v > 0)
                            while (m--)
                                x[m] || b[m] || (b[m] = j.call(u));
                        b = we(b)
                    }
                    L.apply(u, b),
                    c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u)
                }
                return c && (T = E,
                l = w),
                x
            };
            return n ? se(o) : o
        }
        return s = oe.compile = function(e, t) {
            var n, r = [], i = [], o = S[e + " "];
            if (!o) {
                t || (t = a(e)),
                n = t.length;
                while (n--)
                    (o = Ce(t[n]))[b] ? r.push(o) : i.push(o);
                (o = S(e, Ee(i, r))).selector = e
            }
            return o
        }
        ,
        u = oe.select = function(e, t, n, i) {
            var o, u, l, c, f, p = "function" == typeof e && e, d = !i && a(e = p.selector || e);
            if (n = n || [],
            1 === d.length) {
                if ((u = d[0] = d[0].slice(0)).length > 2 && "ID" === (l = u[0]).type && 9 === t.nodeType && g && r.relative[u[1].type]) {
                    if (!(t = (r.find.ID(l.matches[0].replace(Z, ee), t) || [])[0]))
                        return n;
                    p && (t = t.parentNode),
                    e = e.slice(u.shift().value.length)
                }
                o = V.needsContext.test(e) ? 0 : u.length;
                while (o--) {
                    if (l = u[o],
                    r.relative[c = l.type])
                        break;
                    if ((f = r.find[c]) && (i = f(l.matches[0].replace(Z, ee), K.test(u[0].type) && ge(t.parentNode) || t))) {
                        if (u.splice(o, 1),
                        !(e = i.length && ve(u)))
                            return L.apply(n, i),
                            n;
                        break
                    }
                }
            }
            return (p || s(e, d))(i, t, !g, n, !t || K.test(e) && ge(t.parentNode) || t),
            n
        }
        ,
        n.sortStable = b.split("").sort(D).join("") === b,
        n.detectDuplicates = !!f,
        p(),
        n.sortDetached = ue(function(e) {
            return 1 & e.compareDocumentPosition(d.createElement("fieldset"))
        }),
        ue(function(e) {
            return e.innerHTML = "<a href='#'></a>",
            "#" === e.firstChild.getAttribute("href")
        }) || le("type|href|height|width", function(e, t, n) {
            if (!n)
                return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
        }),
        n.attributes && ue(function(e) {
            return e.innerHTML = "<input/>",
            e.firstChild.setAttribute("value", ""),
            "" === e.firstChild.getAttribute("value")
        }) || le("value", function(e, t, n) {
            if (!n && "input" === e.nodeName.toLowerCase())
                return e.defaultValue
        }),
        ue(function(e) {
            return null == e.getAttribute("disabled")
        }) || le(P, function(e, t, n) {
            var r;
            if (!n)
                return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null
        }),
        oe
    }(e);
    w.find = E,
    w.expr = E.selectors,
    w.expr[":"] = w.expr.pseudos,
    w.uniqueSort = w.unique = E.uniqueSort,
    w.text = E.getText,
    w.isXMLDoc = E.isXML,
    w.contains = E.contains,
    w.escapeSelector = E.escape;
    var k = function(e, t, n) {
        var r = []
          , i = void 0 !== n;
        while ((e = e[t]) && 9 !== e.nodeType)
            if (1 === e.nodeType) {
                if (i && w(e).is(n))
                    break;
                r.push(e)
            }
        return r
    }
      , S = function(e, t) {
        for (var n = []; e; e = e.nextSibling)
            1 === e.nodeType && e !== t && n.push(e);
        return n
    }
      , D = w.expr.match.needsContext;
    function N(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
    }
    var A = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function j(e, t, n) {
        return g(t) ? w.grep(e, function(e, r) {
            return !!t.call(e, r, e) !== n
        }) : t.nodeType ? w.grep(e, function(e) {
            return e === t !== n
        }) : "string" != typeof t ? w.grep(e, function(e) {
            return u.call(t, e) > -1 !== n
        }) : w.filter(t, e, n)
    }
    w.filter = function(e, t, n) {
        var r = t[0];
        return n && (e = ":not(" + e + ")"),
        1 === t.length && 1 === r.nodeType ? w.find.matchesSelector(r, e) ? [r] : [] : w.find.matches(e, w.grep(t, function(e) {
            return 1 === e.nodeType
        }))
    }
    ,
    w.fn.extend({
        find: function(e) {
            var t, n, r = this.length, i = this;
            if ("string" != typeof e)
                return this.pushStack(w(e).filter(function() {
                    for (t = 0; t < r; t++)
                        if (w.contains(i[t], this))
                            return !0
                }));
            for (n = this.pushStack([]),
            t = 0; t < r; t++)
                w.find(e, i[t], n);
            return r > 1 ? w.uniqueSort(n) : n
        },
        filter: function(e) {
            return this.pushStack(j(this, e || [], !1))
        },
        not: function(e) {
            return this.pushStack(j(this, e || [], !0))
        },
        is: function(e) {
            return !!j(this, "string" == typeof e && D.test(e) ? w(e) : e || [], !1).length
        }
    });
    var q, L = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (w.fn.init = function(e, t, n) {
        var i, o;
        if (!e)
            return this;
        if (n = n || q,
        "string" == typeof e) {
            if (!(i = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [null, e, null] : L.exec(e)) || !i[1] && t)
                return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            if (i[1]) {
                if (t = t instanceof w ? t[0] : t,
                w.merge(this, w.parseHTML(i[1], t && t.nodeType ? t.ownerDocument || t : r, !0)),
                A.test(i[1]) && w.isPlainObject(t))
                    for (i in t)
                        g(this[i]) ? this[i](t[i]) : this.attr(i, t[i]);
                return this
            }
            return (o = r.getElementById(i[2])) && (this[0] = o,
            this.length = 1),
            this
        }
        return e.nodeType ? (this[0] = e,
        this.length = 1,
        this) : g(e) ? void 0 !== n.ready ? n.ready(e) : e(w) : w.makeArray(e, this)
    }
    ).prototype = w.fn,
    q = w(r);
    var H = /^(?:parents|prev(?:Until|All))/
      , O = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    w.fn.extend({
        has: function(e) {
            var t = w(e, this)
              , n = t.length;
            return this.filter(function() {
                for (var e = 0; e < n; e++)
                    if (w.contains(this, t[e]))
                        return !0
            })
        },
        closest: function(e, t) {
            var n, r = 0, i = this.length, o = [], a = "string" != typeof e && w(e);
            if (!D.test(e))
                for (; r < i; r++)
                    for (n = this[r]; n && n !== t; n = n.parentNode)
                        if (n.nodeType < 11 && (a ? a.index(n) > -1 : 1 === n.nodeType && w.find.matchesSelector(n, e))) {
                            o.push(n);
                            break
                        }
            return this.pushStack(o.length > 1 ? w.uniqueSort(o) : o)
        },
        index: function(e) {
            return e ? "string" == typeof e ? u.call(w(e), this[0]) : u.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(e, t) {
            return this.pushStack(w.uniqueSort(w.merge(this.get(), w(e, t))))
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }
    });
    function P(e, t) {
        while ((e = e[t]) && 1 !== e.nodeType)
            ;
        return e
    }
    w.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function(e) {
            return k(e, "parentNode")
        },
        parentsUntil: function(e, t, n) {
            return k(e, "parentNode", n)
        },
        next: function(e) {
            return P(e, "nextSibling")
        },
        prev: function(e) {
            return P(e, "previousSibling")
        },
        nextAll: function(e) {
            return k(e, "nextSibling")
        },
        prevAll: function(e) {
            return k(e, "previousSibling")
        },
        nextUntil: function(e, t, n) {
            return k(e, "nextSibling", n)
        },
        prevUntil: function(e, t, n) {
            return k(e, "previousSibling", n)
        },
        siblings: function(e) {
            return S((e.parentNode || {}).firstChild, e)
        },
        children: function(e) {
            return S(e.firstChild)
        },
        contents: function(e) {
            return N(e, "iframe") ? e.contentDocument : (N(e, "template") && (e = e.content || e),
            w.merge([], e.childNodes))
        }
    }, function(e, t) {
        w.fn[e] = function(n, r) {
            var i = w.map(this, t, n);
            return "Until" !== e.slice(-5) && (r = n),
            r && "string" == typeof r && (i = w.filter(r, i)),
            this.length > 1 && (O[e] || w.uniqueSort(i),
            H.test(e) && i.reverse()),
            this.pushStack(i)
        }
    });
    var M = /[^\x20\t\r\n\f]+/g;
    function R(e) {
        var t = {};
        return w.each(e.match(M) || [], function(e, n) {
            t[n] = !0
        }),
        t
    }
    w.Callbacks = function(e) {
        e = "string" == typeof e ? R(e) : w.extend({}, e);
        var t, n, r, i, o = [], a = [], s = -1, u = function() {
            for (i = i || e.once,
            r = t = !0; a.length; s = -1) {
                n = a.shift();
                while (++s < o.length)
                    !1 === o[s].apply(n[0], n[1]) && e.stopOnFalse && (s = o.length,
                    n = !1)
            }
            e.memory || (n = !1),
            t = !1,
            i && (o = n ? [] : "")
        }, l = {
            add: function() {
                return o && (n && !t && (s = o.length - 1,
                a.push(n)),
                function t(n) {
                    w.each(n, function(n, r) {
                        g(r) ? e.unique && l.has(r) || o.push(r) : r && r.length && "string" !== x(r) && t(r)
                    })
                }(arguments),
                n && !t && u()),
                this
            },
            remove: function() {
                return w.each(arguments, function(e, t) {
                    var n;
                    while ((n = w.inArray(t, o, n)) > -1)
                        o.splice(n, 1),
                        n <= s && s--
                }),
                this
            },
            has: function(e) {
                return e ? w.inArray(e, o) > -1 : o.length > 0
            },
            empty: function() {
                return o && (o = []),
                this
            },
            disable: function() {
                return i = a = [],
                o = n = "",
                this
            },
            disabled: function() {
                return !o
            },
            lock: function() {
                return i = a = [],
                n || t || (o = n = ""),
                this
            },
            locked: function() {
                return !!i
            },
            fireWith: function(e, n) {
                return i || (n = [e, (n = n || []).slice ? n.slice() : n],
                a.push(n),
                t || u()),
                this
            },
            fire: function() {
                return l.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!r
            }
        };
        return l
    }
    ;
    function I(e) {
        return e
    }
    function W(e) {
        throw e
    }
    function $(e, t, n, r) {
        var i;
        try {
            e && g(i = e.promise) ? i.call(e).done(t).fail(n) : e && g(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r))
        } catch (e) {
            n.apply(void 0, [e])
        }
    }
    w.extend({
        Deferred: function(t) {
            var n = [["notify", "progress", w.Callbacks("memory"), w.Callbacks("memory"), 2], ["resolve", "done", w.Callbacks("once memory"), w.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", w.Callbacks("once memory"), w.Callbacks("once memory"), 1, "rejected"]]
              , r = "pending"
              , i = {
                state: function() {
                    return r
                },
                always: function() {
                    return o.done(arguments).fail(arguments),
                    this
                },
                "catch": function(e) {
                    return i.then(null, e)
                },
                pipe: function() {
                    var e = arguments;
                    return w.Deferred(function(t) {
                        w.each(n, function(n, r) {
                            var i = g(e[r[4]]) && e[r[4]];
                            o[r[1]](function() {
                                var e = i && i.apply(this, arguments);
                                e && g(e.promise) ? e.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[r[0] + "With"](this, i ? [e] : arguments)
                            })
                        }),
                        e = null
                    }).promise()
                },
                then: function(t, r, i) {
                    var o = 0;
                    function a(t, n, r, i) {
                        return function() {
                            var s = this
                              , u = arguments
                              , l = function() {
                                var e, l;
                                if (!(t < o)) {
                                    if ((e = r.apply(s, u)) === n.promise())
                                        throw new TypeError("Thenable self-resolution");
                                    l = e && ("object" == typeof e || "function" == typeof e) && e.then,
                                    g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++,
                                    l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0,
                                    u = [e]),
                                    (i || n.resolveWith)(s, u))
                                }
                            }
                              , c = i ? l : function() {
                                try {
                                    l()
                                } catch (e) {
                                    w.Deferred.exceptionHook && w.Deferred.exceptionHook(e, c.stackTrace),
                                    t + 1 >= o && (r !== W && (s = void 0,
                                    u = [e]),
                                    n.rejectWith(s, u))
                                }
                            }
                            ;
                            t ? c() : (w.Deferred.getStackHook && (c.stackTrace = w.Deferred.getStackHook()),
                            e.setTimeout(c))
                        }
                    }
                    return w.Deferred(function(e) {
                        n[0][3].add(a(0, e, g(i) ? i : I, e.notifyWith)),
                        n[1][3].add(a(0, e, g(t) ? t : I)),
                        n[2][3].add(a(0, e, g(r) ? r : W))
                    }).promise()
                },
                promise: function(e) {
                    return null != e ? w.extend(e, i) : i
                }
            }
              , o = {};
            return w.each(n, function(e, t) {
                var a = t[2]
                  , s = t[5];
                i[t[1]] = a.add,
                s && a.add(function() {
                    r = s
                }, n[3 - e][2].disable, n[3 - e][3].disable, n[0][2].lock, n[0][3].lock),
                a.add(t[3].fire),
                o[t[0]] = function() {
                    return o[t[0] + "With"](this === o ? void 0 : this, arguments),
                    this
                }
                ,
                o[t[0] + "With"] = a.fireWith
            }),
            i.promise(o),
            t && t.call(o, o),
            o
        },
        when: function(e) {
            var t = arguments.length
              , n = t
              , r = Array(n)
              , i = o.call(arguments)
              , a = w.Deferred()
              , s = function(e) {
                return function(n) {
                    r[e] = this,
                    i[e] = arguments.length > 1 ? o.call(arguments) : n,
                    --t || a.resolveWith(r, i)
                }
            };
            if (t <= 1 && ($(e, a.done(s(n)).resolve, a.reject, !t),
            "pending" === a.state() || g(i[n] && i[n].then)))
                return a.then();
            while (n--)
                $(i[n], s(n), a.reject);
            return a.promise()
        }
    });
    var B = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    w.Deferred.exceptionHook = function(t, n) {
        e.console && e.console.warn && t && B.test(t.name) && e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, n)
    }
    ,
    w.readyException = function(t) {
        e.setTimeout(function() {
            throw t
        })
    }
    ;
    var F = w.Deferred();
    w.fn.ready = function(e) {
        return F.then(e)["catch"](function(e) {
            w.readyException(e)
        }),
        this
    }
    ,
    w.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(e) {
            (!0 === e ? --w.readyWait : w.isReady) || (w.isReady = !0,
            !0 !== e && --w.readyWait > 0 || F.resolveWith(r, [w]))
        }
    }),
    w.ready.then = F.then;
    function _() {
        r.removeEventListener("DOMContentLoaded", _),
        e.removeEventListener("load", _),
        w.ready()
    }
    "complete" === r.readyState || "loading" !== r.readyState && !r.documentElement.doScroll ? e.setTimeout(w.ready) : (r.addEventListener("DOMContentLoaded", _),
    e.addEventListener("load", _));
    var z = function(e, t, n, r, i, o, a) {
        var s = 0
          , u = e.length
          , l = null == n;
        if ("object" === x(n)) {
            i = !0;
            for (s in n)
                z(e, t, s, n[s], !0, o, a)
        } else if (void 0 !== r && (i = !0,
        g(r) || (a = !0),
        l && (a ? (t.call(e, r),
        t = null) : (l = t,
        t = function(e, t, n) {
            return l.call(w(e), n)
        }
        )),
        t))
            for (; s < u; s++)
                t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
        return i ? e : l ? t.call(e) : u ? t(e[0], n) : o
    }
      , X = /^-ms-/
      , U = /-([a-z])/g;
    function V(e, t) {
        return t.toUpperCase()
    }
    function G(e) {
        return e.replace(X, "ms-").replace(U, V)
    }
    var Y = function(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
    };
    function Q() {
        this.expando = w.expando + Q.uid++
    }
    Q.uid = 1,
    Q.prototype = {
        cache: function(e) {
            var t = e[this.expando];
            return t || (t = {},
            Y(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))),
            t
        },
        set: function(e, t, n) {
            var r, i = this.cache(e);
            if ("string" == typeof t)
                i[G(t)] = n;
            else
                for (r in t)
                    i[G(r)] = t[r];
            return i
        },
        get: function(e, t) {
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][G(t)]
        },
        access: function(e, t, n) {
            return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n),
            void 0 !== n ? n : t)
        },
        remove: function(e, t) {
            var n, r = e[this.expando];
            if (void 0 !== r) {
                if (void 0 !== t) {
                    n = (t = Array.isArray(t) ? t.map(G) : (t = G(t))in r ? [t] : t.match(M) || []).length;
                    while (n--)
                        delete r[t[n]]
                }
                (void 0 === t || w.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !w.isEmptyObject(t)
        }
    };
    var J = new Q
      , K = new Q
      , Z = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
      , ee = /[A-Z]/g;
    function te(e) {
        return "true" === e || "false" !== e && ("null" === e ? null : e === +e + "" ? +e : Z.test(e) ? JSON.parse(e) : e)
    }
    function ne(e, t, n) {
        var r;
        if (void 0 === n && 1 === e.nodeType)
            if (r = "data-" + t.replace(ee, "-$&").toLowerCase(),
            "string" == typeof (n = e.getAttribute(r))) {
                try {
                    n = te(n)
                } catch (e) {}
                K.set(e, t, n)
            } else
                n = void 0;
        return n
    }
    w.extend({
        hasData: function(e) {
            return K.hasData(e) || J.hasData(e)
        },
        data: function(e, t, n) {
            return K.access(e, t, n)
        },
        removeData: function(e, t) {
            K.remove(e, t)
        },
        _data: function(e, t, n) {
            return J.access(e, t, n)
        },
        _removeData: function(e, t) {
            J.remove(e, t)
        }
    }),
    w.fn.extend({
        data: function(e, t) {
            var n, r, i, o = this[0], a = o && o.attributes;
            if (void 0 === e) {
                if (this.length && (i = K.get(o),
                1 === o.nodeType && !J.get(o, "hasDataAttrs"))) {
                    n = a.length;
                    while (n--)
                        a[n] && 0 === (r = a[n].name).indexOf("data-") && (r = G(r.slice(5)),
                        ne(o, r, i[r]));
                    J.set(o, "hasDataAttrs", !0)
                }
                return i
            }
            return "object" == typeof e ? this.each(function() {
                K.set(this, e)
            }) : z(this, function(t) {
                var n;
                if (o && void 0 === t) {
                    if (void 0 !== (n = K.get(o, e)))
                        return n;
                    if (void 0 !== (n = ne(o, e)))
                        return n
                } else
                    this.each(function() {
                        K.set(this, e, t)
                    })
            }, null, t, arguments.length > 1, null, !0)
        },
        removeData: function(e) {
            return this.each(function() {
                K.remove(this, e)
            })
        }
    }),
    w.extend({
        queue: function(e, t, n) {
            var r;
            if (e)
                return t = (t || "fx") + "queue",
                r = J.get(e, t),
                n && (!r || Array.isArray(n) ? r = J.access(e, t, w.makeArray(n)) : r.push(n)),
                r || []
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = w.queue(e, t)
              , r = n.length
              , i = n.shift()
              , o = w._queueHooks(e, t)
              , a = function() {
                w.dequeue(e, t)
            };
            "inprogress" === i && (i = n.shift(),
            r--),
            i && ("fx" === t && n.unshift("inprogress"),
            delete o.stop,
            i.call(e, a, o)),
            !r && o && o.empty.fire()
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return J.get(e, n) || J.access(e, n, {
                empty: w.Callbacks("once memory").add(function() {
                    J.remove(e, [t + "queue", n])
                })
            })
        }
    }),
    w.fn.extend({
        queue: function(e, t) {
            var n = 2;
            return "string" != typeof e && (t = e,
            e = "fx",
            n--),
            arguments.length < n ? w.queue(this[0], e) : void 0 === t ? this : this.each(function() {
                var n = w.queue(this, e, t);
                w._queueHooks(this, e),
                "fx" === e && "inprogress" !== n[0] && w.dequeue(this, e)
            })
        },
        dequeue: function(e) {
            return this.each(function() {
                w.dequeue(this, e)
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(e, t) {
            var n, r = 1, i = w.Deferred(), o = this, a = this.length, s = function() {
                --r || i.resolveWith(o, [o])
            };
            "string" != typeof e && (t = e,
            e = void 0),
            e = e || "fx";
            while (a--)
                (n = J.get(o[a], e + "queueHooks")) && n.empty && (r++,
                n.empty.add(s));
            return s(),
            i.promise(t)
        }
    });
    var re = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
      , ie = new RegExp("^(?:([+-])=|)(" + re + ")([a-z%]*)$","i")
      , oe = ["Top", "Right", "Bottom", "Left"]
      , ae = function(e, t) {
        return "none" === (e = t || e).style.display || "" === e.style.display && w.contains(e.ownerDocument, e) && "none" === w.css(e, "display")
    }
      , se = function(e, t, n, r) {
        var i, o, a = {};
        for (o in t)
            a[o] = e.style[o],
            e.style[o] = t[o];
        i = n.apply(e, r || []);
        for (o in t)
            e.style[o] = a[o];
        return i
    };
    function ue(e, t, n, r) {
        var i, o, a = 20, s = r ? function() {
            return r.cur()
        }
        : function() {
            return w.css(e, t, "")
        }
        , u = s(), l = n && n[3] || (w.cssNumber[t] ? "" : "px"), c = (w.cssNumber[t] || "px" !== l && +u) && ie.exec(w.css(e, t));
        if (c && c[3] !== l) {
            u /= 2,
            l = l || c[3],
            c = +u || 1;
            while (a--)
                w.style(e, t, c + l),
                (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0),
                c /= o;
            c *= 2,
            w.style(e, t, c + l),
            n = n || []
        }
        return n && (c = +c || +u || 0,
        i = n[1] ? c + (n[1] + 1) * n[2] : +n[2],
        r && (r.unit = l,
        r.start = c,
        r.end = i)),
        i
    }
    var le = {};
    function ce(e) {
        var t, n = e.ownerDocument, r = e.nodeName, i = le[r];
        return i || (t = n.body.appendChild(n.createElement(r)),
        i = w.css(t, "display"),
        t.parentNode.removeChild(t),
        "none" === i && (i = "block"),
        le[r] = i,
        i)
    }
    function fe(e, t) {
        for (var n, r, i = [], o = 0, a = e.length; o < a; o++)
            (r = e[o]).style && (n = r.style.display,
            t ? ("none" === n && (i[o] = J.get(r, "display") || null,
            i[o] || (r.style.display = "")),
            "" === r.style.display && ae(r) && (i[o] = ce(r))) : "none" !== n && (i[o] = "none",
            J.set(r, "display", n)));
        for (o = 0; o < a; o++)
            null != i[o] && (e[o].style.display = i[o]);
        return e
    }
    w.fn.extend({
        show: function() {
            return fe(this, !0)
        },
        hide: function() {
            return fe(this)
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                ae(this) ? w(this).show() : w(this).hide()
            })
        }
    });
    var pe = /^(?:checkbox|radio)$/i
      , de = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i
      , he = /^$|^module$|\/(?:java|ecma)script/i
      , ge = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    ge.optgroup = ge.option,
    ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead,
    ge.th = ge.td;
    function ye(e, t) {
        var n;
        return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [],
        void 0 === t || t && N(e, t) ? w.merge([e], n) : n
    }
    function ve(e, t) {
        for (var n = 0, r = e.length; n < r; n++)
            J.set(e[n], "globalEval", !t || J.get(t[n], "globalEval"))
    }
    var me = /<|&#?\w+;/;
    function xe(e, t, n, r, i) {
        for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)
            if ((o = e[d]) || 0 === o)
                if ("object" === x(o))
                    w.merge(p, o.nodeType ? [o] : o);
                else if (me.test(o)) {
                    a = a || f.appendChild(t.createElement("div")),
                    s = (de.exec(o) || ["", ""])[1].toLowerCase(),
                    u = ge[s] || ge._default,
                    a.innerHTML = u[1] + w.htmlPrefilter(o) + u[2],
                    c = u[0];
                    while (c--)
                        a = a.lastChild;
                    w.merge(p, a.childNodes),
                    (a = f.firstChild).textContent = ""
                } else
                    p.push(t.createTextNode(o));
        f.textContent = "",
        d = 0;
        while (o = p[d++])
            if (r && w.inArray(o, r) > -1)
                i && i.push(o);
            else if (l = w.contains(o.ownerDocument, o),
            a = ye(f.appendChild(o), "script"),
            l && ve(a),
            n) {
                c = 0;
                while (o = a[c++])
                    he.test(o.type || "") && n.push(o)
            }
        return f
    }
    !function() {
        var e = r.createDocumentFragment().appendChild(r.createElement("div"))
          , t = r.createElement("input");
        t.setAttribute("type", "radio"),
        t.setAttribute("checked", "checked"),
        t.setAttribute("name", "t"),
        e.appendChild(t),
        h.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked,
        e.innerHTML = "<textarea>x</textarea>",
        h.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue
    }();
    var be = r.documentElement
      , we = /^key/
      , Te = /^(?:mouse|pointer|contextmenu|drag|drop)|click/
      , Ce = /^([^.]*)(?:\.(.+)|)/;
    function Ee() {
        return !0
    }
    function ke() {
        return !1
    }
    function Se() {
        try {
            return r.activeElement
        } catch (e) {}
    }
    function De(e, t, n, r, i, o) {
        var a, s;
        if ("object" == typeof t) {
            "string" != typeof n && (r = r || n,
            n = void 0);
            for (s in t)
                De(e, s, n, r, t[s], o);
            return e
        }
        if (null == r && null == i ? (i = n,
        r = n = void 0) : null == i && ("string" == typeof n ? (i = r,
        r = void 0) : (i = r,
        r = n,
        n = void 0)),
        !1 === i)
            i = ke;
        else if (!i)
            return e;
        return 1 === o && (a = i,
        (i = function(e) {
            return w().off(e),
            a.apply(this, arguments)
        }
        ).guid = a.guid || (a.guid = w.guid++)),
        e.each(function() {
            w.event.add(this, t, i, r, n)
        })
    }
    w.event = {
        global: {},
        add: function(e, t, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, y = J.get(e);
            if (y) {
                n.handler && (n = (o = n).handler,
                i = o.selector),
                i && w.find.matchesSelector(be, i),
                n.guid || (n.guid = w.guid++),
                (u = y.events) || (u = y.events = {}),
                (a = y.handle) || (a = y.handle = function(t) {
                    return "undefined" != typeof w && w.event.triggered !== t.type ? w.event.dispatch.apply(e, arguments) : void 0
                }
                ),
                l = (t = (t || "").match(M) || [""]).length;
                while (l--)
                    d = g = (s = Ce.exec(t[l]) || [])[1],
                    h = (s[2] || "").split(".").sort(),
                    d && (f = w.event.special[d] || {},
                    d = (i ? f.delegateType : f.bindType) || d,
                    f = w.event.special[d] || {},
                    c = w.extend({
                        type: d,
                        origType: g,
                        data: r,
                        handler: n,
                        guid: n.guid,
                        selector: i,
                        needsContext: i && w.expr.match.needsContext.test(i),
                        namespace: h.join(".")
                    }, o),
                    (p = u[d]) || ((p = u[d] = []).delegateCount = 0,
                    f.setup && !1 !== f.setup.call(e, r, h, a) || e.addEventListener && e.addEventListener(d, a)),
                    f.add && (f.add.call(e, c),
                    c.handler.guid || (c.handler.guid = n.guid)),
                    i ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                    w.event.global[d] = !0)
            }
        },
        remove: function(e, t, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, y = J.hasData(e) && J.get(e);
            if (y && (u = y.events)) {
                l = (t = (t || "").match(M) || [""]).length;
                while (l--)
                    if (s = Ce.exec(t[l]) || [],
                    d = g = s[1],
                    h = (s[2] || "").split(".").sort(),
                    d) {
                        f = w.event.special[d] || {},
                        p = u[d = (r ? f.delegateType : f.bindType) || d] || [],
                        s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                        a = o = p.length;
                        while (o--)
                            c = p[o],
                            !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1),
                            c.selector && p.delegateCount--,
                            f.remove && f.remove.call(e, c));
                        a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, y.handle) || w.removeEvent(e, d, y.handle),
                        delete u[d])
                    } else
                        for (d in u)
                            w.event.remove(e, d + t[l], n, r, !0);
                w.isEmptyObject(u) && J.remove(e, "handle events")
            }
        },
        dispatch: function(e) {
            var t = w.event.fix(e), n, r, i, o, a, s, u = new Array(arguments.length), l = (J.get(this, "events") || {})[t.type] || [], c = w.event.special[t.type] || {};
            for (u[0] = t,
            n = 1; n < arguments.length; n++)
                u[n] = arguments[n];
            if (t.delegateTarget = this,
            !c.preDispatch || !1 !== c.preDispatch.call(this, t)) {
                s = w.event.handlers.call(this, t, l),
                n = 0;
                while ((o = s[n++]) && !t.isPropagationStopped()) {
                    t.currentTarget = o.elem,
                    r = 0;
                    while ((a = o.handlers[r++]) && !t.isImmediatePropagationStopped())
                        t.rnamespace && !t.rnamespace.test(a.namespace) || (t.handleObj = a,
                        t.data = a.data,
                        void 0 !== (i = ((w.event.special[a.origType] || {}).handle || a.handler).apply(o.elem, u)) && !1 === (t.result = i) && (t.preventDefault(),
                        t.stopPropagation()))
                }
                return c.postDispatch && c.postDispatch.call(this, t),
                t.result
            }
        },
        handlers: function(e, t) {
            var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target;
            if (u && l.nodeType && !("click" === e.type && e.button >= 1))
                for (; l !== this; l = l.parentNode || this)
                    if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                        for (o = [],
                        a = {},
                        n = 0; n < u; n++)
                            void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? w(i, this).index(l) > -1 : w.find(i, this, null, [l]).length),
                            a[i] && o.push(r);
                        o.length && s.push({
                            elem: l,
                            handlers: o
                        })
                    }
            return l = this,
            u < t.length && s.push({
                elem: l,
                handlers: t.slice(u)
            }),
            s
        },
        addProp: function(e, t) {
            Object.defineProperty(w.Event.prototype, e, {
                enumerable: !0,
                configurable: !0,
                get: g(t) ? function() {
                    if (this.originalEvent)
                        return t(this.originalEvent)
                }
                : function() {
                    if (this.originalEvent)
                        return this.originalEvent[e]
                }
                ,
                set: function(t) {
                    Object.defineProperty(this, e, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    })
                }
            })
        },
        fix: function(e) {
            return e[w.expando] ? e : new w.Event(e)
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== Se() && this.focus)
                        return this.focus(),
                        !1
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    if (this === Se() && this.blur)
                        return this.blur(),
                        !1
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    if ("checkbox" === this.type && this.click && N(this, "input"))
                        return this.click(),
                        !1
                },
                _default: function(e) {
                    return N(e.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                }
            }
        }
    },
    w.removeEvent = function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n)
    }
    ,
    w.Event = function(e, t) {
        if (!(this instanceof w.Event))
            return new w.Event(e,t);
        e && e.type ? (this.originalEvent = e,
        this.type = e.type,
        this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ee : ke,
        this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target,
        this.currentTarget = e.currentTarget,
        this.relatedTarget = e.relatedTarget) : this.type = e,
        t && w.extend(this, t),
        this.timeStamp = e && e.timeStamp || Date.now(),
        this[w.expando] = !0
    }
    ,
    w.Event.prototype = {
        constructor: w.Event,
        isDefaultPrevented: ke,
        isPropagationStopped: ke,
        isImmediatePropagationStopped: ke,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = Ee,
            e && !this.isSimulated && e.preventDefault()
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = Ee,
            e && !this.isSimulated && e.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = Ee,
            e && !this.isSimulated && e.stopImmediatePropagation(),
            this.stopPropagation()
        }
    },
    w.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        "char": !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(e) {
            var t = e.button;
            return null == e.which && we.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Te.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which
        }
    }, w.event.addProp),
    w.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, t) {
        w.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function(e) {
                var n, r = this, i = e.relatedTarget, o = e.handleObj;
                return i && (i === r || w.contains(r, i)) || (e.type = o.origType,
                n = o.handler.apply(this, arguments),
                e.type = t),
                n
            }
        }
    }),
    w.fn.extend({
        on: function(e, t, n, r) {
            return De(this, e, t, n, r)
        },
        one: function(e, t, n, r) {
            return De(this, e, t, n, r, 1)
        },
        off: function(e, t, n) {
            var r, i;
            if (e && e.preventDefault && e.handleObj)
                return r = e.handleObj,
                w(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler),
                this;
            if ("object" == typeof e) {
                for (i in e)
                    this.off(i, t, e[i]);
                return this
            }
            return !1 !== t && "function" != typeof t || (n = t,
            t = void 0),
            !1 === n && (n = ke),
            this.each(function() {
                w.event.remove(this, e, n, t)
            })
        }
    });
    var Ne = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi
      , Ae = /<script|<style|<link/i
      , je = /checked\s*(?:[^=]|=\s*.checked.)/i
      , qe = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function Le(e, t) {
        return N(e, "table") && N(11 !== t.nodeType ? t : t.firstChild, "tr") ? w(e).children("tbody")[0] || e : e
    }
    function He(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type,
        e
    }
    function Oe(e) {
        return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"),
        e
    }
    function Pe(e, t) {
        var n, r, i, o, a, s, u, l;
        if (1 === t.nodeType) {
            if (J.hasData(e) && (o = J.access(e),
            a = J.set(t, o),
            l = o.events)) {
                delete a.handle,
                a.events = {};
                for (i in l)
                    for (n = 0,
                    r = l[i].length; n < r; n++)
                        w.event.add(t, i, l[i][n])
            }
            K.hasData(e) && (s = K.access(e),
            u = w.extend({}, s),
            K.set(t, u))
        }
    }
    function Me(e, t) {
        var n = t.nodeName.toLowerCase();
        "input" === n && pe.test(e.type) ? t.checked = e.checked : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue)
    }
    function Re(e, t, n, r) {
        t = a.apply([], t);
        var i, o, s, u, l, c, f = 0, p = e.length, d = p - 1, y = t[0], v = g(y);
        if (v || p > 1 && "string" == typeof y && !h.checkClone && je.test(y))
            return e.each(function(i) {
                var o = e.eq(i);
                v && (t[0] = y.call(this, i, o.html())),
                Re(o, t, n, r)
            });
        if (p && (i = xe(t, e[0].ownerDocument, !1, e, r),
        o = i.firstChild,
        1 === i.childNodes.length && (i = o),
        o || r)) {
            for (u = (s = w.map(ye(i, "script"), He)).length; f < p; f++)
                l = i,
                f !== d && (l = w.clone(l, !0, !0),
                u && w.merge(s, ye(l, "script"))),
                n.call(e[f], l, f);
            if (u)
                for (c = s[s.length - 1].ownerDocument,
                w.map(s, Oe),
                f = 0; f < u; f++)
                    l = s[f],
                    he.test(l.type || "") && !J.access(l, "globalEval") && w.contains(c, l) && (l.src && "module" !== (l.type || "").toLowerCase() ? w._evalUrl && w._evalUrl(l.src) : m(l.textContent.replace(qe, ""), c, l))
        }
        return e
    }
    function Ie(e, t, n) {
        for (var r, i = t ? w.filter(t, e) : e, o = 0; null != (r = i[o]); o++)
            n || 1 !== r.nodeType || w.cleanData(ye(r)),
            r.parentNode && (n && w.contains(r.ownerDocument, r) && ve(ye(r, "script")),
            r.parentNode.removeChild(r));
        return e
    }
    w.extend({
        htmlPrefilter: function(e) {
            return e.replace(Ne, "<$1></$2>")
        },
        clone: function(e, t, n) {
            var r, i, o, a, s = e.cloneNode(!0), u = w.contains(e.ownerDocument, e);
            if (!(h.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || w.isXMLDoc(e)))
                for (a = ye(s),
                r = 0,
                i = (o = ye(e)).length; r < i; r++)
                    Me(o[r], a[r]);
            if (t)
                if (n)
                    for (o = o || ye(e),
                    a = a || ye(s),
                    r = 0,
                    i = o.length; r < i; r++)
                        Pe(o[r], a[r]);
                else
                    Pe(e, s);
            return (a = ye(s, "script")).length > 0 && ve(a, !u && ye(e, "script")),
            s
        },
        cleanData: function(e) {
            for (var t, n, r, i = w.event.special, o = 0; void 0 !== (n = e[o]); o++)
                if (Y(n)) {
                    if (t = n[J.expando]) {
                        if (t.events)
                            for (r in t.events)
                                i[r] ? w.event.remove(n, r) : w.removeEvent(n, r, t.handle);
                        n[J.expando] = void 0
                    }
                    n[K.expando] && (n[K.expando] = void 0)
                }
        }
    }),
    w.fn.extend({
        detach: function(e) {
            return Ie(this, e, !0)
        },
        remove: function(e) {
            return Ie(this, e)
        },
        text: function(e) {
            return z(this, function(e) {
                return void 0 === e ? w.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                })
            }, null, e, arguments.length)
        },
        append: function() {
            return Re(this, arguments, function(e) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Le(this, e).appendChild(e)
            })
        },
        prepend: function() {
            return Re(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = Le(this, e);
                    t.insertBefore(e, t.firstChild)
                }
            })
        },
        before: function() {
            return Re(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this)
            })
        },
        after: function() {
            return Re(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
            })
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++)
                1 === e.nodeType && (w.cleanData(ye(e, !1)),
                e.textContent = "");
            return this
        },
        clone: function(e, t) {
            return e = null != e && e,
            t = null == t ? e : t,
            this.map(function() {
                return w.clone(this, e, t)
            })
        },
        html: function(e) {
            return z(this, function(e) {
                var t = this[0] || {}
                  , n = 0
                  , r = this.length;
                if (void 0 === e && 1 === t.nodeType)
                    return t.innerHTML;
                if ("string" == typeof e && !Ae.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) {
                    e = w.htmlPrefilter(e);
                    try {
                        for (; n < r; n++)
                            1 === (t = this[n] || {}).nodeType && (w.cleanData(ye(t, !1)),
                            t.innerHTML = e);
                        t = 0
                    } catch (e) {}
                }
                t && this.empty().append(e)
            }, null, e, arguments.length)
        },
        replaceWith: function() {
            var e = [];
            return Re(this, arguments, function(t) {
                var n = this.parentNode;
                w.inArray(this, e) < 0 && (w.cleanData(ye(this)),
                n && n.replaceChild(t, this))
            }, e)
        }
    }),
    w.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, t) {
        w.fn[e] = function(e) {
            for (var n, r = [], i = w(e), o = i.length - 1, a = 0; a <= o; a++)
                n = a === o ? this : this.clone(!0),
                w(i[a])[t](n),
                s.apply(r, n.get());
            return this.pushStack(r)
        }
    });
    var We = new RegExp("^(" + re + ")(?!px)[a-z%]+$","i")
      , $e = function(t) {
        var n = t.ownerDocument.defaultView;
        return n && n.opener || (n = e),
        n.getComputedStyle(t)
    }
      , Be = new RegExp(oe.join("|"),"i");
    !function() {
        function t() {
            if (c) {
                l.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",
                c.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",
                be.appendChild(l).appendChild(c);
                var t = e.getComputedStyle(c);
                i = "1%" !== t.top,
                u = 12 === n(t.marginLeft),
                c.style.right = "60%",
                s = 36 === n(t.right),
                o = 36 === n(t.width),
                c.style.position = "absolute",
                a = 36 === c.offsetWidth || "absolute",
                be.removeChild(l),
                c = null
            }
        }
        function n(e) {
            return Math.round(parseFloat(e))
        }
        var i, o, a, s, u, l = r.createElement("div"), c = r.createElement("div");
        c.style && (c.style.backgroundClip = "content-box",
        c.cloneNode(!0).style.backgroundClip = "",
        h.clearCloneStyle = "content-box" === c.style.backgroundClip,
        w.extend(h, {
            boxSizingReliable: function() {
                return t(),
                o
            },
            pixelBoxStyles: function() {
                return t(),
                s
            },
            pixelPosition: function() {
                return t(),
                i
            },
            reliableMarginLeft: function() {
                return t(),
                u
            },
            scrollboxSize: function() {
                return t(),
                a
            }
        }))
    }();
    function Fe(e, t, n) {
        var r, i, o, a, s = e.style;
        return (n = n || $e(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || w.contains(e.ownerDocument, e) || (a = w.style(e, t)),
        !h.pixelBoxStyles() && We.test(a) && Be.test(t) && (r = s.width,
        i = s.minWidth,
        o = s.maxWidth,
        s.minWidth = s.maxWidth = s.width = a,
        a = n.width,
        s.width = r,
        s.minWidth = i,
        s.maxWidth = o)),
        void 0 !== a ? a + "" : a
    }
    function _e(e, t) {
        return {
            get: function() {
                if (!e())
                    return (this.get = t).apply(this, arguments);
                delete this.get
            }
        }
    }
    var ze = /^(none|table(?!-c[ea]).+)/
      , Xe = /^--/
      , Ue = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }
      , Ve = {
        letterSpacing: "0",
        fontWeight: "400"
    }
      , Ge = ["Webkit", "Moz", "ms"]
      , Ye = r.createElement("div").style;
    function Qe(e) {
        if (e in Ye)
            return e;
        var t = e[0].toUpperCase() + e.slice(1)
          , n = Ge.length;
        while (n--)
            if ((e = Ge[n] + t)in Ye)
                return e
    }
    function Je(e) {
        var t = w.cssProps[e];
        return t || (t = w.cssProps[e] = Qe(e) || e),
        t
    }
    function Ke(e, t, n) {
        var r = ie.exec(t);
        return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t
    }
    function Ze(e, t, n, r, i, o) {
        var a = "width" === t ? 1 : 0
          , s = 0
          , u = 0;
        if (n === (r ? "border" : "content"))
            return 0;
        for (; a < 4; a += 2)
            "margin" === n && (u += w.css(e, n + oe[a], !0, i)),
            r ? ("content" === n && (u -= w.css(e, "padding" + oe[a], !0, i)),
            "margin" !== n && (u -= w.css(e, "border" + oe[a] + "Width", !0, i))) : (u += w.css(e, "padding" + oe[a], !0, i),
            "padding" !== n ? u += w.css(e, "border" + oe[a] + "Width", !0, i) : s += w.css(e, "border" + oe[a] + "Width", !0, i));
        return !r && o >= 0 && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5))),
        u
    }
    function et(e, t, n) {
        var r = $e(e)
          , i = Fe(e, t, r)
          , o = "border-box" === w.css(e, "boxSizing", !1, r)
          , a = o;
        if (We.test(i)) {
            if (!n)
                return i;
            i = "auto"
        }
        return a = a && (h.boxSizingReliable() || i === e.style[t]),
        ("auto" === i || !parseFloat(i) && "inline" === w.css(e, "display", !1, r)) && (i = e["offset" + t[0].toUpperCase() + t.slice(1)],
        a = !0),
        (i = parseFloat(i) || 0) + Ze(e, t, n || (o ? "border" : "content"), a, r, i) + "px"
    }
    w.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = Fe(e, "opacity");
                        return "" === n ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {},
        style: function(e, t, n, r) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var i, o, a, s = G(t), u = Xe.test(t), l = e.style;
                if (u || (t = Je(s)),
                a = w.cssHooks[t] || w.cssHooks[s],
                void 0 === n)
                    return a && "get"in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                "string" == (o = typeof n) && (i = ie.exec(n)) && i[1] && (n = ue(e, t, i),
                o = "number"),
                null != n && n === n && ("number" === o && (n += i && i[3] || (w.cssNumber[s] ? "" : "px")),
                h.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"),
                a && "set"in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n))
            }
        },
        css: function(e, t, n, r) {
            var i, o, a, s = G(t);
            return Xe.test(t) || (t = Je(s)),
            (a = w.cssHooks[t] || w.cssHooks[s]) && "get"in a && (i = a.get(e, !0, n)),
            void 0 === i && (i = Fe(e, t, r)),
            "normal" === i && t in Ve && (i = Ve[t]),
            "" === n || n ? (o = parseFloat(i),
            !0 === n || isFinite(o) ? o || 0 : i) : i
        }
    }),
    w.each(["height", "width"], function(e, t) {
        w.cssHooks[t] = {
            get: function(e, n, r) {
                if (n)
                    return !ze.test(w.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? et(e, t, r) : se(e, Ue, function() {
                        return et(e, t, r)
                    })
            },
            set: function(e, n, r) {
                var i, o = $e(e), a = "border-box" === w.css(e, "boxSizing", !1, o), s = r && Ze(e, t, r, a, o);
                return a && h.scrollboxSize() === o.position && (s -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(o[t]) - Ze(e, t, "border", !1, o) - .5)),
                s && (i = ie.exec(n)) && "px" !== (i[3] || "px") && (e.style[t] = n,
                n = w.css(e, t)),
                Ke(e, n, s)
            }
        }
    }),
    w.cssHooks.marginLeft = _e(h.reliableMarginLeft, function(e, t) {
        if (t)
            return (parseFloat(Fe(e, "marginLeft")) || e.getBoundingClientRect().left - se(e, {
                marginLeft: 0
            }, function() {
                return e.getBoundingClientRect().left
            })) + "px"
    }),
    w.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(e, t) {
        w.cssHooks[e + t] = {
            expand: function(n) {
                for (var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n]; r < 4; r++)
                    i[e + oe[r] + t] = o[r] || o[r - 2] || o[0];
                return i
            }
        },
        "margin" !== e && (w.cssHooks[e + t].set = Ke)
    }),
    w.fn.extend({
        css: function(e, t) {
            return z(this, function(e, t, n) {
                var r, i, o = {}, a = 0;
                if (Array.isArray(t)) {
                    for (r = $e(e),
                    i = t.length; a < i; a++)
                        o[t[a]] = w.css(e, t[a], !1, r);
                    return o
                }
                return void 0 !== n ? w.style(e, t, n) : w.css(e, t)
            }, e, t, arguments.length > 1)
        }
    });
    function tt(e, t, n, r, i) {
        return new tt.prototype.init(e,t,n,r,i)
    }
    w.Tween = tt,
    tt.prototype = {
        constructor: tt,
        init: function(e, t, n, r, i, o) {
            this.elem = e,
            this.prop = n,
            this.easing = i || w.easing._default,
            this.options = t,
            this.start = this.now = this.cur(),
            this.end = r,
            this.unit = o || (w.cssNumber[n] ? "" : "px")
        },
        cur: function() {
            var e = tt.propHooks[this.prop];
            return e && e.get ? e.get(this) : tt.propHooks._default.get(this)
        },
        run: function(e) {
            var t, n = tt.propHooks[this.prop];
            return this.options.duration ? this.pos = t = w.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
            this.now = (this.end - this.start) * t + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            n && n.set ? n.set(this) : tt.propHooks._default.set(this),
            this
        }
    },
    tt.prototype.init.prototype = tt.prototype,
    tt.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = w.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0
            },
            set: function(e) {
                w.fx.step[e.prop] ? w.fx.step[e.prop](e) : 1 !== e.elem.nodeType || null == e.elem.style[w.cssProps[e.prop]] && !w.cssHooks[e.prop] ? e.elem[e.prop] = e.now : w.style(e.elem, e.prop, e.now + e.unit)
            }
        }
    },
    tt.propHooks.scrollTop = tt.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
        }
    },
    w.easing = {
        linear: function(e) {
            return e
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2
        },
        _default: "swing"
    },
    w.fx = tt.prototype.init,
    w.fx.step = {};
    var nt, rt, it = /^(?:toggle|show|hide)$/, ot = /queueHooks$/;
    function at() {
        rt && (!1 === r.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(at) : e.setTimeout(at, w.fx.interval),
        w.fx.tick())
    }
    function st() {
        return e.setTimeout(function() {
            nt = void 0
        }),
        nt = Date.now()
    }
    function ut(e, t) {
        var n, r = 0, i = {
            height: e
        };
        for (t = t ? 1 : 0; r < 4; r += 2 - t)
            i["margin" + (n = oe[r])] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e),
        i
    }
    function lt(e, t, n) {
        for (var r, i = (pt.tweeners[t] || []).concat(pt.tweeners["*"]), o = 0, a = i.length; o < a; o++)
            if (r = i[o].call(n, t, e))
                return r
    }
    function ct(e, t, n) {
        var r, i, o, a, s, u, l, c, f = "width"in t || "height"in t, p = this, d = {}, h = e.style, g = e.nodeType && ae(e), y = J.get(e, "fxshow");
        n.queue || (null == (a = w._queueHooks(e, "fx")).unqueued && (a.unqueued = 0,
        s = a.empty.fire,
        a.empty.fire = function() {
            a.unqueued || s()
        }
        ),
        a.unqueued++,
        p.always(function() {
            p.always(function() {
                a.unqueued--,
                w.queue(e, "fx").length || a.empty.fire()
            })
        }));
        for (r in t)
            if (i = t[r],
            it.test(i)) {
                if (delete t[r],
                o = o || "toggle" === i,
                i === (g ? "hide" : "show")) {
                    if ("show" !== i || !y || void 0 === y[r])
                        continue;
                    g = !0
                }
                d[r] = y && y[r] || w.style(e, r)
            }
        if ((u = !w.isEmptyObject(t)) || !w.isEmptyObject(d)) {
            f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY],
            null == (l = y && y.display) && (l = J.get(e, "display")),
            "none" === (c = w.css(e, "display")) && (l ? c = l : (fe([e], !0),
            l = e.style.display || l,
            c = w.css(e, "display"),
            fe([e]))),
            ("inline" === c || "inline-block" === c && null != l) && "none" === w.css(e, "float") && (u || (p.done(function() {
                h.display = l
            }),
            null == l && (c = h.display,
            l = "none" === c ? "" : c)),
            h.display = "inline-block")),
            n.overflow && (h.overflow = "hidden",
            p.always(function() {
                h.overflow = n.overflow[0],
                h.overflowX = n.overflow[1],
                h.overflowY = n.overflow[2]
            })),
            u = !1;
            for (r in d)
                u || (y ? "hidden"in y && (g = y.hidden) : y = J.access(e, "fxshow", {
                    display: l
                }),
                o && (y.hidden = !g),
                g && fe([e], !0),
                p.done(function() {
                    g || fe([e]),
                    J.remove(e, "fxshow");
                    for (r in d)
                        w.style(e, r, d[r])
                })),
                u = lt(g ? y[r] : 0, r, p),
                r in y || (y[r] = u.start,
                g && (u.end = u.start,
                u.start = 0))
        }
    }
    function ft(e, t) {
        var n, r, i, o, a;
        for (n in e)
            if (r = G(n),
            i = t[r],
            o = e[n],
            Array.isArray(o) && (i = o[1],
            o = e[n] = o[0]),
            n !== r && (e[r] = o,
            delete e[n]),
            (a = w.cssHooks[r]) && "expand"in a) {
                o = a.expand(o),
                delete e[r];
                for (n in o)
                    n in e || (e[n] = o[n],
                    t[n] = i)
            } else
                t[r] = i
    }
    function pt(e, t, n) {
        var r, i, o = 0, a = pt.prefilters.length, s = w.Deferred().always(function() {
            delete u.elem
        }), u = function() {
            if (i)
                return !1;
            for (var t = nt || st(), n = Math.max(0, l.startTime + l.duration - t), r = 1 - (n / l.duration || 0), o = 0, a = l.tweens.length; o < a; o++)
                l.tweens[o].run(r);
            return s.notifyWith(e, [l, r, n]),
            r < 1 && a ? n : (a || s.notifyWith(e, [l, 1, 0]),
            s.resolveWith(e, [l]),
            !1)
        }, l = s.promise({
            elem: e,
            props: w.extend({}, t),
            opts: w.extend(!0, {
                specialEasing: {},
                easing: w.easing._default
            }, n),
            originalProperties: t,
            originalOptions: n,
            startTime: nt || st(),
            duration: n.duration,
            tweens: [],
            createTween: function(t, n) {
                var r = w.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing);
                return l.tweens.push(r),
                r
            },
            stop: function(t) {
                var n = 0
                  , r = t ? l.tweens.length : 0;
                if (i)
                    return this;
                for (i = !0; n < r; n++)
                    l.tweens[n].run(1);
                return t ? (s.notifyWith(e, [l, 1, 0]),
                s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]),
                this
            }
        }), c = l.props;
        for (ft(c, l.opts.specialEasing); o < a; o++)
            if (r = pt.prefilters[o].call(l, e, c, l.opts))
                return g(r.stop) && (w._queueHooks(l.elem, l.opts.queue).stop = r.stop.bind(r)),
                r;
        return w.map(c, lt, l),
        g(l.opts.start) && l.opts.start.call(e, l),
        l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always),
        w.fx.timer(w.extend(u, {
            elem: e,
            anim: l,
            queue: l.opts.queue
        })),
        l
    }
    w.Animation = w.extend(pt, {
        tweeners: {
            "*": [function(e, t) {
                var n = this.createTween(e, t);
                return ue(n.elem, e, ie.exec(t), n),
                n
            }
            ]
        },
        tweener: function(e, t) {
            g(e) ? (t = e,
            e = ["*"]) : e = e.match(M);
            for (var n, r = 0, i = e.length; r < i; r++)
                n = e[r],
                pt.tweeners[n] = pt.tweeners[n] || [],
                pt.tweeners[n].unshift(t)
        },
        prefilters: [ct],
        prefilter: function(e, t) {
            t ? pt.prefilters.unshift(e) : pt.prefilters.push(e)
        }
    }),
    w.speed = function(e, t, n) {
        var r = e && "object" == typeof e ? w.extend({}, e) : {
            complete: n || !n && t || g(e) && e,
            duration: e,
            easing: n && t || t && !g(t) && t
        };
        return w.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in w.fx.speeds ? r.duration = w.fx.speeds[r.duration] : r.duration = w.fx.speeds._default),
        null != r.queue && !0 !== r.queue || (r.queue = "fx"),
        r.old = r.complete,
        r.complete = function() {
            g(r.old) && r.old.call(this),
            r.queue && w.dequeue(this, r.queue)
        }
        ,
        r
    }
    ,
    w.fn.extend({
        fadeTo: function(e, t, n, r) {
            return this.filter(ae).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, r)
        },
        animate: function(e, t, n, r) {
            var i = w.isEmptyObject(e)
              , o = w.speed(t, n, r)
              , a = function() {
                var t = pt(this, w.extend({}, e), o);
                (i || J.get(this, "finish")) && t.stop(!0)
            };
            return a.finish = a,
            i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a)
        },
        stop: function(e, t, n) {
            var r = function(e) {
                var t = e.stop;
                delete e.stop,
                t(n)
            };
            return "string" != typeof e && (n = t,
            t = e,
            e = void 0),
            t && !1 !== e && this.queue(e || "fx", []),
            this.each(function() {
                var t = !0
                  , i = null != e && e + "queueHooks"
                  , o = w.timers
                  , a = J.get(this);
                if (i)
                    a[i] && a[i].stop && r(a[i]);
                else
                    for (i in a)
                        a[i] && a[i].stop && ot.test(i) && r(a[i]);
                for (i = o.length; i--; )
                    o[i].elem !== this || null != e && o[i].queue !== e || (o[i].anim.stop(n),
                    t = !1,
                    o.splice(i, 1));
                !t && n || w.dequeue(this, e)
            })
        },
        finish: function(e) {
            return !1 !== e && (e = e || "fx"),
            this.each(function() {
                var t, n = J.get(this), r = n[e + "queue"], i = n[e + "queueHooks"], o = w.timers, a = r ? r.length : 0;
                for (n.finish = !0,
                w.queue(this, e, []),
                i && i.stop && i.stop.call(this, !0),
                t = o.length; t--; )
                    o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0),
                    o.splice(t, 1));
                for (t = 0; t < a; t++)
                    r[t] && r[t].finish && r[t].finish.call(this);
                delete n.finish
            })
        }
    }),
    w.each(["toggle", "show", "hide"], function(e, t) {
        var n = w.fn[t];
        w.fn[t] = function(e, r, i) {
            return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(ut(t, !0), e, r, i)
        }
    }),
    w.each({
        slideDown: ut("show"),
        slideUp: ut("hide"),
        slideToggle: ut("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, t) {
        w.fn[e] = function(e, n, r) {
            return this.animate(t, e, n, r)
        }
    }),
    w.timers = [],
    w.fx.tick = function() {
        var e, t = 0, n = w.timers;
        for (nt = Date.now(); t < n.length; t++)
            (e = n[t])() || n[t] !== e || n.splice(t--, 1);
        n.length || w.fx.stop(),
        nt = void 0
    }
    ,
    w.fx.timer = function(e) {
        w.timers.push(e),
        w.fx.start()
    }
    ,
    w.fx.interval = 13,
    w.fx.start = function() {
        rt || (rt = !0,
        at())
    }
    ,
    w.fx.stop = function() {
        rt = null
    }
    ,
    w.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    w.fn.delay = function(t, n) {
        return t = w.fx ? w.fx.speeds[t] || t : t,
        n = n || "fx",
        this.queue(n, function(n, r) {
            var i = e.setTimeout(n, t);
            r.stop = function() {
                e.clearTimeout(i)
            }
        })
    }
    ,
    function() {
        var e = r.createElement("input")
          , t = r.createElement("select").appendChild(r.createElement("option"));
        e.type = "checkbox",
        h.checkOn = "" !== e.value,
        h.optSelected = t.selected,
        (e = r.createElement("input")).value = "t",
        e.type = "radio",
        h.radioValue = "t" === e.value
    }();
    var dt, ht = w.expr.attrHandle;
    w.fn.extend({
        attr: function(e, t) {
            return z(this, w.attr, e, t, arguments.length > 1)
        },
        removeAttr: function(e) {
            return this.each(function() {
                w.removeAttr(this, e)
            })
        }
    }),
    w.extend({
        attr: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
                return "undefined" == typeof e.getAttribute ? w.prop(e, t, n) : (1 === o && w.isXMLDoc(e) || (i = w.attrHooks[t.toLowerCase()] || (w.expr.match.bool.test(t) ? dt : void 0)),
                void 0 !== n ? null === n ? void w.removeAttr(e, t) : i && "set"in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""),
                n) : i && "get"in i && null !== (r = i.get(e, t)) ? r : null == (r = w.find.attr(e, t)) ? void 0 : r)
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!h.radioValue && "radio" === t && N(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t),
                        n && (e.value = n),
                        t
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var n, r = 0, i = t && t.match(M);
            if (i && 1 === e.nodeType)
                while (n = i[r++])
                    e.removeAttribute(n)
        }
    }),
    dt = {
        set: function(e, t, n) {
            return !1 === t ? w.removeAttr(e, n) : e.setAttribute(n, n),
            n
        }
    },
    w.each(w.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var n = ht[t] || w.find.attr;
        ht[t] = function(e, t, r) {
            var i, o, a = t.toLowerCase();
            return r || (o = ht[a],
            ht[a] = i,
            i = null != n(e, t, r) ? a : null,
            ht[a] = o),
            i
        }
    });
    var gt = /^(?:input|select|textarea|button)$/i
      , yt = /^(?:a|area)$/i;
    w.fn.extend({
        prop: function(e, t) {
            return z(this, w.prop, e, t, arguments.length > 1)
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[w.propFix[e] || e]
            })
        }
    }),
    w.extend({
        prop: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
                return 1 === o && w.isXMLDoc(e) || (t = w.propFix[t] || t,
                i = w.propHooks[t]),
                void 0 !== n ? i && "set"in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get"in i && null !== (r = i.get(e, t)) ? r : e[t]
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = w.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : gt.test(e.nodeName) || yt.test(e.nodeName) && e.href ? 0 : -1
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    }),
    h.optSelected || (w.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex,
            null
        },
        set: function(e) {
            var t = e.parentNode;
            t && (t.selectedIndex,
            t.parentNode && t.parentNode.selectedIndex)
        }
    }),
    w.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        w.propFix[this.toLowerCase()] = this
    });
    function vt(e) {
        return (e.match(M) || []).join(" ")
    }
    function mt(e) {
        return e.getAttribute && e.getAttribute("class") || ""
    }
    function xt(e) {
        return Array.isArray(e) ? e : "string" == typeof e ? e.match(M) || [] : []
    }
    w.fn.extend({
        addClass: function(e) {
            var t, n, r, i, o, a, s, u = 0;
            if (g(e))
                return this.each(function(t) {
                    w(this).addClass(e.call(this, t, mt(this)))
                });
            if ((t = xt(e)).length)
                while (n = this[u++])
                    if (i = mt(n),
                    r = 1 === n.nodeType && " " + vt(i) + " ") {
                        a = 0;
                        while (o = t[a++])
                            r.indexOf(" " + o + " ") < 0 && (r += o + " ");
                        i !== (s = vt(r)) && n.setAttribute("class", s)
                    }
            return this
        },
        removeClass: function(e) {
            var t, n, r, i, o, a, s, u = 0;
            if (g(e))
                return this.each(function(t) {
                    w(this).removeClass(e.call(this, t, mt(this)))
                });
            if (!arguments.length)
                return this.attr("class", "");
            if ((t = xt(e)).length)
                while (n = this[u++])
                    if (i = mt(n),
                    r = 1 === n.nodeType && " " + vt(i) + " ") {
                        a = 0;
                        while (o = t[a++])
                            while (r.indexOf(" " + o + " ") > -1)
                                r = r.replace(" " + o + " ", " ");
                        i !== (s = vt(r)) && n.setAttribute("class", s)
                    }
            return this
        },
        toggleClass: function(e, t) {
            var n = typeof e
              , r = "string" === n || Array.isArray(e);
            return "boolean" == typeof t && r ? t ? this.addClass(e) : this.removeClass(e) : g(e) ? this.each(function(n) {
                w(this).toggleClass(e.call(this, n, mt(this), t), t)
            }) : this.each(function() {
                var t, i, o, a;
                if (r) {
                    i = 0,
                    o = w(this),
                    a = xt(e);
                    while (t = a[i++])
                        o.hasClass(t) ? o.removeClass(t) : o.addClass(t)
                } else
                    void 0 !== e && "boolean" !== n || ((t = mt(this)) && J.set(this, "__className__", t),
                    this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : J.get(this, "__className__") || ""))
            })
        },
        hasClass: function(e) {
            var t, n, r = 0;
            t = " " + e + " ";
            while (n = this[r++])
                if (1 === n.nodeType && (" " + vt(mt(n)) + " ").indexOf(t) > -1)
                    return !0;
            return !1
        }
    });
    var bt = /\r/g;
    w.fn.extend({
        val: function(e) {
            var t, n, r, i = this[0];
            {
                if (arguments.length)
                    return r = g(e),
                    this.each(function(n) {
                        var i;
                        1 === this.nodeType && (null == (i = r ? e.call(this, n, w(this).val()) : e) ? i = "" : "number" == typeof i ? i += "" : Array.isArray(i) && (i = w.map(i, function(e) {
                            return null == e ? "" : e + ""
                        })),
                        (t = w.valHooks[this.type] || w.valHooks[this.nodeName.toLowerCase()]) && "set"in t && void 0 !== t.set(this, i, "value") || (this.value = i))
                    });
                if (i)
                    return (t = w.valHooks[i.type] || w.valHooks[i.nodeName.toLowerCase()]) && "get"in t && void 0 !== (n = t.get(i, "value")) ? n : "string" == typeof (n = i.value) ? n.replace(bt, "") : null == n ? "" : n
            }
        }
    }),
    w.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = w.find.attr(e, "value");
                    return null != t ? t : vt(w.text(e))
                }
            },
            select: {
                get: function(e) {
                    var t, n, r, i = e.options, o = e.selectedIndex, a = "select-one" === e.type, s = a ? null : [], u = a ? o + 1 : i.length;
                    for (r = o < 0 ? u : a ? o : 0; r < u; r++)
                        if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !N(n.parentNode, "optgroup"))) {
                            if (t = w(n).val(),
                            a)
                                return t;
                            s.push(t)
                        }
                    return s
                },
                set: function(e, t) {
                    var n, r, i = e.options, o = w.makeArray(t), a = i.length;
                    while (a--)
                        ((r = i[a]).selected = w.inArray(w.valHooks.option.get(r), o) > -1) && (n = !0);
                    return n || (e.selectedIndex = -1),
                    o
                }
            }
        }
    }),
    w.each(["radio", "checkbox"], function() {
        w.valHooks[this] = {
            set: function(e, t) {
                if (Array.isArray(t))
                    return e.checked = w.inArray(w(e).val(), t) > -1
            }
        },
        h.checkOn || (w.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value
        }
        )
    }),
    h.focusin = "onfocusin"in e;
    var wt = /^(?:focusinfocus|focusoutblur)$/
      , Tt = function(e) {
        e.stopPropagation()
    };
    w.extend(w.event, {
        trigger: function(t, n, i, o) {
            var a, s, u, l, c, p, d, h, v = [i || r], m = f.call(t, "type") ? t.type : t, x = f.call(t, "namespace") ? t.namespace.split(".") : [];
            if (s = h = u = i = i || r,
            3 !== i.nodeType && 8 !== i.nodeType && !wt.test(m + w.event.triggered) && (m.indexOf(".") > -1 && (m = (x = m.split(".")).shift(),
            x.sort()),
            c = m.indexOf(":") < 0 && "on" + m,
            t = t[w.expando] ? t : new w.Event(m,"object" == typeof t && t),
            t.isTrigger = o ? 2 : 3,
            t.namespace = x.join("."),
            t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + x.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
            t.result = void 0,
            t.target || (t.target = i),
            n = null == n ? [t] : w.makeArray(n, [t]),
            d = w.event.special[m] || {},
            o || !d.trigger || !1 !== d.trigger.apply(i, n))) {
                if (!o && !d.noBubble && !y(i)) {
                    for (l = d.delegateType || m,
                    wt.test(l + m) || (s = s.parentNode); s; s = s.parentNode)
                        v.push(s),
                        u = s;
                    u === (i.ownerDocument || r) && v.push(u.defaultView || u.parentWindow || e)
                }
                a = 0;
                while ((s = v[a++]) && !t.isPropagationStopped())
                    h = s,
                    t.type = a > 1 ? l : d.bindType || m,
                    (p = (J.get(s, "events") || {})[t.type] && J.get(s, "handle")) && p.apply(s, n),
                    (p = c && s[c]) && p.apply && Y(s) && (t.result = p.apply(s, n),
                    !1 === t.result && t.preventDefault());
                return t.type = m,
                o || t.isDefaultPrevented() || d._default && !1 !== d._default.apply(v.pop(), n) || !Y(i) || c && g(i[m]) && !y(i) && ((u = i[c]) && (i[c] = null),
                w.event.triggered = m,
                t.isPropagationStopped() && h.addEventListener(m, Tt),
                i[m](),
                t.isPropagationStopped() && h.removeEventListener(m, Tt),
                w.event.triggered = void 0,
                u && (i[c] = u)),
                t.result
            }
        },
        simulate: function(e, t, n) {
            var r = w.extend(new w.Event, n, {
                type: e,
                isSimulated: !0
            });
            w.event.trigger(r, null, t)
        }
    }),
    w.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                w.event.trigger(e, t, this)
            })
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n)
                return w.event.trigger(e, t, n, !0)
        }
    }),
    h.focusin || w.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        var n = function(e) {
            w.event.simulate(t, e.target, w.event.fix(e))
        };
        w.event.special[t] = {
            setup: function() {
                var r = this.ownerDocument || this
                  , i = J.access(r, t);
                i || r.addEventListener(e, n, !0),
                J.access(r, t, (i || 0) + 1)
            },
            teardown: function() {
                var r = this.ownerDocument || this
                  , i = J.access(r, t) - 1;
                i ? J.access(r, t, i) : (r.removeEventListener(e, n, !0),
                J.remove(r, t))
            }
        }
    });
    var Ct = e.location
      , Et = Date.now()
      , kt = /\?/;
    w.parseXML = function(t) {
        var n;
        if (!t || "string" != typeof t)
            return null;
        try {
            n = (new e.DOMParser).parseFromString(t, "text/xml")
        } catch (e) {
            n = void 0
        }
        return n && !n.getElementsByTagName("parsererror").length || w.error("Invalid XML: " + t),
        n
    }
    ;
    var St = /\[\]$/
      , Dt = /\r?\n/g
      , Nt = /^(?:submit|button|image|reset|file)$/i
      , At = /^(?:input|select|textarea|keygen)/i;
    function jt(e, t, n, r) {
        var i;
        if (Array.isArray(t))
            w.each(t, function(t, i) {
                n || St.test(e) ? r(e, i) : jt(e + "[" + ("object" == typeof i && null != i ? t : "") + "]", i, n, r)
            });
        else if (n || "object" !== x(t))
            r(e, t);
        else
            for (i in t)
                jt(e + "[" + i + "]", t[i], n, r)
    }
    w.param = function(e, t) {
        var n, r = [], i = function(e, t) {
            var n = g(t) ? t() : t;
            r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n)
        };
        if (Array.isArray(e) || e.jquery && !w.isPlainObject(e))
            w.each(e, function() {
                i(this.name, this.value)
            });
        else
            for (n in e)
                jt(n, e[n], t, i);
        return r.join("&")
    }
    ,
    w.fn.extend({
        serialize: function() {
            return w.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var e = w.prop(this, "elements");
                return e ? w.makeArray(e) : this
            }).filter(function() {
                var e = this.type;
                return this.name && !w(this).is(":disabled") && At.test(this.nodeName) && !Nt.test(e) && (this.checked || !pe.test(e))
            }).map(function(e, t) {
                var n = w(this).val();
                return null == n ? null : Array.isArray(n) ? w.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(Dt, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace(Dt, "\r\n")
                }
            }).get()
        }
    });
    var qt = /%20/g
      , Lt = /#.*$/
      , Ht = /([?&])_=[^&]*/
      , Ot = /^(.*?):[ \t]*([^\r\n]*)$/gm
      , Pt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/
      , Mt = /^(?:GET|HEAD)$/
      , Rt = /^\/\//
      , It = {}
      , Wt = {}
      , $t = "*/".concat("*")
      , Bt = r.createElement("a");
    Bt.href = Ct.href;
    function Ft(e) {
        return function(t, n) {
            "string" != typeof t && (n = t,
            t = "*");
            var r, i = 0, o = t.toLowerCase().match(M) || [];
            if (g(n))
                while (r = o[i++])
                    "+" === r[0] ? (r = r.slice(1) || "*",
                    (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
        }
    }
    function _t(e, t, n, r) {
        var i = {}
          , o = e === Wt;
        function a(s) {
            var u;
            return i[s] = !0,
            w.each(e[s] || [], function(e, s) {
                var l = s(t, n, r);
                return "string" != typeof l || o || i[l] ? o ? !(u = l) : void 0 : (t.dataTypes.unshift(l),
                a(l),
                !1)
            }),
            u
        }
        return a(t.dataTypes[0]) || !i["*"] && a("*")
    }
    function zt(e, t) {
        var n, r, i = w.ajaxSettings.flatOptions || {};
        for (n in t)
            void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
        return r && w.extend(!0, e, r),
        e
    }
    function Xt(e, t, n) {
        var r, i, o, a, s = e.contents, u = e.dataTypes;
        while ("*" === u[0])
            u.shift(),
            void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
        if (r)
            for (i in s)
                if (s[i] && s[i].test(r)) {
                    u.unshift(i);
                    break
                }
        if (u[0]in n)
            o = u[0];
        else {
            for (i in n) {
                if (!u[0] || e.converters[i + " " + u[0]]) {
                    o = i;
                    break
                }
                a || (a = i)
            }
            o = o || a
        }
        if (o)
            return o !== u[0] && u.unshift(o),
            n[o]
    }
    function Ut(e, t, n, r) {
        var i, o, a, s, u, l = {}, c = e.dataTypes.slice();
        if (c[1])
            for (a in e.converters)
                l[a.toLowerCase()] = e.converters[a];
        o = c.shift();
        while (o)
            if (e.responseFields[o] && (n[e.responseFields[o]] = t),
            !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
            u = o,
            o = c.shift())
                if ("*" === o)
                    o = u;
                else if ("*" !== u && u !== o) {
                    if (!(a = l[u + " " + o] || l["* " + o]))
                        for (i in l)
                            if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                                !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0],
                                c.unshift(s[1]));
                                break
                            }
                    if (!0 !== a)
                        if (a && e["throws"])
                            t = a(t);
                        else
                            try {
                                t = a(t)
                            } catch (e) {
                                return {
                                    state: "parsererror",
                                    error: a ? e : "No conversion from " + u + " to " + o
                                }
                            }
                }
        return {
            state: "success",
            data: t
        }
    }
    w.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Ct.href,
            type: "GET",
            isLocal: Pt.test(Ct.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": $t,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": w.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? zt(zt(e, w.ajaxSettings), t) : zt(w.ajaxSettings, e)
        },
        ajaxPrefilter: Ft(It),
        ajaxTransport: Ft(Wt),
        ajax: function(t, n) {
            "object" == typeof t && (n = t,
            t = void 0),
            n = n || {};
            var i, o, a, s, u, l, c, f, p, d, h = w.ajaxSetup({}, n), g = h.context || h, y = h.context && (g.nodeType || g.jquery) ? w(g) : w.event, v = w.Deferred(), m = w.Callbacks("once memory"), x = h.statusCode || {}, b = {}, T = {}, C = "canceled", E = {
                readyState: 0,
                getResponseHeader: function(e) {
                    var t;
                    if (c) {
                        if (!s) {
                            s = {};
                            while (t = Ot.exec(a))
                                s[t[1].toLowerCase()] = t[2]
                        }
                        t = s[e.toLowerCase()]
                    }
                    return null == t ? null : t
                },
                getAllResponseHeaders: function() {
                    return c ? a : null
                },
                setRequestHeader: function(e, t) {
                    return null == c && (e = T[e.toLowerCase()] = T[e.toLowerCase()] || e,
                    b[e] = t),
                    this
                },
                overrideMimeType: function(e) {
                    return null == c && (h.mimeType = e),
                    this
                },
                statusCode: function(e) {
                    var t;
                    if (e)
                        if (c)
                            E.always(e[E.status]);
                        else
                            for (t in e)
                                x[t] = [x[t], e[t]];
                    return this
                },
                abort: function(e) {
                    var t = e || C;
                    return i && i.abort(t),
                    k(0, t),
                    this
                }
            };
            if (v.promise(E),
            h.url = ((t || h.url || Ct.href) + "").replace(Rt, Ct.protocol + "//"),
            h.type = n.method || n.type || h.method || h.type,
            h.dataTypes = (h.dataType || "*").toLowerCase().match(M) || [""],
            null == h.crossDomain) {
                l = r.createElement("a");
                try {
                    l.href = h.url,
                    l.href = l.href,
                    h.crossDomain = Bt.protocol + "//" + Bt.host != l.protocol + "//" + l.host
                } catch (e) {
                    h.crossDomain = !0
                }
            }
            if (h.data && h.processData && "string" != typeof h.data && (h.data = w.param(h.data, h.traditional)),
            _t(It, h, n, E),
            c)
                return E;
            (f = w.event && h.global) && 0 == w.active++ && w.event.trigger("ajaxStart"),
            h.type = h.type.toUpperCase(),
            h.hasContent = !Mt.test(h.type),
            o = h.url.replace(Lt, ""),
            h.hasContent ? h.data && h.processData && 0 === (h.contentType || "").indexOf("application/x-www-form-urlencoded") && (h.data = h.data.replace(qt, "+")) : (d = h.url.slice(o.length),
            h.data && (h.processData || "string" == typeof h.data) && (o += (kt.test(o) ? "&" : "?") + h.data,
            delete h.data),
            !1 === h.cache && (o = o.replace(Ht, "$1"),
            d = (kt.test(o) ? "&" : "?") + "_=" + Et++ + d),
            h.url = o + d),
            h.ifModified && (w.lastModified[o] && E.setRequestHeader("If-Modified-Since", w.lastModified[o]),
            w.etag[o] && E.setRequestHeader("If-None-Match", w.etag[o])),
            (h.data && h.hasContent && !1 !== h.contentType || n.contentType) && E.setRequestHeader("Content-Type", h.contentType),
            E.setRequestHeader("Accept", h.dataTypes[0] && h.accepts[h.dataTypes[0]] ? h.accepts[h.dataTypes[0]] + ("*" !== h.dataTypes[0] ? ", " + $t + "; q=0.01" : "") : h.accepts["*"]);
            for (p in h.headers)
                E.setRequestHeader(p, h.headers[p]);
            if (h.beforeSend && (!1 === h.beforeSend.call(g, E, h) || c))
                return E.abort();
            if (C = "abort",
            m.add(h.complete),
            E.done(h.success),
            E.fail(h.error),
            i = _t(Wt, h, n, E)) {
                if (E.readyState = 1,
                f && y.trigger("ajaxSend", [E, h]),
                c)
                    return E;
                h.async && h.timeout > 0 && (u = e.setTimeout(function() {
                    E.abort("timeout")
                }, h.timeout));
                try {
                    c = !1,
                    i.send(b, k)
                } catch (e) {
                    if (c)
                        throw e;
                    k(-1, e)
                }
            } else
                k(-1, "No Transport");
            function k(t, n, r, s) {
                var l, p, d, b, T, C = n;
                c || (c = !0,
                u && e.clearTimeout(u),
                i = void 0,
                a = s || "",
                E.readyState = t > 0 ? 4 : 0,
                l = t >= 200 && t < 300 || 304 === t,
                r && (b = Xt(h, E, r)),
                b = Ut(h, b, E, l),
                l ? (h.ifModified && ((T = E.getResponseHeader("Last-Modified")) && (w.lastModified[o] = T),
                (T = E.getResponseHeader("etag")) && (w.etag[o] = T)),
                204 === t || "HEAD" === h.type ? C = "nocontent" : 304 === t ? C = "notmodified" : (C = b.state,
                p = b.data,
                l = !(d = b.error))) : (d = C,
                !t && C || (C = "error",
                t < 0 && (t = 0))),
                E.status = t,
                E.statusText = (n || C) + "",
                l ? v.resolveWith(g, [p, C, E]) : v.rejectWith(g, [E, C, d]),
                E.statusCode(x),
                x = void 0,
                f && y.trigger(l ? "ajaxSuccess" : "ajaxError", [E, h, l ? p : d]),
                m.fireWith(g, [E, C]),
                f && (y.trigger("ajaxComplete", [E, h]),
                --w.active || w.event.trigger("ajaxStop")))
            }
            return E
        },
        getJSON: function(e, t, n) {
            return w.get(e, t, n, "json")
        },
        getScript: function(e, t) {
            return w.get(e, void 0, t, "script")
        }
    }),
    w.each(["get", "post"], function(e, t) {
        w[t] = function(e, n, r, i) {
            return g(n) && (i = i || r,
            r = n,
            n = void 0),
            w.ajax(w.extend({
                url: e,
                type: t,
                dataType: i,
                data: n,
                success: r
            }, w.isPlainObject(e) && e))
        }
    }),
    w._evalUrl = function(e) {
        return w.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            "throws": !0
        })
    }
    ,
    w.fn.extend({
        wrapAll: function(e) {
            var t;
            return this[0] && (g(e) && (e = e.call(this[0])),
            t = w(e, this[0].ownerDocument).eq(0).clone(!0),
            this[0].parentNode && t.insertBefore(this[0]),
            t.map(function() {
                var e = this;
                while (e.firstElementChild)
                    e = e.firstElementChild;
                return e
            }).append(this)),
            this
        },
        wrapInner: function(e) {
            return g(e) ? this.each(function(t) {
                w(this).wrapInner(e.call(this, t))
            }) : this.each(function() {
                var t = w(this)
                  , n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e)
            })
        },
        wrap: function(e) {
            var t = g(e);
            return this.each(function(n) {
                w(this).wrapAll(t ? e.call(this, n) : e)
            })
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                w(this).replaceWith(this.childNodes)
            }),
            this
        }
    }),
    w.expr.pseudos.hidden = function(e) {
        return !w.expr.pseudos.visible(e)
    }
    ,
    w.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
    }
    ,
    w.ajaxSettings.xhr = function() {
        try {
            return new e.XMLHttpRequest
        } catch (e) {}
    }
    ;
    var Vt = {
        0: 200,
        1223: 204
    }
      , Gt = w.ajaxSettings.xhr();
    h.cors = !!Gt && "withCredentials"in Gt,
    h.ajax = Gt = !!Gt,
    w.ajaxTransport(function(t) {
        var n, r;
        if (h.cors || Gt && !t.crossDomain)
            return {
                send: function(i, o) {
                    var a, s = t.xhr();
                    if (s.open(t.type, t.url, t.async, t.username, t.password),
                    t.xhrFields)
                        for (a in t.xhrFields)
                            s[a] = t.xhrFields[a];
                    t.mimeType && s.overrideMimeType && s.overrideMimeType(t.mimeType),
                    t.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest");
                    for (a in i)
                        s.setRequestHeader(a, i[a]);
                    n = function(e) {
                        return function() {
                            n && (n = r = s.onload = s.onerror = s.onabort = s.ontimeout = s.onreadystatechange = null,
                            "abort" === e ? s.abort() : "error" === e ? "number" != typeof s.status ? o(0, "error") : o(s.status, s.statusText) : o(Vt[s.status] || s.status, s.statusText, "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? {
                                binary: s.response
                            } : {
                                text: s.responseText
                            }, s.getAllResponseHeaders()))
                        }
                    }
                    ,
                    s.onload = n(),
                    r = s.onerror = s.ontimeout = n("error"),
                    void 0 !== s.onabort ? s.onabort = r : s.onreadystatechange = function() {
                        4 === s.readyState && e.setTimeout(function() {
                            n && r()
                        })
                    }
                    ,
                    n = n("abort");
                    try {
                        s.send(t.hasContent && t.data || null)
                    } catch (e) {
                        if (n)
                            throw e
                    }
                },
                abort: function() {
                    n && n()
                }
            }
    }),
    w.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1)
    }),
    w.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return w.globalEval(e),
                e
            }
        }
    }),
    w.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1),
        e.crossDomain && (e.type = "GET")
    }),
    w.ajaxTransport("script", function(e) {
        if (e.crossDomain) {
            var t, n;
            return {
                send: function(i, o) {
                    t = w("<script>").prop({
                        charset: e.scriptCharset,
                        src: e.url
                    }).on("load error", n = function(e) {
                        t.remove(),
                        n = null,
                        e && o("error" === e.type ? 404 : 200, e.type)
                    }
                    ),
                    r.head.appendChild(t[0])
                },
                abort: function() {
                    n && n()
                }
            }
        }
    });
    var Yt = []
      , Qt = /(=)\?(?=&|$)|\?\?/;
    w.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Yt.pop() || w.expando + "_" + Et++;
            return this[e] = !0,
            e
        }
    }),
    w.ajaxPrefilter("json jsonp", function(t, n, r) {
        var i, o, a, s = !1 !== t.jsonp && (Qt.test(t.url) ? "url" : "string" == typeof t.data && 0 === (t.contentType || "").indexOf("application/x-www-form-urlencoded") && Qt.test(t.data) && "data");
        if (s || "jsonp" === t.dataTypes[0])
            return i = t.jsonpCallback = g(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback,
            s ? t[s] = t[s].replace(Qt, "$1" + i) : !1 !== t.jsonp && (t.url += (kt.test(t.url) ? "&" : "?") + t.jsonp + "=" + i),
            t.converters["script json"] = function() {
                return a || w.error(i + " was not called"),
                a[0]
            }
            ,
            t.dataTypes[0] = "json",
            o = e[i],
            e[i] = function() {
                a = arguments
            }
            ,
            r.always(function() {
                void 0 === o ? w(e).removeProp(i) : e[i] = o,
                t[i] && (t.jsonpCallback = n.jsonpCallback,
                Yt.push(i)),
                a && g(o) && o(a[0]),
                a = o = void 0
            }),
            "script"
    }),
    h.createHTMLDocument = function() {
        var e = r.implementation.createHTMLDocument("").body;
        return e.innerHTML = "<form></form><form></form>",
        2 === e.childNodes.length
    }(),
    w.parseHTML = function(e, t, n) {
        if ("string" != typeof e)
            return [];
        "boolean" == typeof t && (n = t,
        t = !1);
        var i, o, a;
        return t || (h.createHTMLDocument ? ((i = (t = r.implementation.createHTMLDocument("")).createElement("base")).href = r.location.href,
        t.head.appendChild(i)) : t = r),
        o = A.exec(e),
        a = !n && [],
        o ? [t.createElement(o[1])] : (o = xe([e], t, a),
        a && a.length && w(a).remove(),
        w.merge([], o.childNodes))
    }
    ,
    w.fn.load = function(e, t, n) {
        var r, i, o, a = this, s = e.indexOf(" ");
        return s > -1 && (r = vt(e.slice(s)),
        e = e.slice(0, s)),
        g(t) ? (n = t,
        t = void 0) : t && "object" == typeof t && (i = "POST"),
        a.length > 0 && w.ajax({
            url: e,
            type: i || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            o = arguments,
            a.html(r ? w("<div>").append(w.parseHTML(e)).find(r) : e)
        }).always(n && function(e, t) {
            a.each(function() {
                n.apply(this, o || [e.responseText, t, e])
            })
        }
        ),
        this
    }
    ,
    w.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, t) {
        w.fn[t] = function(e) {
            return this.on(t, e)
        }
    }),
    w.expr.pseudos.animated = function(e) {
        return w.grep(w.timers, function(t) {
            return e === t.elem
        }).length
    }
    ,
    w.offset = {
        setOffset: function(e, t, n) {
            var r, i, o, a, s, u, l, c = w.css(e, "position"), f = w(e), p = {};
            "static" === c && (e.style.position = "relative"),
            s = f.offset(),
            o = w.css(e, "top"),
            u = w.css(e, "left"),
            (l = ("absolute" === c || "fixed" === c) && (o + u).indexOf("auto") > -1) ? (a = (r = f.position()).top,
            i = r.left) : (a = parseFloat(o) || 0,
            i = parseFloat(u) || 0),
            g(t) && (t = t.call(e, n, w.extend({}, s))),
            null != t.top && (p.top = t.top - s.top + a),
            null != t.left && (p.left = t.left - s.left + i),
            "using"in t ? t.using.call(e, p) : f.css(p)
        }
    },
    w.fn.extend({
        offset: function(e) {
            if (arguments.length)
                return void 0 === e ? this : this.each(function(t) {
                    w.offset.setOffset(this, e, t)
                });
            var t, n, r = this[0];
            if (r)
                return r.getClientRects().length ? (t = r.getBoundingClientRect(),
                n = r.ownerDocument.defaultView,
                {
                    top: t.top + n.pageYOffset,
                    left: t.left + n.pageXOffset
                }) : {
                    top: 0,
                    left: 0
                }
        },
        position: function() {
            if (this[0]) {
                var e, t, n, r = this[0], i = {
                    top: 0,
                    left: 0
                };
                if ("fixed" === w.css(r, "position"))
                    t = r.getBoundingClientRect();
                else {
                    t = this.offset(),
                    n = r.ownerDocument,
                    e = r.offsetParent || n.documentElement;
                    while (e && (e === n.body || e === n.documentElement) && "static" === w.css(e, "position"))
                        e = e.parentNode;
                    e && e !== r && 1 === e.nodeType && ((i = w(e).offset()).top += w.css(e, "borderTopWidth", !0),
                    i.left += w.css(e, "borderLeftWidth", !0))
                }
                return {
                    top: t.top - i.top - w.css(r, "marginTop", !0),
                    left: t.left - i.left - w.css(r, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var e = this.offsetParent;
                while (e && "static" === w.css(e, "position"))
                    e = e.offsetParent;
                return e || be
            })
        }
    }),
    w.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, t) {
        var n = "pageYOffset" === t;
        w.fn[e] = function(r) {
            return z(this, function(e, r, i) {
                var o;
                if (y(e) ? o = e : 9 === e.nodeType && (o = e.defaultView),
                void 0 === i)
                    return o ? o[t] : e[r];
                o ? o.scrollTo(n ? o.pageXOffset : i, n ? i : o.pageYOffset) : e[r] = i
            }, e, r, arguments.length)
        }
    }),
    w.each(["top", "left"], function(e, t) {
        w.cssHooks[t] = _e(h.pixelPosition, function(e, n) {
            if (n)
                return n = Fe(e, t),
                We.test(n) ? w(e).position()[t] + "px" : n
        })
    }),
    w.each({
        Height: "height",
        Width: "width"
    }, function(e, t) {
        w.each({
            padding: "inner" + e,
            content: t,
            "": "outer" + e
        }, function(n, r) {
            w.fn[r] = function(i, o) {
                var a = arguments.length && (n || "boolean" != typeof i)
                  , s = n || (!0 === i || !0 === o ? "margin" : "border");
                return z(this, function(t, n, i) {
                    var o;
                    return y(t) ? 0 === r.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (o = t.documentElement,
                    Math.max(t.body["scroll" + e], o["scroll" + e], t.body["offset" + e], o["offset" + e], o["client" + e])) : void 0 === i ? w.css(t, n, s) : w.style(t, n, i, s)
                }, t, a ? i : void 0, a)
            }
        })
    }),
    w.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, t) {
        w.fn[t] = function(e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
        }
    }),
    w.fn.extend({
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e)
        }
    }),
    w.fn.extend({
        bind: function(e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null, t)
        },
        delegate: function(e, t, n, r) {
            return this.on(t, e, n, r)
        },
        undelegate: function(e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
        }
    }),
    w.proxy = function(e, t) {
        var n, r, i;
        if ("string" == typeof t && (n = e[t],
        t = e,
        e = n),
        g(e))
            return r = o.call(arguments, 2),
            i = function() {
                return e.apply(t || this, r.concat(o.call(arguments)))
            }
            ,
            i.guid = e.guid = e.guid || w.guid++,
            i
    }
    ,
    w.holdReady = function(e) {
        e ? w.readyWait++ : w.ready(!0)
    }
    ,
    w.isArray = Array.isArray,
    w.parseJSON = JSON.parse,
    w.nodeName = N,
    w.isFunction = g,
    w.isWindow = y,
    w.camelCase = G,
    w.type = x,
    w.now = Date.now,
    w.isNumeric = function(e) {
        var t = w.type(e);
        return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
    }
    ,
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return w
    });
    var Jt = e.jQuery
      , Kt = e.$;
    return w.noConflict = function(t) {
        return e.$ === w && (e.$ = Kt),
        t && e.jQuery === w && (e.jQuery = Jt),
        w
    }
    ,
    t || (e.jQuery = e.$ = w),
    w
});

/*! jQuery Migrate v1.4.1 | (c) jQuery Foundation and other contributors | jquery.org/license */
"undefined" == typeof jQuery.migrateMute && (jQuery.migrateMute = !0),
function(a, b, c) {
    function d(c) {
        var d = b.console;
        f[c] || (f[c] = !0,
        a.migrateWarnings.push(c),
        d && d.warn && !a.migrateMute && (d.warn("JQMIGRATE: " + c),
        a.migrateTrace && d.trace && d.trace()))
    }
    function e(b, c, e, f) {
        if (Object.defineProperty)
            try {
                return void Object.defineProperty(b, c, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        return d(f),
                        e
                    },
                    set: function(a) {
                        d(f),
                        e = a
                    }
                })
            } catch (g) {}
        a._definePropertyBroken = !0,
        b[c] = e
    }
    a.migrateVersion = "1.4.1";
    var f = {};
    a.migrateWarnings = [],
    b.console && b.console.log && b.console.log("JQMIGRATE: Migrate is installed" + (a.migrateMute ? "" : " with logging active") + ", version " + a.migrateVersion),
    a.migrateTrace === c && (a.migrateTrace = !0),
    a.migrateReset = function() {
        f = {},
        a.migrateWarnings.length = 0
    }
    ,
    "BackCompat" === document.compatMode && d("jQuery is not compatible with Quirks Mode");
    var g = a("<input/>", {
        size: 1
    }).attr("size") && a.attrFn
      , h = a.attr
      , i = a.attrHooks.value && a.attrHooks.value.get || function() {
        return null
    }
      , j = a.attrHooks.value && a.attrHooks.value.set || function() {
        return c
    }
      , k = /^(?:input|button)$/i
      , l = /^[238]$/
      , m = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i
      , n = /^(?:checked|selected)$/i;
    e(a, "attrFn", g || {}, "jQuery.attrFn is deprecated"),
    a.attr = function(b, e, f, i) {
        var j = e.toLowerCase()
          , o = b && b.nodeType;
        return i && (h.length < 4 && d("jQuery.fn.attr( props, pass ) is deprecated"),
        b && !l.test(o) && (g ? e in g : a.isFunction(a.fn[e]))) ? a(b)[e](f) : ("type" === e && f !== c && k.test(b.nodeName) && b.parentNode && d("Can't change the 'type' of an input or button in IE 6/7/8"),
        !a.attrHooks[j] && m.test(j) && (a.attrHooks[j] = {
            get: function(b, d) {
                var e, f = a.prop(b, d);
                return f === !0 || "boolean" != typeof f && (e = b.getAttributeNode(d)) && e.nodeValue !== !1 ? d.toLowerCase() : c
            },
            set: function(b, c, d) {
                var e;
                return c === !1 ? a.removeAttr(b, d) : (e = a.propFix[d] || d,
                e in b && (b[e] = !0),
                b.setAttribute(d, d.toLowerCase())),
                d
            }
        },
        n.test(j) && d("jQuery.fn.attr('" + j + "') might use property instead of attribute")),
        h.call(a, b, e, f))
    }
    ,
    a.attrHooks.value = {
        get: function(a, b) {
            var c = (a.nodeName || "").toLowerCase();
            return "button" === c ? i.apply(this, arguments) : ("input" !== c && "option" !== c && d("jQuery.fn.attr('value') no longer gets properties"),
            b in a ? a.value : null)
        },
        set: function(a, b) {
            var c = (a.nodeName || "").toLowerCase();
            return "button" === c ? j.apply(this, arguments) : ("input" !== c && "option" !== c && d("jQuery.fn.attr('value', val) no longer sets properties"),
            void (a.value = b))
        }
    };
    var o, p, q = a.fn.init, r = a.find, s = a.parseJSON, t = /^\s*</, u = /\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/, v = /\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/g, w = /^([^<]*)(<[\w\W]+>)([^>]*)$/;
    a.fn.init = function(b, e, f) {
        var g, h;
        return b && "string" == typeof b && !a.isPlainObject(e) && (g = w.exec(a.trim(b))) && g[0] && (t.test(b) || d("$(html) HTML strings must start with '<' character"),
        g[3] && d("$(html) HTML text after last tag is ignored"),
        "#" === g[0].charAt(0) && (d("HTML string cannot start with a '#' character"),
        a.error("JQMIGRATE: Invalid selector string (XSS)")),
        e && e.context && e.context.nodeType && (e = e.context),
        a.parseHTML) ? q.call(this, a.parseHTML(g[2], e && e.ownerDocument || e || document, !0), e, f) : (h = q.apply(this, arguments),
        b && b.selector !== c ? (h.selector = b.selector,
        h.context = b.context) : (h.selector = "string" == typeof b ? b : "",
        b && (h.context = b.nodeType ? b : e || document)),
        h)
    }
    ,
    a.fn.init.prototype = a.fn,
    a.find = function(a) {
        var b = Array.prototype.slice.call(arguments);
        if ("string" == typeof a && u.test(a))
            try {
                document.querySelector(a)
            } catch (c) {
                a = a.replace(v, function(a, b, c, d) {
                    return "[" + b + c + '"' + d + '"]'
                });
                try {
                    document.querySelector(a),
                    d("Attribute selector with '#' must be quoted: " + b[0]),
                    b[0] = a
                } catch (e) {
                    d("Attribute selector with '#' was not fixed: " + b[0])
                }
            }
        return r.apply(this, b)
    }
    ;
    var x;
    for (x in r)
        Object.prototype.hasOwnProperty.call(r, x) && (a.find[x] = r[x]);
    a.parseJSON = function(a) {
        return a ? s.apply(this, arguments) : (d("jQuery.parseJSON requires a valid JSON string"),
        null)
    }
    ,
    a.uaMatch = function(a) {
        a = a.toLowerCase();
        var b = /(chrome)[ \/]([\w.]+)/.exec(a) || /(webkit)[ \/]([\w.]+)/.exec(a) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a) || /(msie) ([\w.]+)/.exec(a) || a.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a) || [];
        return {
            browser: b[1] || "",
            version: b[2] || "0"
        }
    }
    ,
    a.browser || (o = a.uaMatch(navigator.userAgent),
    p = {},
    o.browser && (p[o.browser] = !0,
    p.version = o.version),
    p.chrome ? p.webkit = !0 : p.webkit && (p.safari = !0),
    a.browser = p),
    e(a, "browser", a.browser, "jQuery.browser is deprecated"),
    a.boxModel = a.support.boxModel = "CSS1Compat" === document.compatMode,
    e(a, "boxModel", a.boxModel, "jQuery.boxModel is deprecated"),
    e(a.support, "boxModel", a.support.boxModel, "jQuery.support.boxModel is deprecated"),
    a.sub = function() {
        function b(a, c) {
            return new b.fn.init(a,c)
        }
        a.extend(!0, b, this),
        b.superclass = this,
        b.fn = b.prototype = this(),
        b.fn.constructor = b,
        b.sub = this.sub,
        b.fn.init = function(d, e) {
            var f = a.fn.init.call(this, d, e, c);
            return f instanceof b ? f : b(f)
        }
        ,
        b.fn.init.prototype = b.fn;
        var c = b(document);
        return d("jQuery.sub() is deprecated"),
        b
    }
    ,
    a.fn.size = function() {
        return d("jQuery.fn.size() is deprecated; use the .length property"),
        this.length
    }
    ;
    var y = !1;
    a.swap && a.each(["height", "width", "reliableMarginRight"], function(b, c) {
        var d = a.cssHooks[c] && a.cssHooks[c].get;
        d && (a.cssHooks[c].get = function() {
            var a;
            return y = !0,
            a = d.apply(this, arguments),
            y = !1,
            a
        }
        )
    }),
    a.swap = function(a, b, c, e) {
        var f, g, h = {};
        y || d("jQuery.swap() is undocumented and deprecated");
        for (g in b)
            h[g] = a.style[g],
            a.style[g] = b[g];
        f = c.apply(a, e || []);
        for (g in b)
            a.style[g] = h[g];
        return f
    }
    ,
    a.ajaxSetup({
        converters: {
            "text json": a.parseJSON
        }
    });
    var z = a.fn.data;
    a.fn.data = function(b) {
        var e, f, g = this[0];
        return !g || "events" !== b || 1 !== arguments.length || (e = a.data(g, b),
        f = a._data(g, b),
        e !== c && e !== f || f === c) ? z.apply(this, arguments) : (d("Use of jQuery.fn.data('events') is deprecated"),
        f)
    }
    ;
    var A = /\/(java|ecma)script/i;
    a.clean || (a.clean = function(b, c, e, f) {
        c = c || document,
        c = !c.nodeType && c[0] || c,
        c = c.ownerDocument || c,
        d("jQuery.clean() is deprecated");
        var g, h, i, j, k = [];
        if (a.merge(k, a.buildFragment(b, c).childNodes),
        e)
            for (i = function(a) {
                return !a.type || A.test(a.type) ? f ? f.push(a.parentNode ? a.parentNode.removeChild(a) : a) : e.appendChild(a) : void 0
            }
            ,
            g = 0; null != (h = k[g]); g++)
                a.nodeName(h, "script") && i(h) || (e.appendChild(h),
                "undefined" != typeof h.getElementsByTagName && (j = a.grep(a.merge([], h.getElementsByTagName("script")), i),
                k.splice.apply(k, [g + 1, 0].concat(j)),
                g += j.length));
        return k
    }
    );
    var B = a.event.add
      , C = a.event.remove
      , D = a.event.trigger
      , E = a.fn.toggle
      , F = a.fn.live
      , G = a.fn.die
      , H = a.fn.load
      , I = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess"
      , J = new RegExp("\\b(?:" + I + ")\\b")
      , K = /(?:^|\s)hover(\.\S+|)\b/
      , L = function(b) {
        return "string" != typeof b || a.event.special.hover ? b : (K.test(b) && d("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"),
        b && b.replace(K, "mouseenter$1 mouseleave$1"))
    };
    a.event.props && "attrChange" !== a.event.props[0] && a.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"),
    a.event.dispatch && e(a.event, "handle", a.event.dispatch, "jQuery.event.handle is undocumented and deprecated"),
    a.event.add = function(a, b, c, e, f) {
        a !== document && J.test(b) && d("AJAX events should be attached to document: " + b),
        B.call(this, a, L(b || ""), c, e, f)
    }
    ,
    a.event.remove = function(a, b, c, d, e) {
        C.call(this, a, L(b) || "", c, d, e)
    }
    ,
    a.each(["load", "unload", "error"], function(b, c) {
        a.fn[c] = function() {
            var a = Array.prototype.slice.call(arguments, 0);
            return "load" === c && "string" == typeof a[0] ? H.apply(this, a) : (d("jQuery.fn." + c + "() is deprecated"),
            a.splice(0, 0, c),
            arguments.length ? this.bind.apply(this, a) : (this.triggerHandler.apply(this, a),
            this))
        }
    }),
    a.fn.toggle = function(b, c) {
        if (!a.isFunction(b) || !a.isFunction(c))
            return E.apply(this, arguments);
        d("jQuery.fn.toggle(handler, handler...) is deprecated");
        var e = arguments
          , f = b.guid || a.guid++
          , g = 0
          , h = function(c) {
            var d = (a._data(this, "lastToggle" + b.guid) || 0) % g;
            return a._data(this, "lastToggle" + b.guid, d + 1),
            c.preventDefault(),
            e[d].apply(this, arguments) || !1
        };
        for (h.guid = f; g < e.length; )
            e[g++].guid = f;
        return this.click(h)
    }
    ,
    a.fn.live = function(b, c, e) {
        return d("jQuery.fn.live() is deprecated"),
        F ? F.apply(this, arguments) : (a(this.context).on(b, this.selector, c, e),
        this)
    }
    ,
    a.fn.die = function(b, c) {
        return d("jQuery.fn.die() is deprecated"),
        G ? G.apply(this, arguments) : (a(this.context).off(b, this.selector || "**", c),
        this)
    }
    ,
    a.event.trigger = function(a, b, c, e) {
        return c || J.test(a) || d("Global events are undocumented and deprecated"),
        D.call(this, a, b, c || document, e)
    }
    ,
    a.each(I.split("|"), function(b, c) {
        a.event.special[c] = {
            setup: function() {
                var b = this;
                return b !== document && (a.event.add(document, c + "." + a.guid, function() {
                    a.event.trigger(c, Array.prototype.slice.call(arguments, 1), b, !0)
                }),
                a._data(this, c, a.guid++)),
                !1
            },
            teardown: function() {
                return this !== document && a.event.remove(document, c + "." + a._data(this, c)),
                !1
            }
        }
    }),
    a.event.special.ready = {
        setup: function() {
            this === document && d("'ready' event is deprecated")
        }
    };
    var M = a.fn.andSelf || a.fn.addBack
      , N = a.fn.find;
    if (a.fn.andSelf = function() {
        return d("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"),
        M.apply(this, arguments)
    }
    ,
    a.fn.find = function(a) {
        var b = N.apply(this, arguments);
        return b.context = this.context,
        b.selector = this.selector ? this.selector + " " + a : a,
        b
    }
    ,
    a.Callbacks) {
        var O = a.Deferred
          , P = [["resolve", "done", a.Callbacks("once memory"), a.Callbacks("once memory"), "resolved"], ["reject", "fail", a.Callbacks("once memory"), a.Callbacks("once memory"), "rejected"], ["notify", "progress", a.Callbacks("memory"), a.Callbacks("memory")]];
        a.Deferred = function(b) {
            var c = O()
              , e = c.promise();
            return c.pipe = e.pipe = function() {
                var b = arguments;
                return d("deferred.pipe() is deprecated"),
                a.Deferred(function(d) {
                    a.each(P, function(f, g) {
                        var h = a.isFunction(b[f]) && b[f];
                        c[g[1]](function() {
                            var b = h && h.apply(this, arguments);
                            b && a.isFunction(b.promise) ? b.promise().done(d.resolve).fail(d.reject).progress(d.notify) : d[g[0] + "With"](this === e ? d.promise() : this, h ? [b] : arguments)
                        })
                    }),
                    b = null
                }).promise()
            }
            ,
            c.isResolved = function() {
                return d("deferred.isResolved is deprecated"),
                "resolved" === c.state()
            }
            ,
            c.isRejected = function() {
                return d("deferred.isRejected is deprecated"),
                "rejected" === c.state()
            }
            ,
            b && b.call(c, c),
            c
        }
    }
}(jQuery, window);
/*!
 * Cookie plugin
 *
 * Copyright (c) 2006 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
jQuery.cookie = function(b, j, m) {
    if (typeof j != "undefined") {
        m = m || {};
        if (j === null) {
            j = "";
            m.expires = -1
        }
        var e = "";
        if (m.expires && (typeof m.expires == "number" || m.expires.toUTCString)) {
            var f;
            if (typeof m.expires == "number") {
                f = new Date();
                f.setTime(f.getTime() + (m.expires * 24 * 60 * 60 * 1000))
            } else {
                f = m.expires
            }
            e = "; expires=" + f.toUTCString()
        }
        var l = m.path ? "; path=" + m.path : "";
        var g = m.domain ? "; domain=" + m.domain : "";
        var a = m.secure ? "; secure" : "";
        document.cookie = [b, "=", encodeURIComponent(j), e, l, g, a].join("")
    } else {
        var d = null;
        if (document.cookie && document.cookie != "") {
            var k = document.cookie.split(";");
            for (var h = 0; h < k.length; h++) {
                var c = jQuery.trim(k[h]);
                if (c.substring(0, b.length + 1) == (b + "=")) {
                    d = decodeURIComponent(c.substring(b.length + 1));
                    break
                }
            }
        }
        return d
    }
}
;
function scrollUpBox() {
    var a = function(g) {
        var h = jQuery("#folderMainTreeDiv");
        var f = h.height();
        var c = jQuery("#frame-grip").offset().top;
        var d = jQuery("#frame-grip").height();
        h.height(g.pageY - c + f - d / 2);
        return false
    };
    var b = function(c) {
        jQuery(document).unbind("mouseover", a)
    };
    jQuery("#frame-grip").mouseup(b);
    jQuery("#frame-grip").mousedown(function(c) {
        c.preventDefault();
        jQuery(document).bind("mouseover", a).mouseup(b)
    })
}
function settingButtonFix() {
    jQuery("body").on("mouseenter", ".settingBox", function() {
        jQuery(this).find(".stsOptions").css("margin-left", -(jQuery(this).find(".stsOptions").width() - 20));
        var b = jQuery(document).height();
        var d = jQuery(this).offset().top;
        jQuery(".stsOptions").css("top", d + 20);
        var a = jQuery(this).offset().top;
        var c = jQuery(this).find(".stsOptions");
        if (b - a < c.height() + 100) {
            jQuery(this).find(".stsOptions").css("top", a - c.height() - 10)
        }
        c.show()
    });
    jQuery("body").on("focus", ".settingBox", function() {
        jQuery(this).find(".stsOptions").css("margin-left", -(jQuery(this).find(".stsOptions").width() - 20));
        var b = jQuery(document).height();
        var d = jQuery(this).offset().top;
        jQuery(".stsOptions").css("top", d + 20);
        var a = jQuery(this).offset().top;
        var c = jQuery(this).find(".stsOptions");
        if (b - a < c.height() + 100) {
            jQuery(this).find(".stsOptions").css("top", a - c.height() - 10)
        }
        c.show()
    });
    jQuery("body").on("focusout", ".stsOptions li:last-child a", function() {
        jQuery(this).parents(".stsOptions").hide()
    });
    jQuery("body").on("mouseleave", ".settingBox", function() {
        jQuery(this).find(".stsOptions").hide()
    })
}
jQuery(document).ready(function() {
    settingButtonFix();
    jQuery(".menu > li > ul, .navMenu > li > ul").each(function(r, q) {
        jQuery(q).parent("li").addClass("dropdown")
    });
    jQuery(".menu > li > ul, .navMenu > li > ul").each(function(r, q) {
        jQuery(q).parent("li").addClass("dropdown")
    });
    jQuery(".menu > li,.navMenu > li").hover(function() {
        var s = jQuery(this).children(":parent > ul");
        var r = jQuery(this).offset();
        var q = jQuery("body").width();
        if (r.left + 189 > q) {
            s.css({
                left: "auto",
                right: "0px"
            })
        }
        s.css({
            visibility: "visible",
            display: "none"
        }).slideDown(268)
    }, function() {
        var q = jQuery(this).children(":parent > ul");
        q.css({
            visibility: "hidden"
        })
    });
    jQuery(".menu > li,.navMenu > li").click(function() {
        var q = jQuery(this).children(":parent > ul");
        q.css({
            visibility: "hidden"
        })
    });
    jQuery(".menu > li > ul > li, .navMenu > li > ul > li").hover(function() {
        var s = jQuery(this).children(":parent > ul");
        var r = jQuery(this).offset();
        var q = jQuery("body").width();
        if (r.left + 378 > q) {
            s.css({
                left: "-189px"
            })
        }
        s.css({
            visibility: "visible",
            display: "none"
        }).slideDown(268)
    }, function() {
        var q = jQuery(this).children(":parent > ul");
        q.css({
            visibility: "hidden"
        })
    });
    var m = jQuery(".featured li");
    var n = 630;
    var c = m.length * n - n;
    var e = false;
    var h = false;
    var p = 1000;
    var d = 7500;
    jQuery(".featured .fthumbs a").each(function(r, s) {
        var q = r + 1;
        jQuery(s).click(function(t) {
            t.preventDefault();
            h = true;
            l(q)
        })
    });
    function l(q) {
        if (e == false) {
            e = true;
            var r = jQuery(".featured ul");
            var t = parseInt(jQuery(r).css("left"));
            if (q) {
                if (q == "next") {
                    if (t == -c) {
                        left = 0
                    } else {
                        left = t - n
                    }
                } else {
                    if (q == "back") {
                        if (t == 0) {
                            left = -c
                        } else {
                            left = t + n
                        }
                    } else {
                        left = -(n * q) + n
                    }
                }
                var s = Math.abs(left / n);
                jQuery(".featured .fthumbs a img").removeClass("active");
                jQuery(".featured .fthumbs a:eq(" + s + ") img").addClass("active");
                r.animate({
                    left: left
                }, p, "swing", function() {
                    e = false
                })
            }
        }
    }
    function b() {
        if (h == true) {
            h = false
        } else {
            l("next")
        }
    }
    var f = setInterval(b, d);
    function g(s, t, u) {
        if (u) {
            var r = new Date();
            r.setTime(r.getTime() + (u * 24 * 60 * 60 * 1000));
            var q = "; expires=" + r.toGMTString()
        } else {
            var q = ""
        }
        document.cookie = s + "=" + t + q + "; path=/"
    }
    function k(r) {
        var t = r + "=";
        var q = document.cookie.split(";");
        for (var s = 0; s < q.length; s++) {
            var u = q[s];
            while (u.charAt(0) == " ") {
                u = u.substring(1, u.length)
            }
            if (u.indexOf(t) == 0) {
                return u.substring(t.length, u.length)
            }
        }
        return null
    }
    function o(q) {
        g(q, "", -1)
    }
    jQuery(document).ready(function() {
        jQuery(".styleswitch").click(function() {
            a(this.getAttribute("rel"));
            return false
        });
        var q = k("style");
        if (q) {
            a(q)
        }
    });
    function a(q) {
        jQuery("link[@rel*=style][title]").each(function(r) {
            this.disabled = true;
            if (this.getAttribute("title") == q) {
                this.disabled = false
            }
        });
        g("style", q, 365)
    }
    jQuery(".atabs .tabs a").each(function(q) {
        jQuery(this).click(function(r) {
            r.preventDefault();
            jQuery(".atabs .tabs a").removeClass("active");
            jQuery(this).addClass("active");
            jQuery("#atabs_content").empty().html(jQuery(this.getAttribute("rel")).html())
        })
    });
    jQuery("body").on("click", ".saveLink", function() {
        if (bookmarkSavePermission == "true" || bookmarkSavePermission) {
            var s = jQuery(this);
            var r = '<div class="saveLinkBox" style="display:none"> <input name="" type="text" class="textField big" id="linkTitle"  onblur="myBlur(this);" onfocus="myFocus(this);" title="Add title" value="Add title" /> <input name="" type="button" class="button" value="Save" id="saveLinkId"/> <input name="" type="button" value="Cancel" class="button" id="closeBtn2" /></div>';
            if (jQuery(".saveLinkBox").length == 0) {
                jQuery(".lc_tabTopHeader").append(r);
                jQuery("#closeBtn2").bind("click", function() {
                    jQuery(".saveLinkBox").hide()
                });
                jQuery("#saveLinkId").bind("click", function() {
                    if (jQuery("#linkTitle").val() == "" || jQuery("#linkTitle").val() == "Add title") {
                        return false
                    } else {
                        saveLink(jQuery("#linkTitle").val())
                    }
                })
            }
            var q = s.offset().left - 460;
            jQuery(".saveLinkBox").show().css("left", q + "px");
            jQuery("#linkTitle").focus();
            jQuery("#linkTitle").addClass("focusedInput")
        } else {
            new Boxy("#noPermissionDialog")
        }
    });
    jQuery("body").on("click", ".clickStar", function() {
        if (bookmarkSavePermission == "true" || bookmarkSavePermission) {
            var r = jQuery(this).parent();
            var s = '<div class="saveLinkBox" style="display:none; right: -1%;"><label for="linkTitle" style="display:inline-block;width:0;opacity:0;float:left;">Add Title</label> <input name="linkTitle" type="text" class="textField big" id="linkTitle" aria-label="Add Title" onblur="myBlur(this);" onfocus="myFocus(this);" value="Add title" /> <input name="" type="button" class="button saveLinkButton" value="Save" id="saveLinkId"/> <input name="" type="button" value="Cancel" class="button closeLinkButton" id="closeBtn2" /></div>';
            if (jQuery(r).hasClass("slef-mdlHeading1")) {
                s = '<div class="saveLinkBox" style="display:none;right: 50px; top: 123px;"> <label for="linkTitle" style="display:inline-block;width:0;opacity:0;float:left;">Add Title</label> <input name="linkTitle" type="text" class="textField big" id="linkTitle" aria-label="Add Title"  onblur="myBlur(this);" onfocus="myFocus(this);" value="Add title" /> <input name="" type="button" class="button saveLinkButton" value="Save" id="saveLinkId"/> <input name="" type="button" value="Cancel" class="button closeLinkButton" id="closeBtn2" /></div>'
            }
            var q = jQuery(this).parent().find(".saveLinkBox");
            if (jQuery(q).length == 0) {
                jQuery(this).after(s);
                q = jQuery(r).find(".saveLinkBox");
                jQuery(r).find(".closeLinkButton").bind("click", function() {
                    jQuery(q).hide()
                });
                jQuery(r).find(".saveLinkButton").bind("click", function() {
                    var t = jQuery(q).find("#linkTitle").val();
                    if (t == "" || t == "Add title") {
                        return false
                    } else {
                        saveLink(t)
                    }
                })
            }
            jQuery(q).show();
            jQuery("#linkTitle").focus();
            jQuery("#linkTitle").addClass("focusedInput")
        } else {
            new Boxy("#noPermissionDialog")
        }
    })
});
function saveLink(b) {
    var d = encodeURIComponent(appNavObj.url);
    if (appNavObj.bookmarkUrl != null) {
        d = encodeURIComponent(appNavObj.bookmarkUrl)
    }
    var c = appNavObj.appBasePath + "/mylink/mylink.lc";
    var a = jQuery.cookie("moduleName");
    endpoint = c + "?operation=saveLink&linkTitle=" + b + "&linkUrl=" + d + "&moduleName=" + a;
    jQuery.ajax({
        type: "POST",
        async: false,
        url: endpoint,
        success: function(e) {
            jQuery("#linkTitle").val("");
            jQuery(".saveLinkBox").hide();
            jQuery(".clickStar,.saveLink").addClass("clickStarenble")
        },
        error: function(g, e, f) {
            alert("ajaxOptions=" + e);
            alert("thrownError=" + f)
        }
    })
}
function bookmark(a, c) {
    if (window.sidebar) {
        window.sidebar.addPanel(c, a, "")
    } else {
        if (window.opera && window.print) {
            var b = document.createElement("a");
            b.setAttribute("href", a);
            b.setAttribute("title", c);
            b.setAttribute("rel", "sidebar");
            b.click()
        } else {
            if (document.all) {
                window.external.AddFavorite(a, c)
            } else {
                alert("Your browser does not support this function.")
            }
        }
    }
}
jQuery(document).ready(function() {
    jQuery(".tabClass").hover(function() {
        jQuery(this).find(".children").slideDown()
    }, function() {
        jQuery(this).find(".children").slideUp()
    });
    jQuery(".navMenu").find("li a").focus(function() {
        jQuery(this).parent().parent().find("ul").slideUp(function() {
            jQuery(".tabClass").removeClass("on");
            jQuery(this).parent().removeClass("on");
            jQuery(this).parent().parent().find("ul").css("visibility", "visible")
        });
        jQuery(this).parent().find("ul").slideDown(function() {
            jQuery(this).children()[0].focus();
            jQuery(this).parent().addClass("on");
            jQuery(this).addClass("on")
        })
    });
    jQuery(".dropdown img.flag").addClass("flagvisibility");
    jQuery("#status dt a").click(function() {
        jQuery("#status dd ul").toggle()
    });
    jQuery("#status1 dt a").click(function() {
        jQuery("#status1 dd ul").toggle()
    });
    jQuery("#status2 dt a").click(function() {
        jQuery("#status2 dd ul").toggle()
    });
    jQuery("#status2 dt a").click(function() {
        var b = jQuery(this).html();
        if (jQuery("#status2 dt a").attr("class") == "shortingLink1 shortingLink") {
            jQuery("#status2 dt a").html(b);
            jQuery("#status2 dt a").addClass("shortingLinkOn");
            jQuery("#status2 dt a").removeClass("shortingLink")
        } else {
            jQuery("#status2 dt a").html(b);
            jQuery("#status2 dt a").removeClass("shortingLinkOn");
            jQuery("#status2 dt a").addClass("shortingLink")
        }
    });
    jQuery(".dropdown dd ul li a").click(function() {
        if (!quizAttemptForLogoutStarted) {
            var b = jQuery(this).html();
            jQuery(".dropdown dt a span").html(b);
            jQuery(".dropdown dt a").addClass("focused");
            jQuery(".dropdown dd ul").hide();
            jQuery("#result").html("Selected value is: " + a("status"))
        }
    });
    function a(b) {
        return jQuery("#" + b).find("dt a span.value").html()
    }
    jQuery(document).bind("click", function(c) {
        var b = jQuery(c.target);
        jQuery("#status2 dt a").click(function(d) {
            d.stopPropagation()
        });
        if (!b.parents().hasClass("dropdown")) {
            jQuery("#filterType dd div#showFilter").hide()
        }
        if (jQuery("#status2 dt a").attr("class") == "shortingLink1 shortingLink") {
            jQuery("#status2 dt a").addClass("shortingLinkOn");
            jQuery("#status2 dt a").removeClass("shortingLink")
        }
    });
    jQuery("#flagSwitcher").click(function() {
        jQuery(".dropdown img.flag").toggleClass("flagvisibility")
    })
});
function myFocus(a) {
    if (a.value == a.defaultValue) {
        a.value = ""
    }
    jQuery(a).addClass("focusedInput")
}
function myBlur(a) {
    if (a.value == "") {
        a.value = a.defaultValue;
        jQuery(a).removeClass("focusedInput")
    }
}
var popupStatus = 0;
function loadPopup() {
    if (popupStatus == 0) {
        jQuery("#popupBg").css({
            opacity: "0.4"
        });
        jQuery("#popupBg").fadeIn("slow");
        jQuery("#popup").fadeIn("fast");
        popupStatus = 1
    }
}
function loadPopup2() {
    if (popupStatus == 0) {
        jQuery("#popupBg2").css({
            opacity: "0.5"
        });
        jQuery("#popupBg2").fadeIn("slow");
        jQuery("#popup2").fadeIn("fast");
        popupStatus = 1
    }
}
function loadPopup3() {
    if (popupStatus == 0) {
        jQuery("#popupBg3").css({
            opacity: "0.5"
        });
        jQuery("#popupBg3").fadeIn("slow");
        jQuery("#popup3").fadeIn("fast");
        popupStatus = 1
    }
}
function loadPopup4() {
    if (popupStatus == 0) {
        jQuery("#popupBg4").css({
            opacity: "0.5"
        });
        jQuery("#popupBg4").show();
        jQuery("#popup4").fadeIn("fast");
        popupStatus = 1
    }
}
function disablePopup() {
    if (popupStatus == 1) {
        jQuery("#popupBg").fadeOut("slow");
        jQuery("#popup").fadeOut("fast");
        popupStatus = 0
    }
}
function disablePopup2() {
    if (popupStatus == 1) {
        jQuery("#popupBg2").fadeOut("slow");
        jQuery("#popup2").fadeOut("fast");
        popupStatus = 0
    }
}
function disablePopup3() {
    if (popupStatus == 1) {
        jQuery("#popupBg3").fadeOut("slow");
        jQuery("#popup3").fadeOut("fast");
        popupStatus = 0
    }
}
function disablePopup4() {
    if (popupStatus == 1) {
        jQuery("#popupBg4").fadeOut("slow");
        jQuery("#popup4").fadeOut("fast");
        popupStatus = 0
    }
}
function centerPopup() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup").height();
    var b = jQuery("#popup").width();
    jQuery("#popup").css({
        position: "absolute",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg").css({
        height: d
    })
}
function centerPopup2() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup2").height();
    var b = jQuery("#popup2").width();
    jQuery("#popup2").css({
        position: "absolute",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg2").css({
        height: d
    })
}
function centerPopup4() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup4").height();
    var b = jQuery("#popup4").width();
    jQuery("#popup4").css({
        position: "absolute",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg4").css({
        height: d
    })
}
function centerPopup3() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup3").height();
    var b = jQuery("#popup3").width();
    jQuery("#popup3").css({
        position: "absolute",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg3").css({
        height: d
    })
}
function generateWeekDaysPopUp(f, a, l, g, h) {
    var d = parseInt(a / 7);
    var k = parseInt(a % 7);
    var c = jQuery("#" + l).val();
    var b = "0";
    var e = '<div style="width:380px;" class="popCont"><h1> <a class="close"></a>' + i18n("course.weeks", "${COURSE_SINGULAR_CAPS}") + '</h1><div class="nextndPreviousBox"> </div><div class="topicListTop topicListTopNew"><table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" class="dataTabl5 dataTablFixed"><tr><th scope="col" width="9%">' + i18n("week") + '</th><th scope="col" width="7%">' + i18n("d") + '1</th><th scope="col" width="7%">' + i18n("d") + '2</th><th scope="col" width="7%">' + i18n("d") + '3</th><th scope="col" width="7%">' + i18n("d") + '4</th><th scope="col" width="7%">' + i18n("d") + '5</th><th scope="col" width="7%">' + i18n("d") + '6</th><th scope="col" width="7%">' + i18n("d") + '7</th></tr></table></div><div class="topicListnew3 mb0"><table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" class="gridTbl1 dataTabl3 dataTabl5 tblsmallFont dataTablFixed">';
    for (i = 1; i <= d; i++) {
        if (i == "1") {
            e = e + '<tr class="noTopBrd"><th width="9%">' + i18n("w") + i + "</th>"
        } else {
            e = e + '<tr><th width="9%">' + i18n("w") + i + "</th>"
        }
        for (j = 1; j <= 7; j++) {
            if (c != "" && (parseInt(b + j) == parseInt(c))) {
                e = e + '<td width="7%"><input name="weekRadio" checked="checked" type="radio" value="' + parseInt(b + j) + '" /></td>'
            } else {
                e = e + '<td width="7%"><input name="weekRadio" type="radio" value="' + parseInt(b + j) + '" /></td>'
            }
        }
        e = e + "</tr>";
        b = parseInt(b + 7)
    }
    if (k > 0) {
        e = e + '<tr><th width="9%">' + i18n("w") + parseInt(d + 1) + "</th>";
        for (j = 1; j <= 7; j++) {
            if (j > k) {
                e = e + '<td width="7%"><input name="weekRadio" type="radio" value="' + parseInt(b + j) + '" disabled="disabled"/></td>'
            } else {
                if (c != "" && (parseInt(b + j) == parseInt(c))) {
                    e = e + '<td width="7%"><input name="weekRadio" checked="checked" type="radio" value="' + parseInt(b + j) + '" /></td>'
                } else {
                    e = e + '<td width="7%"><input name="weekRadio" type="radio" value="' + parseInt(b + j) + '" /></td>'
                }
            }
        }
        e = e + "</tr>"
    }
    e = e + '</table></div><br class="clear" /><br class="clear" /><div class="buttonRow"><input name="" id="okButton" type="button" value="&nbsp;' + i18n("ok") + '&nbsp;" disabled="true" /><input name="" class = "close" id="weekDaysPopUpCanceId" type="button" value="&nbsp;' + i18n("cancel") + '&nbsp;" /><br class="clear" /></div></div>';
    new Boxy(e,{
        closeable: true,
        afterShow: function(m) {
            jQuery("input[name='weekRadio']").click(function() {
                jQuery("#okButton").attr("disabled", false)
            });
            jQuery("#okButton").click(function() {
                jQuery("input[name='weekRadio']").each(function() {
                    if (jQuery(this).prop("checked")) {
                        var o;
                        var n;
                        if (parseInt(jQuery(this).val() % 7) > 0) {
                            o = i18n("w") + parseInt(((jQuery(this).val() / 7) + 1));
                            n = i18n("d") + parseInt(((jQuery(this).val() % 7)))
                        } else {
                            o = i18n("w") + parseInt(((jQuery(this).val() / 7)));
                            n = i18n("d") + "7"
                        }
                        jQuery("#" + f).val(o + n);
                        jQuery("#" + l).val(jQuery(this).val())
                    }
                });
                if (jQuery("input[name='weekRadio']").is(":checked")) {
                    if (h != 6) {
                        contentValidateDates(g)
                    } else {
                        validateDates()
                    }
                    jQuery("#weekDaysPopUpCanceId").click()
                }
            })
        },
        unloadOnHide: true
    })
}
function generateWeekDaysInlinePopUp(k, b, o, l, m, h, a, c) {
    jQuery(".dayWeekInline").remove();
    var f = parseInt(b / 7);
    var n = parseInt(b % 7);
    var e = jQuery("#" + o).val();
    var d = "0";
    c = c.replace(/'/g, "\\'");
    var g = '<div class="popCont posAbsolute dayWeekInline" style="top: 68px; left: -7px; z-index: 30; min-width: auto; width: 300px;background-color:#fff;"><div class="topicListTop topicListTopNew"><table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" class="dataTabl5 dataTablFixed"><tr><th scope="col" class="pl0" width="9%">' + i18n("week") + '</th><th scope="col" width="7%">' + i18n("d") + '1</th><th scope="col" width="7%">' + i18n("d") + '2</th><th scope="col" width="7%">' + i18n("d") + '3</th><th scope="col" width="7%">' + i18n("d") + '4</th><th scope="col" width="7%">' + i18n("d") + '5</th><th scope="col" width="7%">' + i18n("d") + '6</th><th scope="col" width="7%">' + i18n("d") + '7</th></tr></table></div><div class="topicListnew3 mb0"><table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" class="gridTbl1 dataTabl3 dataTabl5 tblsmallFont dataTablFixed">';
    for (i = 1; i <= f; i++) {
        if (i == "1") {
            g = g + '<tr class="noTopBrd"><th width="13%"  class="pa0" style="text-align:center;vertical-align:middle;">' + i18n("w") + i + "</th>"
        } else {
            g = g + '<tr><th width="13%" class="pa0" style="text-align:center;vertical-align:middle;">' + i18n("w") + i + "</th>"
        }
        for (j = 1; j <= 7; j++) {
            if (e != "" && (parseInt(d + j) == parseInt(e))) {
                g = g + '<td width="7%"><input name="weekRadio" checked="checked" onchange="javascript:selectWeekDays(this,\'' + k + "','" + b + "','" + o + "','" + l + "','" + m + "','" + c + '\');" type="radio" value="' + parseInt(d + j) + '" /></td>'
            } else {
                g = g + '<td width="7%"><input name="weekRadio" onchange="javascript:selectWeekDays(this,\'' + k + "','" + b + "','" + o + "','" + l + "','" + m + "','" + c + '\');"  type="radio" value="' + parseInt(d + j) + '" /></td>'
            }
        }
        g = g + "</tr>";
        d = parseInt(d + 7)
    }
    if (n > 0) {
        g = g + '<tr><th width="13%" class="pa0" style="text-align:center;vertical-align:middle;">' + i18n("w") + parseInt(f + 1) + "</th>";
        for (j = 1; j <= 7; j++) {
            if (j > n) {
                g = g + '<td width="7%"><input name="weekRadio" type="radio" value="' + parseInt(d + j) + '" disabled="disabled"/></td>'
            } else {
                if (e != "" && (parseInt(d + j) == parseInt(e))) {
                    g = g + '<td width="7%"><input name="weekRadio" checked="checked" onchange="javascript:selectWeekDays(this,\'' + k + "','" + b + "','" + o + "','" + l + "','" + m + "','" + c + '\');"  type="radio" value="' + parseInt(d + j) + '" /></td>'
                } else {
                    g = g + '<td width="7%"><input name="weekRadio" onchange="javascript:selectWeekDays(this,\'' + k + "','" + b + "','" + o + "','" + l + "','" + m + "','" + c + '\');"  type="radio" value="' + parseInt(d + j) + '" /></td>'
                }
            }
        }
        g = g + "</tr>"
    }
    g = g + "</table></div></div>";
    jQuery(h).after(g)
}
function selectWeekDays(element, elementId, courseDuration, hiddenElementId, flag, contentType, callBackValidationFunction) {
    if (jQuery(element).prop("checked")) {
        var week;
        var day;
        if (parseInt(jQuery(element).val() % 7) > 0) {
            week = i18n("w") + parseInt(((jQuery(element).val() / 7) + 1));
            day = i18n("d") + parseInt(((jQuery(element).val() % 7)))
        } else {
            week = i18n("w") + parseInt(((jQuery(element).val() / 7)));
            day = i18n("d") + "7"
        }
        jQuery("#" + elementId).val(week + day);
        jQuery("#" + hiddenElementId).val(jQuery(element).val());
        eval(callBackValidationFunction);
        jQuery(".dayWeekInline").remove();
        jQuery("#" + hiddenElementId).change()
    }
}
jQuery(document).ready(function() {
    jQuery(".popupLink").click(function() {
        centerPopup();
        loadPopup()
    });
    jQuery(".popupLink2").click(function() {
        centerPopup2();
        loadPopup2()
    });
    jQuery(".popupLink3").click(function() {
        centerPopup3();
        loadPopup3()
    });
    jQuery(".displayGoogleBooks").click(function() {
        centerPopup4();
        loadPopup4()
    });
    jQuery("#popupClose").click(function() {
        disablePopup()
    });
    jQuery(".popupClose").click(function() {
        disablePopup()
    });
    jQuery("#popupClose2").click(function() {
        disablePopup2()
    });
    jQuery("#popupClose3").click(function() {
        disablePopup3()
    });
    jQuery("#popupClose4").click(function() {
        disablePopup4()
    })
});
function createConfirmBoxy(b, c, a) {
    Boxy.ask(i18n("create.successmsg", b, b), [i18n("yes"), i18n("no")], function(e) {
        var d = this;
        if (e == i18n("yes")) {
            appNavObj.setURL(a + "&tempDate=" + new Date().getTime())
        } else {
            appNavObj.setURL(c)
        }
    }, {
        title: i18n("message")
    })
}
function modifyAlertBoxy(a, b) {
    Boxy.ask(i18n("modification.successmsg", a), [i18n("ok")], function(c) {
        appNavObj.setURL(b)
    }, {
        title: i18n("message")
    })
}
function createUnsuccessfulAlertBoxy(a) {
    Boxy.ask(i18n("create.unsuccessful", a), [i18n("ok")], function(b) {}, {
        title: i18n("message")
    })
}
function modifyUnsuccessfulAlertBoxy(a) {
    Boxy.ask(i18n("modify.unsuccessful", a), [i18n("ok")], function(b) {}, {
        title: i18n("message")
    })
}
var buType;
var userAssoc;
function showBUBoxy(c, b, a) {
    if (appNavObj.buJsonObj == null) {
        jQuery.ajax({
            url: appNavObj.appBasePath + "/businessunit/businessunit.lc?operation=getBUTreeForUser",
            dataType: "json",
            success: function(d) {
                appNavObj.buJsonObj = d;
                loadBoxyWithBUTree(d, c, b, a);
                jQuery(".treeTbl").find("li:last").addClass("last")
            }
        })
    } else {
        loadBoxyWithBUTree(appNavObj.buJsonObj, c, b, a);
        if (jQuery("#" + c).val() == 1) {
            jQuery("#topBU").prop("checked", true)
        } else {
            jQuery("#chkBox_" + jQuery("#" + c).val()).prop("checked", true)
        }
    }
}
function constructBUTree(f, c, e) {
    var d = '<li id="treeNode_' + f.buId + '" class="treeNodeLI"><table cellpadding="0" cellspacing="0" border="0" width="100%" class="wrapper"><tr>';
    var a = buType[f.buTypeId] != undefined ? buType[f.buTypeId].name : "";
    var e = e ? true : userAssoc[f.buId] != undefined ? true : false;
    if (c) {
        d += "<td ><div>";
        d += e ? '<a  href="javascript:void(0);" class="buLink" title="' + a + " : " + f.title + '" id="' + f.buId + '"> ' + a + " : " + f.title + " </a>" : a + " : " + f.title
    } else {
        d += '<td width="3%">';
        d += e ? '<input type="checkbox" name="buIds" value="' + f.buId + '" id="chkBox_' + f.buId + '" class="treeInputChkbox" >' : "</td><td ><div>";
        d += e ? '<a  href="javascript:void(0)" title="' + a + " : " + f.title + '" id="buName_' + f.buId + '"> ' + a + " : " + f.title + " </a>" : a + " : " + f.title
    }
    d += '</div></td></tr></table><br class="clear"/>';
    if (f.children) {
        d += '<ul class="nodeSet">';
        for (var b = 0; b < f.children.length; b++) {
            d += constructBUTree(f.children[b], c, e)
        }
        d += "</ul>"
    }
    d += "</li>";
    return d
}
function loadBoxyWithBUTree(g, f, e, a) {
    var h = g.buNode;
    buType = g.buTypeMap;
    userAssoc = g.userBUMap;
    var d = userAssoc[h.buId] != undefined ? true : false;
    var c = '<div class="popCont popUpBig posRel" role="dialog" aria-labelledby="buUnitId"><h1 id="buUnitId"> <a class="close"></a>' + i18n("bu.unit") + '</h1><div class="detailsBox1 detailsBox4"><div class="treeTblHeader"><table width="100%" cellspacing="0" cellpadding="0" border="0" class="wrapper bigwrapper" summary="">';
    if (a) {
        c += '<tbody><tr id="topBU"><td><div>';
        c += d ? '<a href="javascript:void(0)" class="buLink" onclick="javascript:void(0)" id="' + h.buId + '" title="' + buType[h.buTypeId].name + ": " + h.title + '"> ' + buType[h.buTypeId].name + ": " + h.title + " </a>" : buType[h.buId].name + ": " + h.title;
        c += "</div></td>"
    } else {
        c += '<tbody><tr><td width="3%">';
        c += d ? '<input type="checkbox" value="' + h.buId + '" id="topBU"/>' : '</td><td width="95%"><div>';
        c += d ? '<a href="javascript:void(0)" onclick="javascript:void(0)" id="buName_1"> ' + buType[h.buTypeId].name + ": " + h.title + " </a>" : buType[h.buTypeId].name + ": " + h.title;
        c += "</div></td>"
    }
    c += '</tr></tbody></table></div><div class="treeTbl"><ul class="treeview-red treeview" id="red">';
    if (h.children) {
        for (var b = 0; b < h.children.length; b++) {
            c += constructBUTree(h.children[b], a, d)
        }
    }
    c += "</ul></div></div>";
    c += '<div class="buttonRow"><input name="saveBtn" type="button" class="btn btn_primary btn_small_primary searchContent2" value="' + i18n("select") + '" id="selectedBu"/>&nbsp;<input name="cancelBtn" type="button" class="btn searchContent2" value="' + i18n("cancel") + '" id="cancelBu"/>';
    c += "</div></div>";
    new Boxy(c,{
        closeable: true,
        afterShow: function(k) {
            jQuery("#selectedBu").bind("click", function() {
                var l = "";
                var m = "";
                if (a) {
                    var n = jQuery("#red").find("td.selected").find("a");
                    if (jQuery(n).length == 0) {
                        n = jQuery("#topBU").find("div").find("a")
                    }
                    if (jQuery(n).length > 0) {
                        buId = jQuery(n).attr("id");
                        buName = jQuery(n).attr("title");
                        jQuery("#" + e).val(buName);
                        jQuery("#" + e).removeClass("error");
                        jQuery("[for='" + e + "']").hide();
                        jQuery("#" + f).val(buId)
                    } else {
                        Boxy.alert(i18n("bu.note.atleastselectabu"), null, {
                            title: i18n("message")
                        });
                        return false
                    }
                } else {
                    jQuery(".treeInputChkbox:checked").each(function() {
                        l += jQuery(this).val() + ",";
                        m += jQuery("#buName_" + jQuery(this).val()).html() + " ,"
                    });
                    if (jQuery("#topBU").is(":checked")) {
                        l += jQuery("#topBU").val() + ",";
                        m += jQuery("#buName_1").html() + " ,"
                    }
                    jQuery("#" + f).val(l.substring(0, l.length - 1));
                    jQuery("#" + e).val(m.substring(0, m.length - 1))
                }
                jQuery(".close").click()
            });
            jQuery("#cancelBu").click(function() {
                jQuery(".close").click()
            })
        },
        unloadOnHide: true
    });
    jQuery("#red").treeview({
        animated: "fast",
        collapsed: true,
        unique: true,
        persist: "cookie",
        toggle: function() {}
    });
    jQuery(".buLink").click(function() {
        if (jQuery(this).parent().parent().parent().attr("id") == "topBU") {
            jQuery("#topBU").addClass("selectedRow");
            jQuery("#red").find("td").removeClass("selected")
        } else {
            jQuery("#topBU").removeClass("selectedRow");
            jQuery("#red").find("td").removeClass("selected");
            jQuery(this).closest("td").addClass("selected")
        }
    })
}
function getMyLinkContent() {
    var a = appNavObj.appBasePath + "/mylink/mylink.lc?operation=findLinks";
    jQuery.ajax({
        type: "POST",
        async: false,
        url: a,
        success: function(b) {
            jQuery("#myLinksOutrId").html(b)
        },
        error: function(d, b, c) {
            alert("ajaxOptions=" + b);
            alert("thrownError=" + c)
        }
    })
}
function deleteAllMyLinks() {
    if (bookmarkBulkDeletePermission == "true" || bookmarkBulkDeletePermission) {
        var a = appNavObj.appBasePath + "/mylink/mylink.lc?operation=deleteAllLinks";
        jQuery.ajax({
            type: "POST",
            async: false,
            url: a,
            success: function(b) {
                if (b == "1") {
                    jQuery("#myLinksOutrId").html('<em class="note">There is no saved link available.</em>');
                    jQuery("#deleteLinks").hide()
                }
            },
            error: function(d, b, c) {
                alert("ajaxOptions=" + b);
                alert("thrownError=" + c)
            }
        })
    } else {
        new Boxy("#noPermissionDialog")
    }
}
jQuery(document).ready(function(a) {
    jQuery("#lnkMyLink").bind("click", function(b) {
        var c = jQuery("#lnkMyLink").position().left - jQuery("#myLinkBoxDiv").width() + jQuery(this).width();
        jQuery("#myLinkBoxDiv").css({
            left: c
        });
        if (jQuery("#myLinkBoxDiv").is(":hidden")) {
            jQuery("#techBoxDiv").slideUp();
            jQuery("#techBoxDiv").css({
                visibility: "hidden"
            });
            jQuery("#popup3").hide();
            jQuery("#popupBg3").css({
                display: "none"
            });
            getMyLinkContent();
            jQuery("#lnkMyLink").addClass("listBox1");
            jQuery("#myLinkBoxDiv").slideDown();
            jQuery("#myLinkBoxDiv").css({
                visibility: "visible"
            })
        } else {
            jQuery("#lnkMyLink").removeClass("listBox1");
            jQuery("#myLinkBoxDiv").slideUp();
            jQuery("#myLinkBoxDiv").css({
                visibility: "hidden"
            })
        }
        b.stopPropagation()
    });
    jQuery("#closeBtn1Lnk").click(function() {
        jQuery("#lnkMyLink").removeClass("listBox1");
        jQuery("#myLinkBoxDiv").slideUp();
        jQuery("#myLinkBoxDiv").css({
            visibility: "hidden"
        })
    });
    jQuery("#myLinkBoxDiv").bind("click", function(b) {
        b.stopPropagation()
    });
    jQuery("#showLeftMenuPanel").on("click", function() {
        jQuery(this).toggleClass("activeNav");
        if (jQuery(this).hasClass("activeNav")) {
            jQuery(this).attr("title", "Show Panel");
            jQuery("#LeftMenuPanelDiv").slideUp("slow")
        } else {
            jQuery(this).attr("title", "Hide Panel");
            jQuery("#LeftMenuPanelDiv").slideDown("slow")
        }
    });
    jQuery("#hideLeftMenuPanel").on("click", function() {
        jQuery("#LeftMenuPanelDiv").slideUp("slow");
        jQuery("#showLeftMenuPanel").addClass("activeNav")
    })
});
function showcollapseSettingsSections(c) {
    var b = jQuery(c).closest(".lcs_settingsBlock");
    var a = jQuery(b).find(".lcs_settingsBlockSection");
    if (jQuery(a).is(":visible") == true) {
        jQuery(b).find(".lcs_settingsBlockSection").hide();
        jQuery(b).find(".lcs_settingsBlockSection").attr("aria-expanded", "false");
        jQuery(c).find(".fa-caret-down").removeClass("fa-caret-down").addClass("fa-caret-right")
    } else {
        jQuery(b).find(".lcs_settingsBlockSection").show();
        jQuery(b).find(".lcs_settingsBlockSection").attr("aria-expanded", "true");
        jQuery(c).find(".fa-caret-right").removeClass("fa-caret-right").addClass("fa-caret-down")
    }
}
var leftMenuTimer;
function slideLeftMenu() {
    jQuery("#LeftMenuPanelDiv").slideUp();
    jQuery("#showLeftMenuPanel").addClass("activeNav")
}
function initLeftMenuTimer() {
    clearTimeout(leftMenuTimer);
    leftMenuTimer = setTimeout(slideLeftMenu, 3000)
}
function checkLbConversionCompleted(a, c, b) {
    jQuery.ajax({
        url: appNavObj.appBasePath + "/loudbook/loudbook.lc?operation=checkLbConversionCompleted&loudbookId=" + c,
        success: function(d) {
            if (d == 1) {
                appNavObj.setURL(a)
            } else {
                var e;
                if (d == 0) {
                    e = "conversionfailed"
                } else {
                    if (d == 2) {
                        e = "notsentforconversion"
                    } else {
                        if (d == 3) {
                            e = "modifiedcontentnotconverted"
                        } else {
                            if (d == 4) {
                                e = "conversioninprogress"
                            } else {
                                e = "unavailable"
                            }
                        }
                    }
                }
                if (b == 1) {
                    Boxy.alert(i18n("loudbook.view." + e + ".msg"), null, {
                        title: "Message"
                    })
                } else {
                    if (b == 2) {
                        Boxy.alert(i18n("loudbook.curation." + e + ".msg"), null, {
                            title: "Message"
                        })
                    } else {
                        Boxy.alert(i18n("loudbook.preview." + e + ".msg"), null, {
                            title: "Message"
                        })
                    }
                }
            }
        }
    })
}
function checkStartDate(a, c, f, k, h, l) {
    var g = true;
    var b = i18n("content.creation.warning.msg", h);
    if (l == "3" || l == "4" || l == "7" || l == "8") {
        g = false;
        if (jQuery("#alwaysVisible1").prop("checked") == true) {
            jQuery(".processingRequest").hide();
            jQuery(".cancelButton").attr("disabled", false).removeClass("disBtn");
            jQuery(".saveButton").attr("disabled", false).removeClass("disBtn");
            jQuery("#" + k).submit();
            return
        }
        b = i18n("content.creation.warning.msg1", h)
    }
    if (l == "6" ? validateDates() : classContentValidateDates(g)) {
        var e = jQuery("#" + c).val();
        var d = jQuery("#" + f).val();
        jQuery(".processingRequest").show();
        jQuery(".cancelButton").attr("disabled", true).addClass("disBtn");
        jQuery(".saveButton").attr("disabled", true).addClass("disBtn");
        jQuery.ajax({
            url: appNavObj.appBasePath + "/common/common.lc?operation=checkStartDate&timezoneKey=" + a + "&startDate=" + e + "&startTime=" + d,
            success: function(m) {
                jQuery(".processingRequest").hide();
                jQuery(".cancelButton").attr("disabled", false).removeClass("disBtn");
                jQuery(".saveButton").attr("disabled", false).removeClass("disBtn");
                if (m == 1) {
                    jQuery("#" + k).submit()
                } else {
                    Boxy.ask(b, [i18n("ok"), i18n("cancel")], function(n) {
                        if (n == i18n("ok")) {
                            jQuery("#" + k).submit()
                        }
                    }, {
                        title: i18n("message")
                    })
                }
            }
        })
    }
}
function createConfirmBoxyMessage(b, c, a) {
    Boxy.ask(b, [i18n("yes"), i18n("no")], function(e) {
        var d = this;
        if (e == i18n("yes")) {
            appNavObj.setURL(a + "&tempDate=" + new Date().getTime())
        } else {
            appNavObj.setURL(c)
        }
    }, {
        title: i18n("message")
    })
}
function modifyAlertBoxyMessage(a, b) {
    Boxy.ask(a, [i18n("ok")], function(c) {
        appNavObj.setURL(b)
    }, {
        title: i18n("message")
    })
}
function generateConditonalReleaseContentPopUp(a) {
    var c = '<div class="popCont popUpBig"><h1> <a class="close"></a>New Content is available</h1>	<br /><div class="quizFont13 mb10"> Following content items are available to you now.</div><div style="height:150px; overflow:auto; border:1px solid #ccc;"><ul class="condiReleaseP">';
    for (var b = 0; b < a.length; b++) {
        if (a[b].contentUrl == null || a[b].contentUrl == "") {
            c += "<li>" + a[b].title + "</li>"
        } else {
            c += "<li><a onclick=\"javascript:markAsReadAndClose(this,'" + a[b].id + "','" + appNavObj.appBasePath + a[b].contentUrl + '\');" href="javascript:void(0);">' + a[b].title + "</a></li>"
        }
    }
    c += '</ul></div><div class="buttonRow"><input name="" class="close" type="button" value="OK" /></div></div>';
    new Boxy(c,{
        closeable: true,
        afterShow: function(d) {},
        unloadOnHide: true
    })
}
function markAsReadAndClose(b, c, a) {
    jQuery(".close").click();
    appNavObj.setURL(a)
}
function callAnnounceMentBoxy(b, c) {
    var a = appNavObj.appBasePath + "/class/content.lc?operation=createClassAnnouncement&tempDate=" + new Date().getTime();
    Boxy.load(a, {
        unloadOnHide: true,
        afterShow: function() {
            jQuery("#process").hide();
            jQuery("#Sucess").show();
            jQuery("#announcementPage").val(true);
            jQuery("#successText").html(b + " : " + c + " modified successfully.");
            jQuery("#editedContentTitle").val(c)
        }
    })
}
function callAnnounceMentBoxyWithMsg(b, c, d) {
    var a = appNavObj.appBasePath + "/class/content.lc?operation=createClassAnnouncement&tempDate=" + new Date().getTime();
    Boxy.load(a, {
        unloadOnHide: true,
        afterShow: function() {
            jQuery("#process").hide();
            jQuery("#Sucess").show();
            jQuery("#announcementPage").val(true);
            jQuery("#successText").html(b + " : " + c + " " + d);
            jQuery("#contentShownOrHidden").val(c + " " + d)
        }
    })
}
function callAnnounceMentBoxyForDelete(a, d, e, c) {
    var b = appNavObj.appBasePath + "/class/content.lc?operation=createClassAnnouncement&tempDate=" + new Date().getTime() + "&forDelete=true&classId=" + d;
    if (e != "" && e != "undefined") {
        b += "&deletedContentType=" + e
    }
    if (c != "" && c != "undefined") {
        b += "&deletedContentTitle=" + c
    }
    Boxy.load(b, {
        unloadOnHide: true,
        afterShow: function() {
            jQuery("#announcementPage").val(true);
            jQuery("#process").hide();
            jQuery("#successText").html(titleStr + " deleted successfully.");
            if (a == "true") {
                var f = jQuery("#successText").html();
                f += "You will now need to make necessary changes to the gradebook.";
                jQuery("#successText").html(f)
            }
        }
    })
}
function showAllOrSelected() {
    jQuery(".link_showAll").click(function() {
        jQuery(this).toggleClass("showSelected");
        if (jQuery(this).hasClass("showSelected")) {
            jQuery(this).html("Show All");
            jQuery(this).attr("title", "Show All");
            jQuery("input[name='linkedtoContent']").each(function() {
                if (jQuery(this).prop("checked")) {
                    jQuery(this).parent().parent().show()
                } else {
                    jQuery(this).parent().parent().hide()
                }
            })
        } else {
            jQuery(this).html("Show Selected");
            jQuery(this).attr("title", "Show Selected");
            jQuery("input[name='linkedtoContent']").each(function() {
                jQuery(this).parent().parent().show()
            })
        }
    });
    var a = 0;
    jQuery("input[name='linkedtoContent']").each(function() {
        if (jQuery(this).prop("checked")) {
            jQuery(this).parent().parent().show();
            a++
        } else {
            jQuery(this).parent().parent().hide()
        }
    });
    if (a == 0) {
        jQuery("input[name='linkedtoContent']").each(function() {
            jQuery(this).parent().parent().show()
        });
        jQuery(".link_showAll").html("Show Selected");
        jQuery(".link_showAll").attr("title", "Show Selected")
    } else {
        jQuery(".link_showAll").html("Show All");
        jQuery(".link_showAll").addClass("showSelected");
        jQuery(".link_showAll").attr("title", "Show All")
    }
}
function roundNumber(a, b) {
    return Math.round(a * Math.pow(10, b)) / Math.pow(10, b)
}
function setMaxFractionDgits(a) {
    if (jQuery(a).val() == "") {
        jQuery(a).val("0");
        return
    }
    if (Number(jQuery(a).val()) < 0) {
        jQuery(a).val("0");
        return
    }
    if (isNaN(Number(jQuery(a).val()))) {
        jQuery(a).val("0")
    }
    jQuery(a).val(roundNumber(jQuery(a).val(), 2))
}
function checkForNumberOnly(c, b) {
    var d = jQuery(b).val();
    var a = jQuery(b).val().replace(/[^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$]/g, "");
    if (/^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(d) != true) {
        jQuery(b).val(a)
    }
}
function checkArrContains(a, c) {
    var b = a.length;
    while (b--) {
        if (a[b] == c) {
            return true
        }
    }
    return false
}
function showSelectedFileName(c, e) {
    var b = c.value;
    if (b) {
        var d = (b.indexOf("\\") >= 0 ? b.lastIndexOf("\\") : b.lastIndexOf("/"));
        var a = b.substring(d);
        if (a.indexOf("\\") === 0 || a.indexOf("/") === 0) {
            a = a.substring(1)
        }
        jQuery("#" + e).html(a)
    }
}
function rubricPointValidation() {
    var b = true;
    var a = jQuery("#rubricContentPoint").val();
    if (a == "") {
        b = false;
        Boxy.alert(i18n("rubric.givePoint"), null, {
            title: "Message"
        })
    }
    return b
}
function checkNullOrNegativeNumber(a, c) {
    var b = jQuery(a).val();
    if (b == "" || b == null) {
        if (c) {
            Boxy.alert(i18n("number.empty"), null, {
                title: "Message"
            });
            return true
        }
        return false
    }
    if (isNaN(b)) {
        Boxy.alert(i18n("number.format"), null, {
            title: "Message"
        });
        return true
    }
    if (parseFloat(b) < 0) {
        Boxy.alert(i18n("negative.points.msg"), null, {
            title: "Message"
        });
        return true
    }
    return false
}
function videoHelpPopup(h, d) {
    if (d == undefined) {
        d = ""
    }
    var c = screen.width * 0.8;
    var a = screen.height * 0.8;
    var g = (screen.width - c) / 2;
    var f = (screen.height - a) / 2;
    params = "width=" + c;
    params += ", height=" + a;
    params += ", top=" + f + ", left=" + g;
    params += ", directories=no";
    params += ", location=no";
    params += ", menubar=no";
    params += ", scrollbars=1";
    params += ", status=no";
    params += ", toolbar=no";
    if (d) {
        if (appNavObj.getCurrentRoleId() == 1) {
            h = 11
        } else {
            if (appNavObj.getCurrentRoleId() == 2) {
                h = 10
            } else {
                if (appNavObj.getCurrentRoleId() == 3) {
                    h = 1
                } else {
                    if (appNavObj.getCurrentRoleId() == 4) {
                        h = 4
                    } else {}
                }
            }
        }
    }
    var b = appNavObj.appBasePath + "/static/cbl_videoHelp.html?videoId=" + h + "&roleId=" + appNavObj.getCurrentRoleId() + "&all=" + d;
    var e = window.open(b, "Video Help", params);
    if (window.focus) {
        e.focus()
    }
    return false
}
function showOrHideSubmenuMoreLinks(a) {
    jQuery(a).closest(".lc_moreLink").toggleClass("active");
    jQuery(".lc_moreLinkOptionList").toggle()
}
function selectAllRepoContentCheckBox() {
    var a = jQuery("#checkAllRepoContent").is(":checked");
    jQuery("input[name='contentIds']").each(function() {
        if (a) {
            jQuery(this).prop("checked", true);
            jQuery(this).closest(".trans-element-checkbox").removeClass("unchecked").addClass("checked")
        } else {
            jQuery(this).prop("checked", false);
            jQuery(this).closest(".trans-element-checkbox").removeClass("checked").addClass("unchecked")
        }
    })
}
function checkBoxSelectUnSelect() {
    if (jQuery("input[name='contentIds']").length == jQuery("input[name='contentIds']:checked").length) {
        jQuery("#checkAllRepoContent").prop("checked", true);
        jQuery("#checkAllRepoContent").parent().removeClass("unchecked").addClass("checked")
    } else {
        jQuery("#checkAllRepoContent").prop("checked", false);
        jQuery("#checkAllRepoContent").parent().removeClass("checked").addClass("unchecked")
    }
}
function makeBoxyFullScreen() {
    var a = parseInt(jQuery(document).width()) - 20
      , b = parseInt(jQuery(window).height()) - 50;
    jQuery(".boxy-content:visible, .popCont:visible").css("width", a);
    jQuery(".popCont:visible").css("height", b);
    jQuery(".popContInner:visible,.popContPadding:visible").css({
        height: b - 125
    });
    jQuery(".boxy-wrapper:visible").addClass("customPopup").css({
        left: "5px",
        top: "10px",
        height: b
    });
    jQuery(".popContPadding:visible").css({
        overflow: "auto"
    });
    jQuery(".previewQuesN.popContPadding:visible").css({
        overflow: "hidden"
    });
    jQuery(".customPopup .buttonRow").addClass("fixedBottom")
}
function makeBoxyFullScreenWithParams(b, a) {
    jQuery(b).width(parseInt(jQuery(document).width() * 0.9));
    jQuery(a).height(parseInt(jQuery(window).height() * 0.85) - 120);
    jQuery(b).parents("table.boxy-wrapper").css({
        left: parseInt(jQuery(document).width() * 0.06),
        top: 30
    })
}
document.addEventListener("play", function(f) {
    var d = document.getElementsByTagName("audio");
    for (var c = 0, a = d.length; c < a; c++) {
        if (d[c] != f.target) {
            d[c].pause()
        }
    }
    var b = document.getElementsByTagName("video");
    for (var c = 0, a = b.length; c < a; c++) {
        if (b[c] != f.target) {
            b[c].pause()
        }
    }
}, true);
function validateGradeScale() {
    var k = 0;
    var d = 0;
    var h = "";
    var a = null;
    var c = true;
    var g = true;
    var b = 100;
    var l = 0;
    var e = false;
    jQuery("#gradeScaleBody").find("tr").each(function() {
        k = jQuery(this).find("td:nth-child(3)").find("input").val();
        d = jQuery(this).find("td:nth-child(4)").find("input").val();
        jQuery(this).find("td:nth-child(3)").find("input").removeClass("error");
        jQuery(this).find("td:nth-child(4)").find("input").removeClass("error");
        if (parseFloat(k) < 0) {
            jQuery(this).find("td:nth-child(3)").find("input").addClass("error")
        }
        if (parseFloat(d) <= 0 || parseFloat(d) > 100) {
            jQuery(this).find("td:nth-child(4)").find("input").addClass("error")
        }
        if (parseFloat(d) <= parseFloat(k)) {
            jQuery(this).find("td:nth-child(3)").find("input").addClass("error");
            jQuery(this).find("td:nth-child(4)").find("input").addClass("error");
            c = false
        }
        if (h != "" && (parseFloat(d) < (h - 0.01) || parseFloat(d) >= parseFloat(h))) {
            jQuery(this).find("td:nth-child(4)").find("input").addClass("error");
            jQuery(a).find("td:nth-child(3)").find("input").addClass("error");
            g = false
        }
        h = k;
        if (parseFloat(k) < b) {
            b = parseFloat(k)
        }
        if (parseFloat(d) > l) {
            l = parseFloat(d)
        }
        a = jQuery(this)
    });
    if ((b != 0 || l != 100) && jQuery("#letterGrade").is(":checked")) {
        e = true
    }
    if ((!jQuery("#gradeScaleBody").find('input[type="text"]').hasClass("error")) && e == false) {
        return true
    } else {
        var f = null;
        if (e == true) {
            f = jQuery("#letterGradeTableContainer").offset().top;
            jQuery(window).scrollTop(f);
            Boxy.alert("Please define entire gradescale range from 0% to 100%", null, {
                title: i18n("message")
            })
        }
        return false
    }
}
function addGradeScale(c) {
    var b = '<tr class="letterGrades" id="gradeScale_' + letterGradeValidBoxCount + '"><td class="column-1"><input type="checkbox" id="dellgChkBoxValid_' + letterGradeValidBoxCount + '" aria-label="Letter Grade" class="lcs_customFilterCheckbox" name="dellgChkBox" value="" onchange="javascript:selectLetterGrade(this,' + c + ');"><label for="dellgChkBoxValid_' + letterGradeValidBoxCount + '">&nbsp;</label></td><td class="column-3"><input type="text" id="letterGradeValid_' + letterGradeValidBoxCount + '" aria-label="Letter Grade" name="gradeLetter" maxlength="64" class="required"  value=""><input type="hidden" value="3" name="gradeOrAchievement"/></td><td class="column-4 textRight pl20"><input type="text" id="letterGradeValidMin_' + letterGradeValidBoxCount + '" class="textRight required number floatRight caption14" aria-label="Minimum Percentage" name= "minScale" value=""><label for="letterGradeValidMin_' + letterGradeValidBoxCount + '" generated="false" class="error ml10"></label></td><td class="column-4 textRight pl20"><input type="text" id="letterGradeValidMax_' + letterGradeValidBoxCount + '" class="textRight required number floatRight caption14" aria-label="Maximum Percentage" name = "maxScale" value=""></td><td class="column-1"><input type="hidden" value="" name="gradeScaleDetailIds"/><button class="lcs_btn rounded lcs_deleteRowBtn floatRight" aria-label="Delete Letter Grade" onclick="javascript:removeNewlyAddedGradeScale(this);" type="button"><i class="fa fa-minus"></i></button></td></tr>';
    jQuery("#gradeScaleBody").append(b);
    letterGradeValidBoxCount++;
    var a = jQuery("#gradeScaleBody").parent().parent();
    new PerfectScrollbar(a[0]);
    a.scrollTop(jQuery("#gradeScaleBody").height())
}
function removeNewlyAddedGradeScale(a) {
    if (jQuery("#gradeScaleBody").find("tr:visible").length > 1) {
        jQuery(a).closest("tr").remove()
    } else {
        Boxy.alert("Letter grade cannot be deleted as Letter Grade Scheme is mandatory. Minimum 1 letter grade record is required.", null, {
            title: i18n("message")
        })
    }
}
function removeGradeScale(c, a) {
    if (jQuery("#gradeScaleBody").find("tr:visible").length > 1) {
        jQuery("#gradeScale_" + c).closest("tr").remove();
        var b = '<input type="hidden" value="' + c + '" name="removedGradeScaleIds"/>';
        jQuery("#" + a).append(b)
    } else {
        Boxy.alert("Letter grade cannot be deleted as Letter Grade Scheme is mandatory. Minimum 1 letter grade record is required.", null, {
            title: i18n("message")
        })
    }
}
function resetGradebookGradeScaleContent(a) {
    jQuery("input[name=removedGradeScaleIds]").remove();
    jQuery("#gradeScaleBody").html(gradebookGradeScale);
    if (a) {
        jQuery("#delAlllgChkBox").parent().removeClass("checked").addClass("unchecked")
    }
    jQuery("#delAlllgChkBox").prop("checked", false);
    jQuery("#deleteLGId").hide()
}
function screenReaderAnnouncement(a) {
    if (jQuery("#speak-out-loud1").length) {
        jQuery("#speak-out-loud1").html(a)
    }
    if (jQuery("#speak-out-loud").length) {
        jQuery("#speak-out-loud").html(a)
    }
}
function sendGradeThisPopupToBack() {
    if (jQuery("#gradePopup").length > 0) {
        var a = jQuery("#gradePopup").parents(".boxy-wrapper");
        var b = parseInt(a.next(".boxy-modal-blackout").css("z-index")) + 1;
        a.attr({
            "data-style": a.attr("style")
        }).addClass("lcs_sendToBack");
        a[0].style.setProperty("z-index", b, "important")
    }
}
function bringGradeThisPopupToFront() {
    if (jQuery("#gradePopup").length > 0) {
        var a = jQuery("#gradePopup").parents(".boxy-wrapper");
        a.attr({
            style: a.attr("data-style")
        }).removeClass("lcs_sendToBack")
    }
}
function generateStartAndEndDate(c) {
    var b;
    var a;
    if ((c % 7) > 0) {
        b = i18n("w") + parseInt((c / 7) + 1);
        a = i18n("d") + parseInt(c % 7)
    } else {
        b = i18n("w") + parseInt(c / 7);
        a = i18n("d") + "7"
    }
    return b + a
}
function errorShowOrHide(a, c, b, d) {
    if (d) {
        jQuery("#" + a).addClass("error");
        jQuery("#" + c).html(b);
        jQuery("#" + c).show()
    } else {
        jQuery("#" + a).removeClass("error");
        jQuery("#" + c).html(b);
        jQuery("#" + c).hide()
    }
}
function copyContentTitleToDisplayName(b, a) {
    if (jQuery("#displayNameChanged").val() == "false") {
        jQuery("#" + a).val(jQuery("#" + b).val())
    }
}
function changeDisplayName(b, a) {
    if (jQuery("#" + b).val() != jQuery("#" + a).val()) {
        jQuery("#displayNameChanged").val("true")
    } else {
        jQuery("#displayNameChanged").val("false")
    }
}
function checkLetterGradeFields() {
    if (jQuery("#gradeScaleBody").find('input[type="text"]').hasClass("error")) {
        if (!jQuery("#displayOptionsDiv .captionsubhead").hasClass("active")) {
            jQuery("#displayOptionsDiv .captionsubhead").click()
        }
        jQuery("html, body").animate({
            scrollTop: jQuery(".letterGradeTableContainer").position().top
        }, 200)
    }
}
function checkLetterGradeCheckbox() {
    if (jQuery("#letterGrade").is(":unchecked")) {
        resetGradebookGradeScaleContent()
    }
}
function selectLetterGrade(b, c) {
    if (jQuery(b).is(":checked")) {
        jQuery("#deleteLGId").show()
    } else {
        if (jQuery("input[name='dellgChkBox']:checked").length == 0) {
            jQuery("#deleteLGId").hide()
        }
    }
    var a = (jQuery("input[name='dellgChkBox']").length == jQuery("input[name='dellgChkBox']:checked").length);
    jQuery("#delAlllgChkBox").prop("checked", a);
    if (c) {
        jQuery("#delAlllgChkBox").parent().removeClass(a ? "unchecked" : "checked").addClass(a ? "checked" : "unchecked")
    }
}
function selectAllLG(a) {
    var b = jQuery("#delAlllgChkBox").is(":checked");
    jQuery("input[name='dellgChkBox']").each(function() {
        jQuery(this).prop("checked", b);
        if (a) {
            jQuery(this).removeClass(b ? "unchecked" : "checked").addClass(b ? "checked" : "unchecked")
        }
    });
    if (jQuery("#delAlllgChkBox").length > 0 && b) {
        jQuery("#deleteLGId").show()
    } else {
        jQuery("#deleteLGId").hide()
    }
}
function deleteSelectedGradeScales(a) {
    jQuery("input[name='dellgChkBox']").each(function() {
        var b = jQuery(this).val();
        if (jQuery(this).prop("checked")) {
            b != "" ? removeGradeScale(b, a) : removeNewlyAddedGradeScale(this)
        }
    })
}
function checkGroupAssignFields() {
    if (!jQuery("#detailsDiv .captionsubhead").hasClass("active")) {
        jQuery("#detailsDiv .captionsubhead").click()
    }
    jQuery("html, body").animate({
        scrollTop: jQuery("#grpMembersLabel").position().top
    }, 200)
}
var fullCalendarElemHeight = 0;
function setHoverFunction() {
    jQuery("span.calendar").hover(function() {
        var b = jQuery("#calendar").height();
        var d = jQuery("#calendar").offset().top;
        if (jQuery(this).attr("class") == "fc-event-title calendar timeslot") {
            b = jQuery("#timeSlotbox").height();
            d = jQuery("#timeSlotbox").offset().top;
            if (b == 0) {
                b = fullCalendarElemHeight
            }
            fullCalendarElemHeight = b
        }
        var f = d - jQuery(window).scrollTop();
        var a = -5;
        if (f < 0) {
            f = 0
        }
        var c = jQuery(this).offset().top - jQuery(window).scrollTop() - f + a;
        var e = jQuery(this).offset().left - jQuery(window).scrollLeft();
        var g = 450;
        var h = 180;
        jQuery(this).find("div.toolTipBox").removeClass("toolTipBox1");
        jQuery(this).find("div.toolTipBox").removeClass("toolTipBox2");
        jQuery(this).find("div.toolTipBox").removeClass("toolTipBox3");
        jQuery(this).find("div.toolTipBox").removeClass("toolTipBox4");
        jQuery(this).find("div.toolTipBox").removeClass("toolTipBox6");
        jQuery(this).find("div.toolTipBox").removeClass("toolTipBox7");
        if (d + b - jQuery(this).offset().top < h) {
            if (jQuery(this).offset().left > 290) {
                jQuery(this).find("div.toolTipBox").addClass("toolTipBox8");
                if (jQuery(this).offset().top > 200) {
                    jQuery(this).find("div.toolTipBox").removeClass("toolTipBox6");
                    jQuery(this).find("div.toolTipBox").addClass("toolTipBox9")
                }
            } else {
                jQuery(this).find("div.toolTipBox").addClass("toolTipBox7");
                if (jQuery(this).offset().top > 380) {
                    jQuery(this).find("div.toolTipBox").removeClass("toolTipBox7");
                    jQuery(this).find("div.toolTipBox").addClass("toolTipBox4")
                }
            }
        } else {
            if (c > h && e < g) {
                jQuery(this).find("div.toolTipBox").addClass("toolTipBox4")
            } else {
                if (c > h && e > g) {
                    jQuery(this).find("div.toolTipBox").addClass("toolTipBox3")
                } else {
                    if (c < h && e < g) {
                        jQuery(this).find("div.toolTipBox").addClass("toolTipBox1")
                    } else {
                        if (c < h && e > g) {
                            jQuery(this).find("div.toolTipBox").addClass("toolTipBox2")
                        }
                    }
                }
            }
        }
        jQuery(this).find("div.toolTipBox").show()
    }, function() {
        jQuery(this).find("div.toolTipBox").hide()
    });
    jQuery(".fc-event").hover(function() {
        var a = jQuery(this).find(".showToolTip.withoutLink").attr("rolloverBgColor");
        jQuery(this).closest(".fc-event.fc-event-skin").css({
            "background-color": a,
            "border-color": a
        })
    }, function() {
        var a = jQuery(this).find(".showToolTip.withoutLink").attr("normalBgColor");
        jQuery(this).closest(".fc-event.fc-event-skin").css({
            "background-color": a,
            "border-color": a
        })
    })
}
function setHolidayFunction(e, c) {
    var b = false;
    if (jQuery(".fc-month-view").is(":visible")) {
        b = true;
        jQuery(".fc-view-month").find("td").each(function() {
            var k = new Date(jQuery(this).attr("data-date"));
            if (k.getTime() >= e.getTime() && k.getTime() <= c.getTime()) {
                jQuery(this).addClass("holidayBackColor")
            }
        })
    }
    if (!b) {
        var a = 0;
        var g = e.unix();
        var h = c.unix();
        var f = 0;
        var d = 0;
        jQuery("td.ui-widget-content").each(function() {
            var k = new Date(jQuery(this).attr("data-date"));
            if (k.getTime() >= e.getTime() && k.getTime() <= c.getTime()) {
                jQuery(this).addClass("holidayBackColor")
            }
        })
    }
}
function closeSnackbar(a) {
    jQuery(a).closest(".lc_snackbar").removeClass("showSnackbar")
}
;var popupStatus = 0;
function loadPopup() {
    if (popupStatus == 0) {
        jQuery("#popupBg").css({
            opacity: "0.5"
        });
        jQuery("#popupBg").fadeIn("slow");
        jQuery("#popup").fadeIn("fast");
        popupStatus = 1
    }
}
function loadPopup2() {
    if (popupStatus == 0) {
        jQuery("#popupBg2").css({
            opacity: "0.5"
        });
        jQuery("#popupBg2").fadeIn("slow");
        jQuery("#popup2").fadeIn("fast");
        popupStatus = 1
    }
}
function loadPopup3() {
    if (popupStatus == 0) {
        jQuery("#popupBg3").css({
            opacity: "0.5"
        });
        jQuery("#popupBg3").fadeIn("slow");
        jQuery("#popup3").fadeIn("fast");
        popupStatus = 1
    }
}
function disablePopup() {
    if (popupStatus == 1) {
        jQuery("#popupBg").fadeOut("slow");
        jQuery("#popup").fadeOut("fast");
        jQuery("#popup").css("visibility", "hidden");
        popupStatus = 0
    }
}
function disablePopupCal() {
    if (popupStatus == 1) {
        jQuery("#popupBg").fadeOut("slow");
        jQuery("#popup").fadeOut("fast");
        popupStatus = 0;
        jQuery(".error").html("");
        jQuery(".required").removeClass("error");
        jQuery("#endDates").html("")
    }
}
function disablePopup2() {
    if (popupStatus == 1) {
        jQuery("#popupBg2").fadeOut("slow");
        jQuery("#popup2").fadeOut("fast");
        popupStatus = 0
    }
}
function disablePopup3() {
    if (popupStatus == 1) {
        jQuery("#popupBg3").fadeOut("slow");
        jQuery("#popup3").fadeOut("fast");
        popupStatus = 0
    }
}
function centerPopup() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup").height();
    var b = jQuery("#popup").width();
    jQuery("#popup").css({
        position: "absolute",
        visibility: "visible",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg").css({
        height: d
    })
}
function centerPopup2() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup2").height();
    var b = jQuery("#popup2").width();
    jQuery("#popup2").css({
        position: "absolute",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg2").css({
        height: d
    })
}
function centerPopup3() {
    var a = document.documentElement.clientWidth;
    var d = document.documentElement.clientHeight;
    var c = jQuery("#popup3").height();
    var b = jQuery("#popup3").width();
    jQuery("#popup3").css({
        position: "absolute",
        top: 50,
        left: a / 2 - b / 2
    });
    jQuery("#popupBg3").css({
        height: d
    })
}
jQuery(document).ready(function() {
    jQuery(".popupLink111").click(function() {
        centerPopup();
        loadPopup()
    });
    jQuery(".popupLink2111").click(function() {
        centerPopup2();
        loadPopup2()
    });
    jQuery(".popupLink3111").click(function() {
        centerPopup3();
        loadPopup3()
    });
    jQuery("#popupClose").click(function() {
        disablePopup()
    });
    jQuery("#popupClose2").click(function() {
        disablePopup2()
    });
    jQuery("#popupClose3").click(function() {
        disablePopup3()
    })
});
/*!
 * Boxy 0.1.4 - Facebook-style dialog, with frills
 *
 * (c) 2008 Jason Frame
 * Licensed under the MIT License (LICENSE)
 */
var previousUrl = null
  , snackCounter = 0;
var canAccessParent = false;
if (parent) {
    try {
        parent.lcsIFrameObj;
        canAccessParent = true
    } catch (exception) {
        console.log("cannot access parent")
    }
}
jQuery.fn.boxy = function(a) {
    a = a || {};
    return this.each(function() {
        var c = this.nodeName.toLowerCase()
          , b = this;
        if (c == "a") {
            jQuery(this).click(function() {
                var h = Boxy.linkedTo(this)
                  , e = this.getAttribute("href")
                  , g = jQuery.extend({
                    actuator: this,
                    title: this.title
                }, a);
                if (h) {
                    h.show()
                } else {
                    if (e.indexOf("#") >= 0) {
                        var f = jQuery(e.substr(e.indexOf("#")))
                          , d = f.clone(true);
                        f.remove();
                        g.unloadOnHide = false;
                        new Boxy(d,g)
                    } else {
                        if (!g.cache) {
                            g.unloadOnHide = true
                        }
                        Boxy.load(this.href, g)
                    }
                }
                return false
            })
        } else {
            if (c == "form") {
                jQuery(this).bind("submit.boxy", function() {
                    Boxy.confirm(a.message || "Please confirm:", function() {
                        jQuery(b).unbind("submit.boxy").submit()
                    });
                    return false
                })
            }
        }
    })
}
;
function Boxy(b, a) {
    appNavObj.setPopupOpen(true);
    appNavObj.setActivePopUpElement(b);
    this.boxy = jQuery(Boxy.WRAPPER);
    jQuery.data(this.boxy[0], "boxy", this);
    this.visible = false;
    this.options = jQuery.extend({}, Boxy.DEFAULTS, a || {});
    if (this.options.modal) {
        this.options = jQuery.extend(this.options, {
            center: true,
            draggable: false
        })
    }
    if (this.options.actuator) {
        jQuery.data(this.options.actuator, "active.boxy", this)
    }
    this.setContent(b || "<div></div>");
    this._setupTitleBar();
    this.boxy.css("display", "none").appendTo(document.body);
    this.toTop();
    if (this.options.fixed) {
        this.boxy.addClass("fixed")
    }
    if (this.options.center && Boxy._u(this.options.x, this.options.y)) {
        this.center()
    } else {
        this.moveTo(Boxy._u(this.options.x) ? this.options.x : Boxy.DEFAULT_X, Boxy._u(this.options.y) ? this.options.y : Boxy.DEFAULT_Y)
    }
    if (this.options.show) {
        this.show()
    }
}
Boxy.EF = function() {}
;
jQuery.extend(Boxy, {
    WRAPPER: "<table role='presentation' cellspacing='0' cellpadding='0' border='0' class='boxy-wrapper'><tr><td class='top-left'></td><td class='boxy-inner'></td><td class='top-right'></td></tr><tr><td class='bottom-left'></td><td class='bottom'></td><td class='bottom-right'></td></tr></table>",
    DEFAULTS: {
        title: null,
        closeable: true,
        draggable: true,
        clone: false,
        actuator: null,
        center: true,
        show: true,
        modal: true,
        fixed: true,
        closeText: "",
        unloadOnHide: false,
        clickToFront: false,
        behaviours: Boxy.EF,
        afterDrop: Boxy.EF,
        afterShow: Boxy.EF,
        afterHide: Boxy.EF,
        beforeUnload: Boxy.EF
    },
    DEFAULT_X: 50,
    DEFAULT_Y: 50,
    zIndex: 99337,
    dragConfigured: false,
    resizeConfigured: false,
    dragging: null,
    load: function(b, a) {
        appNavObj.setServerSideBoxy(true);
        if (previousUrl == b) {
            return
        }
        previousUrl = b;
        a = a || {};
        var c = {
            url: b,
            type: "GET",
            dataType: "html",
            cache: false,
            success: function(d) {
                d = jQuery(d);
                if (a.filter) {
                    d = jQuery(a.filter, d)
                }
                new Boxy(d,a)
            }
        };
        jQuery.each(["type", "cache"], function() {
            if (this in a) {
                c[this] = a[this];
                delete a[this]
            }
        });
        jQuery.ajax(c)
    },
    get: function(a) {
        var b = jQuery(a).parents(".boxy-wrapper");
        return b.length ? jQuery.data(b[0], "boxy") : null
    },
    linkedTo: function(a) {
        return jQuery.data(a, "active.boxy")
    },
    alert: function(d, g, c, f, a, b, e) {
        f = f || false;
        b = b || "";
        a = a || "";
        e = e || 4000;
        if (!f) {
            return Boxy.ask(d, ["OK"], g, c)
        } else {
            snackCounter++;
            alertMsg = '<div id="snackbar-' + snackCounter + '" class="lc_snackbar ' + b + ' boxy-content"><i class="fa ' + a + '"></i> <span class="lc_snackbarMsg">' + d + '</span><a href="javascript:void(0)" onclick="javascript:closeSnackbar(this);" title="Close"><i class="fa fa-times floatRight mt1"></i></a></div>';
            if (g) {
                g()
            }
            jQuery("#snackbarContainer").prepend(alertMsg);
            jQuery("#speak-out-loud1").html(d);
            jQuery("#snackbar-" + snackCounter).addClass("showSnackbar");
            setTimeout(function() {
                jQuery("#snackbarContainer .lc_snackbar:last").removeClass("showSnackbar").remove()
            }, e)
        }
    },
    confirm: function(b, c, a) {
        return Boxy.ask(b, ["OK", "Cancel"], function(d) {
            if (d == "OK") {
                c()
            }
        }, a)
    },
    ask: function(c, f, j, l) {
        appNavObj.setServerSideBoxy(false);
        l = jQuery.extend({
            modal: true,
            closeable: false
        }, l || {}, {
            show: true,
            unloadOnHide: true
        });
        var e = jQuery("<div></div>").append(jQuery('<div class="question" role="alert" aria-live="assertive" tabindex="0"></div>').html(c));
        jQuery("#speak-out-loud1").html(c);
        var a = {}
          , h = [];
        if (f instanceof Array) {
            for (var d = 0; d < f.length; d++) {
                a[f[d]] = f[d];
                h.push(f[d])
            }
        } else {
            for (var b in f) {
                a[f[b]] = b;
                h.push(f[b])
            }
        }
        var g = jQuery('<form class="answers"></form>');
        g.html(jQuery.map(h, function(i) {
            return "<input type='button' value='" + i + "' />"
        }).join(" "));
        jQuery("input[type=button]", g).click(function() {
            var i = this;
            Boxy.get(this).hide(function() {
                if (j) {
                    j(a[i.value])
                }
            })
        });
        e.append(g);
        new Boxy(e,l)
    },
    isModalVisible: function() {
        return jQuery(".boxy-modal-blackout").length > 0
    },
    _u: function() {
        for (var a = 0; a < arguments.length; a++) {
            if (typeof arguments[a] != "undefined") {
                return false
            }
        }
        return true
    },
    _handleResize: function(a) {
        var b = jQuery(document);
        jQuery(".boxy-modal-blackout").css("display", "none").css({
            width: b.width(),
            height: b.height()
        }).css("display", "block")
    },
    _handleDrag: function(a) {
        var b;
        if (b = Boxy.dragging) {
            b[0].boxy.css({
                left: a.pageX - b[1],
                top: a.pageY - b[2]
            })
        }
    },
    _nextZ: function() {
        return Boxy.zIndex++
    },
    _viewport: function() {
        var e = document.documentElement
          , a = document.body
          , c = window;
        return jQuery.extend({
            left: c.pageXOffset,
            top: c.pageYOffset
        }, !Boxy._u(c.innerWidth) ? {
            width: c.innerWidth,
            height: c.innerHeight
        } : (!Boxy._u(e) && !Boxy._u(e.clientWidth) && e.clientWidth != 0 ? {
            width: e.clientWidth,
            height: e.clientHeight
        } : {
            width: a.clientWidth,
            height: a.clientHeight
        }))
    }
});
Boxy.prototype = {
    estimateSize: function() {
        this.boxy.css({
            visibility: "hidden",
            display: "block"
        });
        var a = this.getSize();
        this.boxy.css("display", "none").css("visibility", "visible");
        return a
    },
    getSize: function() {
        return [this.boxy.width(), this.boxy.height()]
    },
    getContentSize: function() {
        var a = this.getContent();
        return [a.width(), a.height()]
    },
    getPosition: function() {
        var a = this.boxy[0];
        return [a.offsetLeft, a.offsetTop]
    },
    getCenter: function() {
        var b = this.getPosition();
        var a = this.getSize();
        return [Math.floor(b[0] + a[0] / 2), Math.floor(b[1] + a[1] / 2)]
    },
    getInner: function() {
        return jQuery(".boxy-inner", this.boxy)
    },
    getContent: function() {
        return jQuery(".boxy-content", this.boxy)
    },
    setContent: function(a) {
        a = jQuery(a).addClass("boxy-content");
        if (this.options.clone) {
            a = a.clone(true)
        }
        this.getContent().remove();
        this.getInner().append(a);
        this._setupDefaultBehaviours(a);
        this.options.behaviours.call(this, a);
        return this
    },
    moveTo: function(a, b) {
        this.moveToX(a).moveToY(b);
        return this
    },
    moveToX: function(a) {
        if (typeof a == "number") {
            this.boxy.css({
                left: a
            })
        } else {
            this.centerX()
        }
        return this
    },
    moveToY: function(a) {
        if (typeof a == "number") {
            this.boxy.css({
                top: a
            })
        } else {
            this.centerY()
        }
        return this
    },
    centerAt: function(a, c) {
        var b = this[this.visible ? "getSize" : "estimateSize"]();
        if (typeof a == "number") {
            this.moveToX(a - b[0] / 2)
        }
        if (typeof c == "number") {
            this.moveToY(c - b[1] / 2)
        }
        return this
    },
    centerAtX: function(a) {
        return this.centerAt(a, null)
    },
    centerAtY: function(a) {
        return this.centerAt(null, a)
    },
    center: function(b) {
        var a = Boxy._viewport();
        var c = this.options.fixed ? [0, 0] : [a.left, a.top];
        if (!b || b == "x") {
            this.centerAt(c[0] + a.width / 2, null)
        }
        if (!b || b == "y") {
            this.centerAt(null, c[1] + a.height / 2)
        }
        return this
    },
    centerX: function() {
        return this.center("x")
    },
    centerY: function() {
        return this.center("y")
    },
    resize: function(b, a, d) {
        if (!this.visible) {
            return
        }
        var c = this._getBoundsForResize(b, a);
        this.boxy.css({
            left: c[0],
            top: c[1]
        });
        this.getContent().css({
            width: c[2],
            height: c[3]
        });
        if (d) {
            d(this)
        }
        return this
    },
    tween: function(c, a, e) {
        if (!this.visible) {
            return
        }
        var d = this._getBoundsForResize(c, a);
        var b = this;
        this.boxy.stop().animate({
            left: d[0],
            top: d[1]
        });
        this.getContent().stop().animate({
            width: d[2],
            height: d[3]
        }, function() {
            if (e) {
                e(b)
            }
        });
        return this
    },
    isVisible: function() {
        return this.visible
    },
    show: function() {
        if (this.visible) {
            return
        }
        if (this.options.modal) {
            var d = this;
            if (!Boxy.resizeConfigured) {
                Boxy.resizeConfigured = true;
                jQuery(window).resize(function() {
                    Boxy._handleResize()
                })
            }
            this.modalBlackout = jQuery('<div class="boxy-modal-blackout"></div>').css({
                zIndex: Boxy._nextZ(),
                opacity: 0.4,
                width: jQuery(document).width(),
                height: jQuery(document).height()
            }).appendTo(document.body);
            this.toTop();
            if (this.options.closeable) {
                jQuery(document.body).bind("keypress.boxy", function(h) {
                    var i = h.which || h.keyCode;
                    if (i == 27) {
                        d.hide();
                        jQuery(document.body).unbind("keypress.boxy")
                    }
                })
            }
        }
        if (parent && canAccessParent && parent.lcsIFrameObj) {
            this.moveToY(20);
            parent.lcsIFrameObj.cancelTimer();
            parent.lcsIFrameObj.incrementOpenBoxyCount();
            if (parent.lcsIFrameObj.getHeight() < (this.boxy.height() + 40)) {
                parent.lcsIFrameObj.setIframeHeight(this.boxy.height() + 40)
            }
        }
        this.boxy.show();
        this.visible = true;
        this._fire("afterShow");
        var g = jQuery(this.boxy).find("input:visible,a").last();
        var a = jQuery(this.boxy).find("h1");
        var c = jQuery(this.boxy).find("input:visible").length;
        var b = jQuery(this.boxy).find(".close").first();
        var e = b.parent();
        e.attr({
            tabindex: 0,
            role: "columnheader"
        });
        if (jQuery(this.boxy).find(".close").length > 1) {
            b.attr("aria-hidden", "true")
        }
        e.keydown(function(h) {
            if (h.which == 9 && h.shiftKey && jQuery(h.target).prop("tagName") != "A") {
                h.preventDefault()
            }
        });
        g.keydown(function(h) {
            if (h.which == 9 && !h.shiftKey) {
                h.preventDefault();
                e.focus()
            }
        });
        if (c <= 1) {
            setTimeout(function() {
                a.focus()
            }, 10)
        }
        var f = jQuery(this.boxy).find("input:visible,select:visible,textarea:visible").first();
        if (jQuery(this.boxy).find("#lcs_rubricsPopupFlex").length > 0) {
            jQuery(this.boxy).find("#lcs_rubricsPopupFlex>h1").attr({
                tabindex: 0
            }).focus()
        } else {
            if (f) {
                f.focus()
            } else {
                jQuery(".boxy-inner .title-bar").attr({
                    tabindex: 0
                }).focus()
            }
        }
        jQuery(".boxy-modal-blackout").css("height", jQuery(document).height());
        return this
    },
    hide: function(c) {
        if (!this.visible) {
            return
        }
        try {
            tinyMCE.execCommand("mceCleanup")
        } catch (b) {}
        previousUrl = null;
        var a = this;
        if (this.options.modal) {
            jQuery(document.body).unbind("keypress.boxy");
            this.modalBlackout.animate({
                opacity: 0
            }, function() {
                jQuery(this).remove()
            })
        }
        this.boxy.stop().animate({
            opacity: 0
        }, 300, function() {
            a.boxy.css({
                display: "none"
            });
            a.visible = false;
            if (parent && canAccessParent && parent.lcsIFrameObj) {
                parent.lcsIFrameObj.decrementOpenBoxyCount();
                if (parent.lcsIFrameObj.getOpenBoxyCount() == 0) {
                    parent.lcsIFrameObj.setUpdateFrequency(200)
                }
            }
            a._fire("afterHide");
            if (c) {
                c(a)
            }
            if (a.options.unloadOnHide) {
                a.unload()
            }
        });
        if (jQuery("#tooltip").length > 0) {
            jQuery("#tooltip").remove()
        }
        return this
    },
    toggle: function() {
        this[this.visible ? "hide" : "show"]();
        return this
    },
    hideAndUnload: function(a) {
        this.options.unloadOnHide = true;
        this.hide(a);
        return this
    },
    unload: function() {
        appNavObj.setPopupOpen(false);
        appNavObj.setActivePopUpElement(null);
        appNavObj.setServerSideBoxy(false);
        this._fire("beforeUnload");
        this.boxy.remove();
        if (this.options.actuator) {
            jQuery.data(this.options.actuator, "active.boxy", false)
        }
    },
    toTop: function() {
        this.boxy.css({
            zIndex: Boxy._nextZ()
        });
        return this
    },
    getTitle: function() {
        return jQuery("> .title-bar h2", this.getInner()).html()
    },
    setTitle: function(a) {
        jQuery("> .title-bar h2", this.getInner()).html(a);
        return this
    },
    _getBoundsForResize: function(c, a) {
        var b = this.getContentSize();
        var e = [c - b[0], a - b[1]];
        var d = this.getPosition();
        return [Math.max(d[0] - e[0] / 2, 0), Math.max(d[1] - e[1] / 2, 0), c, a]
    },
    _setupTitleBar: function() {
        if (this.options.title) {
            var b = this;
            var a = jQuery("<div class='title-bar'></div>").html("<h2>" + this.options.title + "</h2>");
            if (this.options.closeable) {
                a.append(jQuery("<a href='#' class='close'></a>").html(this.options.closeText))
            }
            if (this.options.draggable) {
                a[0].onselectstart = function() {
                    return false
                }
                ;
                a[0].unselectable = "on";
                a[0].style.MozUserSelect = "none";
                if (!Boxy.dragConfigured) {
                    jQuery(document).mousemove(Boxy._handleDrag);
                    Boxy.dragConfigured = true
                }
                a.mousedown(function(c) {
                    b.toTop();
                    Boxy.dragging = [b, c.pageX - b.boxy[0].offsetLeft, c.pageY - b.boxy[0].offsetTop];
                    jQuery(this).addClass("dragging")
                }).mouseup(function() {
                    jQuery(this).removeClass("dragging");
                    Boxy.dragging = null;
                    b._fire("afterDrop")
                })
            }
            this.getInner().prepend(a);
            this._setupDefaultBehaviours(a)
        }
    },
    _setupDefaultBehaviours: function(a) {
        var b = this;
        if (this.options.clickToFront) {
            a.click(function() {
                b.toTop()
            })
        }
        jQuery(".close", a).click(function() {
            b.hide();
            return false
        }).mousedown(function(c) {
            c.stopPropagation()
        })
    },
    _fire: function(a) {
        this.options[a].call(this)
    }
};
Date.dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
Date.abbrDayNames = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
Date.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
Date.abbrMonthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
Date.firstDayOfWeek = 1;
Date.format = "mm/dd/yyyy";
Date.fullYearStart = "20";
(function() {
    function b(c, d) {
        if (!Date.prototype[c]) {
            Date.prototype[c] = d
        }
    }
    b("isLeapYear", function() {
        var c = this.getFullYear();
        return (c % 4 == 0 && c % 100 != 0) || c % 400 == 0
    });
    b("isWeekend", function() {
        return this.getDay() == 0 || this.getDay() == 6
    });
    b("isWeekDay", function() {
        return !this.isWeekend()
    });
    b("getDaysInMonth", function() {
        return [31, (this.isLeapYear() ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][this.getMonth()]
    });
    b("getDayName", function(c) {
        return c ? Date.abbrDayNames[this.getDay()] : Date.dayNames[this.getDay()]
    });
    b("getMonthName", function(c) {
        return c ? Date.abbrMonthNames[this.getMonth()] : Date.monthNames[this.getMonth()]
    });
    b("getDayOfYear", function() {
        var c = new Date("1/1/" + this.getFullYear());
        return Math.floor((this.getTime() - c.getTime()) / 86400000)
    });
    b("getWeekOfYear", function() {
        return Math.ceil(this.getDayOfYear() / 7)
    });
    b("setDayOfYear", function(c) {
        this.setMonth(0);
        this.setDate(c);
        return this
    });
    b("addYears", function(c) {
        this.setFullYear(this.getFullYear() + c);
        return this
    });
    b("addMonths", function(d) {
        var c = this.getDate();
        this.setMonth(this.getMonth() + d);
        if (c > this.getDate()) {
            this.addDays(-this.getDate())
        }
        return this
    });
    b("addDays", function(c) {
        this.setTime(this.getTime() + (c * 86400000));
        return this
    });
    b("addHours", function(c) {
        this.setHours(this.getHours() + c);
        return this
    });
    b("addMinutes", function(c) {
        this.setMinutes(this.getMinutes() + c);
        return this
    });
    b("addSeconds", function(c) {
        this.setSeconds(this.getSeconds() + c);
        return this
    });
    b("zeroTime", function() {
        this.setMilliseconds(0);
        this.setSeconds(0);
        this.setMinutes(0);
        this.setHours(0);
        return this
    });
    b("asString", function(d) {
        var c = d || Date.format;
        if (c.split("mm").length > 1) {
            c = c.split("mmmm").join(this.getMonthName(false)).split("mmm").join(this.getMonthName(true)).split("mm").join(a(this.getMonth() + 1))
        } else {
            c = c.split("m").join(this.getMonth() + 1)
        }
        c = c.split("yyyy").join(this.getFullYear()).split("yy").join((this.getFullYear() + "").substring(2)).split("dd").join(a(this.getDate())).split("d").join(this.getDate());
        return c
    });
    Date.fromString = function(w) {
        var o = Date.format;
        var q = new Date("01/01/1970");
        if (w == "") {
            return q
        }
        w = w.toLowerCase();
        var n = "";
        var e = [];
        var c = /(dd?d?|mm?m?|yy?yy?)+([^(m|d|y)])?/g;
        var l;
        while ((l = c.exec(o)) != null) {
            switch (l[1]) {
            case "d":
            case "dd":
            case "m":
            case "mm":
            case "yy":
            case "yyyy":
                n += "(\\d+\\d?\\d?\\d?)+";
                e.push(l[1].substr(0, 1));
                break;
            case "mmm":
                n += "([a-z]{3})";
                e.push("M");
                break
            }
            if (l[2]) {
                n += l[2]
            }
        }
        var m = new RegExp(n);
        var v = w.match(m);
        var t, u, k;
        for (var h = 0; h < e.length; h++) {
            var p = v[h + 1];
            switch (e[h]) {
            case "d":
                k = p;
                break;
            case "m":
                u = Number(p) - 1;
                break;
            case "M":
                for (var g = 0; g < Date.abbrMonthNames.length; g++) {
                    if (Date.abbrMonthNames[g].toLowerCase() == p) {
                        break
                    }
                }
                u = g;
                break;
            case "y":
                t = p;
                break
            }
        }
        if (t) {
            q.setYear(t)
        }
        if (u) {
            q.setMonth(u)
        }
        if (k) {
            q.setDate(k)
        }
        return q
    }
    ;
    var a = function(c) {
        var d = "0" + c;
        return d.substring(d.length - 2)
    }
}
)();
(function(d) {
    d.fn.extend({
        renderCalendar: function(t) {
            var C = function(i) {
                return document.createElement(i)
            };
            t = d.extend({}, d.fn.datePicker.defaults, t);
            if (t.showHeader != d.dpConst.SHOW_HEADER_NONE) {
                var o = d(C("tr"));
                for (var x = Date.firstDayOfWeek; x < Date.firstDayOfWeek + 7; x++) {
                    var h = x % 7;
                    var v = Date.dayNames[h];
                    o.append(jQuery(C("th")).attr({
                        scope: "col",
                        abbr: v,
                        title: v,
                        "class": (h == 0 || h == 6 ? "weekend" : "weekday")
                    }).html(t.showHeader == d.dpConst.SHOW_HEADER_SHORT ? v.substr(0, 2) : v))
                }
            }
            var e = d(C("table")).attr({
                cellspacing: 2
            }).addClass("jCalendar").append((t.showHeader != d.dpConst.SHOW_HEADER_NONE ? d(C("thead")).append(o) : C("thead")));
            var f = d(C("tbody"));
            var z = (new Date()).zeroTime();
            z.setHours(12);
            var B = t.month == undefined ? z.getMonth() : t.month;
            var p = t.year || z.getFullYear();
            var m = (new Date(p,B,1,12,0,0));
            var l = Date.firstDayOfWeek - m.getDay() + 1;
            if (l > 1) {
                l -= 7
            }
            var q = Math.ceil(((-1 * l + 1) + m.getDaysInMonth()) / 7);
            m.addDays(l - 1);
            var A = function(i) {
                return function() {
                    if (t.hoverClass) {
                        var r = d(this);
                        if (!t.selectWeek) {
                            r.addClass(t.hoverClass)
                        } else {
                            if (i && !r.is(".disabled")) {
                                r.parent().addClass("activeWeekHover")
                            }
                        }
                    }
                }
            };
            var g = function() {
                if (t.hoverClass) {
                    var i = d(this);
                    i.removeClass(t.hoverClass);
                    i.parent().removeClass("activeWeekHover")
                }
            };
            var n = 0;
            while (n++ < q) {
                var u = jQuery(C("tr"));
                var k = t.dpController ? m > t.dpController.startDate : false;
                for (var x = 0; x < 7; x++) {
                    var j = m.getMonth() == B;
                    var y = d(C("td")).text(m.getDate() + "").addClass((j ? "current-month " : "other-month ") + (m.isWeekend() ? "weekend " : "weekday ") + (j && m.getTime() == z.getTime() ? "today " : "")).data("datePickerDate", m.asString()).hover(A(k), g);
                    d(y).wrapInner("<a href='javascript: void(0)' title='Date : " + m.getDate() + "'></a>");
                    u.append(y);
                    if (t.renderCallback) {
                        t.renderCallback(y, m, B, p)
                    }
                    m = new Date(m.getFullYear(),m.getMonth(),m.getDate() + 1,12,0,0)
                }
                f.append(u)
            }
            e.append(f);
            return this.each(function() {
                d(this).empty().append(e)
            })
        },
        datePicker: function(e) {
            if (!d.event._dpCache) {
                d.event._dpCache = []
            }
            e = d.extend({}, d.fn.datePicker.defaults, e);
            return this.each(function() {
                var g = d(this);
                var i = true;
                if (!this._dpId) {
                    this._dpId = d.guid++;
                    d.event._dpCache[this._dpId] = new a(this);
                    i = false
                }
                if (e.inline) {
                    e.createButton = false;
                    e.displayClose = false;
                    e.closeOnSelect = false;
                    g.empty()
                }
                var f = d.event._dpCache[this._dpId];
                f.init(e);
                if (!i && e.createButton) {
                    f.button = d('<a href="#" class="dp-choose-date" title="' + d.dpText.TEXT_CHOOSE_DATE + '">' + d.dpText.TEXT_CHOOSE_DATE + "</a>").bind("click", function() {
                        if (g.hasClass("disabled")) {
                            return false
                        }
                        g.change();
                        g.dpDisplay(this);
                        this.blur();
                        return false
                    });
                    g.after(f.button)
                }
                if (!i && g.is(":text")) {
                    g.bind("dateSelected", function(k, j, l) {
                        this.value = j.asString()
                    }).bind("change", function() {
                        if (this.value == "") {
                            f.clearSelected()
                        } else {
                            var j = Date.fromString(this.value);
                            if (j) {
                                f.setSelected(j, true, true)
                            }
                        }
                    });
                    if (e.clickInput) {
                        g.bind("click", function() {
                            g.trigger("change");
                            g.dpDisplay()
                        })
                    }
                    var h = Date.fromString(this.value);
                    if (this.value != "" && h) {
                        f.setSelected(h, true, true)
                    }
                }
                g.addClass("dp-applied")
            })
        },
        dpSetDisabled: function(e) {
            return b.call(this, "setDisabled", e)
        },
        dpSetStartDate: function(e) {
            return b.call(this, "setStartDate", e)
        },
        dpSetEndDate: function(e) {
            return b.call(this, "setEndDate", e)
        },
        dpGetSelected: function() {
            var e = c(this[0]);
            if (e) {
                return e.getSelected()
            }
            return null
        },
        dpSetSelected: function(i, g, f, h) {
            if (g == undefined) {
                g = true
            }
            if (f == undefined) {
                f = true
            }
            if (h == undefined) {
                h = true
            }
            return b.call(this, "setSelected", Date.fromString(i), g, f, h)
        },
        dpSetDisplayedMonth: function(e, f) {
            return b.call(this, "setDisplayedMonth", Number(e), Number(f), true)
        },
        dpDisplay: function(f) {
            return b.call(this, "display", f)
        },
        dpSetRenderCallback: function(e) {
            return b.call(this, "setRenderCallback", e)
        },
        dpSetPosition: function(e, f) {
            return b.call(this, "setPosition", e, f)
        },
        dpSetOffset: function(e, f) {
            return b.call(this, "setOffset", e, f)
        },
        dpClose: function() {
            return b.call(this, "_closeCalendar", false, this[0])
        },
        dpRerenderCalendar: function() {
            return b.call(this, "_rerenderCalendar")
        },
        _dpDestroy: function() {}
    });
    var b = function(h, g, e, j, i) {
        return this.each(function() {
            var f = c(this);
            if (f) {
                f[h](g, e, j, i)
            }
        })
    };
    function a(e) {
        this.ele = e;
        this.displayedMonth = null;
        this.displayedYear = null;
        this.startDate = null;
        this.endDate = null;
        this.showYearNavigation = null;
        this.closeOnSelect = null;
        this.displayClose = null;
        this.rememberViewedMonth = null;
        this.selectMultiple = null;
        this.numSelectable = null;
        this.numSelected = null;
        this.verticalPosition = null;
        this.horizontalPosition = null;
        this.verticalOffset = null;
        this.horizontalOffset = null;
        this.button = null;
        this.renderCallback = [];
        this.selectedDates = {};
        this.inline = null;
        this.context = "#dp-popup";
        this.settings = {}
    }
    d.extend(a.prototype, {
        init: function(e) {
            this.setStartDate(e.startDate);
            this.setEndDate(e.endDate);
            this.setDisplayedMonth(Number(e.month), Number(e.year));
            this.setRenderCallback(e.renderCallback);
            this.showYearNavigation = e.showYearNavigation;
            this.closeOnSelect = e.closeOnSelect;
            this.displayClose = e.displayClose;
            this.rememberViewedMonth = e.rememberViewedMonth;
            this.selectMultiple = e.selectMultiple;
            this.numSelectable = e.selectMultiple ? e.numSelectable : 1;
            this.numSelected = 0;
            this.verticalPosition = e.verticalPosition;
            this.horizontalPosition = e.horizontalPosition;
            this.hoverClass = e.hoverClass;
            this.setOffset(e.verticalOffset, e.horizontalOffset);
            this.inline = e.inline;
            this.settings = e;
            if (this.inline) {
                this.context = this.ele;
                this.display()
            }
        },
        setStartDate: function(e) {
            if (e) {
                this.startDate = Date.fromString(e)
            }
            if (!this.startDate) {
                this.startDate = (new Date()).zeroTime()
            }
            this.setDisplayedMonth(this.displayedMonth, this.displayedYear)
        },
        setEndDate: function(e) {
            if (e) {
                this.endDate = Date.fromString(e)
            }
            if (!this.endDate) {
                this.endDate = (new Date("12/31/2999"))
            }
            if (this.endDate.getTime() < this.startDate.getTime()) {
                this.endDate = this.startDate
            }
            this.setDisplayedMonth(this.displayedMonth, this.displayedYear)
        },
        setPosition: function(e, f) {
            this.verticalPosition = e;
            this.horizontalPosition = f
        },
        setOffset: function(e, f) {
            this.verticalOffset = parseInt(e) || 0;
            this.horizontalOffset = parseInt(f) || 0
        },
        setDisabled: function(e) {
            $e = d(this.ele);
            $e[e ? "addClass" : "removeClass"]("dp-disabled");
            if (this.button) {
                $but = d(this.button);
                $but[e ? "addClass" : "removeClass"]("dp-disabled");
                $but.attr("title", e ? "" : d.dpText.TEXT_CHOOSE_DATE)
            }
            if ($e.is(":text")) {
                $e.attr("disabled", e ? "disabled" : "")
            }
        },
        setDisplayedMonth: function(f, n, j) {
            if (this.startDate == undefined || this.endDate == undefined) {
                return
            }
            var i = new Date(this.startDate.getTime());
            i.setDate(1);
            var l = new Date(this.endDate.getTime());
            l.setDate(1);
            var h;
            if ((!f && !n) || (isNaN(f) && isNaN(n))) {
                h = new Date().zeroTime();
                h.setDate(1)
            } else {
                if (isNaN(f)) {
                    h = new Date(n,this.displayedMonth,1)
                } else {
                    if (isNaN(n)) {
                        h = new Date(this.displayedYear,f,1)
                    } else {
                        h = new Date(n,f,1)
                    }
                }
            }
            if (h.getTime() < i.getTime()) {
                h = i
            } else {
                if (h.getTime() > l.getTime()) {
                    h = l
                }
            }
            var g = this.displayedMonth;
            var k = this.displayedYear;
            this.displayedMonth = h.getMonth();
            this.displayedYear = h.getFullYear();
            if (j && (this.displayedMonth != g || this.displayedYear != k)) {
                this._rerenderCalendar();
                d(this.ele).trigger("dpMonthChanged", [this.displayedMonth, this.displayedYear])
            }
        },
        setSelected: function(l, e, f, h) {
            if (l < this.startDate || l.zeroTime() > this.endDate.zeroTime()) {
                return
            }
            var g = this.settings;
            if (g.selectWeek) {
                l = l.addDays(-(l.getDay() - Date.firstDayOfWeek + 7) % 7);
                if (l < this.startDate) {
                    return
                }
            }
            if (e == this.isSelected(l)) {
                return
            }
            if (this.selectMultiple == false) {
                this.clearSelected()
            } else {
                if (e && this.numSelected == this.numSelectable) {
                    return
                }
            }
            if (f && (this.displayedMonth != l.getMonth() || this.displayedYear != l.getFullYear())) {
                this.setDisplayedMonth(l.getMonth(), l.getFullYear(), true)
            }
            this.selectedDates[l.asString()] = e;
            this.numSelected += e ? 1 : -1;
            var j = "td." + (l.getMonth() == this.displayedMonth ? "current-month" : "other-month");
            var k;
            d(j, this.context).each(function() {
                if (d(this).data("datePickerDate") == l.asString()) {
                    k = d(this);
                    if (g.selectWeek) {
                        k.parent()[e ? "addClass" : "removeClass"]("selectedWeek")
                    }
                    k[e ? "addClass" : "removeClass"]("selected")
                }
            });
            d("td", this.context).not(".selected")[this.selectMultiple && this.numSelected == this.numSelectable ? "addClass" : "removeClass"]("unselectable");
            if (h) {
                var g = this.isSelected(l);
                $e = d(this.ele);
                var i = Date.fromString(l.asString());
                $e.trigger("dateSelected", [i, k, g]);
                $e.trigger("change")
            }
        },
        isSelected: function(e) {
            return this.selectedDates[e.asString()]
        },
        getSelected: function() {
            var f = [];
            for (var e in this.selectedDates) {
                if (this.selectedDates[e] == true) {
                    f.push(Date.fromString(e))
                }
            }
            return f
        },
        clearSelected: function() {
            this.selectedDates = {};
            this.numSelected = 0;
            d("td.selected", this.context).removeClass("selected").parent().removeClass("selectedWeek")
        },
        display: function(e) {
            if (d(this.ele).is(".dp-disabled")) {
                return
            }
            e = e || this.ele;
            var m = this;
            var i = d(e);
            var l = i.offset();
            var n;
            var o;
            var g;
            var j;
            if (m.inline) {
                n = d(this.ele);
                o = {
                    id: "calendar-" + this.ele._dpId,
                    "class": "dp-popup dp-popup-inline"
                };
                d(".dp-popup", n).remove();
                j = {}
            } else {
                n = d("body");
                o = {
                    id: "dp-popup",
                    "class": "dp-popup"
                };
                j = {
                    top: l.top + m.verticalOffset,
                    left: l.left + m.horizontalOffset
                };
                var k = function(r) {
                    var p = r.target;
                    var q = d("#dp-popup")[0];
                    while (true) {
                        if (p == q) {
                            return true
                        } else {
                            if (p == document) {
                                m._closeCalendar();
                                return false
                            } else {
                                p = d(p).parent()[0]
                            }
                        }
                    }
                };
                this._checkMouse = k;
                m._closeCalendar(true);
                d(document).bind("keydown.datepicker", function(p) {
                    if (p.keyCode == 27) {
                        m._closeCalendar()
                    }
                })
            }
            if (!m.rememberViewedMonth) {
                var h = this.getSelected()[0];
                if (h) {
                    h = new Date(h);
                    this.setDisplayedMonth(h.getMonth(), h.getFullYear(), false)
                }
            }
            n.append(d("<div></div>").attr(o).css(j).append(d('<div class="head_back"><h2></h2></div>'), d('<div class="dp-nav-prev"></div>').append(d("").bind("click", function() {
                return m._displayNewMonth.call(m, this, 0, -1)
            }), d('<div class="dp-nav-prev-year"><a class="dp-nav-prev-month" href="#" title="' + d.dpText.TEXT_PREV_MONTH + '"></a></div>').bind("click", function() {
                return m._displayNewMonth.call(m, this, -1, 0)
            })), d('<div class="dp-nav-next"></div>').append(d("").bind("click", function() {
                return m._displayNewMonth.call(m, this, 0, 1)
            }), d('<div class="dp-nav-prev-year_right"><a class="dp-nav-next-month" href="#" title="' + d.dpText.TEXT_NEXT_MONTH + '"></a></div>').bind("click", function() {
                return m._displayNewMonth.call(m, this, 1, 0)
            })), d('<div class="dp-calendar"></div>')).bgIframe());
            var f = this.inline ? d(".dp-popup", this.context) : d("#dp-popup");
            if (this.showYearNavigation == false) {
                d(".dp-nav-prev-year, .dp-nav-next-year", m.context).css("display", "none")
            }
            if (this.displayClose) {
                f.append(d('<a href="#" id="dp-close">' + d.dpText.TEXT_CLOSE + "</a>").bind("click", function() {
                    m._closeCalendar();
                    return false
                }))
            }
            m._renderCalendar();
            d(".dp-nav-prev-month").focus();
            d(this.ele).trigger("dpDisplayed", f);
            if (!m.inline) {
                if (this.verticalPosition == d.dpConst.POS_BOTTOM) {
                    f.css("top", l.top + i.height() - f.height() + m.verticalOffset)
                }
                if (this.horizontalPosition == d.dpConst.POS_RIGHT) {
                    f.css("left", l.left + i.width() - f.width() + m.horizontalOffset)
                }
                d(document).bind("mousedown.datepicker", this._checkMouse)
            }
        },
        setRenderCallback: function(e) {
            if (e == null) {
                return
            }
            if (e && typeof (e) == "function") {
                e = [e]
            }
            this.renderCallback = this.renderCallback.concat(e)
        },
        cellRender: function(i, e, g, f) {
            var j = this.dpController;
            var h = new Date(e.getTime());
            i.bind("click", function() {
                var m = d(this);
                if (!m.is(".disabled")) {
                    j.setSelected(h, !m.is(".selected") || !j.selectMultiple, false, true);
                    if (j.closeOnSelect) {
                        if (j.settings.autoFocusNextInput) {
                            var l = j.ele;
                            var k = false;
                            d(":input", l.form).each(function() {
                                if (k) {
                                    d(this).focus();
                                    return false
                                }
                                if (this == l) {
                                    k = true
                                }
                            })
                        } else {
                            j.ele.focus()
                        }
                        j._closeCalendar()
                    }
                }
            });
            if (j.isSelected(h)) {
                i.addClass("selected");
                if (j.settings.selectWeek) {
                    i.parent().addClass("selectedWeek")
                }
            } else {
                if (j.selectMultiple && j.numSelected == j.numSelectable) {
                    i.addClass("unselectable")
                }
            }
        },
        _applyRenderCallbacks: function() {
            var e = this;
            d("td", this.context).each(function() {
                for (var f = 0; f < e.renderCallback.length; f++) {
                    $td = d(this);
                    e.renderCallback[f].apply(this, [$td, Date.fromString($td.data("datePickerDate")), e.displayedMonth, e.displayedYear])
                }
            });
            return
        },
        _displayNewMonth: function(f, e, g) {
            if (!d(f).is(".disabled")) {
                this.setDisplayedMonth(this.displayedMonth + e, this.displayedYear + g, true)
            }
            f.blur();
            return false
        },
        _rerenderCalendar: function() {
            this._clearCalendar();
            this._renderCalendar()
        },
        _renderCalendar: function() {
            d("h2", this.context).html((new Date(this.displayedYear,this.displayedMonth,1)).asString(d.dpText.HEADER_FORMAT));
            d(".dp-calendar", this.context).renderCalendar(d.extend({}, this.settings, {
                month: this.displayedMonth,
                year: this.displayedYear,
                renderCallback: this.cellRender,
                dpController: this,
                hoverClass: this.hoverClass
            }));
            if (this.displayedYear == this.startDate.getFullYear() && this.displayedMonth == this.startDate.getMonth()) {
                d(".dp-nav-prev-year", this.context).addClass("disabled");
                d(".dp-nav-prev-month", this.context).addClass("disabled");
                d(".dp-calendar td.other-month", this.context).each(function() {
                    var i = d(this);
                    if (Number(i.text()) > 20) {
                        i.addClass("disabled")
                    }
                });
                var h = this.startDate.getDate();
                d(".dp-calendar td.current-month", this.context).each(function() {
                    var i = d(this);
                    if (Number(i.text()) < h) {
                        i.addClass("disabled")
                    }
                })
            } else {
                d(".dp-nav-prev-year", this.context).removeClass("disabled");
                d(".dp-nav-prev-month", this.context).removeClass("disabled");
                var h = this.startDate.getDate();
                if (h > 20) {
                    var f = this.startDate.getTime();
                    var g = new Date(f);
                    g.addMonths(1);
                    if (this.displayedYear == g.getFullYear() && this.displayedMonth == g.getMonth()) {
                        d(".dp-calendar td.other-month", this.context).each(function() {
                            var i = d(this);
                            if (Date.fromString(i.data("datePickerDate")).getTime() < f) {
                                i.addClass("disabled")
                            }
                        })
                    }
                }
            }
            if (this.displayedYear == this.endDate.getFullYear() && this.displayedMonth == this.endDate.getMonth()) {
                d(".dp-nav-next-year", this.context).addClass("disabled");
                d(".dp-nav-next-month", this.context).addClass("disabled");
                d(".dp-calendar td.other-month", this.context).each(function() {
                    var i = d(this);
                    if (Number(i.text()) < 14) {
                        i.addClass("disabled")
                    }
                });
                var h = this.endDate.getDate();
                d(".dp-calendar td.current-month", this.context).each(function() {
                    var i = d(this);
                    if (Number(i.text()) > h) {
                        i.addClass("disabled")
                    }
                })
            } else {
                d(".dp-nav-next-year", this.context).removeClass("disabled");
                d(".dp-nav-next-month", this.context).removeClass("disabled");
                var h = this.endDate.getDate();
                if (h < 13) {
                    var e = new Date(this.endDate.getTime());
                    e.addMonths(-1);
                    if (this.displayedYear == e.getFullYear() && this.displayedMonth == e.getMonth()) {
                        d(".dp-calendar td.other-month", this.context).each(function() {
                            var j = d(this);
                            var i = Number(j.text());
                            if (i < 13 && i > h) {
                                j.addClass("disabled")
                            }
                        })
                    }
                }
            }
            this._applyRenderCallbacks()
        },
        _closeCalendar: function(e, f) {
            if (!f || f == this.ele) {
                d(document).unbind("mousedown.datepicker");
                d(document).unbind("keydown.datepicker");
                this._clearCalendar();
                d("#dp-popup a").unbind();
                d("#dp-popup").empty().remove();
                if (!e) {
                    d(this.ele).trigger("dpClosed", [this.getSelected()])
                }
            }
        },
        _clearCalendar: function() {
            d(".dp-calendar td", this.context).unbind();
            d(".dp-calendar", this.context).empty()
        }
    });
    d.dpConst = {
        SHOW_HEADER_NONE: 0,
        SHOW_HEADER_SHORT: 1,
        SHOW_HEADER_LONG: 2,
        POS_TOP: 0,
        POS_BOTTOM: 1,
        POS_LEFT: 0,
        POS_RIGHT: 1,
        DP_INTERNAL_FOCUS: "dpInternalFocusTrigger"
    };
    d.dpText = {
        TEXT_PREV_YEAR: "Previous year",
        TEXT_PREV_MONTH: "Previous month",
        TEXT_NEXT_YEAR: "Next year",
        TEXT_NEXT_MONTH: "Next month",
        TEXT_CLOSE: "Close",
        TEXT_CHOOSE_DATE: "Choose Date",
        HEADER_FORMAT: "mmmm yyyy"
    };
    d.dpVersion = "$Id: jquery.datePicker.js 102 2010-09-13 14:00:54Z kelvin.luck $";
    d.fn.datePicker.defaults = {
        month: undefined,
        year: undefined,
        showHeader: d.dpConst.SHOW_HEADER_SHORT,
        startDate: undefined,
        endDate: undefined,
        inline: false,
        renderCallback: null,
        createButton: true,
        showYearNavigation: true,
        closeOnSelect: true,
        displayClose: false,
        selectMultiple: false,
        numSelectable: Number.MAX_VALUE,
        clickInput: false,
        rememberViewedMonth: true,
        selectWeek: false,
        verticalPosition: d.dpConst.POS_TOP,
        horizontalPosition: d.dpConst.POS_LEFT,
        verticalOffset: 0,
        horizontalOffset: 0,
        hoverClass: "dp-hover",
        autoFocusNextInput: false
    };
    function c(e) {
        if (e._dpId) {
            return d.event._dpCache[e._dpId]
        }
        return false
    }
    if (d.fn.bgIframe == undefined) {
        d.fn.bgIframe = function() {
            return this
        }
    }
    d(window).bind("unload", function() {
        var f = d.event._dpCache || [];
        for (var e in f) {
            d(f[e].ele)._dpDestroy()
        }
    })
}
)(jQuery);
/*!
 ### jQuery Multiple File Upload Plugin v1.47 - 2010-03-26 ###
 * Home: http://www.fyneworks.com/jquery/multiple-file-upload/
 * Code: http://code.google.com/p/jquery-multifile-plugin/
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 ###
*/
if (window.jQuery) {
    (function(a) {
        a.fn.MultiFile = function(c) {
            if (this.length == 0) {
                return this
            }
            if (typeof arguments[0] == "string") {
                if (this.length > 1) {
                    var b = arguments;
                    return this.each(function() {
                        a.fn.MultiFile.apply(a(this), b)
                    })
                }
                a.fn.MultiFile[arguments[0]].apply(this, a.makeArray(arguments).slice(1) || []);
                return this
            }
            var c = a.extend({}, a.fn.MultiFile.options, c || {});
            a("form").not("MultiFile-intercepted").addClass("MultiFile-intercepted").submit(a.fn.MultiFile.disableEmpty);
            if (a.fn.MultiFile.options.autoIntercept) {
                a.fn.MultiFile.intercept(a.fn.MultiFile.options.autoIntercept);
                a.fn.MultiFile.options.autoIntercept = null
            }
            this.not(".MultiFile-applied").addClass("MultiFile-applied").each(function() {
                window.MultiFile = (window.MultiFile || 0) + 1;
                var e = window.MultiFile;
                var d = {
                    e: this,
                    E: a(this),
                    clone: a(this).clone()
                };
                if (typeof c == "number") {
                    c = {
                        max: c
                    }
                }
                var f = a.extend({}, a.fn.MultiFile.options, c || {}, (a.metadata ? d.E.metadata() : (a.meta ? d.E.data() : null)) || {}, {});
                if (!(f.max > 0)) {
                    f.max = d.E.attr("maxlength");
                    if (!(f.max > 0)) {
                        f.max = (String(d.e.className.match(/\b(max|limit)\-([0-9]+)\b/gi) || [""]).match(/[0-9]+/gi) || [""])[0];
                        if (!(f.max > 0)) {
                            f.max = -1
                        } else {
                            f.max = String(f.max).match(/[0-9]+/gi)[0]
                        }
                    }
                }
                f.max = new Number(f.max);
                f.accept = f.accept || d.E.attr("accept") || "";
                if (!f.accept) {
                    f.accept = (d.e.className.match(/\b(accept\-[\w\|]+)\b/gi)) || "";
                    f.accept = new String(f.accept).replace(/^(accept|ext)\-/i, "")
                }
                a.extend(d, f || {});
                d.STRING = a.extend({}, a.fn.MultiFile.options.STRING, d.STRING);
                a.extend(d, {
                    n: 0,
                    slaves: [],
                    files: [],
                    instanceKey: d.e.id || "MultiFile" + String(e),
                    generateID: function(g) {
                        return d.instanceKey + (g > 0 ? "_F" + String(g) : "")
                    },
                    trigger: function(j, g) {
                        var i = d[j]
                          , k = a(g).attr("value");
                        if (i) {
                            var h = i(g, k, d);
                            if (h != null) {
                                return h
                            }
                        }
                        return true
                    }
                });
                if (String(d.accept).length > 1) {
                    d.accept = d.accept.replace(/\W+/g, "|").replace(/^\W|\W$/g, "");
                    d.rxAccept = new RegExp("\\.(" + (d.accept ? d.accept : "") + ")$","gi")
                }
                d.wrapID = d.instanceKey + "_wrap";
                d.E.wrap('<div class="MultiFile-wrap" id="' + d.wrapID + '"></div>');
                d.wrapper = a("#" + d.wrapID + "");
                d.e.name = d.e.name || "file" + e + "[]";
                if (!d.list) {
                    d.wrapper.append('<div class="MultiFile-list" id="' + d.wrapID + '_list"></div>');
                    d.list = a("#" + d.wrapID + "_list")
                }
                d.list = a(d.list);
                d.addSlave = function(g, h) {
                    d.n++;
                    g.MultiFile = d;
                    if (h > 0) {
                        g.id = g.name = ""
                    }
                    if (h > 0) {
                        g.id = d.generateID(h)
                    }
                    g.name = String(d.namePattern.replace(/\$name/gi, a(d.clone).attr("name")).replace(/\$id/gi, a(d.clone).attr("id")).replace(/\$g/gi, e).replace(/\$i/gi, h));
                    if ((d.max > 0) && ((d.n - 1) > (d.max))) {
                        g.disabled = true
                    }
                    d.current = d.slaves[h] = g;
                    g = a(g);
                    g.val("").attr("value", "")[0].value = "";
                    g.addClass("MultiFile-applied");
                    g.change(function() {
                        a(this).blur();
                        if (!d.trigger("onFileSelect", this, d)) {
                            return false
                        }
                        var k = ""
                          , j = String(this.value || "");
                        if (d.accept && j && !j.match(d.rxAccept)) {
                            k = d.STRING.denied.replace("$ext", String(j.match(/\.\w{1,4}$/gi)))
                        }
                        for (var l in d.slaves) {
                            if (d.slaves[l] && d.slaves[l] != this) {
                                if (d.slaves[l].value == j) {
                                    k = d.STRING.duplicate.replace("$file", j.match(/[^\/\\]+$/gi))
                                }
                            }
                        }
                        var i = a(d.clone).clone();
                        i.addClass("MultiFile");
                        if (k != "") {
                            d.error(k);
                            d.n--;
                            d.addSlave(i[0], h);
                            g.parent().prepend(i);
                            g.remove();
                            return false
                        }
                        a(this).css({
                            position: "absolute",
                            top: "-3000px"
                        });
                        g.after(i);
                        d.addToList(this, h);
                        d.addSlave(i[0], h + 1);
                        if (!d.trigger("afterFileSelect", this, d)) {
                            return false
                        }
                    });
                    a(g).data("MultiFile", d)
                }
                ;
                d.addToList = function(j, l) {
                    if (!d.trigger("onFileAppend", j, d)) {
                        return false
                    }
                    var k = a('<div class="MultiFile-label"></div>')
                      , i = String(j.value || "")
                      , h = a('<span class="MultiFile-title" title="' + d.STRING.selected.replace("$file", i) + '">' + d.STRING.file.replace("$file", i.match(/[^\/\\]+$/gi)[0]) + "</span>")
                      , g = a('<a class="MultiFile-remove" href="#' + d.wrapID + '">' + d.STRING.remove + "</a>");
                    d.list.append(k.append(h, "   ", g));
                    g.click(function() {
                        if (!d.trigger("onFileRemove", j, d)) {
                            return false
                        }
                        d.n--;
                        d.current.disabled = false;
                        d.slaves[l] = null;
                        a(j).remove();
                        a(this).parent().remove();
                        a(d.current).css({
                            position: "",
                            top: ""
                        });
                        a(d.current).reset().val("").attr("value", "")[0].value = "";
                        if (!d.trigger("afterFileRemove", j, d)) {
                            return false
                        }
                        return false
                    });
                    if (!d.trigger("afterFileAppend", j, d)) {
                        return false
                    }
                }
                ;
                if (!d.MultiFile) {
                    d.addSlave(d.e, 0)
                }
                d.n++;
                d.E.data("MultiFile", d)
            })
        }
        ;
        a.extend(a.fn.MultiFile, {
            reset: function() {
                var b = a(this).data("MultiFile");
                if (b) {
                    b.list.find("a.MultiFile-remove").click()
                }
                return a(this)
            },
            disableEmpty: function(b) {
                b = (typeof (b) == "string" ? b : "") || "mfD";
                var c = [];
                a("input:file.MultiFile").each(function() {
                    if (a(this).val() == "") {
                        c[c.length] = this
                    }
                });
                return a(c).each(function() {
                    this.disabled = true
                }).addClass(b)
            },
            reEnableEmpty: function(b) {
                b = (typeof (b) == "string" ? b : "") || "mfD";
                return a("input:file." + b).removeClass(b).each(function() {
                    this.disabled = false
                })
            },
            intercepted: {},
            intercept: function(b, e, c) {
                var g, f;
                c = c || [];
                if (c.constructor.toString().indexOf("Array") < 0) {
                    c = [c]
                }
                if (typeof (b) == "function") {
                    a.fn.MultiFile.disableEmpty();
                    f = b.apply(e || window, c);
                    setTimeout(function() {
                        a.fn.MultiFile.reEnableEmpty()
                    }, 1000);
                    return f
                }
                if (b.constructor.toString().indexOf("Array") < 0) {
                    b = [b]
                }
                for (var d = 0; d < b.length; d++) {
                    g = b[d] + "";
                    if (g) {
                        (function(h) {
                            a.fn.MultiFile.intercepted[h] = a.fn[h] || function() {}
                            ;
                            a.fn[h] = function() {
                                a.fn.MultiFile.disableEmpty();
                                f = a.fn.MultiFile.intercepted[h].apply(this, arguments);
                                setTimeout(function() {
                                    a.fn.MultiFile.reEnableEmpty()
                                }, 1000);
                                return f
                            }
                        }
                        )(g)
                    }
                }
            }
        });
        a.fn.MultiFile.options = {
            accept: "",
            max: -1,
            namePattern: "$name",
            STRING: {
                remove: "Remove",
                denied: "You cannot select a $ext file.\nTry again...",
                file: "$file",
                selected: "File selected: $file",
                duplicate: "This file has already been selected:\n$file"
            },
            autoIntercept: ["submit", "ajaxSubmit", "ajaxForm", "validate", "valid"],
            error: function(b) {
                alert(b)
            }
        };
        a.fn.reset = function() {
            return this.each(function() {
                try {
                    this.reset()
                } catch (b) {}
            })
        }
        ;
        a(function() {
            a("input[type=file].multi").MultiFile()
        })
    }
    )(jQuery)
}
;/*!
 * jQuery validation plug-in 1.7
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Copyright (c) 2006 - 2008 Jörn Zaefferer
 *
 * $Id: jquery.validate.js 6403 2009-06-17 14:27:16Z joern.zaefferer $
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */
(function(a) {
    a.extend(a.fn, {
        validate: function(b) {
            if (!this.length) {
                b && b.debug && window.console && console.warn("nothing selected, can't validate, returning nothing");
                return
            }
            var c = a.data(this[0], "validator");
            if (c) {
                return c
            }
            c = new a.validator(b,this[0]);
            a.data(this[0], "validator", c);
            if (c.settings.onsubmit) {
                this.find("input, button").filter(".cancel").click(function() {
                    c.cancelSubmit = true
                });
                if (c.settings.submitHandler) {
                    this.find("input, button").filter(":submit").click(function() {
                        c.submitButton = this
                    })
                }
                this.submit(function(d) {
                    if (c.settings.debug) {
                        d.preventDefault()
                    }
                    function e() {
                        if (c.settings.submitHandler) {
                            if (c.submitButton) {
                                var f = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(c.submitButton.value).appendTo(c.currentForm)
                            }
                            c.settings.submitHandler.call(c, c.currentForm);
                            if (c.submitButton) {
                                f.remove()
                            }
                            return false
                        }
                        return true
                    }
                    if (c.cancelSubmit) {
                        c.cancelSubmit = false;
                        return e()
                    }
                    if (c.form()) {
                        if (c.pendingRequest) {
                            c.formSubmitted = true;
                            return false
                        }
                        return e()
                    } else {
                        c.focusInvalid();
                        return false
                    }
                })
            }
            return c
        },
        valid: function() {
            if (a(this[0]).is("form")) {
                return this.validate().form()
            } else {
                var c = true;
                var b = a(this[0].form).validate();
                this.each(function() {
                    c &= b.element(this)
                });
                return c
            }
        },
        removeAttrs: function(d) {
            var b = {}
              , c = this;
            a.each(d.split(/\s/), function(e, f) {
                b[f] = c.attr(f);
                c.removeAttr(f)
            });
            return b
        },
        rules: function(e, b) {
            var g = this[0];
            if (e) {
                var d = a.data(g.form, "validator").settings;
                var i = d.rules;
                var j = a.validator.staticRules(g);
                switch (e) {
                case "add":
                    a.extend(j, a.validator.normalizeRule(b));
                    i[g.name] = j;
                    if (b.messages) {
                        d.messages[g.name] = a.extend(d.messages[g.name], b.messages)
                    }
                    break;
                case "remove":
                    if (!b) {
                        delete i[g.name];
                        return j
                    }
                    var h = {};
                    a.each(b.split(/\s/), function(k, l) {
                        h[l] = j[l];
                        delete j[l]
                    });
                    return h
                }
            }
            var f = a.validator.normalizeRules(a.extend({}, a.validator.metadataRules(g), a.validator.classRules(g), a.validator.attributeRules(g), a.validator.staticRules(g)), g);
            if (f.required) {
                var c = f.required;
                delete f.required;
                f = a.extend({
                    required: c
                }, f)
            }
            return f
        }
    });
    a.extend(a.expr[":"], {
        blank: function(b) {
            return !a.trim("" + b.value)
        },
        filled: function(b) {
            return !!a.trim("" + b.value)
        },
        unchecked: function(b) {
            return !b.checked
        }
    });
    a.validator = function(b, c) {
        this.settings = a.extend(true, {}, a.validator.defaults, b);
        this.currentForm = c;
        this.init()
    }
    ;
    a.validator.format = function(b, c) {
        if (arguments.length == 1) {
            return function() {
                var d = a.makeArray(arguments);
                d.unshift(b);
                return a.validator.format.apply(this, d)
            }
        }
        if (arguments.length > 2 && c.constructor != Array) {
            c = a.makeArray(arguments).slice(1)
        }
        if (c.constructor != Array) {
            c = [c]
        }
        a.each(c, function(d, e) {
            b = b.replace(new RegExp("\\{" + d + "\\}","g"), e)
        });
        return b
    }
    ;
    a.extend(a.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusInvalid: true,
            errorContainer: a([]),
            errorLabelContainer: a([]),
            onsubmit: true,
            ignore: [],
            ignoreTitle: true,
            onfocusin: function(b) {
                this.lastActive = b;
                if (this.settings.focusCleanup && !this.blockFocusCleanup) {
                    this.settings.unhighlight && this.settings.unhighlight.call(this, b, this.settings.errorClass, this.settings.validClass);
                    this.errorsFor(b).hide()
                }
            },
            onfocusout: function(b) {
                if (!this.checkable(b) && (b.name in this.submitted || !this.optional(b))) {
                    this.element(b)
                }
            },
            onkeyup: function(b) {
                if (b.name in this.submitted || b == this.lastElement) {
                    this.element(b)
                }
            },
            onclick: function(b) {
                if (b.name in this.submitted) {
                    this.element(b)
                } else {
                    if (b.parentNode.name in this.submitted) {
                        this.element(b.parentNode)
                    }
                }
            },
            highlight: function(d, b, c) {
                a(d).addClass(b).removeClass(c)
            },
            unhighlight: function(d, b, c) {
                a(d).removeClass(b).addClass(c)
            }
        },
        setDefaults: function(b) {
            a.extend(a.validator.defaults, b)
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter email address",
            emailCheck: "Please enter a valid email address. For example:abc@abc.com",
            url: "Please enter a valid URL.",
            ftpurl: "Please enter a valid ftp URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            accept: "Please enter a value with a valid extension.",
            maxlength: a.validator.format("Please enter no more than {0} characters."),
            minlength: a.validator.format("Please enter at least {0} characters."),
            rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
            range: a.validator.format("Please enter a value between {0} and {1}."),
            max: a.validator.format("Please enter a value less than or equal to {0}."),
            min: a.validator.format("Please enter a value greater than or equal to {0}.")
        },
        autoCreateRanges: false,
        prototype: {
            init: function() {
                this.labelContainer = a(this.settings.errorLabelContainer);
                this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm);
                this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer);
                this.submitted = {};
                this.valueCache = {};
                this.pendingRequest = 0;
                this.pending = {};
                this.invalid = {};
                this.reset();
                var b = (this.groups = {});
                a.each(this.settings.groups, function(e, f) {
                    a.each(f.split(/\s/), function(h, g) {
                        b[g] = e
                    })
                });
                var d = this.settings.rules;
                a.each(d, function(e, f) {
                    d[e] = a.validator.normalizeRule(f)
                });
                function c(g) {
                    var f = a.data(this[0].form, "validator")
                      , e = "on" + g.type.replace(/^validate/, "");
                    f.settings[e] && f.settings[e].call(f, this[0])
                }
                a(this.currentForm).validateDelegate(":text, :password, :file, select, textarea", "focusin focusout keyup", c).validateDelegate(":radio, :checkbox, select, option", "click", c);
                if (this.settings.invalidHandler) {
                    a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
                }
            },
            form: function() {
                this.checkForm();
                a.extend(this.submitted, this.errorMap);
                this.invalid = a.extend({}, this.errorMap);
                if (!this.valid()) {
                    a(this.currentForm).triggerHandler("invalid-form", [this])
                }
                this.showErrors();
                return this.valid()
            },
            checkForm: function() {
                this.prepareForm();
                for (var c = 0, d = (this.currentElements = this.elements()); d[c]; c++) {
                    if (this.findByName(d[c].name).length != undefined && this.findByName(d[c].name).length > 1) {
                        for (var b = 0; b < this.findByName(d[c].name).length; b++) {
                            this.check(this.findByName(d[c].name)[b])
                        }
                    } else {
                        this.check(d[c])
                    }
                }
                return this.valid()
            },
            element: function(c) {
                c = this.clean(c);
                this.lastElement = c;
                this.prepareElement(c);
                this.currentElements = a(c);
                var b = this.check(c);
                if (b) {
                    delete this.invalid[c.name]
                } else {
                    this.invalid[c.name] = true
                }
                if (!this.numberOfInvalids()) {
                    this.toHide = this.toHide.add(this.containers)
                }
                this.showErrors();
                return b
            },
            showErrors: function(c) {
                if (c) {
                    a.extend(this.errorMap, c);
                    this.errorList = [];
                    for (var b in c) {
                        this.errorList.push({
                            message: c[b],
                            element: this.findByName(b)[0]
                        })
                    }
                    this.successList = a.grep(this.successList, function(d) {
                        return !(d.name in c)
                    })
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
            },
            resetForm: function() {
                if (a.fn.resetForm) {
                    a(this.currentForm).resetForm()
                }
                this.submitted = {};
                this.prepareForm();
                this.hideErrors();
                this.elements().removeClass(this.settings.errorClass)
            },
            numberOfInvalids: function() {
                return this.objectLength(this.invalid)
            },
            objectLength: function(d) {
                var c = 0;
                for (var b in d) {
                    c++
                }
                return c
            },
            hideErrors: function() {
                this.addWrapper(this.toHide).hide()
            },
            valid: function() {
                return this.size() == 0
            },
            size: function() {
                return this.errorList.length
            },
            focusInvalid: function() {
                if (this.settings.focusInvalid) {
                    try {
                        a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
                    } catch (b) {}
                }
            },
            findLastActive: function() {
                var b = this.lastActive;
                return b && a.grep(this.errorList, function(c) {
                    return c.element.name == b.name
                }).length == 1 && b
            },
            elements: function() {
                var c = this
                  , b = {};
                return a([]).add(this.currentForm.elements).filter(":input").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() {
                    !this.name && c.settings.debug && window.console && console.error("%o has no name assigned", this);
                    if (this.name in b || !c.objectLength(a(this).rules())) {
                        return false
                    }
                    b[this.name] = true;
                    return true
                })
            },
            clean: function(b) {
                return a(b)[0]
            },
            errors: function() {
                return a(this.settings.errorElement + "." + this.settings.errorClass, this.errorContext)
            },
            reset: function() {
                this.successList = [];
                this.errorList = [];
                this.errorMap = {};
                this.toShow = a([]);
                this.toHide = a([]);
                this.currentElements = a([])
            },
            prepareForm: function() {
                this.reset();
                this.toHide = this.errors().add(this.containers)
            },
            prepareElement: function(b) {
                this.reset();
                this.toHide = this.errorsFor(b)
            },
            check: function(c) {
                c = this.clean(c);
                if (this.checkable(c)) {
                    c = this.findByName(c.name)[0]
                }
                var h = a(c).rules();
                var d = false;
                for (method in h) {
                    var g = {
                        method: method,
                        parameters: h[method]
                    };
                    try {
                        var b = a.validator.methods[method].call(this, c.value.replace(/\r/g, ""), c, g.parameters);
                        if (b == "dependency-mismatch") {
                            d = true;
                            continue
                        }
                        d = false;
                        if (b == "pending") {
                            this.toHide = this.toHide.not(this.errorsFor(c));
                            return
                        }
                        if (!b) {
                            this.formatAndAdd(c, g);
                            return false
                        }
                    } catch (f) {
                        this.settings.debug && window.console && console.log("exception occured when checking element " + c.id + ", check the '" + g.method + "' method", f);
                        throw f
                    }
                }
                if (d) {
                    return
                }
                if (this.objectLength(h)) {
                    this.successList.push(c)
                }
                return true
            },
            customMetaMessage: function(b, d) {
                if (!a.metadata) {
                    return
                }
                var c = this.settings.meta ? a(b).metadata()[this.settings.meta] : a(b).metadata();
                return c && c.messages && c.messages[d]
            },
            customMessage: function(c, d) {
                var b = this.settings.messages[c];
                return b && (b.constructor == String ? b : b[d])
            },
            findDefined: function() {
                for (var b = 0; b < arguments.length; b++) {
                    if (arguments[b] !== undefined) {
                        return arguments[b]
                    }
                }
                return undefined
            },
            defaultMessage: function(b, c) {
                return this.findDefined(this.customMessage(b.name, c), this.customMetaMessage(b, c), !this.settings.ignoreTitle && b.title || undefined, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>")
            },
            formatAndAdd: function(c, e) {
                var d = this.defaultMessage(c, e.method)
                  , b = /\$?\{(\d+)\}/g;
                if (typeof d == "function") {
                    d = d.call(this, e.parameters, c)
                } else {
                    if (b.test(d)) {
                        d = jQuery.format(d.replace(b, "{$1}"), e.parameters)
                    }
                }
                this.errorList.push({
                    message: d,
                    element: c
                });
                this.errorMap[c.name] = d;
                this.submitted[c.name] = d
            },
            addWrapper: function(b) {
                if (this.settings.wrapper) {
                    b = b.add(b.parent(this.settings.wrapper))
                }
                return b
            },
            defaultShowErrors: function() {
                for (var c = 0; this.errorList[c]; c++) {
                    var b = this.errorList[c];
                    this.settings.highlight && this.settings.highlight.call(this, b.element, this.settings.errorClass, this.settings.validClass);
                    this.showLabel(b.element, b.message)
                }
                if (this.errorList.length) {
                    this.toShow = this.toShow.add(this.containers)
                }
                if (this.settings.success) {
                    for (var c = 0; this.successList[c]; c++) {
                        this.showLabel(this.successList[c])
                    }
                }
                if (this.settings.unhighlight) {
                    for (var c = 0, d = this.validElements(); d[c]; c++) {
                        this.settings.unhighlight.call(this, d[c], this.settings.errorClass, this.settings.validClass)
                    }
                }
                this.toHide = this.toHide.not(this.toShow);
                this.hideErrors();
                this.addWrapper(this.toShow).show()
            },
            validElements: function() {
                return this.currentElements.not(this.invalidElements())
            },
            invalidElements: function() {
                return a(this.errorList).map(function() {
                    return this.element
                })
            },
            showLabel: function(c, d) {
                var b = this.errorsFor(c);
                if (b.length) {
                    b.removeClass().addClass(this.settings.errorClass);
                    b.attr("generated") && b.html(d)
                } else {
                    b = a("<" + this.settings.errorElement + "/>").attr({
                        "for": this.idOrName(c),
                        generated: true
                    }).addClass(this.settings.errorClass).html(d || "");
                    if (this.settings.wrapper) {
                        b = b.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()
                    }
                    if (!this.labelContainer.append(b).length) {
                        this.settings.errorPlacement ? this.settings.errorPlacement(b, a(c)) : b.insertAfter(c)
                    }
                }
                if (!d && this.settings.success) {
                    b.text("");
                    typeof this.settings.success == "string" ? b.addClass(this.settings.success) : this.settings.success(b)
                }
                this.toShow = this.toShow.add(b)
            },
            errorsFor: function(c) {
                var b = this.idOrName(c);
                return this.errors().filter(function() {
                    return a(this).attr("for") == b
                })
            },
            idOrName: function(b) {
                return this.groups[b.name] || (this.checkable(b) ? b.name : b.id || b.name)
            },
            checkable: function(b) {
                return /radio|checkbox/i.test(b.type)
            },
            findByName: function(b) {
                var c = this.currentForm;
                return a(document.getElementsByName(b)).map(function(d, e) {
                    return e.form == c && e.name == b && e || null
                })
            },
            getLength: function(c, b) {
                switch (b.nodeName.toLowerCase()) {
                case "select":
                    return a("option:selected", b).length;
                case "input":
                    if (this.checkable(b)) {
                        return this.findByName(b.name).filter(":checked").length
                    }
                }
                return c.length
            },
            depend: function(c, b) {
                return this.dependTypes[typeof c] ? this.dependTypes[typeof c](c, b) : true
            },
            dependTypes: {
                "boolean": function(c, b) {
                    return c
                },
                string: function(c, b) {
                    return !!a(c, b.form).length
                },
                "function": function(c, b) {
                    return c(b)
                }
            },
            optional: function(b) {
                return !a.validator.methods.required.call(this, a.trim(b.value), b) && "dependency-mismatch"
            },
            startRequest: function(b) {
                if (!this.pending[b.name]) {
                    this.pendingRequest++;
                    this.pending[b.name] = true
                }
            },
            stopRequest: function(b, c) {
                this.pendingRequest--;
                if (this.pendingRequest < 0) {
                    this.pendingRequest = 0
                }
                delete this.pending[b.name];
                if (c && this.pendingRequest == 0 && this.formSubmitted && this.form()) {
                    a(this.currentForm).submit();
                    this.formSubmitted = false
                } else {
                    if (!c && this.pendingRequest == 0 && this.formSubmitted) {
                        a(this.currentForm).triggerHandler("invalid-form", [this]);
                        this.formSubmitted = false
                    }
                }
            },
            previousValue: function(b) {
                return a.data(b, "previousValue") || a.data(b, "previousValue", {
                    old: null,
                    valid: true,
                    message: this.defaultMessage(b, "remote")
                })
            }
        },
        classRuleSettings: {
            required: {
                required: true
            },
            email: {
                email: true
            },
            emailCheck: {
                emailCheck: true
            },
            url: {
                url: true
            },
            ftpurl: {
                ftpurl: true
            },
            date: {
                date: true
            },
            dateISO: {
                dateISO: true
            },
            dateDE: {
                dateDE: true
            },
            number: {
                number: true
            },
            numberDE: {
                numberDE: true
            },
            digits: {
                digits: true
            },
            creditcard: {
                creditcard: true
            }
        },
        addClassRules: function(b, c) {
            b.constructor == String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b)
        },
        classRules: function(c) {
            var d = {};
            var b = a(c).attr("class");
            b && a.each(b.split(" "), function() {
                if (this in a.validator.classRuleSettings) {
                    a.extend(d, a.validator.classRuleSettings[this])
                }
            });
            return d
        },
        attributeRules: function(c) {
            var e = {};
            var b = a(c);
            for (method in a.validator.methods) {
                var d = b.attr(method);
                if (d) {
                    e[method] = d
                }
            }
            if (e.maxlength && /-1|2147483647|524288/.test(e.maxlength)) {
                delete e.maxlength
            }
            return e
        },
        metadataRules: function(b) {
            if (!a.metadata) {
                return {}
            }
            var c = a.data(b.form, "validator").settings.meta;
            return c ? a(b).metadata()[c] : a(b).metadata()
        },
        staticRules: function(c) {
            var d = {};
            var b = a.data(c.form, "validator");
            if (b.settings.rules) {
                d = a.validator.normalizeRule(b.settings.rules[c.name]) || {}
            }
            return d
        },
        normalizeRules: function(c, b) {
            a.each(c, function(f, e) {
                if (e === false) {
                    delete c[f];
                    return
                }
                if (e.param || e.depends) {
                    var d = true;
                    switch (typeof e.depends) {
                    case "string":
                        d = !!a(e.depends, b.form).length;
                        break;
                    case "function":
                        d = e.depends.call(b, b);
                        break
                    }
                    if (d) {
                        c[f] = e.param !== undefined ? e.param : true
                    } else {
                        delete c[f]
                    }
                }
            });
            a.each(c, function(d, e) {
                c[d] = a.isFunction(e) ? e(b) : e
            });
            a.each(["minlength", "maxlength", "min", "max"], function() {
                if (c[this]) {
                    c[this] = Number(c[this])
                }
            });
            a.each(["rangelength", "range"], function() {
                if (c[this]) {
                    c[this] = [Number(c[this][0]), Number(c[this][1])]
                }
            });
            if (a.validator.autoCreateRanges) {
                if (c.min && c.max) {
                    c.range = [c.min, c.max];
                    delete c.min;
                    delete c.max
                }
                if (c.minlength && c.maxlength) {
                    c.rangelength = [c.minlength, c.maxlength];
                    delete c.minlength;
                    delete c.maxlength
                }
            }
            if (c.messages) {
                delete c.messages
            }
            return c
        },
        normalizeRule: function(c) {
            if (typeof c == "string") {
                var b = {};
                a.each(c.split(/\s/), function() {
                    b[this] = true
                });
                c = b
            }
            return c
        },
        addMethod: function(b, d, c) {
            a.validator.methods[b] = d;
            a.validator.messages[b] = c != undefined ? c : a.validator.messages[b];
            if (d.length < 3) {
                a.validator.addClassRules(b, a.validator.normalizeRule(b))
            }
        },
        methods: {
            required: function(c, b, e) {
                if (!this.depend(e, b)) {
                    return "dependency-mismatch"
                }
                switch (b.nodeName.toLowerCase()) {
                case "select":
                    var d = a(b).val();
                    return d && d.length > 0;
                case "input":
                    if (this.checkable(b)) {
                        return this.getLength(c, b) > 0
                    }
                default:
                    return a.trim(c).length > 0
                }
            },
            remote: function(f, c, g) {
                if (this.optional(c)) {
                    return "dependency-mismatch"
                }
                var d = this.previousValue(c);
                if (!this.settings.messages[c.name]) {
                    this.settings.messages[c.name] = {}
                }
                d.originalMessage = this.settings.messages[c.name].remote;
                this.settings.messages[c.name].remote = d.message;
                g = typeof g == "string" && {
                    url: g
                } || g;
                if (d.old !== f) {
                    d.old = f;
                    var b = this;
                    this.startRequest(c);
                    var e = {};
                    e[c.name] = f;
                    a.ajax(a.extend(true, {
                        url: g,
                        mode: "abort",
                        port: "validate" + c.name,
                        dataType: "json",
                        data: e,
                        success: function(i) {
                            b.settings.messages[c.name].remote = d.originalMessage;
                            var k = i === true;
                            if (k) {
                                var h = b.formSubmitted;
                                b.prepareElement(c);
                                b.formSubmitted = h;
                                b.successList.push(c);
                                b.showErrors()
                            } else {
                                var l = {};
                                var j = (d.message = i || b.defaultMessage(c, "remote"));
                                l[c.name] = a.isFunction(j) ? j(f) : j;
                                b.showErrors(l)
                            }
                            d.valid = k;
                            b.stopRequest(c, k)
                        }
                    }, g));
                    return "pending"
                } else {
                    if (this.pending[c.name]) {
                        return "pending"
                    }
                }
                return d.valid
            },
            minlength: function(c, b, d) {
                return this.optional(b) || this.getLength(a.trim(c), b) >= d
            },
            maxlength: function(c, b, d) {
                return this.optional(b) || this.getLength(a.trim(c), b) <= d
            },
            rangelength: function(d, b, e) {
                var c = this.getLength(a.trim(d), b);
                return this.optional(b) || (c >= e[0] && c <= e[1])
            },
            min: function(c, b, d) {
                return this.optional(b) || c >= d
            },
            max: function(c, b, d) {
                return this.optional(b) || c <= d
            },
            range: function(c, b, d) {
                return this.optional(b) || (c >= d[0] && c <= d[1])
            },
            email: function(c, b, e) {
                if (!this.depend(e, b)) {
                    return "dependency-mismatch"
                }
                switch (b.nodeName.toLowerCase()) {
                case "select":
                    var d = a(b).val();
                    return d && d.length > 0;
                case "input":
                    if (this.checkable(b)) {
                        return this.getLength(c, b) > 0
                    }
                default:
                    return a.trim(c).length > 0
                }
            },
            emailCheck: function(c, b) {
                return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(c)
            },
            url: function(c, b) {
                return this.optional(b) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=\^]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(c)
            },
            ftpurl: function(c, b) {
                return this.optional(b) || /^(ftps?):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(c)
            },
            date: function(c, b) {
                return this.optional(b) || !/Invalid|NaN/.test(new Date(c))
            },
            dateISO: function(c, b) {
                return this.optional(b) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(c)
            },
            number: function(c, b) {
                return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(c)
            },
            digits: function(c, b) {
                return this.optional(b) || /^\d+$/.test(c)
            },
            creditcard: function(f, c) {
                if (this.optional(c)) {
                    return "dependency-mismatch"
                }
                if (/[^0-9-]+/.test(f)) {
                    return false
                }
                var g = 0
                  , e = 0
                  , b = false;
                f = f.replace(/\D/g, "");
                for (var h = f.length - 1; h >= 0; h--) {
                    var d = f.charAt(h);
                    var e = parseInt(d, 10);
                    if (b) {
                        if ((e *= 2) > 9) {
                            e -= 9
                        }
                    }
                    g += e;
                    b = !b
                }
                return (g % 10) == 0
            },
            accept: function(c, b, d) {
                d = typeof d == "string" ? d.replace(/,/g, "|") : "png|jpe?g|gif";
                return this.optional(b) || c.match(new RegExp(".(" + d + ")$","i"))
            },
            equalTo: function(c, b, e) {
                var d = a(e).unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
                    a(b).valid()
                });
                return c == d.val()
            }
        }
    });
    a.format = a.validator.format
}
)(jQuery);
(function(c) {
    var b = c.ajax;
    var a = {};
    c.ajax = function(e) {
        e = c.extend(e, c.extend({}, c.ajaxSettings, e));
        var d = e.port;
        if (e.mode == "abort") {
            if (a[d]) {
                a[d].abort()
            }
            return (a[d] = b.apply(this, arguments))
        }
        return b.apply(this, arguments)
    }
}
)(jQuery);
(function(a) {
    if (!jQuery.event.special.focusin && !jQuery.event.special.focusout && document.addEventListener) {
        a.each({
            focus: "focusin",
            blur: "focusout"
        }, function(c, b) {
            a.event.special[b] = {
                setup: function() {
                    this.addEventListener(c, d, true)
                },
                teardown: function() {
                    this.removeEventListener(c, d, true)
                },
                handler: function(f) {
                    arguments[0] = a.event.fix(f);
                    arguments[0].type = b;
                    return a.event.handle.apply(this, arguments)
                }
            };
            function d(f) {
                f = a.event.fix(f);
                f.type = b;
                return a.event.handle.call(this, f)
            }
        })
    }
    a.extend(a.fn, {
        validateDelegate: function(d, c, b) {
            return this.bind(c, function(e) {
                var f = a(e.target);
                if (f.is(d)) {
                    return b.apply(f, arguments)
                }
            })
        }
    })
}
)(jQuery);
(function(a) {
    a.PaginationCalculator = function(b, c) {
        this.maxentries = b;
        this.opts = c
    }
    ;
    a.extend(a.PaginationCalculator.prototype, {
        numPages: function() {
            return Math.ceil(this.maxentries / this.opts.items_per_page)
        },
        getInterval: function(f) {
            var d = Math.floor(this.opts.num_display_entries / 2);
            var e = this.numPages();
            var c = e - this.opts.num_display_entries;
            var g = f > d ? Math.max(Math.min(f - d, c), 0) : 0;
            var b = f > d ? Math.min(f + d + (this.opts.num_display_entries % 2), e) : Math.min(this.opts.num_display_entries, e);
            return {
                start: g,
                end: b
            }
        }
    });
    a.PaginationRenderers = {};
    a.PaginationRenderers.defaultRenderer = function(b, c) {
        this.maxentries = b;
        this.opts = c;
        this.pc = new a.PaginationCalculator(b,c)
    }
    ;
    a.extend(a.PaginationRenderers.defaultRenderer.prototype, {
        createLink: function(b, e, d) {
            var f, c = this.pc.numPages();
            d = a.extend({
                text: b + 1,
                title: b + 1,
                classes: ""
            }, d || {});
            if (d.classes == "prev") {
                d.title = "Previous"
            }
            if (d.classes == "next") {
                d.title = "Next"
            }
            if (b < 0 || b >= c) {
                f = a("<a href='javascript:void(0);' class='disabled cursorNotAllowed' aria-disabled='true'>" + d.text + "</a>")
            } else {
                if (b == e) {
                    f = a("<span href='javascript:void(0);' class='current' aria-disabled='false' aria-label='Selected Page " + d.text + "'>" + d.text + "</span>")
                } else {
                    f = a("<a>" + d.text + "</a>").attr("href", this.opts.link_to.replace(/__id__/, b)).attr({
                        title: "Go to page " + d.title,
                        "aria-label": "Go to page " + d.title
                    })
                }
            }
            if (d.classes) {
                f.addClass(d.classes).attr({
                    title: "Go to " + d.title + " page",
                    "aria-label": "Go to " + d.title + " page"
                })
            }
            f.data("page_id", b);
            return f
        },
        appendRange: function(c, f, g, b, e) {
            var d;
            for (d = g; d < b; d++) {
                this.createLink(d, f, e).appendTo(c)
            }
        },
        getLinks: function(h, e) {
            var f, b, c = this.pc.getInterval(h), g = this.pc.numPages(), d = a("<div class='pagination'></div>");
            if (this.opts.prev_text && (h > 0 || this.opts.prev_show_always)) {
                d.append(this.createLink(h - 1, h, {
                    text: this.opts.prev_text,
                    classes: "prev"
                }))
            }
            if (c.start > 0 && this.opts.num_edge_entries > 0) {
                b = Math.min(this.opts.num_edge_entries, c.start);
                this.appendRange(d, h, 0, b, {
                    classes: "sp"
                });
                if (this.opts.num_edge_entries < c.start && this.opts.ellipse_text) {
                    jQuery("<span>" + this.opts.ellipse_text + "</span>").appendTo(d)
                }
            }
            this.appendRange(d, h, c.start, c.end);
            if (c.end < g && this.opts.num_edge_entries > 0) {
                if (g - this.opts.num_edge_entries > c.end && this.opts.ellipse_text) {
                    jQuery("<span>" + this.opts.ellipse_text + "</span>").appendTo(d)
                }
                f = Math.max(g - this.opts.num_edge_entries, c.end);
                this.appendRange(d, h, f, g, {
                    classes: "ep"
                })
            }
            if (this.opts.next_text && (h < g - 1 || this.opts.next_show_always)) {
                d.append(this.createLink(h + 1, h, {
                    text: this.opts.next_text,
                    classes: "next"
                }))
            }
            a("a", d).click(e);
            return d
        }
    });
    a.fn.pagination = function(i, b) {
        b = jQuery.extend({
            items_per_page: 20,
            num_display_entries: 18,
            current_page: 0,
            num_edge_entries: 0,
            link_to: "javascript:void(0)",
            prev_text: "Previous",
            next_text: "Next",
            ellipse_text: "...",
            prev_show_always: true,
            next_show_always: true,
            renderer: "defaultRenderer",
            callback: function() {
                return false
            }
        }, b || {});
        var c = this, f, k, e;
        function d(m) {
            if (a(m.target).hasClass("disabled") || a(m.target).hasClass("current")) {
                return false
            }
            var n, l = a(m.target).data("page_id"), o = g(l);
            if (!o) {
                m.stopPropagation()
            }
            return o
        }
        function g(l) {
            c.data("current_page", l);
            k = f.getLinks(l, d);
            c.empty();
            k.appendTo(c);
            var m = b.callback(l, c);
            return m
        }
        e = b.current_page;
        c.data("current_page", e);
        i = (!i || i < 0) ? 1 : i;
        b.items_per_page = (!b.items_per_page || b.items_per_page < 0) ? 1 : b.items_per_page;
        if (!a.PaginationRenderers[b.renderer]) {
            throw new ReferenceError("Pagination renderer '" + b.renderer + "' was not found in jQuery.PaginationRenderers object.")
        }
        f = new a.PaginationRenderers[b.renderer](i,b);
        this.selectPage = function(l) {
            pageSelected(l);
            alert("hi")
        }
        ;
        var h = new a.PaginationCalculator(i,b);
        var j = h.numPages();
        c.bind("setPage", {
            numPages: j
        }, function(m, l) {
            if (l >= 0 && l < m.data.numPages) {
                g(l);
                return false
            }
        });
        c.bind("prevPage", function(l) {
            var m = a(this).data("current_page");
            if (m > 0) {
                g(m - 1)
            }
            return false
        });
        c.bind("nextPage", {
            numPages: j
        }, function(l) {
            var m = a(this).data("current_page");
            if (m < l.data.numPages - 1) {
                g(m + 1)
            }
            return false
        });
        k = f.getLinks(e, d);
        c.empty();
        k.appendTo(c);
        if (!!b.callbackonstart) {
            b.callback(e, c)
        }
    }
}
)(jQuery);
/*!
 * AJAX Upload ( http://valums.com/ajax-upload/ ) 
 * Copyright (c) Andrew Valums
 * Licensed under the MIT license 
 */
(function() {
    function addEvent(el, type, fn) {
        if (el.addEventListener) {
            el.addEventListener(type, fn, false)
        } else {
            if (el.attachEvent) {
                el.attachEvent("on" + type, function() {
                    fn.call(el)
                })
            } else {
                throw new Error("not supported or DOM not loaded")
            }
        }
    }
    function addResizeEvent(fn) {
        var timeout;
        addEvent(window, "resize", function() {
            if (timeout) {
                clearTimeout(timeout)
            }
            timeout = setTimeout(fn, 100)
        })
    }
    if (document.documentElement.getBoundingClientRect) {
        var getOffset = function(el) {
            var box = el.getBoundingClientRect();
            var doc = el.ownerDocument;
            var body = doc.body;
            var docElem = doc.documentElement;
            var clientTop = docElem.clientTop || body.clientTop || 0;
            var clientLeft = docElem.clientLeft || body.clientLeft || 0;
            var zoom = 1;
            if (body.getBoundingClientRect) {
                var bound = body.getBoundingClientRect();
                zoom = (bound.right - bound.left) / body.clientWidth
            }
            if (zoom > 1) {
                clientTop = 0;
                clientLeft = 0
            }
            var top = box.top / zoom + (window.pageYOffset || docElem && docElem.scrollTop / zoom || body.scrollTop / zoom) - clientTop
              , left = box.left / zoom + (window.pageXOffset || docElem && docElem.scrollLeft / zoom || body.scrollLeft / zoom) - clientLeft;
            return {
                top: top,
                left: left
            }
        }
    } else {
        var getOffset = function(el) {
            var top = 0
              , left = 0;
            do {
                top += el.offsetTop || 0;
                left += el.offsetLeft || 0;
                el = el.offsetParent
            } while (el);return {
                left: left,
                top: top
            }
        }
    }
    function getBox(el) {
        var left, right, top, bottom;
        var offset = getOffset(el);
        left = offset.left;
        top = offset.top;
        right = left + el.offsetWidth;
        bottom = top + el.offsetHeight;
        return {
            left: left,
            right: right,
            top: top,
            bottom: bottom
        }
    }
    function addStyles(el, styles) {
        for (var name in styles) {
            if (styles.hasOwnProperty(name)) {
                el.style[name] = styles[name]
            }
        }
    }
    function copyLayout(from, to) {
        var box = getBox(from);
        addStyles(to, {
            position: "absolute",
            left: box.left + "px",
            top: box.top + "px",
            width: from.offsetWidth + "px",
            height: from.offsetHeight + "px"
        })
    }
    var toElement = (function() {
        var div = document.createElement("div");
        return function(html) {
            div.innerHTML = html;
            var el = div.firstChild;
            return div.removeChild(el)
        }
    }
    )();
    var getUID = (function() {
        var id = 0;
        return function() {
            return "ValumsAjaxUpload" + id++
        }
    }
    )();
    function fileFromPath(file) {
        return file.replace(/.*(\/|\\)/, "")
    }
    function getExt(file) {
        return (-1 !== file.indexOf(".")) ? file.replace(/.*[.]/, "") : ""
    }
    function hasClass(el, name) {
        var re = new RegExp("\\b" + name + "\\b");
        return re.test(el.className)
    }
    function addClass(el, name) {
        if (!hasClass(el, name)) {
            el.className += " " + name
        }
    }
    function removeClass(el, name) {
        var re = new RegExp("\\b" + name + "\\b");
        el.className = el.className.replace(re, "")
    }
    function removeNode(el) {
        el.parentNode.removeChild(el)
    }
    window.AjaxUpload = function(button, options) {
        this._settings = {
            action: "upload.php",
            name: "userfile",
            targetElement: "",
            multiple: false,
            data: {},
            autoSubmit: false,
            responseType: false,
            hoverClass: "hover",
            focusClass: "focus",
            disabledClass: "disabled",
            onChange: function(file, extension, element) {},
            onSubmit: function(file, extension) {},
            onComplete: function(file, response) {}
        };
        for (var i in options) {
            if (options.hasOwnProperty(i)) {
                this._settings[i] = options[i]
            }
        }
        if (button.jquery) {
            button = button[0]
        } else {
            if (typeof button == "string") {
                if (/^#.*/.test(button)) {
                    button = button.slice(1)
                }
                button = document.getElementById(button)
            }
        }
        if (!button || button.nodeType !== 1) {
            throw new Error("Please make sure that you're passing a valid element")
        }
        if (button.nodeName.toUpperCase() == "A") {
            addEvent(button, "click", function(e) {
                if (e && e.preventDefault) {
                    e.preventDefault()
                } else {
                    if (window.event) {
                        window.event.returnValue = false
                    }
                }
            })
        }
        this._button = button;
        this._input = null;
        this._div = null;
        this._disabled = false;
        this.enable();
        this._rerouteClicks()
    }
    ;
    AjaxUpload.prototype = {
        setData: function(data) {
            this._settings.data = data
        },
        disable: function() {
            addClass(this._button, this._settings.disabledClass);
            this._disabled = true;
            var nodeName = this._button.nodeName.toUpperCase();
            if (nodeName == "INPUT" || nodeName == "BUTTON") {
                this._button.setAttribute("disabled", "disabled")
            }
            if (this._input) {
                if (this._input.parentNode) {
                    this._input.parentNode.style.visibility = "hidden"
                }
            }
        },
        enable: function() {
            removeClass(this._button, this._settings.disabledClass);
            this._button.removeAttribute("disabled");
            this._disabled = false
        },
        _createInput: function() {
            var self = this;
            var input = document.createElement("input");
            input.setAttribute("type", "file");
            input.setAttribute("name", this._settings.name);
            if (this._settings.multiple) {
                input.setAttribute("multiple", "multiple")
            }
            addStyles(input, {
                position: "absolute",
                right: 0,
                margin: 0,
                padding: 0,
                fontSize: "480px",
                fontFamily: "sans-serif",
                cursor: "pointer"
            });
            var div = document.createElement("div");
            addStyles(div, {
                display: "block",
                position: "absolute",
                overflow: "hidden",
                margin: 0,
                padding: 0,
                opacity: 0,
                cursor: "pointer",
                direction: "ltr",
                zIndex: 2147483583
            });
            if (div.style.opacity !== "0") {
                if (typeof (div.filters) == "undefined") {
                    throw new Error("Opacity not supported by the browser")
                }
                div.style.filter = "alpha(opacity=0)"
            }
            this._div = div;
            addEvent(input, "change", function() {
                if (!input || input.value === "") {
                    return
                }
                var file = fileFromPath(input.value);
                var element = self._getInput();
                var parentElement = element.parent;
                var newParent = document.getElementById(self._settings.targetElement);
                newParent.appendChild(element);
                if (false === self._settings.onChange.call(self, file, getExt(file), element)) {
                    self._clearReference();
                    return
                }
                if (self._settings.autoSubmit) {
                    self.submit()
                }
                self._clearReference()
            });
            addEvent(input, "mouseover", function() {
                addClass(self._button, self._settings.hoverClass)
            });
            addEvent(input, "mouseout", function() {
                removeClass(self._button, self._settings.hoverClass);
                removeClass(self._button, self._settings.focusClass);
                if (input.parentNode) {
                    input.parentNode.style.visibility = "hidden"
                }
            });
            addEvent(input, "focus", function() {
                addClass(self._button, self._settings.focusClass)
            });
            addEvent(input, "blur", function() {
                removeClass(self._button, self._settings.focusClass)
            });
            div.appendChild(input);
            document.body.appendChild(div);
            this._input = input
        },
        _clearInput: function() {
            if (!this._input) {
                return
            }
            removeNode(this._input.parentNode);
            this._input = null;
            this._createInput();
            removeClass(this._button, this._settings.hoverClass);
            removeClass(this._button, this._settings.focusClass)
        },
        _clearReference: function() {
            if (!this._input) {
                return
            }
            this._div.style.visibility = "hidden";
            this._input = null;
            removeClass(this._button, this._settings.hoverClass);
            removeClass(this._button, this._settings.focusClass);
            this._createInput()
        },
        _getInput: function() {
            return this._input
        },
        _rerouteClicks: function() {
            var self = this;
            addEvent(self._button, "mouseover", function() {
                if (self._disabled) {
                    return
                }
                if (!self._input) {
                    self._createInput()
                }
                var div = self._input.parentNode;
                copyLayout(self._button, div);
                div.style.visibility = "visible"
            })
        },
        _createIframe: function() {
            var id = getUID();
            var iframe = toElement('<iframe src="javascript:false;" name="' + id + '" />');
            iframe.setAttribute("id", id);
            iframe.style.display = "none";
            document.body.appendChild(iframe);
            return iframe
        },
        _createForm: function(iframe) {
            var settings = this._settings;
            var form = toElement('<form method="post" enctype="multipart/form-data"></form>');
            form.setAttribute("action", settings.action);
            form.setAttribute("target", iframe.name);
            form.style.display = "none";
            document.body.appendChild(form);
            for (var prop in settings.data) {
                if (settings.data.hasOwnProperty(prop)) {
                    var el = document.createElement("input");
                    el.setAttribute("type", "hidden");
                    el.setAttribute("name", prop);
                    el.setAttribute("value", settings.data[prop]);
                    form.appendChild(el)
                }
            }
            return form
        },
        _getResponse: function(iframe, file) {
            var toDeleteFlag = false
              , self = this
              , settings = this._settings;
            addEvent(iframe, "load", function() {
                if (iframe.src == "javascript:'%3Chtml%3E%3C/html%3E';" || iframe.src == "javascript:'<html></html>';") {
                    if (toDeleteFlag) {
                        setTimeout(function() {
                            removeNode(iframe)
                        }, 0)
                    }
                    return
                }
                var doc = iframe.contentDocument ? iframe.contentDocument : window.frames[iframe.id].document;
                if (doc.readyState && doc.readyState != "complete") {
                    return
                }
                if (doc.body && doc.body.innerHTML == "false") {
                    return
                }
                var response;
                if (doc.XMLDocument) {
                    response = doc.XMLDocument
                } else {
                    if (doc.body) {
                        response = doc.body.innerHTML;
                        if (settings.responseType && settings.responseType.toLowerCase() == "json") {
                            if (doc.body.firstChild && doc.body.firstChild.nodeName.toUpperCase() == "PRE") {
                                doc.normalize();
                                response = doc.body.firstChild.firstChild.nodeValue
                            }
                            if (response) {
                                response = eval("(" + response + ")")
                            } else {
                                response = {}
                            }
                        }
                    } else {
                        response = doc
                    }
                }
                settings.onComplete.call(self, file, response);
                toDeleteFlag = true;
                iframe.src = "javascript:'<html></html>';"
            })
        },
        submit: function() {
            var self = this
              , settings = this._settings;
            if (!this._input || this._input.value === "") {
                return
            }
            var file = fileFromPath(this._input.value);
            if (false === settings.onSubmit.call(this, file, getExt(file))) {
                this._clearInput();
                return false
            }
            var iframe = this._createIframe();
            var form = this._createForm(iframe);
            removeNode(this._input.parentNode);
            removeClass(self._button, self._settings.hoverClass);
            removeClass(self._button, self._settings.focusClass);
            form.appendChild(this._input);
            form.submit();
            removeNode(form);
            form = null;
            removeNode(this._input);
            this._input = null;
            this._getResponse(iframe, file);
            this._createInput()
        }
    }
}
)();
/*!
 * perfect-scrollbar v1.4.0
 * (c) 2018 Hyunje Jun
 * @license MIT
 */
!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.PerfectScrollbar = e()
}(this, function() {
    "use strict";
    function t(t) {
        return getComputedStyle(t)
    }
    function e(t, e) {
        for (var i in e) {
            var r = e[i];
            "number" == typeof r && (r += "px"),
            t.style[i] = r
        }
        return t
    }
    function i(t) {
        var e = document.createElement("div");
        return e.className = t,
        e
    }
    function r(t, e) {
        if (!v)
            throw new Error("No element matching method supported");
        return v.call(t, e)
    }
    function l(t) {
        t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t)
    }
    function n(t, e) {
        return Array.prototype.filter.call(t.children, function(t) {
            return r(t, e)
        })
    }
    function o(t, e) {
        var i = t.element.classList
          , r = m.state.scrolling(e);
        i.contains(r) ? clearTimeout(Y[e]) : i.add(r)
    }
    function s(t, e) {
        Y[e] = setTimeout(function() {
            return t.isAlive && t.element.classList.remove(m.state.scrolling(e))
        }, t.settings.scrollingThreshold)
    }
    function a(t, e) {
        o(t, e),
        s(t, e)
    }
    function c(t) {
        if ("function" == typeof window.CustomEvent)
            return new CustomEvent(t);
        var e = document.createEvent("CustomEvent");
        return e.initCustomEvent(t, !1, !1, void 0),
        e
    }
    function h(t, e, i, r, l) {
        var n = i[0]
          , o = i[1]
          , s = i[2]
          , h = i[3]
          , u = i[4]
          , d = i[5];
        void 0 === r && (r = !0),
        void 0 === l && (l = !1);
        var f = t.element;
        t.reach[h] = null,
        f[s] < 1 && (t.reach[h] = "start"),
        f[s] > t[n] - t[o] - 1 && (t.reach[h] = "end"),
        e && (f.dispatchEvent(c("ps-scroll-" + h)),
        e < 0 ? f.dispatchEvent(c("ps-scroll-" + u)) : e > 0 && f.dispatchEvent(c("ps-scroll-" + d)),
        r && a(t, h)),
        t.reach[h] && (e || l) && f.dispatchEvent(c("ps-" + h + "-reach-" + t.reach[h]))
    }
    function u(t) {
        return parseInt(t, 10) || 0
    }
    function d(t) {
        return r(t, "input,[contenteditable]") || r(t, "select,[contenteditable]") || r(t, "textarea,[contenteditable]") || r(t, "button,[contenteditable]")
    }
    function f(e) {
        var i = t(e);
        return u(i.width) + u(i.paddingLeft) + u(i.paddingRight) + u(i.borderLeftWidth) + u(i.borderRightWidth)
    }
    function p(t, e) {
        return t.settings.minScrollbarLength && (e = Math.max(e, t.settings.minScrollbarLength)),
        t.settings.maxScrollbarLength && (e = Math.min(e, t.settings.maxScrollbarLength)),
        e
    }
    function b(t, i) {
        var r = {
            width: i.railXWidth
        }
          , l = Math.floor(t.scrollTop);
        i.isRtl ? r.left = i.negativeScrollAdjustment + t.scrollLeft + i.containerWidth - i.contentWidth : r.left = t.scrollLeft,
        i.isScrollbarXUsingBottom ? r.bottom = i.scrollbarXBottom - l : r.top = i.scrollbarXTop + l,
        e(i.scrollbarXRail, r);
        var n = {
            top: l,
            height: i.railYHeight
        };
        i.isScrollbarYUsingRight ? i.isRtl ? n.right = i.contentWidth - (i.negativeScrollAdjustment + t.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth : n.right = i.scrollbarYRight - t.scrollLeft : i.isRtl ? n.left = i.negativeScrollAdjustment + t.scrollLeft + 2 * i.containerWidth - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth : n.left = i.scrollbarYLeft + t.scrollLeft,
        e(i.scrollbarYRail, n),
        e(i.scrollbarX, {
            left: i.scrollbarXLeft,
            width: i.scrollbarXWidth - i.railBorderXWidth
        }),
        e(i.scrollbarY, {
            top: i.scrollbarYTop,
            height: i.scrollbarYHeight - i.railBorderYWidth
        })
    }
    function g(t, e) {
        function i(e) {
            b[d] = g + Y * (e[a] - v),
            o(t, f),
            R(t),
            e.stopPropagation(),
            e.preventDefault()
        }
        function r() {
            s(t, f),
            t[p].classList.remove(m.state.clicking),
            t.event.unbind(t.ownerDocument, "mousemove", i)
        }
        var l = e[0]
          , n = e[1]
          , a = e[2]
          , c = e[3]
          , h = e[4]
          , u = e[5]
          , d = e[6]
          , f = e[7]
          , p = e[8]
          , b = t.element
          , g = null
          , v = null
          , Y = null;
        t.event.bind(t[h], "mousedown", function(e) {
            g = b[d],
            v = e[a],
            Y = (t[n] - t[l]) / (t[c] - t[u]),
            t.event.bind(t.ownerDocument, "mousemove", i),
            t.event.once(t.ownerDocument, "mouseup", r),
            t[p].classList.add(m.state.clicking),
            e.stopPropagation(),
            e.preventDefault()
        })
    }
    var v = "undefined" != typeof Element && (Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector)
      , m = {
        main: "ps",
        element: {
            thumb: function(t) {
                return "ps__thumb-" + t
            },
            rail: function(t) {
                return "ps__rail-" + t
            },
            consuming: "ps__child--consume"
        },
        state: {
            focus: "ps--focus",
            clicking: "ps--clicking",
            active: function(t) {
                return "ps--active-" + t
            },
            scrolling: function(t) {
                return "ps--scrolling-" + t
            }
        }
    }
      , Y = {
        x: null,
        y: null
    }
      , X = function(t) {
        this.element = t,
        this.handlers = {}
    }
      , w = {
        isEmpty: {
            configurable: !0
        }
    };
    X.prototype.bind = function(t, e) {
        void 0 === this.handlers[t] && (this.handlers[t] = []),
        this.handlers[t].push(e),
        this.element.addEventListener(t, e, !1)
    }
    ,
    X.prototype.unbind = function(t, e) {
        var i = this;
        this.handlers[t] = this.handlers[t].filter(function(r) {
            return !(!e || r === e) || (i.element.removeEventListener(t, r, !1),
            !1)
        })
    }
    ,
    X.prototype.unbindAll = function() {
        var t = this;
        for (var e in t.handlers)
            t.unbind(e)
    }
    ,
    w.isEmpty.get = function() {
        var t = this;
        return Object.keys(this.handlers).every(function(e) {
            return 0 === t.handlers[e].length
        })
    }
    ,
    Object.defineProperties(X.prototype, w);
    var y = function() {
        this.eventElements = []
    };
    y.prototype.eventElement = function(t) {
        var e = this.eventElements.filter(function(e) {
            return e.element === t
        })[0];
        return e || (e = new X(t),
        this.eventElements.push(e)),
        e
    }
    ,
    y.prototype.bind = function(t, e, i) {
        this.eventElement(t).bind(e, i)
    }
    ,
    y.prototype.unbind = function(t, e, i) {
        var r = this.eventElement(t);
        r.unbind(e, i),
        r.isEmpty && this.eventElements.splice(this.eventElements.indexOf(r), 1)
    }
    ,
    y.prototype.unbindAll = function() {
        this.eventElements.forEach(function(t) {
            return t.unbindAll()
        }),
        this.eventElements = []
    }
    ,
    y.prototype.once = function(t, e, i) {
        var r = this.eventElement(t)
          , l = function(t) {
            r.unbind(e, l),
            i(t)
        };
        r.bind(e, l)
    }
    ;
    var W = function(t, e, i, r, l) {
        void 0 === r && (r = !0),
        void 0 === l && (l = !1);
        var n;
        if ("top" === e)
            n = ["contentHeight", "containerHeight", "scrollTop", "y", "up", "down"];
        else {
            if ("left" !== e)
                throw new Error("A proper axis should be provided");
            n = ["contentWidth", "containerWidth", "scrollLeft", "x", "left", "right"]
        }
        h(t, i, n, r, l)
    }
      , L = {
        isWebKit: "undefined" != typeof document && "WebkitAppearance"in document.documentElement.style,
        supportsTouch: "undefined" != typeof window && ("ontouchstart"in window || window.DocumentTouch && document instanceof window.DocumentTouch),
        supportsIePointer: "undefined" != typeof navigator && navigator.msMaxTouchPoints,
        isChrome: "undefined" != typeof navigator && /Chrome/i.test(navigator && navigator.userAgent)
    }
      , R = function(t) {
        var e = t.element
          , i = Math.floor(e.scrollTop);
        t.containerWidth = e.clientWidth,
        t.containerHeight = e.clientHeight,
        t.contentWidth = e.scrollWidth,
        t.contentHeight = e.scrollHeight,
        e.contains(t.scrollbarXRail) || (n(e, m.element.rail("x")).forEach(function(t) {
            return l(t)
        }),
        e.appendChild(t.scrollbarXRail)),
        e.contains(t.scrollbarYRail) || (n(e, m.element.rail("y")).forEach(function(t) {
            return l(t)
        }),
        e.appendChild(t.scrollbarYRail)),
        !t.settings.suppressScrollX && t.containerWidth + t.settings.scrollXMarginOffset < t.contentWidth ? (t.scrollbarXActive = !0,
        t.railXWidth = t.containerWidth - t.railXMarginWidth,
        t.railXRatio = t.containerWidth / t.railXWidth,
        t.scrollbarXWidth = p(t, u(t.railXWidth * t.containerWidth / t.contentWidth)),
        t.scrollbarXLeft = u((t.negativeScrollAdjustment + e.scrollLeft) * (t.railXWidth - t.scrollbarXWidth) / (t.contentWidth - t.containerWidth))) : t.scrollbarXActive = !1,
        !t.settings.suppressScrollY && t.containerHeight + t.settings.scrollYMarginOffset < t.contentHeight ? (t.scrollbarYActive = !0,
        t.railYHeight = t.containerHeight - t.railYMarginHeight,
        t.railYRatio = t.containerHeight / t.railYHeight,
        t.scrollbarYHeight = p(t, u(t.railYHeight * t.containerHeight / t.contentHeight)),
        t.scrollbarYTop = u(i * (t.railYHeight - t.scrollbarYHeight) / (t.contentHeight - t.containerHeight))) : t.scrollbarYActive = !1,
        t.scrollbarXLeft >= t.railXWidth - t.scrollbarXWidth && (t.scrollbarXLeft = t.railXWidth - t.scrollbarXWidth),
        t.scrollbarYTop >= t.railYHeight - t.scrollbarYHeight && (t.scrollbarYTop = t.railYHeight - t.scrollbarYHeight),
        b(e, t),
        t.scrollbarXActive ? e.classList.add(m.state.active("x")) : (e.classList.remove(m.state.active("x")),
        t.scrollbarXWidth = 0,
        t.scrollbarXLeft = 0,
        e.scrollLeft = 0),
        t.scrollbarYActive ? e.classList.add(m.state.active("y")) : (e.classList.remove(m.state.active("y")),
        t.scrollbarYHeight = 0,
        t.scrollbarYTop = 0,
        e.scrollTop = 0)
    }
      , T = {
        "click-rail": function(t) {
            t.event.bind(t.scrollbarY, "mousedown", function(t) {
                return t.stopPropagation()
            }),
            t.event.bind(t.scrollbarYRail, "mousedown", function(e) {
                var i = e.pageY - window.pageYOffset - t.scrollbarYRail.getBoundingClientRect().top > t.scrollbarYTop ? 1 : -1;
                t.element.scrollTop += i * t.containerHeight,
                R(t),
                e.stopPropagation()
            }),
            t.event.bind(t.scrollbarX, "mousedown", function(t) {
                return t.stopPropagation()
            }),
            t.event.bind(t.scrollbarXRail, "mousedown", function(e) {
                var i = e.pageX - window.pageXOffset - t.scrollbarXRail.getBoundingClientRect().left > t.scrollbarXLeft ? 1 : -1;
                t.element.scrollLeft += i * t.containerWidth,
                R(t),
                e.stopPropagation()
            })
        },
        "drag-thumb": function(t) {
            g(t, ["containerWidth", "contentWidth", "pageX", "railXWidth", "scrollbarX", "scrollbarXWidth", "scrollLeft", "x", "scrollbarXRail"]),
            g(t, ["containerHeight", "contentHeight", "pageY", "railYHeight", "scrollbarY", "scrollbarYHeight", "scrollTop", "y", "scrollbarYRail"])
        },
        keyboard: function(t) {
            function e(e, r) {
                var l = Math.floor(i.scrollTop);
                if (0 === e) {
                    if (!t.scrollbarYActive)
                        return !1;
                    if (0 === l && r > 0 || l >= t.contentHeight - t.containerHeight && r < 0)
                        return !t.settings.wheelPropagation
                }
                var n = i.scrollLeft;
                if (0 === r) {
                    if (!t.scrollbarXActive)
                        return !1;
                    if (0 === n && e < 0 || n >= t.contentWidth - t.containerWidth && e > 0)
                        return !t.settings.wheelPropagation
                }
                return !0
            }
            var i = t.element
              , l = function() {
                return r(i, ":hover")
            }
              , n = function() {
                return r(t.scrollbarX, ":focus") || r(t.scrollbarY, ":focus")
            };
            t.event.bind(t.ownerDocument, "keydown", function(r) {
                if (!(r.isDefaultPrevented && r.isDefaultPrevented() || r.defaultPrevented) && (l() || n())) {
                    var o = document.activeElement ? document.activeElement : t.ownerDocument.activeElement;
                    if (o) {
                        if ("IFRAME" === o.tagName)
                            o = o.contentDocument.activeElement;
                        else
                            for (; o.shadowRoot; )
                                o = o.shadowRoot.activeElement;
                        if (d(o))
                            return
                    }
                    var s = 0
                      , a = 0;
                    switch (r.which) {
                    case 37:
                        s = r.metaKey ? -t.contentWidth : r.altKey ? -t.containerWidth : -30;
                        break;
                    case 38:
                        a = r.metaKey ? t.contentHeight : r.altKey ? t.containerHeight : 30;
                        break;
                    case 39:
                        s = r.metaKey ? t.contentWidth : r.altKey ? t.containerWidth : 30;
                        break;
                    case 40:
                        a = r.metaKey ? -t.contentHeight : r.altKey ? -t.containerHeight : -30;
                        break;
                    case 32:
                        a = r.shiftKey ? t.containerHeight : -t.containerHeight;
                        break;
                    case 33:
                        a = t.containerHeight;
                        break;
                    case 34:
                        a = -t.containerHeight;
                        break;
                    case 36:
                        a = t.contentHeight;
                        break;
                    case 35:
                        a = -t.contentHeight;
                        break;
                    default:
                        return
                    }
                    t.settings.suppressScrollX && 0 !== s || t.settings.suppressScrollY && 0 !== a || (i.scrollTop -= a,
                    i.scrollLeft += s,
                    R(t),
                    e(s, a) && r.preventDefault())
                }
            })
        },
        wheel: function(e) {
            function i(t, i) {
                var r = Math.floor(o.scrollTop)
                  , l = 0 === o.scrollTop
                  , n = r + o.offsetHeight === o.scrollHeight
                  , s = 0 === o.scrollLeft
                  , a = o.scrollLeft + o.offsetWidth === o.scrollWidth;
                return !(Math.abs(i) > Math.abs(t) ? l || n : s || a) || !e.settings.wheelPropagation
            }
            function r(t) {
                var e = t.deltaX
                  , i = -1 * t.deltaY;
                return void 0 !== e && void 0 !== i || (e = -1 * t.wheelDeltaX / 6,
                i = t.wheelDeltaY / 6),
                t.deltaMode && 1 === t.deltaMode && (e *= 10,
                i *= 10),
                e !== e && i !== i && (e = 0,
                i = t.wheelDelta),
                t.shiftKey ? [-i, -e] : [e, i]
            }
            function l(e, i, r) {
                if (!L.isWebKit && o.querySelector("select:focus"))
                    return !0;
                if (!o.contains(e))
                    return !1;
                for (var l = e; l && l !== o; ) {
                    if (l.classList.contains(m.element.consuming))
                        return !0;
                    var n = t(l);
                    if ([n.overflow, n.overflowX, n.overflowY].join("").match(/(scroll|auto)/)) {
                        var s = l.scrollHeight - l.clientHeight;
                        if (s > 0 && !(0 === l.scrollTop && r > 0 || l.scrollTop === s && r < 0))
                            return !0;
                        var a = l.scrollWidth - l.clientWidth;
                        if (a > 0 && !(0 === l.scrollLeft && i < 0 || l.scrollLeft === a && i > 0))
                            return !0
                    }
                    l = l.parentNode
                }
                return !1
            }
            function n(t) {
                var n = r(t)
                  , s = n[0]
                  , a = n[1];
                if (!l(t.target, s, a)) {
                    var c = !1;
                    e.settings.useBothWheelAxes ? e.scrollbarYActive && !e.scrollbarXActive ? (a ? o.scrollTop -= a * e.settings.wheelSpeed : o.scrollTop += s * e.settings.wheelSpeed,
                    c = !0) : e.scrollbarXActive && !e.scrollbarYActive && (s ? o.scrollLeft += s * e.settings.wheelSpeed : o.scrollLeft -= a * e.settings.wheelSpeed,
                    c = !0) : (o.scrollTop -= a * e.settings.wheelSpeed,
                    o.scrollLeft += s * e.settings.wheelSpeed),
                    R(e),
                    (c = c || i(s, a)) && !t.ctrlKey && (t.stopPropagation(),
                    t.preventDefault())
                }
            }
            var o = e.element;
            void 0 !== window.onwheel ? e.event.bind(o, "wheel", n) : void 0 !== window.onmousewheel && e.event.bind(o, "mousewheel", n)
        },
        touch: function(e) {
            function i(t, i) {
                var r = Math.floor(h.scrollTop)
                  , l = h.scrollLeft
                  , n = Math.abs(t)
                  , o = Math.abs(i);
                if (o > n) {
                    if (i < 0 && r === e.contentHeight - e.containerHeight || i > 0 && 0 === r)
                        return 0 === window.scrollY && i > 0 && L.isChrome
                } else if (n > o && (t < 0 && l === e.contentWidth - e.containerWidth || t > 0 && 0 === l))
                    return !0;
                return !0
            }
            function r(t, i) {
                h.scrollTop -= i,
                h.scrollLeft -= t,
                R(e)
            }
            function l(t) {
                return t.targetTouches ? t.targetTouches[0] : t
            }
            function n(t) {
                return !(t.pointerType && "pen" === t.pointerType && 0 === t.buttons || (!t.targetTouches || 1 !== t.targetTouches.length) && (!t.pointerType || "mouse" === t.pointerType || t.pointerType === t.MSPOINTER_TYPE_MOUSE))
            }
            function o(t) {
                if (n(t)) {
                    var e = l(t);
                    u.pageX = e.pageX,
                    u.pageY = e.pageY,
                    d = (new Date).getTime(),
                    null !== p && clearInterval(p)
                }
            }
            function s(e, i, r) {
                if (!h.contains(e))
                    return !1;
                for (var l = e; l && l !== h; ) {
                    if (l.classList.contains(m.element.consuming))
                        return !0;
                    var n = t(l);
                    if ([n.overflow, n.overflowX, n.overflowY].join("").match(/(scroll|auto)/)) {
                        var o = l.scrollHeight - l.clientHeight;
                        if (o > 0 && !(0 === l.scrollTop && r > 0 || l.scrollTop === o && r < 0))
                            return !0;
                        var s = l.scrollLeft - l.clientWidth;
                        if (s > 0 && !(0 === l.scrollLeft && i < 0 || l.scrollLeft === s && i > 0))
                            return !0
                    }
                    l = l.parentNode
                }
                return !1
            }
            function a(t) {
                if (n(t)) {
                    var e = l(t)
                      , o = {
                        pageX: e.pageX,
                        pageY: e.pageY
                    }
                      , a = o.pageX - u.pageX
                      , c = o.pageY - u.pageY;
                    if (s(t.target, a, c))
                        return;
                    r(a, c),
                    u = o;
                    var h = (new Date).getTime()
                      , p = h - d;
                    p > 0 && (f.x = a / p,
                    f.y = c / p,
                    d = h),
                    i(a, c) && t.preventDefault()
                }
            }
            function c() {
                e.settings.swipeEasing && (clearInterval(p),
                p = setInterval(function() {
                    e.isInitialized ? clearInterval(p) : f.x || f.y ? Math.abs(f.x) < .01 && Math.abs(f.y) < .01 ? clearInterval(p) : (r(30 * f.x, 30 * f.y),
                    f.x *= .8,
                    f.y *= .8) : clearInterval(p)
                }, 10))
            }
            if (L.supportsTouch || L.supportsIePointer) {
                var h = e.element
                  , u = {}
                  , d = 0
                  , f = {}
                  , p = null;
                L.supportsTouch ? (e.event.bind(h, "touchstart", o),
                e.event.bind(h, "touchmove", a),
                e.event.bind(h, "touchend", c)) : L.supportsIePointer && (window.PointerEvent ? (e.event.bind(h, "pointerdown", o),
                e.event.bind(h, "pointermove", a),
                e.event.bind(h, "pointerup", c)) : window.MSPointerEvent && (e.event.bind(h, "MSPointerDown", o),
                e.event.bind(h, "MSPointerMove", a),
                e.event.bind(h, "MSPointerUp", c)))
            }
        }
    }
      , H = function(r, l) {
        var n = this;
        if (void 0 === l && (l = {}),
        "string" == typeof r && (r = document.querySelector(r)),
        !r || !r.nodeName)
            throw new Error("no element is specified to initialize PerfectScrollbar");
        this.element = r,
        r.classList.add(m.main),
        this.settings = {
            handlers: ["click-rail", "drag-thumb", "keyboard", "wheel", "touch"],
            maxScrollbarLength: null,
            minScrollbarLength: 30,
            scrollingThreshold: 1e3,
            scrollXMarginOffset: 0,
            scrollYMarginOffset: 0,
            suppressScrollX: !1,
            suppressScrollY: !1,
            swipeEasing: !0,
            useBothWheelAxes: !1,
            wheelPropagation: !0,
            wheelSpeed: 1
        };
        for (var o in l)
            n.settings[o] = l[o];
        this.containerWidth = null,
        this.containerHeight = null,
        this.contentWidth = null,
        this.contentHeight = null;
        var s = function() {
            return r.classList.add(m.state.focus)
        }
          , a = function() {
            return r.classList.remove(m.state.focus)
        };
        this.isRtl = "rtl" === t(r).direction,
        this.isNegativeScroll = function() {
            var t = r.scrollLeft
              , e = null;
            return r.scrollLeft = -1,
            e = r.scrollLeft < 0,
            r.scrollLeft = t,
            e
        }(),
        this.negativeScrollAdjustment = this.isNegativeScroll ? r.scrollWidth - r.clientWidth : 0,
        this.event = new y,
        this.ownerDocument = r.ownerDocument || document,
        this.scrollbarXRail = i(m.element.rail("x")),
        r.appendChild(this.scrollbarXRail),
        this.scrollbarX = i(m.element.thumb("x")),
        this.scrollbarXRail.appendChild(this.scrollbarX),
        this.scrollbarX.setAttribute("tabindex", 0),
        this.event.bind(this.scrollbarX, "focus", s),
        this.event.bind(this.scrollbarX, "blur", a),
        this.scrollbarXActive = null,
        this.scrollbarXWidth = null,
        this.scrollbarXLeft = null;
        var c = t(this.scrollbarXRail);
        this.scrollbarXBottom = parseInt(c.bottom, 10),
        isNaN(this.scrollbarXBottom) ? (this.isScrollbarXUsingBottom = !1,
        this.scrollbarXTop = u(c.top)) : this.isScrollbarXUsingBottom = !0,
        this.railBorderXWidth = u(c.borderLeftWidth) + u(c.borderRightWidth),
        e(this.scrollbarXRail, {
            display: "block"
        }),
        this.railXMarginWidth = u(c.marginLeft) + u(c.marginRight),
        e(this.scrollbarXRail, {
            display: ""
        }),
        this.railXWidth = null,
        this.railXRatio = null,
        this.scrollbarYRail = i(m.element.rail("y")),
        r.appendChild(this.scrollbarYRail),
        this.scrollbarY = i(m.element.thumb("y")),
        this.scrollbarYRail.appendChild(this.scrollbarY),
        this.scrollbarY.setAttribute("tabindex", 0),
        this.event.bind(this.scrollbarY, "focus", s),
        this.event.bind(this.scrollbarY, "blur", a),
        this.scrollbarYActive = null,
        this.scrollbarYHeight = null,
        this.scrollbarYTop = null;
        var h = t(this.scrollbarYRail);
        this.scrollbarYRight = parseInt(h.right, 10),
        isNaN(this.scrollbarYRight) ? (this.isScrollbarYUsingRight = !1,
        this.scrollbarYLeft = u(h.left)) : this.isScrollbarYUsingRight = !0,
        this.scrollbarYOuterWidth = this.isRtl ? f(this.scrollbarY) : null,
        this.railBorderYWidth = u(h.borderTopWidth) + u(h.borderBottomWidth),
        e(this.scrollbarYRail, {
            display: "block"
        }),
        this.railYMarginHeight = u(h.marginTop) + u(h.marginBottom),
        e(this.scrollbarYRail, {
            display: ""
        }),
        this.railYHeight = null,
        this.railYRatio = null,
        this.reach = {
            x: r.scrollLeft <= 0 ? "start" : r.scrollLeft >= this.contentWidth - this.containerWidth ? "end" : null,
            y: r.scrollTop <= 0 ? "start" : r.scrollTop >= this.contentHeight - this.containerHeight ? "end" : null
        },
        this.isAlive = !0,
        this.settings.handlers.forEach(function(t) {
            return T[t](n)
        }),
        this.lastScrollTop = Math.floor(r.scrollTop),
        this.lastScrollLeft = r.scrollLeft,
        this.event.bind(this.element, "scroll", function(t) {
            return n.onScroll(t)
        }),
        R(this)
    };
    return H.prototype.update = function() {
        this.isAlive && (this.negativeScrollAdjustment = this.isNegativeScroll ? this.element.scrollWidth - this.element.clientWidth : 0,
        e(this.scrollbarXRail, {
            display: "block"
        }),
        e(this.scrollbarYRail, {
            display: "block"
        }),
        this.railXMarginWidth = u(t(this.scrollbarXRail).marginLeft) + u(t(this.scrollbarXRail).marginRight),
        this.railYMarginHeight = u(t(this.scrollbarYRail).marginTop) + u(t(this.scrollbarYRail).marginBottom),
        e(this.scrollbarXRail, {
            display: "none"
        }),
        e(this.scrollbarYRail, {
            display: "none"
        }),
        R(this),
        W(this, "top", 0, !1, !0),
        W(this, "left", 0, !1, !0),
        e(this.scrollbarXRail, {
            display: ""
        }),
        e(this.scrollbarYRail, {
            display: ""
        }))
    }
    ,
    H.prototype.onScroll = function(t) {
        this.isAlive && (R(this),
        W(this, "top", this.element.scrollTop - this.lastScrollTop),
        W(this, "left", this.element.scrollLeft - this.lastScrollLeft),
        this.lastScrollTop = Math.floor(this.element.scrollTop),
        this.lastScrollLeft = this.element.scrollLeft)
    }
    ,
    H.prototype.destroy = function() {
        this.isAlive && (this.event.unbindAll(),
        l(this.scrollbarX),
        l(this.scrollbarY),
        l(this.scrollbarXRail),
        l(this.scrollbarYRail),
        this.removePsClasses(),
        this.element = null,
        this.scrollbarX = null,
        this.scrollbarY = null,
        this.scrollbarXRail = null,
        this.scrollbarYRail = null,
        this.isAlive = !1)
    }
    ,
    H.prototype.removePsClasses = function() {
        this.element.className = this.element.className.split(" ").filter(function(t) {
            return !t.match(/^ps([-_].+|)$/)
        }).join(" ")
    }
    ,
    H
});
/*!
 * jQuery.timers - Timer abstractions for jQuery
 * Written by Blair Mitchelmore (blair DOT mitchelmore AT gmail DOT com)
 * Licensed under the WTFPL (http://sam.zoy.org/wtfpl/).
 * Date: 2009/10/16
 *
 * @author Blair Mitchelmore
 * @version 1.2
 *
 **/
jQuery.fn.extend({
    everyTime: function(a, b, c, d) {
        return this.each(function() {
            jQuery.timer.add(this, a, b, c, d)
        })
    },
    oneTime: function(a, b, c) {
        return this.each(function() {
            jQuery.timer.add(this, a, b, c, 1)
        })
    },
    stopTime: function(a, b) {
        return this.each(function() {
            jQuery.timer.remove(this, a, b)
        })
    }
});
jQuery.extend({
    timer: {
        global: [],
        guid: 1,
        dataKey: "jQuery.timer",
        regex: /^([0-9]+(?:\.[0-9]*)?)\s*(.*s)?$/,
        powers: {
            ms: 1,
            cs: 10,
            ds: 100,
            s: 1000,
            das: 10000,
            hs: 100000,
            ks: 1000000
        },
        timeParse: function(c) {
            if (c == undefined || c == null) {
                return null
            }
            var a = this.regex.exec(jQuery.trim(c.toString()));
            if (a[2]) {
                var b = parseFloat(a[1]);
                var d = this.powers[a[2]] || 1;
                return b * d
            } else {
                return c
            }
        },
        add: function(d, b, c, f, h) {
            var a = 0;
            if (jQuery.isFunction(c)) {
                if (!h) {
                    h = f
                }
                f = c;
                c = b
            }
            b = jQuery.timer.timeParse(b);
            if (typeof b != "number" || isNaN(b) || b < 0) {
                return
            }
            if (typeof h != "number" || isNaN(h) || h < 0) {
                h = 0
            }
            h = h || 0;
            var g = jQuery.data(d, this.dataKey) || jQuery.data(d, this.dataKey, {});
            if (!g[c]) {
                g[c] = {}
            }
            f.timerID = f.timerID || this.guid++;
            var e = function() {
                if ((++a > h && h !== 0) || f.call(d, a) === false) {
                    jQuery.timer.remove(d, c, f)
                }
            };
            e.timerID = f.timerID;
            if (!g[c][f.timerID]) {
                g[c][f.timerID] = window.setInterval(e, b)
            }
            this.global.push(d)
        },
        remove: function(c, b, d) {
            var e = jQuery.data(c, this.dataKey), a;
            if (e) {
                if (!b) {
                    for (b in e) {
                        this.remove(c, b, d)
                    }
                } else {
                    if (e[b]) {
                        if (d) {
                            if (d.timerID) {
                                window.clearInterval(e[b][d.timerID]);
                                delete e[b][d.timerID]
                            }
                        } else {
                            for (var d in e[b]) {
                                window.clearInterval(e[b][d]);
                                delete e[b][d]
                            }
                        }
                        for (a in e[b]) {
                            break
                        }
                        if (!a) {
                            a = null;
                            delete e[b]
                        }
                    }
                }
                for (a in e) {
                    break
                }
                if (!a) {
                    jQuery.removeData(c, this.dataKey)
                }
            }
        }
    }
});
jQuery(window).bind("unload", function() {
    jQuery.each(jQuery.timer.global, function(a, b) {
        jQuery.timer.remove(b)
    })
});
/*! jTemplates 0.7.8 (http://jtemplates.tpython.com) Copyright (c) 2009 Tomasz Gloc */
eval(function(p, a, c, k, e, r) {
    e = function(c) {
        return (c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
    }
    ;
    if (!''.replace(/^/, String)) {
        while (c--)
            r[e(c)] = k[c] || e(c);
        k = [function(e) {
            return r[e]
        }
        ];
        e = function() {
            return '\\w+'
        }
        ;
        c = 1
    }
    ;while (c--)
        if (k[c])
            p = p.replace(new RegExp('\\b' + e(c) + '\\b','g'), k[c]);
    return p
}('a(37.b&&!37.b.38){(9(b){6 m=9(s,A,f){5.1M=[];5.1u={};5.2p=E;5.1N={};5.1c={};5.f=b.1m({1Z:1f,3a:1O,2q:1f,2r:1f,3b:1O,3c:1O},f);5.1v=(5.f.1v!==F)?(5.f.1v):(13.20);5.Y=(5.f.Y!==F)?(5.f.Y):(13.3d);5.3e(s,A);a(s){5.1w(5.1c[\'21\'],A,5.f)}5.1c=E};m.y.2s=\'0.7.8\';m.R=1O;m.y.3e=9(s,A){6 2t=/\\{#14 *(\\w*?)( .*)*\\}/g;6 22,1x,M;6 1y=E;6 2u=[];2v((22=2t.3N(s))!=E){1y=2t.1y;1x=22[1];M=s.2w(\'{#/14 \'+1x+\'}\',1y);a(M==-1){C j Z(\'15: m "\'+1x+\'" 2x 23 3O.\');}5.1c[1x]=s.2y(1y,M);2u[1x]=13.2z(22[2])}a(1y===E){5.1c[\'21\']=s;c}N(6 i 24 5.1c){a(i!=\'21\'){5.1N[i]=j m()}}N(6 i 24 5.1c){a(i!=\'21\'){5.1N[i].1w(5.1c[i],b.1m({},A||{},5.1N||{}),b.1m({},5.f,2u[i]));5.1c[i]=E}}};m.y.1w=9(s,A,f){a(s==F){5.1M.B(j 1g(\'\',1,5));c}s=s.U(/[\\n\\r]/g,\'\');s=s.U(/\\{\\*.*?\\*\\}/g,\'\');5.2p=b.1m({},5.1N||{},A||{});5.f=j 2A(f);6 p=5.1M;6 1P=s.1h(/\\{#.*?\\}/g);6 16=0,M=0;6 e;6 1i=0;6 25=0;N(6 i=0,l=(1P)?(1P.V):(0);i<l;++i){6 17=1P[i];a(1i){M=s.2w(\'{#/1z}\');a(M==-1){C j Z("15: 3P 1Q 3f 1z.");}a(M>16){p.B(j 1g(s.2y(16,M),1,5))}16=M+11;1i=0;i=b.3Q(\'{#/1z}\',1P);1R}M=s.2w(17,16);a(M>16){p.B(j 1g(s.2y(16,M),1i,5))}6 3R=17.1h(/\\{#([\\w\\/]+).*?\\}/);6 26=I.$1;2B(26){q\'3S\':++25;p.27();q\'a\':e=j 1A(17,p);p.B(e);p=e;D;q\'J\':p.27();D;q\'/a\':2v(25){p=p.28();--25}q\'/N\':q\'/29\':p=p.28();D;q\'29\':e=j 1n(17,p,5);p.B(e);p=e;D;q\'N\':e=2a(17,p,5);p.B(e);p=e;D;q\'1R\':q\'D\':p.B(j 18(26));D;q\'2C\':p.B(j 2D(17,5.2p));D;q\'h\':p.B(j 2E(17));D;q\'2F\':p.B(j 2G(17));D;q\'3T\':p.B(j 1g(\'{\',1,5));D;q\'3U\':p.B(j 1g(\'}\',1,5));D;q\'1z\':1i=1;D;q\'/1z\':a(m.R){C j Z("15: 3V 2H 3f 1z.");}D;2I:a(m.R){C j Z(\'15: 3W 3X: \'+26+\'.\');}}16=M+17.V}a(s.V>16){p.B(j 1g(s.3Y(16),1i,5))}};m.y.K=9(d,h,z,H){++H;6 $T=d,2b,2c;a(5.f.3b){$T=5.1v(d,{2d:(5.f.3a&&H==1),1S:5.f.1Z},5.Y)}a(!5.f.3c){2b=5.1u;2c=h}J{2b=5.1v(5.1u,{2d:(5.f.2q),1S:1f},5.Y);2c=5.1v(h,{2d:(5.f.2q&&H==1),1S:1f},5.Y)}6 $P=b.1m({},2b,2c);6 $Q=(z!=F)?(z):({});$Q.2s=5.2s;6 19=\'\';N(6 i=0,l=5.1M.V;i<l;++i){19+=5.1M[i].K($T,$P,$Q,H)}--H;c 19};m.y.2J=9(1T,1o){5.1u[1T]=1o};13=9(){};13.3d=9(3g){c 3g.U(/&/g,\'&3Z;\').U(/>/g,\'&3h;\').U(/</g,\'&3i;\').U(/"/g,\'&40;\').U(/\'/g,\'&#39;\')};13.20=9(d,1B,Y){a(d==E){c d}2B(d.2K){q 2A:6 o={};N(6 i 24 d){o[i]=13.20(d[i],1B,Y)}a(!1B.1S){a(d.41("2L"))o.2L=d.2L}c o;q 42:6 o=[];N(6 i=0,l=d.V;i<l;++i){o[i]=13.20(d[i],1B,Y)}c o;q 2M:c(1B.2d)?(Y(d)):(d);q 43:a(1B.1S){a(m.R)C j Z("15: 44 45 23 46.");J c F}2I:c d}};13.2z=9(2e){a(2e===E||2e===F){c{}}6 o=2e.47(/[= ]/);a(o[0]===\'\'){o.48()}6 2N={};N(6 i=0,l=o.V;i<l;i+=2){2N[o[i]]=o[i+1]}c 2N};6 1g=9(2O,1i,14){5.2f=2O;5.3j=1i;5.1d=14};1g.y.K=9(d,h,z,H){6 2g=5.2f;a(!5.3j){6 2P=5.1d;6 $T=d;6 $P=h;6 $Q=z;2g=2g.U(/\\{(.*?)\\}/g,9(49,3k){1C{6 1D=10(3k);a(1E 1D==\'9\'){a(2P.f.1Z||!2P.f.2r){c\'\'}J{1D=1D($T,$P,$Q)}}c(1D===F)?(""):(2M(1D))}1F(e){a(m.R){a(e 1G 18)e.1j="4a";C e;}c""}})}c 2g};6 1A=9(L,1H){5.2h=1H;L.1h(/\\{#(?:J)*a (.*?)\\}/);5.3l=I.$1;5.1p=[];5.1q=[];5.1I=5.1p};1A.y.B=9(e){5.1I.B(e)};1A.y.28=9(){c 5.2h};1A.y.27=9(){5.1I=5.1q};1A.y.K=9(d,h,z,H){6 $T=d;6 $P=h;6 $Q=z;6 19=\'\';1C{6 2Q=(10(5.3l))?(5.1p):(5.1q);N(6 i=0,l=2Q.V;i<l;++i){19+=2Q[i].K(d,h,z,H)}}1F(e){a(m.R||(e 1G 18))C e;}c 19};2a=9(L,1H,14){a(L.1h(/\\{#N (\\w+?) *= *(\\S+?) +4b +(\\S+?) *(?:12=(\\S+?))*\\}/)){L=\'{#29 2a.3m 3n \'+I.$1+\' 2H=\'+(I.$2||0)+\' 1Q=\'+(I.$3||-1)+\' 12=\'+(I.$4||1)+\' u=$T}\';c j 1n(L,1H,14)}J{C j Z(\'15: 4c 4d "3o": \'+L);}};2a.3m=9(i){c i};6 1n=9(L,1H,14){5.2h=1H;5.1d=14;L.1h(/\\{#29 (.+?) 3n (\\w+?)( .+)*\\}/);5.3p=I.$1;5.x=I.$2;5.W=I.$3||E;5.W=13.2z(5.W);5.1p=[];5.1q=[];5.1I=5.1p};1n.y.B=9(e){5.1I.B(e)};1n.y.28=9(){c 5.2h};1n.y.27=9(){5.1I=5.1q};1n.y.K=9(d,h,z,H){1C{6 $T=d;6 $P=h;6 $Q=z;6 1r=10(5.3p);6 1U=[];6 1J=1E 1r;a(1J==\'3q\'){6 2R=[];b.1e(1r,9(k,v){1U.B(k);2R.B(v)});1r=2R}6 u=(5.W.u!==F)?(10(5.W.u)):(($T!=E)?($T):({}));6 s=1V(10(5.W.2H)||0),e;6 12=1V(10(5.W.12)||1);a(1J!=\'9\'){e=1r.V}J{a(5.W.1Q===F||5.W.1Q===E){e=1V.4e}J{e=1V(10(5.W.1Q))+((12>0)?(1):(-1))}}6 19=\'\';6 i,l;a(5.W.1W){6 2S=s+1V(10(5.W.1W));e=(2S>e)?(e):(2S)}a((e>s&&12>0)||(e<s&&12<0)){6 1K=0;6 3r=(1J!=\'9\')?(4f.4g((e-s)/12)):F;6 1s,1k;N(;((12>0)?(s<e):(s>e));s+=12,++1K){1s=1U[s];a(1J!=\'9\'){1k=1r[s]}J{1k=1r(s);a(1k===F||1k===E){D}}a((1E 1k==\'9\')&&(5.1d.f.1Z||!5.1d.f.2r)){1R}a((1J==\'3q\')&&(1s 24 2A)){1R}6 3s=u[5.x];u[5.x]=1k;u[5.x+\'$3t\']=s;u[5.x+\'$1K\']=1K;u[5.x+\'$3u\']=(1K==0);u[5.x+\'$3v\']=(s+12>=e);u[5.x+\'$3w\']=3r;u[5.x+\'$1U\']=(1s!==F&&1s.2K==2M)?(5.1d.Y(1s)):(1s);u[5.x+\'$1E\']=1E 1k;N(i=0,l=5.1p.V;i<l;++i){1C{19+=5.1p[i].K(u,h,z,H)}1F(2T){a(2T 1G 18){2B(2T.1j){q\'1R\':i=l;D;q\'D\':i=l;s=e;D;2I:C e;}}J{C e;}}}1l u[5.x+\'$3t\'];1l u[5.x+\'$1K\'];1l u[5.x+\'$3u\'];1l u[5.x+\'$3v\'];1l u[5.x+\'$3w\'];1l u[5.x+\'$1U\'];1l u[5.x+\'$1E\'];1l u[5.x];u[5.x]=3s}}J{N(i=0,l=5.1q.V;i<l;++i){19+=5.1q[i].K($T,h,z,H)}}c 19}1F(e){a(m.R||(e 1G 18))C e;c""}};6 18=9(1j){5.1j=1j};18.y=Z;18.y.K=9(d){C 5;};6 2D=9(L,A){L.1h(/\\{#2C (.*?)(?: 4h=(.*?))?\\}/);5.1d=A[I.$1];a(5.1d==F){a(m.R)C j Z(\'15: 4i 3o 2C: \'+I.$1);}5.3x=I.$2};2D.y.K=9(d,h,z,H){6 $T=d;6 $P=h;1C{c 5.1d.K(10(5.3x),h,z,H)}1F(e){a(m.R||(e 1G 18))C e;}c\'\'};6 2E=9(L){L.1h(/\\{#h 1T=(\\w*?) 1o=(.*?)\\}/);5.x=I.$1;5.2f=I.$2};2E.y.K=9(d,h,z,H){6 $T=d;6 $P=h;6 $Q=z;1C{h[5.x]=10(5.2f)}1F(e){a(m.R||(e 1G 18))C e;h[5.x]=F}c\'\'};6 2G=9(L){L.1h(/\\{#2F 4j=(.*?)\\}/);5.2U=10(I.$1);5.2V=5.2U.V;a(5.2V<=0){C j Z(\'15: 2F 4k 4l 4m\');}5.2W=0;5.2X=-1};2G.y.K=9(d,h,z,H){6 2Y=b.O(z,\'1X\');a(2Y!=5.2X){5.2X=2Y;5.2W=0}6 i=5.2W++%5.2V;c 5.2U[i]};b.1a.1w=9(s,A,f){a(s.2K===m){c b(5).1e(9(){b.O(5,\'2i\',s);b.O(5,\'1X\',0)})}J{c b(5).1e(9(){b.O(5,\'2i\',j m(s,A,f));b.O(5,\'1X\',0)})}};b.1a.4n=9(1L,A,f){6 s=b.2Z({1t:1L,1Y:1f}).3y;c b(5).1w(s,A,f)};b.1a.4o=9(30,A,f){6 s=b(\'#\'+30).2O();a(s==E){s=b(\'#\'+30).3z();s=s.U(/&3i;/g,"<").U(/&3h;/g,">")}s=b.4p(s);s=s.U(/^<\\!\\[4q\\[([\\s\\S]*)\\]\\]>$/3A,\'$1\');s=s.U(/^<\\!--([\\s\\S]*)-->$/3A,\'$1\');c b(5).1w(s,A,f)};b.1a.4r=9(){6 1W=0;b(5).1e(9(){a(b.2j(5)){++1W}});c 1W};b.1a.4s=9(){b(5).3B();c b(5).1e(9(){b.3C(5,\'2i\')})};b.1a.2J=9(1T,1o){c b(5).1e(9(){6 t=b.2j(5);a(t===F){a(m.R)C j Z(\'15: m 2x 23 3D.\');J c}t.2J(1T,1o)})};b.1a.31=9(d,h){c b(5).1e(9(){6 t=b.2j(5);a(t===F){a(m.R)C j Z(\'15: m 2x 23 3D.\');J c}b.O(5,\'1X\',b.O(5,\'1X\')+1);b(5).3z(t.K(d,h,5,0))})};b.1a.4t=9(1L,h,G){6 X=5;G=b.1m({1j:\'4u\',1Y:1O,32:1f},G);b.2Z({1t:1L,1j:G.1j,O:G.O,3E:G.3E,1Y:G.1Y,32:G.32,3F:G.3F,4v:\'4w\',4x:9(d){6 r=b(X).31(d,h);a(G.2k){G.2k(r)}},4y:G.4z,4A:G.4B});c 5};6 2l=9(1t,h,2m,2n,1b,G){5.3G=1t;5.1u=h;5.3H=2m;5.3I=2n;5.1b=1b;5.3J=E;5.33=G||{};6 X=5;b(1b).1e(9(){b.O(5,\'34\',X)});5.35()};2l.y.35=9(){5.3K();a(5.1b.V==0){c}6 X=5;b.4C(5.3G,5.3I,9(d){6 r=b(X.1b).31(d,X.1u);a(X.33.2k){X.33.2k(r)}});5.3J=4D(9(){X.35()},5.3H)};2l.y.3K=9(){5.1b=b.3L(5.1b,9(o){a(b.4E.4F){6 n=o.36;2v(n&&n!=4G){n=n.36}c n!=E}J{c o.36!=E}})};b.1a.4H=9(1t,h,2m,2n,G){c j 2l(1t,h,2m,2n,5,G)};b.1a.3B=9(){c b(5).1e(9(){6 2o=b.O(5,\'34\');a(2o==E){c}6 X=5;2o.1b=b.3L(2o.1b,9(o){c o!=X});b.3C(5,\'34\')})};b.1m({38:9(s,A,f){c j m(s,A,f)},4I:9(1L,A,f){6 s=b.2Z({1t:1L,1Y:1f}).3y;c j m(s,A,f)},2j:9(z){c b.O(z,\'2i\')},4J:9(14,O,3M){c 14.K(O,3M,F,0)},4K:9(1o){m.R=1o}})})(b)}', 62, 295, '|||||this|var|||function|if|jQuery|return|||settings||param||new|||Template|||node|case||||extData|||_name|prototype|element|includes|push|throw|break|null|undefined|options|deep|RegExp|else|get|oper|se|for|data|||DEBUG_MODE|||replace|length|_option|that|f_escapeString|Error|eval||step|TemplateUtils|template|jTemplates|ss|this_op|JTException|ret|fn|objs|_templates_code|_template|each|false|TextNode|match|literalMode|type|cval|delete|extend|opFOREACH|value|_onTrue|_onFalse|fcount|ckey|url|_param|f_cloneData|setTemplate|tname|lastIndex|literal|opIF|filter|try|__tmp|typeof|catch|instanceof|par|_currentState|mode|iteration|url_|_tree|_templates|true|op|end|continue|noFunc|name|key|Number|count|jTemplateSID|async|disallow_functions|cloneData|MAIN|iter|not|in|elseif_level|op_|switchToElse|getParent|foreach|opFORFactory|_param1|_param2|escapeData|optionText|_value|__t|_parent|jTemplate|getTemplate|on_success|Updater|interval|args|updater|_includes|filter_params|runnable_functions|version|reg|_template_settings|while|indexOf|is|substring|optionToObject|Object|switch|include|Include|UserParam|cycle|Cycle|begin|default|setParam|constructor|toString|String|obj|val|__template|tab|arr|tmp|ex|_values|_length|_index|_lastSessionID|sid|ajax|elementName|processTemplate|cache|_options|jTemplateUpdater|run|parentNode|window|createTemplate||filter_data|clone_data|clone_params|escapeHTML|splitTemplates|of|txt|gt|lt|_literalMode|__1|_cond|funcIterator|as|find|_arg|object|_total|prevValue|index|first|last|total|_root|responseText|html|im|processTemplateStop|removeData|defined|dataFilter|timeout|_url|_interval|_args|timer|detectDeletedNodes|grep|parameter|exec|closed|No|inArray|ppp|elseif|ldelim|rdelim|Missing|unknown|tag|substr|amp|quot|hasOwnProperty|Array|Function|Functions|are|allowed|split|shift|__0|subtemplate|to|Operator|failed|MAX_VALUE|Math|ceil|root|Cannot|values|has|no|elements|setTemplateURL|setTemplateElement|trim|CDATA|hasTemplate|removeTemplate|processTemplateURL|GET|dataType|json|success|error|on_error|complete|on_complete|getJSON|setTimeout|browser|msie|document|processTemplateStart|createTemplateURL|processTemplateToText|jTemplatesDebugMode'.split('|'), 0, {}));
(function($) {
    $.i18n = {};
    $.i18n.map = {};
    $.i18n.properties = function(settings) {
        var defaults = {
            name: "Messages",
            language: "",
            path: "",
            mode: "vars",
            cache: false,
            encoding: "UTF-8",
            callback: null
        };
        settings = $.extend(defaults, settings);
        if (settings.language === null || settings.language == "") {
            settings.language = $.i18n.browserLang()
        }
        if (settings.language === null) {
            settings.language = ""
        }
        var files = getFiles(settings.name);
        for (var i = 0; i < files.length; i++) {
            loadAndParseFile(settings.path + files[i] + ".properties", settings);
            if (settings.language.length >= 2) {
                loadAndParseFile(settings.path + files[i] + "_" + settings.language.substring(0, 2) + ".properties", settings)
            }
            if (settings.language.length >= 5) {
                loadAndParseFile(settings.path + files[i] + "_" + settings.language.substring(0, 5) + ".properties", settings)
            }
        }
        if (settings.callback) {
            settings.callback()
        }
    }
    ;
    $.i18n.prop = function(key, defaultKey, defaultValue) {
        var value = $.i18n.map[key];
        if (value == null) {
            if (defaultKey != null) {
                value = $.i18n.map[defaultKey]
            }
            if (value == null && defaultValue != null) {
                value = defaultValue
            }
            if (value == null) {
                return "[" + key + "]"
            }
        }
        var i;
        if (typeof (value) == "string") {
            i = 0;
            while ((i = value.indexOf("\\", i)) != -1) {
                if (value[i + 1] == "t") {
                    value = value.substring(0, i) + "\t" + value.substring((i++) + 2)
                } else {
                    if (value[i + 1] == "r") {
                        value = value.substring(0, i) + "\r" + value.substring((i++) + 2)
                    } else {
                        if (value[i + 1] == "n") {
                            value = value.substring(0, i) + "\n" + value.substring((i++) + 2)
                        } else {
                            if (value[i + 1] == "f") {
                                value = value.substring(0, i) + "\f" + value.substring((i++) + 2)
                            } else {
                                if (value[i + 1] == "\\") {
                                    value = value.substring(0, i) + "\\" + value.substring((i++) + 2)
                                } else {
                                    value = value.substring(0, i) + value.substring(i + 1)
                                }
                            }
                        }
                    }
                }
            }
            var arr = [], j, index;
            i = 0;
            while (i < value.length) {
                if (value[i] == "'") {
                    if (i == value.length - 1) {
                        value = value.substring(0, i)
                    } else {
                        if (value[i + 1] == "'") {
                            value = value.substring(0, i) + value.substring(++i)
                        } else {
                            j = i + 2;
                            while ((j = value.indexOf("'", j)) != -1) {
                                if (j == value.length - 1 || value[j + 1] != "'") {
                                    value = value.substring(0, i) + value.substring(i + 1, j) + value.substring(j + 1);
                                    i = j - 1;
                                    break
                                } else {
                                    value = value.substring(0, j) + value.substring(++j)
                                }
                            }
                            if (j == -1) {
                                value = value.substring(0, i) + value.substring(i + 1)
                            }
                        }
                    }
                } else {
                    if (value[i] == "{") {
                        j = value.indexOf("}", i + 1);
                        if (j == -1) {
                            i++
                        } else {
                            index = parseInt(value.substring(i + 1, j));
                            if (!isNaN(index) && index >= 0) {
                                var s = value.substring(0, i);
                                if (s != "") {
                                    arr.push(s)
                                }
                                arr.push(index);
                                i = 0;
                                value = value.substring(j + 1)
                            } else {
                                i = j + 1
                            }
                        }
                    } else {
                        i++
                    }
                }
            }
            if (value != "") {
                arr.push(value)
            }
            value = arr;
            $.i18n.map[key] = arr
        }
        if (value.length == 0) {
            return ""
        }
        if (value.lengh == 1 && typeof (value[0]) == "string") {
            return value[0]
        }
        var s = "";
        for (i = 0; i < value.length; i++) {
            if (typeof (value[i]) == "string") {
                s += value[i]
            } else {
                if (value[i] + 1 < arguments.length) {
                    s += arguments[value[i] + 1]
                } else {
                    s += "{" + value[i] + "}"
                }
            }
        }
        return s
    }
    ;
    $.i18n.browserLang = function() {
        return normaliseLanguageCode(navigator.language || navigator.userLanguage)
    }
    ;
    function loadAndParseFile(filename, settings) {
        $.ajax({
            url: filename,
            async: false,
            cache: settings.cache,
            contentType: "text/plain;charset=" + settings.encoding,
            dataType: "text",
            success: function(data, status) {
                parseData(data, settings.mode)
            }
        })
    }
    function parseData(data, mode) {
        var parsed = "";
        var parameters = data.split(/\n/);
        var regPlaceHolder = /(\{\d+\})/g;
        var regRepPlaceHolder = /\{(\d+)\}/g;
        var unicodeRE = /(\\u.{4})/ig;
        for (var i = 0; i < parameters.length; i++) {
            parameters[i] = parameters[i].replace(/^\s\s*/, "").replace(/\s\s*$/, "");
            if (parameters[i].length > 0 && parameters[i].match("^#") != "#") {
                var pair = parameters[i].split("=");
                if (pair.length > 0) {
                    var name = unescape(pair[0]).replace(/^\s\s*/, "").replace(/\s\s*$/, "");
                    var value = pair.length == 1 ? "" : pair[1];
                    while (value.match(/\\$/) == "\\") {
                        value = value.substring(0, value.length - 1);
                        value += parameters[++i].replace(/\s\s*$/, "")
                    }
                    for (var s = 2; s < pair.length; s++) {
                        value += "=" + pair[s]
                    }
                    value = value.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
                    if (mode == "map" || mode == "both") {
                        var unicodeMatches = value.match(unicodeRE);
                        if (unicodeMatches) {
                            for (var u = 0; u < unicodeMatches.length; u++) {
                                value = value.replace(unicodeMatches[u], unescapeUnicode(unicodeMatches[u]))
                            }
                        }
                        $.i18n.map[name] = value
                    }
                    if (mode == "vars" || mode == "both") {
                        value = value.replace(/"/g, '\\"');
                        checkKeyNamespace(name);
                        if (regPlaceHolder.test(value)) {
                            var parts = value.split(regPlaceHolder);
                            var first = true;
                            var fnArgs = "";
                            var usedArgs = [];
                            for (var p = 0; p < parts.length; p++) {
                                if (regPlaceHolder.test(parts[p]) && (usedArgs.length == 0 || usedArgs.indexOf(parts[p]) == -1)) {
                                    if (!first) {
                                        fnArgs += ","
                                    }
                                    fnArgs += parts[p].replace(regRepPlaceHolder, "v$1");
                                    usedArgs.push(parts[p]);
                                    first = false
                                }
                            }
                            parsed += name + "=function(" + fnArgs + "){";
                            var fnExpr = '"' + value.replace(regRepPlaceHolder, '"+v$1+"') + '"';
                            parsed += "return " + fnExpr + ";};"
                        } else {
                            parsed += name + '="' + value + '";'
                        }
                    }
                }
            }
        }
        eval(parsed)
    }
    function checkKeyNamespace(key) {
        var regDot = /\./;
        if (regDot.test(key)) {
            var fullname = "";
            var names = key.split(/\./);
            for (var i = 0; i < names.length; i++) {
                if (i > 0) {
                    fullname += "."
                }
                fullname += names[i];
                if (eval("typeof " + fullname + ' == "undefined"')) {
                    eval(fullname + "={};")
                }
            }
        }
    }
    function getFiles(names) {
        return (names && names.constructor == Array) ? names : [names]
    }
    function normaliseLanguageCode(lang) {
        lang = lang.toLowerCase();
        if (lang.length > 3) {
            lang = lang.substring(0, 3) + lang.substring(3).toUpperCase()
        }
        return lang
    }
    function unescapeUnicode(str) {
        var codes = [];
        var code = parseInt(str.substr(2), 16);
        if (code >= 0 && code < Math.pow(2, 16)) {
            codes.push(code)
        }
        var unescaped = "";
        for (var i = 0; i < codes.length; ++i) {
            unescaped += String.fromCharCode(codes[i])
        }
        return unescaped
    }
    var cbSplit;
    if (!cbSplit) {
        cbSplit = function(str, separator, limit) {
            if (Object.prototype.toString.call(separator) !== "[object RegExp]") {
                if (typeof cbSplit._nativeSplit == "undefined") {
                    return str.split(separator, limit)
                } else {
                    return cbSplit._nativeSplit.call(str, separator, limit)
                }
            }
            var output = [], lastLastIndex = 0, flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.sticky ? "y" : ""), separator = RegExp(separator.source, flags + "g"), separator2, match, lastIndex, lastLength;
            str = str + "";
            if (!cbSplit._compliantExecNpcg) {
                separator2 = RegExp("^" + separator.source + "$(?!\\s)", flags)
            }
            if (limit === undefined || +limit < 0) {
                limit = Infinity
            } else {
                limit = Math.floor(+limit);
                if (!limit) {
                    return []
                }
            }
            while (match = separator.exec(str)) {
                lastIndex = match.index + match[0].length;
                if (lastIndex > lastLastIndex) {
                    output.push(str.slice(lastLastIndex, match.index));
                    if (!cbSplit._compliantExecNpcg && match.length > 1) {
                        match[0].replace(separator2, function() {
                            for (var i = 1; i < arguments.length - 2; i++) {
                                if (arguments[i] === undefined) {
                                    match[i] = undefined
                                }
                            }
                        })
                    }
                    if (match.length > 1 && match.index < str.length) {
                        Array.prototype.push.apply(output, match.slice(1))
                    }
                    lastLength = match[0].length;
                    lastLastIndex = lastIndex;
                    if (output.length >= limit) {
                        break
                    }
                }
                if (separator.lastIndex === match.index) {
                    separator.lastIndex++
                }
            }
            if (lastLastIndex === str.length) {
                if (lastLength || !separator.test("")) {
                    output.push("")
                }
            } else {
                output.push(str.slice(lastLastIndex))
            }
            return output.length > limit ? output.slice(0, limit) : output
        }
        ;
        cbSplit._compliantExecNpcg = /()??/.exec("")[1] === undefined;
        cbSplit._nativeSplit = String.prototype.split
    }
    String.prototype.split = function(separator, limit) {
        return cbSplit(this, separator, limit)
    }
}
)(jQuery);
function appNav(userId, appBasePath, isMaster) {
    this.userId = userId;
    this.isMaster = isMaster;
    this.mainDivId = "lcsMainContentDiv";
    this.courseId = "";
    this.courseTitle = "";
    this.classId = "";
    this.classTitle = "";
    this.url = "";
    this.currentRoleId = "";
    this.currentRoleName = "";
    this.divOrIframe = true;
    this.currentNavTab = "";
    this.currentNavSubTab = "";
    this.timerId = null;
    this.appBasePath = appBasePath;
    this.buJsonObj = null;
    this.isWindowEventBind = false;
    this.windowEvents = new Array(0);
    this.beforeOrAfterLogin = false;
    this.attendanceRules = null;
    this.isStudentRole = false;
    this.popupOpen = false;
    this.activePopUpElement = null;
    this.serverSideBoxy = false;
    this.bookmarkUrl = null;
    this.classOutLineJson = null;
    this.quizBeingAttempted = false;
    this.initialSerializedFormData = null;
    this.formBeingEdited = false;
    this.formId = null;
    this.excludedElementsString = null;
    this.formUpdated = false;
    this.functionToAppendParamsToForm = null;
    this.divIdToAppendTo = null;
    this.cancelNavigation = false;
    this.resourceContentId = null;
    this.resourceAccessTime = null;
    this.eventFromSetUrl = false;
    this.repositorySearchObj = null;
    this.repoSearchSetting = null;
    this.setEventFromSetUrl = function(flag) {
        this.eventFromSetUrl = flag
    }
    ;
    this.isEventFromSetUrl = function() {
        return this.eventFromSetUrl
    }
    ;
    this.setResourceContentId = function(resourceContentId, sync) {
        if (this.isStudentRole) {
            if (resourceContentId == null || resourceContentId == "") {
                if (this.resourceContentId != null) {
                    this.updateResourceAccessStatus(sync);
                    this.resourceContentId = null;
                    this.resourceAccessTime = null
                }
            } else {
                if (this.resourceContentId != null) {
                    if (this.resourceContentId != resourceContentId) {
                        this.updateResourceAccessStatus();
                        this.resourceContentId = resourceContentId;
                        this.resourceAccessTime = new Date()
                    }
                } else {
                    this.resourceContentId = resourceContentId;
                    this.resourceAccessTime = new Date()
                }
            }
        }
    }
    ;
    this.updateResourceAccessStatus = function(sync) {
        if (!sync) {
            sync = false
        }
        var timeSpent = new Date().getTime() - this.resourceAccessTime.getTime();
        var url = this.appBasePath + "/common/common.lc?i=1&operation=updateUserComponentLog&resourceContentId=" + this.resourceContentId + "&classId=" + this.classId + "&timeSpent=" + timeSpent + "&tempDate=" + new Date().getTime();
        jQuery.ajax({
            type: "GET",
            url: url,
            async: !sync
        })
    }
    ;
    this.setQuizBeingAttempted = function(quizBeingAttempted) {
        this.quizBeingAttempted = quizBeingAttempted
    }
    ;
    this.setFormUpdated = function(formUpdated) {
        this.formUpdated = formUpdated
    }
    ;
    this.getExcludedElements = function(excludedIdArray, excludedNameArray) {
        var excludedIds = [];
        var excludedNames = [];
        var excludedElements = null;
        if (excludedIdArray != null && excludedIdArray.length > 0) {
            for (var i = 0; i < excludedIdArray.length; i++) {
                excludedIds.push("#" + excludedIdArray[i])
            }
            excludedElements = excludedIds.join(",")
        }
        if (excludedNameArray != null && excludedNameArray.length > 0) {
            for (var i = 0; i < excludedNameArray.length; i++) {
                excludedNames.push("input[name=" + excludedNameArray[i] + "]")
            }
            if (excludedElements == null) {
                excludedElements = excludedNames.join(",")
            } else {
                excludedElements = excludedElements + "," + excludedNames.join(",")
            }
        }
        return excludedElements
    }
    ;
    this.setInitialSerializedFormData = function(formId, excludedIdArray, excludedNameArray) {
        if (this.initialSerializedFormData != null || jQuery("#" + formId).length <= 0) {
            return
        }
        var excludedElementsString = null;
        if ((excludedIdArray != null && excludedIdArray.length >= 0) || (excludedNameArray != null && excludedNameArray.length >= 0)) {
            excludedElementsString = this.getExcludedElements(excludedIdArray, excludedNameArray);
            this.initialSerializedFormData = jQuery("#" + formId + " [name]").not(".ignoreForSerialization, " + excludedElementsString).serialize()
        } else {
            this.initialSerializedFormData = jQuery("#" + formId + " [name]").not(".ignoreForSerialization").serialize()
        }
        this.formBeingEdited = true;
        this.formId = formId;
        this.excludedElementsString = excludedElementsString;
        this.bindEventsTocheckIfFormHasAnyUnsavedChanges();
        if (this.divIdToAppendTo != null) {
            jQuery("#" + this.divIdToAppendTo).html("")
        }
    }
    ;
    this.setInitialSerializedFormDataWithCallback = function(formId, excludedIdArray, excludedNameArray, callback, divIdToAppendTo) {
        this.functionToAppendParamsToForm = callback;
        this.divIdToAppendTo = divIdToAppendTo;
        this.setInitialSerializedFormData(formId, excludedIdArray, excludedNameArray)
    }
    ;
    this.bindEventsTocheckIfFormHasAnyUnsavedChanges = function() {
        var obj = this;
        jQuery(window).bind("unload", function() {
            obj.checkIfFormHasAnyUnsavedChanges()
        })
    }
    ;
    this.bindEventsTocheckIfThereAreAnyUnsavedChanges = function() {
        var obj = this;
        this.formId = "noForm";
        this.formBeingEdited = true;
        jQuery(window).bind("unload", function() {
            obj.checkIfFormHasAnyUnsavedChanges()
        })
    }
    ;
    this.unbindEventsTocheckIfFormHasAnyUnsavedChanges = function() {
        jQuery(window).unbind("unload");
        this.initialSerializedFormData = null;
        this.formBeingEdited = false;
        this.formId = null;
        this.excludedElementsString = null;
        this.setStopNavigation(false);
        this.formUpdated = false;
        this.functionToAppendParamsToForm = null;
        this.divIdToAppendTo = null
    }
    ;
    this.hasFormDataChanged = function() {
        if (this.formId == null || this.formId == "") {
            return false
        }
        if (this.functionToAppendParamsToForm != null) {
            this.functionToAppendParamsToForm()
        }
        var newSerializedFormData = null;
        if (this.excludedElementsString != null && this.excludedElementsString != "") {
            newSerializedFormData = jQuery("#" + this.formId + " [name]").not(".ignoreForSerialization, " + this.excludedElementsString).serialize()
        } else {
            newSerializedFormData = jQuery("#" + this.formId + " [name]").not(".ignoreForSerialization").serialize()
        }
        this.initialSerializedFormData = unescape(this.initialSerializedFormData).replace(/(\r|\n)/g, " ").replace(/&nbsp;/g, "").replace(/\xc2\xa0/g, " ").replace(/ /g, "");
        newSerializedFormData = unescape(newSerializedFormData).replace(/(\r|\n)/g, " ").replace(/&nbsp;/g, "").replace(/\xc2\xa0/g, " ").replace(/ /g, "");
        if (this.divIdToAppendTo != null) {
            jQuery("#" + this.divIdToAppendTo).html("")
        }
        if ((this.initialSerializedFormData != "" && this.initialSerializedFormData != null && this.initialSerializedFormData != newSerializedFormData) || (this.formUpdated == true)) {
            return true
        } else {
            return false
        }
    }
    ;
    this.checkIfFormHasAnyUnsavedChanges = function() {
        var allowed = false;
        if (this.hasFormDataChanged() == true) {
            if (confirm(i18n("navigate.away.form.unsaved.data.msg"))) {
                allowed = true;
                this.unbindEventsTocheckIfFormHasAnyUnsavedChanges()
            } else {
                appNavObj.setStopNavigation(true);
                this.cancelNavigation = true
            }
        } else {
            allowed = true;
            this.unbindEventsTocheckIfFormHasAnyUnsavedChanges()
        }
        return allowed
    }
    ;
    this.setAttendanceRules = function() {
        var obj = this;
        jQuery.ajax({
            url: obj.appBasePath + "/attendance/attendance.lc?operation=getAttendanceRulesToBePopulated&i=1&tempDate=" + new Date().getTime(),
            dataType: "json",
            success: function(data) {
                obj.attendanceRules = data.attendanceRuleList;
                obj.isStudentRole = data.isStudentCurrentRole;
                obj.classId = data.classId
            }
        })
    }
    ;
    this.setCurrentModuleName = function(name) {
        jQuery.cookie("moduleName", name, {
            path: "/"
        })
    }
    ;
    this.getCurrentModuleName = function() {
        return jQuery.cookie("moduleName")
    }
    ;
    this.updateEmailNotification = function(value) {
        if (value == "1") {
            updateUnreadMailCount()
        }
    }
    ;
    this.startTimer = function() {
        this.timerId = setInterval("appNavObj.updateScreen()", 300)
    }
    ;
    this.setWindowTitle = function(title) {
        window.document.title = title
    }
    ;
    this.getUserId = function() {
        return this.userId
    }
    ;
    this.getMainDivId = function() {
        return this.mainDivId
    }
    ;
    this.getUrl = function() {
        return this.url
    }
    ;
    this.stopNavigation = false;
    this.setStopNavigation = function(flag) {
        this.stopNavigation = flag
    }
    ;
    this.trigerEvents = function() {
        if (this.windowEvents && this.windowEvents.length > 0) {
            for (var i = 0; i < this.windowEvents.length; i++) {
                if (this.windowEvents[i] == "unload") {
                    jQuery(window).trigger(this.windowEvents[i])
                }
                if (!this.stopNavigation) {
                    jQuery(window).unbind(this.windowEvents[i])
                }
            }
            this.windowEvents.splice(0, this.windowEvents.length)
        }
    }
    ;
    this.setURL = function(url) {
        this.eventFromSetUrl = true;
        this.setResourceContentId(null);
        this.bookmarkUrl = null;
        var linkName = this.getLinkName(this.url);
        var linkUrl = this.url;
        var isOutcomesURL = false;
        if (linkName == "Error") {
            linkName = "Course Content";
            linkUrl = this.appBasePath + "/class/content.lc?operation=getSelectClassContent&classId=" + this.classId + "&c=prepareSelectClassContentForm&viewType=3&t=coursesMenuOption"
        }
        jQuery.cookie("prevUrl", linkUrl + ",1," + linkName, {
            path: "/"
        });
        if (url.indexOf("/analytics/") != -1 || url.indexOf("/eportfolio/") != -1 || url.indexOf("/outcomesManager/") != -1) {
            this.divOrIframe = false;
            if (url.indexOf("/outcomesManager/") != -1) {
                isOutcomesURL = true
            }
        } else {
            this.divOrIframe = true
        }
        this.trigerEvents();
        if (this.stopNavigation) {
            this.stopNavigation = false;
            if (this.getCurrentModuleName() == "Course" && this.quizBeingAttempted == true) {
                bindingWindowsEvent()
            }
            if (this.formBeingEdited == true) {
                this.stopNavigation = true;
                this.addWindowEventToArr("unload")
            }
            return false
        }
        var temp = this.getParameterValue("t", url);
        if (temp) {
            this.currentNavTab = temp
        } else {
            if (this.currentNavTab != "") {
                url = url + "&t=" + this.currentNavTab
            }
        }
        if (this.currentNavSubTab != null && this.currentNavSubTab != "" && url.indexOf("getClassGradeBook") != -1) {
            url = url + "&currentNavSubTab=" + this.currentNavSubTab
        }
        if (this.currentNavTab != "gradeBookMenuOption") {
            this.currentNavSubTab = ""
        }
        jQuery(location).attr("hash", url + "&tempDate=" + new Date().getTime());
        this.cleanUPTinymce();
        if (!isOutcomesURL) {
            this.showInprogressPopup(0)
        }
        jQuery("#" + this.mainDivId).html("");
        this.removeSubmenu();
        if (jQuery("#tooltip").length > 0) {
            jQuery("#tooltip").remove()
        }
    }
    ;
    this.trigerEvents = function() {
        if (this.windowEvents && this.windowEvents.length > 0) {
            for (var i = 0; i < this.windowEvents.length; i++) {
                if (this.windowEvents[i] == "unload") {
                    jQuery(window).trigger(this.windowEvents[i])
                }
                if (!this.stopNavigation) {
                    jQuery(window).unbind(this.windowEvents[i])
                }
            }
            this.windowEvents.splice(0, this.windowEvents.length)
        }
    }
    ;
    this.cleanUPTinymce = function() {
        if (tinyMCE.activeEditor != null) {
            tinyMCE.activeEditor.remove();
            editorPreviewWithId(tinyActivateControl.attr("id"))
        }
    }
    ;
    this.loadHeader = function() {}
    ;
    this.getCourseId = function() {
        return this.courseId
    }
    ;
    this.getCourseTitle = function() {
        return this.courseTitle
    }
    ;
    this.getClassId = function() {
        return this.classId
    }
    ;
    this.getClassTitle = function() {
        return this.classTitle
    }
    ;
    this.getCurrentRoleId = function() {
        return this.currentRoleId
    }
    ;
    this.gsetCurrentRoleName = function() {
        return this.currentRoleName
    }
    ;
    this.setUserId = function(uId) {
        this.userId = uId
    }
    ;
    this.setMainDivId = function(mainDivId) {
        this.mainDivId = mainDivId
    }
    ;
    this.setCourseId = function(courseId) {
        this.courseId = courseId
    }
    ;
    this.setCourseTitle = function(courseTitle) {
        this.courseTitle = courseTitle
    }
    ;
    this.setClassId = function(classId) {
        this.classId = classId
    }
    ;
    this.setClassTitle = function(classTitle) {
        this.classTitle = classTitle
    }
    ;
    this.setCurrentRoleId = function(currentRoleId) {
        this.currentRoleId = currentRoleId
    }
    ;
    this.setCurrentRoleName = function(currentRoleName) {
        this.currentRoleName = currentRoleName
    }
    ;
    this.setbuJsonObj = function(buJsonObj) {
        this.buJsonObj = buJsonObj
    }
    ;
    this.cancelTimer = function() {
        if (this.timerId) {
            clearInterval(this.timerId);
            this.timerId = null
        }
    }
    ;
    this.clearHash = function() {
        jQuery(location).attr("hash", "")
    }
    ;
    this.getParameterValue = function(name, url) {
        var match = RegExp("[?&]" + name + "=([^&]*)").exec(url.substr(url.split("?")[1]));
        return match && decodeURIComponent(match[1].replace(/\+/g, " "))
    }
    ;
    this.updateScreen = function() {
        if (jQuery(location).attr("hash").substr(1).indexOf("/analytics/") != -1 || jQuery(location).attr("hash").substr(1).indexOf("/eportfolio/") != -1 || jQuery(location).attr("hash").substr(1).indexOf("/outcomesManager/") != -1) {
            this.divOrIframe = false
        } else {
            this.divOrIframe = true
        }
        if (this.url != jQuery(location).attr("hash").substr(1)) {
            this.cancelTimer();
            this.url = jQuery(location).attr("hash").substr(1);
            if ((this.url == null || this.url == "") && !this.quizBeingAttempted) {
                window.history.back();
                return
            }
            var temp = this.getParameterValue("t", this.url);
            if (temp) {
                this.currentNavTab = temp
            } else {
                if (this.currentNavTab != "") {
                    this.url = this.url + "&t=" + this.currentNavTab
                }
            }
            if (this.currentNavTab != "") {
                this.setSelectedNavTab()
            }
            if (this.quizBeingAttempted) {
                this.setURL(this.url)
            } else {
                this.loadContent()
            }
        }
        if (!this.divOrIframe) {
            this.updateIframeHeight()
        }
    }
    ;
    this.setSelectedNavTab = function() {
        var currentTab = this.currentNavTab;
        jQuery(".lc_navBarInner").find(".lc_fontBold").removeClass("lc_fontBold");
        jQuery(".lc_pathLi").find("label#selectedNavIcon").removeClass().addClass(jQuery("#" + this.currentNavTab).find("label").attr("class"));
        if (jQuery("#" + this.currentNavTab).find("a").html() != "") {
            jQuery(".lc_pathLi").find("a#selectedNavTitle").html(jQuery("#" + this.currentNavTab).find("a").html());
            jQuery(".lc_pathLi").find("a#selectedNavTitle").attr("title", jQuery("#" + this.currentNavTab).find("a").html())
        }
        jQuery("#" + this.currentNavTab).addClass("lc_fontBold");
        jQuery(".lc_navigation").find("div.lc_childMenuDv").removeClass("lc_fontBold");
        if (jQuery("#" + this.currentNavTab).parent("ul.lc_navHasChildInner").length > 0) {
            jQuery("#" + this.currentNavTab).parent("ul.lc_navHasChildInner").parent().click();
            jQuery("#" + this.currentNavTab).parent("ul.lc_navHasChildInner").parent().children("div").children(".lc_innerArrowUp").removeClass("lc_innerArrowUp").addClass("lc_innerArrowDown")
        }
        if (this.currentNavTab == "homeMenuOption") {
            jQuery("#dashboardWidgetsOptionsDiv").show();
            jQuery("#dashboardWidgetsOptionsDivPipe").show()
        } else {
            jQuery("#dashboardWidgetsOptionsDiv").hide();
            jQuery("#dashboardWidgetsOptionsDivPipe").hide()
        }
    }
    ;
    this.loadContent = function() {
        this.trigerEvents();
        var temp = this;
        if (this.getBeforeOrAfterLogin() && this.url.indexOf("/catalog/preview.lc") == -1) {
            temp.startTimer();
            return
        }
        if (this.getPopupOpen()) {
            try {
                if (tinyMCE.activeEditor.getParam("fullscreen_is_enabled")) {
                    tinyMCE.activeEditor.execCommand("mceFullScreen")
                }
            } catch (e) {}
            try {
                if (this.getActivePopUpElement() != null) {
                    if (this.getServerSideBoxy()) {
                        jQuery(this.getActivePopUpElement()).find('a[class="close"]').click()
                    } else {
                        Boxy.get(jQuery(this.getActivePopUpElement())).unload();
                        jQuery(".boxy-modal-blackout").remove()
                    }
                }
            } catch (e) {}
            this.setActivePopUpElement(null);
            this.setServerSideBoxy(false);
            this.setPopupOpen(false)
        }
        if (jQuery("#openEnrollID").length > 0) {
            jQuery("#classLinkShare").val("");
            jQuery("#openEnrollID").hide()
        }
        if (this.divOrIframe) {
            jQuery.ajax({
                url: this.url,
                cache: false,
                dataType: "html",
                success: function(data) {
                    if (data.indexOf('<input type="hidden" name="login_pagecheck@345123890"/>') == -1) {
                        temp.closeInprogressPopup();
                        jQuery("#" + temp.getMainDivId()).html(data);
                        if (temp.getParameterValue("c", temp.url)) {
                            try {
                                eval(temp.getParameterValue("c", temp.url) + "()")
                            } catch (e) {}
                        }
                        temp.setClassTitleheading();
                        temp.startTimer()
                    } else {
                        window.location.href = window.location.href.split("#")[0]
                    }
                },
                error: function(data, textStatus, errorThrown) {
                    jQuery("#" + temp.getMainDivId()).html(data.responseText);
                    temp.closeInprogressPopup();
                    temp.startTimer()
                }
            })
        } else {
            temp.closeInprogressPopup();
            var nameOfSrc = this.url.split("/");
            jQuery("#" + this.getMainDivId()).html(jQuery('<iframe title= "' + nameOfSrc[2] + '" id="lcsContentFrame" name="lcsContentFrame" src="' + this.url + '" frameborder="0" style="height:480px;width:100%;margin-bottom:-1px" scrolling="no" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>'));
            temp.startTimer()
        }
    }
    ;
    this.startTimer();
    this.addSmallLoader = function(id) {
        jQuery("#" + id).html('<div class="loadBox"><div class="loader mt50"><img src="' + this.appBasePath + '/images/1569445563950/smallLoader.gif" alt="loading..." /></div></div>')
    }
    ;
    this.fileSizeCheck = function(element, maxFileSize) {
        var upfile;
        if (typeof window.FileReader != "undefined" && typeof window.FileReader !== "function") {
            upfile = element.files[0];
            if (upfile.size > maxFileSize) {
                alert("File size limit exceeded. Max file size allowed " + (maxFileSize / 1048576) + " MB");
                jQuery(element).attr("value", "");
                return false
            } else {
                return true
            }
        } else {
            if (!element.files) {
                return true
            } else {
                upfile = element.files[0];
                if (upfile.size > maxFileSize) {
                    alert("File size limit exceeded. Max file size allowed " + (maxFileSize / 1048576) + " MB");
                    jQuery(element).attr("value", "");
                    return false
                } else {
                    return true
                }
            }
        }
    }
    ;
    this.showBUBoxy = function(buId) {
        Boxy.load(this.appBasePath + "/businessunit/businessunit.lc?operation=getBUBoxy&buId=" + buId, {
            unloadOnHide: true
        })
    }
    ;
    this.showNoPermissionBoxyBind = function() {
        jQuery(document).on("click", ".noPermission", function() {
            jQuery("#noPermissionDialog").show();
            new Boxy("#noPermissionDialog")
        })
    }
    ;
    this.setWindowEventBind = function() {
        this.isWindowEventBind = true
    }
    ;
    this.addWindowEventToArr = function(event) {
        this.windowEvents.push(event)
    }
    ;
    this.updateIframeHeight = function() {
        if (jQuery("#lcsContentFrame").contents().find("body")) {
            if (jQuery("#lcsContentFrame").contents().find("body").height() == null) {
                return
            }
            jQuery("#lcsContentFrame").css({
                height: jQuery("#lcsContentFrame").contents().find("body").height() + "px",
                "padding-top": "3px"
            })
        } else {
            jQuery("#lcsContentFrame").css({
                height: "480px",
                "padding-top": "3px"
            })
        }
    }
    ;
    this.setWindowTitleForIframe = function(title) {
        this.setWindowTitle(title);
        this.updateIframeHeight()
    }
    ;
    this.setHashForIframe = function(url) {
        this.url = url
    }
    ;
    this.showProfilePopup = function(userId) {
        Boxy.load(this.appBasePath + "/user/userprofile.lc?operation=viewUserProfile&userId=" + userId + "&tempDate=" + new Date().getTime(), {
            unloadOnHide: true,
            afterShow: function() {
                prepareProfilePopup()
            }
        })
    }
    ;
    this.toggleLiveEdit = function(formId, flag) {
        if (flag) {
            jQuery("#" + formId).find(".leBtnDisable").attr("disabled", true);
            jQuery("#" + formId).find(".leTxtReadonly").attr({
                readonly: "readonly",
                disabled: true
            });
            jQuery("#" + formId).find(".leLinks,.dp-choose-date,.dp-choose-time").remove();
            jQuery("#" + formId).find(".leOptnsDisable option:not(:selected)").attr("disabled", true)
        } else {
            jQuery("#" + formId).find(".leBtnDisable").attr("disabled", false);
            jQuery("#" + formId).find(".leTxtReadonly").removeAttr("readonly");
            jQuery("#" + formId).find(".leTxtReadonly").removeAttr("disabled")
        }
    }
    ;
    this.systemNotIdle = function() {
        jQuery(document).trigger("idleTimerReset")
    }
    ;
    this.removeSystemIdleEventBind = function() {
        if (this.divOrIframe) {
            jQuery(document).bind("click keydown DOMMouseScroll mousewheel mousedown", function() {
                appNavObj.systemNotIdle()
            })
        } else {}
    }
    ;
    this.setCookieForBrowserSniffing = function(flag) {
        if (flag) {
            jQuery.cookie("browserSniffingAlertShown", "true", {
                path: "/",
                expires: 365
            })
        } else {
            jQuery.cookie("browserSniffingAlertShown", null, {
                path: "/"
            })
        }
    }
    ;
    this.getCookieForBrowserSniffing = function() {
        return jQuery.cookie("browserSniffingAlertShown")
    }
    ;
    this.showBrowserSniffing = function() {
        if (this.getCookieForBrowserSniffing() == null) {
            loadBrowserSniffingPopup()
        }
    }
    ;
    this.setBeforeOrAfterLogin = function(flag) {
        this.beforeOrAfterLogin = flag
    }
    ;
    this.getBeforeOrAfterLogin = function() {
        return this.beforeOrAfterLogin
    }
    ;
    this.setSearchCriteriaCookieForCourseContent = function(name, searchCriteria, flag) {
        if (flag) {
            jQuery.cookie(name, searchCriteria, {
                path: "/",
                expires: 365
            })
        } else {
            jQuery.cookie(name, null, {
                path: "/"
            })
        }
    }
    ;
    this.getSearchCriteriaCookieForCourseContent = function(name) {
        return jQuery.cookie(name)
    }
    ;
    this.attendanceInProgress = false;
    this.markAttendanceIfRequired = function(activityId, objTitle, populateActiviyDetails) {
        if (!this.attendanceInProgress && this.attendanceRules != null) {
            var obj = this;
            if (this.attendanceRules[activityId] && this.attendanceRules[activityId].active) {
                this.attendanceInProgress = true;
                jQuery.ajax({
                    type: "post",
                    url: this.appBasePath + "/attendance/attendance.lc?operation=saveStudentAttendanceAutomated&i=1&classId=" + this.classId + "&tempDate=" + new Date().getTime(),
                    dataType: "json",
                    data: {
                        activityId: activityId,
                        objTitle: objTitle,
                        populateActiviyDetails: populateActiviyDetails
                    },
                    success: function(data) {
                        obj.attendanceInProgress = false
                    },
                    error: function(jqXHRObj, textStatus, errorThrown) {
                        obj.attendanceInProgress = false
                    }
                })
            }
        }
    }
    ;
    this.setPopupOpen = function(value) {
        this.popupOpen = value
    }
    ;
    this.getPopupOpen = function() {
        return this.popupOpen
    }
    ;
    this.setActivePopUpElement = function(value) {
        this.activePopUpElement = value
    }
    ;
    this.getActivePopUpElement = function() {
        return this.activePopUpElement
    }
    ;
    this.setServerSideBoxy = function(value) {
        this.serverSideBoxy = value
    }
    ;
    this.getServerSideBoxy = function() {
        return this.serverSideBoxy
    }
    ;
    this.setContentBreadCrumbLink = function() {
        var url = jQuery.cookie("prevUrl").split(",")[0];
        var flag = jQuery.cookie("prevUrl").split(",")[1];
        var linkName = jQuery.cookie("prevUrl").split(",")[2];
        jQuery("#breadCrumb").html(linkName);
        var obj = this;
        jQuery("#breadCrumb").click(function() {
            if (flag == "1") {
                obj.setURL(url)
            } else {
                window.location = url
            }
        })
    }
    ;
    this.setPreviousUrl = function(url) {
        if (url != null) {
            var linkName = this.getLinkName(url);
            jQuery.cookie("prevUrl", url + ",2," + linkName, {
                path: "/"
            })
        } else {
            jQuery.cookie("prevUrl", null, {
                path: "/"
            })
        }
    }
    ;
    this.getLinkName = function(url) {
        var linkName;
        var operation;
        while (url.indexOf("?") != -1) {
            operation = url.substring(url.indexOf("?"));
            if (operation.indexOf("&") != -1) {
                operation = operation.substring(1, operation.indexOf("&"))
            } else {
                operation = operation.substring(1, operation.length)
            }
            if (url.indexOf("#") != -1) {
                url = url.substring(url.indexOf("#") + 1)
            } else {
                url = ""
            }
        }
        try {
            switch (operation) {
            case i18n("operation.home"):
                linkName = i18n("breadcrumb.home");
                break;
            case i18n("operation.dashboard"):
                linkName = i18n("dashboard");
                break;
            case i18n("operation.calendar"):
                linkName = i18n("calendar");
                break;
            case i18n("operation.course.content"):
                linkName = i18n("course.nav.coursecontent", COURSE_SINGULAR_CAPS);
                break;
            case i18n("operation.syllabus"):
                linkName = i18n("syllabus", SYLLABUS_SINGULAR_CAPS);
                break;
            case i18n("operation.instructor.gradebook"):
                linkName = i18n("gradebook");
                break;
            case i18n("operation.student.gradebook"):
                linkName = i18n("gradebook", GRADEBOOK_SINGULAR_CAPS);
                break;
            case i18n("operation.notifications"):
                linkName = i18n("notifications");
                break;
            default:
                linkName = "Error";
                break
            }
        } catch (e) {
            linkName = ""
        }
        return linkName
    }
    ;
    this.unbindEvents = function() {
        var flag = false;
        if (this.windowEvents && this.windowEvents.length > 0) {
            for (var i = 0; i < this.windowEvents.length; i++) {
                if (this.windowEvents[i] == "unload") {
                    this.eventFromSetUrl = true;
                    jQuery(window).trigger(this.windowEvents[i])
                }
                if (!this.stopNavigation) {
                    jQuery(window).unbind(this.windowEvents[i])
                }
            }
            this.windowEvents.splice(0, this.windowEvents.length)
        }
        if (this.stopNavigation) {
            this.stopNavigation = false;
            if (this.getCurrentModuleName() == "Course" && this.quizBeingAttempted == true) {
                bindingWindowsEvent()
            }
            if (this.formBeingEdited == true) {
                this.stopNavigation = true;
                this.addWindowEventToArr("unload")
            }
            flag = false
        } else {
            jQuery(window).unbind("unload");
            jQuery(window).unbind("keydown");
            jQuery(window).unbind("beforeunload");
            if (ipad) {
                jQuery(window).unbind("pagehide")
            }
            window.onbeforeunload = null;
            window.onunload = null;
            this.removeWindowEventsArray();
            this.cleanUPTinymce();
            flag = true
        }
        jQuery(window).bind("beforeunload", function() {
            appNavObj.setResourceContentId(null, true)
        });
        jQuery(window).bind("unload", function() {
            appNavObj.setResourceContentId(null, true)
        });
        return flag
    }
    ;
    this.removeWindowEventsArray = function() {
        this.windowEvents = new Array()
    }
    ;
    this.loadConditionalReleaseTooltip = function(id, type) {
        Boxy.load(this.appBasePath + "/conditional/class/release.lc?operation=getSourceContents&objId=" + id + "&type=" + false + "&tempDate=" + new Date().getTime(), {
            unloadOnHide: true,
            title: i18n("restricted.content")
        })
    }
    ;
    this.skipTest = function(classFolderContentId, classId, element) {
        var obj = this;
        Boxy.ask(i18n("student.skiptest.confirm.msg"), [i18n("yes"), i18n("no")], function(val) {
            if (i18n("yes") == val) {
                jQuery.ajax({
                    url: obj.appBasePath + "/class/content.lc?operation=skipTest&classFolderContentId=" + classFolderContentId + "&classId=" + classId + "&tempDate=" + new Date().getTime(),
                    success: function(data) {
                        if (data == "1") {
                            jQuery("#skipTestCheckBox").attr("disabled", "disabled");
                            jQuery("#skipTestCheckBox").prop("checked", true);
                            jQuery("#skipTestCheckBox").closest(".trans-element-checkbox").removeClass("unchecked").addClass("checked disabled");
                            obj.updateClassOutlineJson();
                            Boxy.alert("You have skipped the test", null, {
                                title: "Message"
                            })
                        } else {
                            Boxy.alert("Cannot skip the test.Please try again later", null, {
                                title: "Message"
                            })
                        }
                    }
                })
            } else {
                jQuery("#skipTestCheckBox").prop("checked", false);
                jQuery("#skipTestCheckBox").closest(".trans-element-checkbox").removeClass("checked").addClass("unchecked")
            }
        }, {
            title: i18n("message")
        })
    }
    ;
    this.allowStudentToSkipTest = function(obj, classFolderContentId, chkBoxElement, type) {
        var allowStudentToSkipTest = jQuery(chkBoxElement).is(":checked");
        if (type == "1") {
            jQuery.ajax({
                url: this.appBasePath + "/course/content.lc?operation=updateAllowStudentToSkipTest&courseFolderContentId=" + classFolderContentId + "&allowStudentToSkipTest=" + allowStudentToSkipTest + "&tempDate=" + new Date().getTime(),
                success: function(data) {}
            })
        } else {
            jQuery.ajax({
                url: this.appBasePath + "/class/content.lc?operation=updateAllowStudentToSkipTest&classFolderContentId=" + classFolderContentId + "&allowStudentToSkipTest=" + allowStudentToSkipTest + "&tempDate=" + new Date().getTime(),
                success: function(data) {}
            })
        }
    }
    ;
    this.setClassOutLineJson = function(json) {
        this.classOutLineJson = json
    }
    ;
    this.checkContentLocked = function(divId, folderContentId, viewType) {
        var content = this.findContentInJsonForOutline(this.classOutLineJson, folderContentId);
        if (content && (content.contentLocked || !content.releasedStatus)) {
            var htmlStr = "";
            if (viewType == "COURSEOUTLINEPREVIEWMODE") {
                htmlStr = '<h2 class="sectionHeader ">' + content.title + '<span class="lc_nextPrevContSpan" style="margin-top: 4px;"><a aria-label="Previous Content" rel=""  href="javascript:void(0);" id="prevItem" title="" class="lc_prevContentIco lc_prevContentIcoDisabled" onclick="javascript:populateOutlineScreen.getPrevContent();"></a>&nbsp;<a aria-label="Next Content" rel="" href="javascript:void(0);" id="nextItem" title="" onclick="javascript:populateOutlineScreen.getNextContent();" class="lc_nextContentIco lc_nextContentIcoDisabled"></a></span></h2>'
            } else {
                htmlStr = '<h2 class="sectionHeader ">' + content.title + "</h2>"
            }
            htmlStr += '<div class="noCompMsg lockedContentMsg">';
            var contentLocked = false;
            if (content.contentLocked && content.lockedByContentList != null && content.lockedByContentList.length > 0) {
                htmlStr += '<h3 class="lockedContentText">Below Pre-test(s) needs to be attempted</h3><br/>';
                htmlStr += '<ul style="list-style:inside;">';
                for (var i = 0; i < content.lockedByContentList.length; i++) {
                    if (content.lockedByContentList[i].lockType == 0) {
                        contentLocked = true;
                        htmlStr += "<li>" + this.findContentInJsonForOutline(this.classOutLineJson, content.lockedByContentList[i].folderContentId).title + "</li>"
                    }
                }
                htmlStr += "</ul>"
            }
            if (!contentLocked && !content.releasedStatus) {
                if (content.lockedByContentList != null && content.lockedByContentList.length > 1) {
                    htmlStr += '<h3 class="lockedContentText">You need to fulfil either of the condition(s) in order to access this content. </h3><br/>'
                } else {
                    htmlStr += '<h3 class="lockedContentText">You need to fulfil below condition(s) in order to access this content </h3><br/>'
                }
                if (content.lockedByContentList != null && content.lockedByContentList.length > 0) {
                    htmlStr += '<ul style="list-style:inside;">';
                    for (var i = 0; i < content.lockedByContentList.length; i++) {
                        if (content.lockedByContentList[i].lockType == 1) {
                            htmlStr += '<li><a href="javascript:void(0);" onclick="appNavObj.getConditionRule(\'' + content.lockedByContentList[i].ruleId + "','" + content.lockedByContentList[i].folderContentId + "')\">" + content.lockedByContentList[i].title + "</a></li>"
                        }
                    }
                    htmlStr += "</ul>"
                }
            }
            if (!contentLocked && content.contentLocked && content.contentCompetencyAssocs != null && content.contentCompetencyAssocs.length > 0) {
                htmlStr += '<h3 class="lockedContentText">Below competencies need to be met in atleast one content</h3>';
                htmlStr += '<ul style="list-style:inside;">';
                for (var i = 0; i < content.contentCompetencyAssocs.length; i++) {
                    htmlStr += "<li>" + content.contentCompetencyAssocs[i].statementCode + " " + content.contentCompetencyAssocs[i].statementDescription + "</li>"
                }
                htmlStr += "</ul>"
            }
            htmlStr += "</div>";
            jQuery(divId).html(htmlStr);
            return false
        }
        return true
    }
    ;
    this.checkContentLocked1 = function(divId, contentId, viewType) {
        var content = this.findContentInJsonForOutline(this.classOutLineJson, contentId);
        if (content && (content.contentLocked || !content.releasedStatus)) {
            this.prepareLockedContentMarkUp(divId, contentId, viewType, false);
            return true
        } else {
            content = this.findClassSyllabusorIUInJsonForOutline(this.classOutLineJson, contentId, true, false);
            if (content && content.iuLocked) {
                this.prepareLockedContentMarkUp(divId, contentId, viewType, true);
                return true
            }
        }
        return false
    }
    ;
    this.prepareLockedContentMarkUp = function(divId, contentId, viewType, isIU) {
        var htmlStr = "";
        var url = "";
        var content = null;
        var contentLocked;
        if (!isIU) {
            content = this.findContentInJsonForOutline(this.classOutLineJson, contentId)
        } else {
            content = this.findClassSyllabusorIUInJsonForOutline(this.classOutLineJson, contentId, true, false)
        }
        htmlStr = "<div>";
        htmlStr += '<h2 class="sectionHeader ">' + content.title + "</h2>";
        if (!isIU) {
            if (viewType == "COURSEOUTLINEPREVIEWMODE") {
                htmlStr = htmlStr + '<span class="lc_nextPrevContSpan" style="margin-top: 4px;"><a aria-label="Previous Content" rel=""  href="javascript:void(0);" id="prevItem" title="" class="lc_prevContentIco lc_prevContentIcoDisabled" onclick="javascript:populateOutlineScreen.getPrevContent();"></a>&nbsp;<a aria-label="Next Content" rel="" href="javascript:void(0);" id="nextItem" title="" onclick="javascript:populateOutlineScreen.getNextContent();" class="lc_nextContentIco lc_nextContentIcoDisabled"></a></span></h2>'
            }
        }
        if (isIU || (!content.releasedStatus)) {
            htmlStr += '<div class="sectionContainer">' + (isIU ? "<p>In order to access contents within this Instructional Unit, you need to fulfill the below condition(s):</p>" : "In order to access this content, you need to fulfil the below condition(s):")
        }
        var contentLocked = false;
        if (!isIU && content.contentLocked && content.lockedByContentList != null && content.lockedByContentList.length > 0) {
            htmlStr += '<div id="" class="noCompMsg lockedContentMsg pl20 pr20 pb20 textLeft  mt20"><div class="rulesSection"><h4 class="mt0 mb6">Below Pre-test(s) needs to be attempted</h4><div class="ml10"><dl><dd><ul class="discStyledList">';
            for (var i = 0; i < content.lockedByContentList.length; i++) {
                if (content.lockedByContentList[i].lockType == 0) {
                    contentLocked = true;
                    htmlStr += "<li>" + this.findContentInJsonForOutline(this.classOutLineJson, content.lockedByContentList[i].folderContentId).title + "</li>"
                }
            }
            htmlStr += '</ul></dd></dl></div><br class="clear"/></div><br class="mt10"/><br class="clear"/></div><div class="lcs_rulesDivider"></div>'
        }
        if (isIU || (!content.releasedStatus)) {
            htmlStr += '<div id="criteriaContentList"></div></div><br/>';
            htmlStr += '<div id="iuCriteriaContentList">';
            htmlStr += this.loadIUCriteriaList(contentId, isIU);
            htmlStr += "</div><br/>"
        }
        if (!isIU) {
            if (!contentLocked && content.contentLocked && content.contentCompetencyAssocs != null && content.contentCompetencyAssocs.length > 0) {
                htmlStr += '<div id="" class="noCompMsg lockedContentMsg pl20 pr20 pb20 textLeft mt20"><div class="rulesSection"><h4 class="mt0 mb6">Below competencies need to be met in atleast one content</h4><div class="ml10"><dl><dd><ul class="discStyledList">';
                for (var i = 0; i < content.contentCompetencyAssocs.length; i++) {
                    htmlStr += "<li>" + content.contentCompetencyAssocs[i].statementCode + " " + content.contentCompetencyAssocs[i].statementDescription + "</li>"
                }
                htmlStr += '</ul></dd></dl></div><br class="clear"/></div><br class="mt10"/><br class="clear"/></div><div class="lcs_rulesDivider"></div>'
            }
        }
        htmlStr += "</div>";
        if (!isIU) {
            url = this.appBasePath + "/conditional/release.lc?operation=getContentRulesDetails&contentId=" + contentId + "&classId=" + this.classId + "&tempDate=" + new Date().getTime()
        } else {
            url = this.appBasePath + "/conditional/release.lc?operation=getContentRulesDetails&contentId=" + content.instructionUnitId + "&classId=" + this.classId + "&tempDate=" + new Date().getTime()
        }
        jQuery(divId).html(htmlStr);
        jQuery("#criteriaContentList").load(url)
    }
    ;
    this.findContentInJsonForOutline = function(json, folderContentId) {
        if (json && json.instructionUnit) {
            var assocs = json.instructionUnit.instructionUnitContentAssocs;
            if (assocs != null && assocs.length > 0) {
                for (var i = 0; i < assocs.length; i++) {
                    if (assocs[i].classFolderContent.folderContentId == folderContentId) {
                        return assocs[i].classFolderContent
                    }
                }
            }
            if (json.classSyllabusList != null && json.classSyllabusList.length > 0) {
                for (var i = 0; i < json.classSyllabusList.length; i++) {
                    var tempVar = this.findContentInJsonForOutline(json.classSyllabusList[i], folderContentId);
                    if (tempVar != null) {
                        return tempVar
                    }
                }
            }
        }
    }
    ;
    this.findIUOfContentAssocInJson = function(json, folderContentId, iu) {
        if (json && json.instructionUnit) {
            var assocs = json.instructionUnit.instructionUnitContentAssocs;
            if (assocs != null && assocs.length > 0) {
                for (var i = 0; i < assocs.length; i++) {
                    if (assocs[i].classFolderContent.folderContentId == folderContentId) {
                        if (iu) {
                            return json.instructionUnit
                        } else {
                            return assocs[i]
                        }
                    }
                }
            }
            if (json.classSyllabusList != null && json.classSyllabusList.length > 0) {
                for (var i = 0; i < json.classSyllabusList.length; i++) {
                    var tempVar = this.findIUOfContentAssocInJson(json.classSyllabusList[i], folderContentId, iu);
                    if (tempVar != null) {
                        return tempVar
                    }
                }
            }
        }
    }
    ;
    this.findClassSyllabusorIUInJsonForOutline = function(json, searchId, syllabusOrIu, returnSyllabusOrIu) {
        var content = null;
        if (json && json.classSyllabusList) {
            if (json.classSyllabusList != null && json.classSyllabusList.length > 0) {
                for (var i = 0; i < json.classSyllabusList.length; i++) {
                    if (syllabusOrIu) {
                        if (json.classSyllabusList[i].classSyllabusId == searchId) {
                            if (returnSyllabusOrIu) {
                                content = json.classSyllabusList[i]
                            } else {
                                content = json.classSyllabusList[i].instructionUnit
                            }
                            break
                        }
                    } else {
                        if (json.classSyllabusList[i].instructionUnit.instructionUnitId == searchId) {
                            if (returnSyllabusOrIu) {
                                content = json.classSyllabusList[i]
                            } else {
                                content = json.classSyllabusList[i].instructionUnit
                            }
                            break
                        }
                    }
                    if (content == null) {
                        content = this.findClassSyllabusorIUInJsonForOutline(json.classSyllabusList[i], searchId, syllabusOrIu, returnSyllabusOrIu);
                        if (content != null) {
                            break
                        }
                    }
                }
            }
        }
        return content
    }
    ;
    this.reloadIUIcons = function(json) {
        if (json) {
            if (!json.instructionUnit.iuLocked) {
                if (jQuery(".title_" + json.classSyllabusId).find(".iuLocked").length != 0) {
                    jQuery(".title_" + json.classSyllabusId).find(".iuLocked").remove()
                }
            }
            if (json.classSyllabusList && json.classSyllabusList.length > 0) {
                for (var i = 0; i < json.classSyllabusList.length; i++) {
                    this.reloadIUIcons(json.classSyllabusList[i])
                }
            }
        }
    }
    ;
    this.loadIUCriteriaList = function(contentId, isIU) {
        var syllabusId = contentId;
        var titles = [];
        var titlesString = "";
        if (!isIU) {
            var iu = this.findIUOfContentAssocInJson(this.classOutLineJson, contentId, true);
            syllabus = this.findClassSyllabusorIUInJsonForOutline(this.classOutLineJson, iu.instructionUnitId, false, true);
            if (syllabus != null && syllabus.classSyllabusId != this.classOutLineJson.classSyllabusId && syllabus.instructionUnit.iuLocked) {
                titles.push(syllabus.instructionUnit.title);
                syllabusId = syllabus.classSyllabusId
            }
        }
        if (syllabusId != null) {
            titles = this.findParentIUs(syllabusId, titles);
            if (titles != null && titles.length > 0) {
                titlesString += '<div id="" class="noCompMsg lockedContentMsg pl20 pr20 pb20 mt10 textLeft"><div class="rulesSection"><h4 class="mt10 mb6">you have to fulfil the rules applied on IUs in every layer of nesting.</h4><div class="ml10"><dl><dd><ul class="discStyledList">';
                for (var i = 0; i < titles.length; i++) {
                    titlesString += "<li>" + titles[i] + "</li>"
                }
                titlesString += '</ul></dd></dl></div></div><br class="mt10"/><br class="clear"/></div><div class="lcs_rulesDivider"></div>'
            }
        }
        return titlesString
    }
    ;
    this.findParentIUs = function(contentId, titles) {
        var syllabus = this.findParentIU(this.classOutLineJson, contentId);
        while (syllabus != null && syllabus.instructionUnit.iuLocked && syllabus.classSyllabusId != this.classOutLineJson.classSyllabusId) {
            titles.push(syllabus.instructionUnit.title);
            syllabus = this.findParentIU(this.classOutLineJson, syllabus.classSyllabusId)
        }
        return titles
    }
    ;
    this.findParentIU = function(json, contentId) {
        var syllabus = null;
        if (json && json.classSyllabusList.length > 0) {
            for (var i = 0; i < json.classSyllabusList.length; i++) {
                if (json.classSyllabusList[i].classSyllabusId == contentId) {
                    syllabus = json;
                    break
                }
                if (syllabus == null) {
                    syllabus = this.findParentIU(json.classSyllabusList[i], contentId)
                }
            }
        }
        return syllabus
    }
    ;
    this.getContentStatusIcon = function(contentStatus, contentType, locked, releaseStatus) {
        var type = 0;
        if (locked) {
            type = 1
        } else {
            if (contentStatus == "6" || contentStatus == "5" || contentStatus == "1" || contentStatus == "7") {
                type = 2
            }
        }
        if (!releaseStatus) {
            type = 1
        }
        if (type != 1 && contentStatus == "6" && (contentType == "1" || contentType == "2" || contentType == "5" || contentType == "6" || contentType == "12" || contentType == "14")) {
            return " "
        }
        switch (contentType) {
        case 1:
            return " icon_preTest" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 2:
            return " icon_quiz" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 5:
            return " icon_discussionQuestion" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 6:
            return " icon_participation" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 3:
            return " icon_onlineReading" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 4:
            return " icon_externalLink" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 7:
            return " icon_approvedTP" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 8:
            return " icon_instruction" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 9:
            return " icon_requiredReading" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 10:
            return " icon_contentPackage" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 11:
            return " icon_RSS" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 12:
            return " icon_scorm" + (type == 2 ? "_read" : type == 1 ? "_locked" : "");
        case 14:
            return " icon_approvedTP" + (type == 2 ? "_read" : type == 1 ? "_locked" : "")
        }
    }
    ;
    this.getIconTypeForContent = function(contentStatus, locked, releaseStatus, contentType) {
        var type = 0;
        if (locked) {
            type = 1
        } else {
            if (contentStatus == "5" || contentStatus == "1" || contentStatus == "7") {
                type = 2
            } else {
                if (contentStatus == "6" && !(contentType == "1" || contentType == "2" || contentType == "5" || contentType == "6" || contentType == "12")) {
                    type = 2
                }
            }
        }
        if (!releaseStatus) {
            type = 1
        }
        return type
    }
    ;
    this.clearEvents = function() {
        this.cleanUPTinymce()
    }
    ;
    this.showInprogressPopup = function(actionType) {
        if (jQuery("#globalInprogressPopupClose").length > 0) {
            return
        }
        var popupWidth = "340px";
        var actionMsg = "Processing Your Request<br>Might Take a Moment";
        switch (actionType) {
        case 1:
            popupWidth = "280px";
            actionMsg = "Saving your Data";
            break;
        case 2:
            popupWidth = "280px";
            actionMsg = "Deleting Item(s)";
            break;
        case 3:
            popupWidth = "280px";
            actionMsg = "Importing Item(s)";
            break;
        case 4:
            popupWidth = "280px";
            actionMsg = "Preparing Reorder";
            break
        }
        var loaderPath = appNavObj.appBasePath + "/images/1569445563950/lcs_loader.gif";
        var html = '<div class="whit-bg" id="inprogressPopupId" style="width:' + popupWidth + ';" aria-live="assertive" aria-label="' + actionMsg + '" role="alert"><p class="light-gray-pop"> ' + actionMsg + '</p><p><img id="inprogressLoaderPath"  src="' + loaderPath + '" width="130" height="108" alt=""/></p><h3> PLEASE WAIT</h3><input class="close" name="close" id="globalInprogressPopupClose" style="display:none;" type="button" value="Close" /></div>';
        new Boxy(html,{
            closeable: true,
            afterShow: function() {
                jQuery("#inprogressPopupId").parent().siblings().hide();
                jQuery("#inprogressPopupId").removeClass("boxy-content");
                jQuery("#inprogressPopupId").parents().parent().siblings("tr").children().hide();
                jQuery("#inprogressPopupId").parents(".boxy-wrapper").addClass("border-radius7");
                jQuery("#speak-out-loud1").html("Processing Your Request")
            },
            unloadOnHide: true
        })
    }
    ;
    this.closeInprogressPopup = function() {
        jQuery("#globalInprogressPopupClose").click();
        jQuery("#speak-out-loud1").html("Request Processing Completed")
    }
    ;
    this.getConditionRule = function(ruleId, folderContentId) {
        Boxy.load(appNavObj.appBasePath + "/conditional/class/release.lc?operation=getConditionRule&ruleId=" + ruleId + "&folderContentId=" + folderContentId + "&tempDate=" + new Date().getTime(), {
            unloadOnHide: true
        })
    }
    ;
    this.updateJsonInprogress = false;
    this.pretestContent = null;
    this.updateClassOutlineJson = function() {
        var obj = this;
        var content = null;
        var iuAssoc = null;
        if (!this.updateJsonInprogress) {
            this.updateJsonInprogress = true;
            jQuery.ajax({
                url: obj.appBasePath + "/class/syllabus.lc?operation=getUpdatedClassOutlineJson&classId=" + obj.classId + "&folderContentId=" + folderContentIdFUjson + "&lastUpdatedTime=" + jsonModifiedTime + "&i=1&tempDate=" + new Date().getTime(),
                dataType: "json",
                async: true,
                success: function(data) {
                    jsonModifiedTime = new Date().getTime();
                    if (data.folderContent != null) {
                        if (data.folderContent.contentTypeCategory == 1) {
                            obj.pretestContent = data.folderContent
                        }
                        iuAssoc = obj.findIUOfContentAssocInJson(obj.classOutLineJson, data.folderContent.folderContentId, false);
                        if (iuAssoc != null) {
                            data.folderContent.title = iuAssoc.classFolderContent.title;
                            data.folderContent.visibleStartDate = iuAssoc.classFolderContent.visibleStartDate;
                            iuAssoc.classFolderContent = data.folderContent
                        }
                    }
                    if (data.releasedContents != null && data.releasedContents.length > 0) {
                        for (var i = 0; i < data.releasedContents.length; i++) {
                            content = obj.findContentInJsonForOutline(obj.classOutLineJson, data.releasedContents[i]);
                            if (content != null) {
                                obj.unlockContentInJson(content)
                            } else {
                                content = obj.findClassSyllabusorIUInJsonForOutline(obj.classOutLineJson, data.releasedContents[i], false, true);
                                if (content != null) {
                                    obj.unlockIUInJson(content, data.releasedContents)
                                }
                            }
                        }
                    }
                    if (data.postTestContents != null && data.postTestContents.length > 0) {
                        for (var i = 0; i < data.postTestContents.length > 0; i++) {
                            content = obj.findContentInJsonForOutline(obj.classOutLineJson, data.postTestContents[i].folderContentId);
                            if (content != null) {
                                content.contentCompetencyAssocs = data.postTestContents[i].contentCompetencyAssocs;
                                content.contentLocked = data.postTestContents[i].contentLocked
                            }
                        }
                    }
                    obj.setClassOutLineJson(obj.classOutLineJson);
                    if (populateOutlineScreen) {
                        populateOutlineScreen.reloadIcons()
                    } else {
                        if (populateRepositoryScreen) {
                            populateRepositoryScreen.classOutlineJson = obj.classOutLineJson
                        }
                    }
                    obj.updateJsonInprogress = false
                }
            })
        }
    }
    ;
    this.unlockContentInJson = function(content) {
        if (content.oLocked) {
            content.oLocked = false
        }
        if (!content.lockedByIu && !content.oLocked) {
            content.releasedStatus = true
        }
    }
    ;
    this.unlockIUInJson = function(content, releasedContents) {
        var cfc = null;
        var tempNode = null;
        if (content.instructionUnit.oLocked) {
            if (jQuery.inArray(content.instructionUnit.instructionUnitId, releasedContents) != -1) {
                content.instructionUnit.oLocked = false
            }
        }
        if (!content.instructionUnit.lockedByParent && !content.instructionUnit.oLocked) {
            content.instructionUnit.iuLocked = false;
            var iuContents = content.instructionUnit.instructionUnitContentAssocs;
            if (iuContents != null && iuContents.length > 0) {
                for (var i = 0; i < iuContents.length; i++) {
                    cfc = iuContents[i].classFolderContent;
                    if (cfc.lockedByIu) {
                        cfc.lockedByIu = false;
                        if (cfc.oLocked) {
                            if (jQuery.inArray(cfc.folderContentId, releasedContents) != -1) {
                                cfc.oLocked = false;
                                cfc.releasedStatus = true
                            }
                        } else {
                            cfc.releasedStatus = true
                        }
                    }
                }
            }
            var syllabusList = content.classSyllabusList;
            if (syllabusList != null && syllabusList.length > 0) {
                for (var i = 0; i < syllabusList.length; i++) {
                    tempNode = syllabusList[i];
                    if (tempNode.instructionUnit.lockedByParent) {
                        tempNode.instructionUnit.lockedByParent = false;
                        if (!tempNode.instructionUnit.oLocked) {
                            tempNode.instructionUnit.iuLocked = false;
                            this.unlockIUInJson(tempNode, releasedContents)
                        }
                    }
                }
            }
        }
    }
    ;
    this.setClassTitleheading = function() {}
    ;
    this.removeSubmenu = function() {
        jQuery("#moduleSubMenuPlaceholder").removeAttr("style").html("")
    }
    ;
    this.appendSubmenu = function(submenuId, html) {
        var obj = this;
        obj.removeSubmenu();
        if (!!html) {
            obj.fluidMid(submenuId)
        } else {
            obj.fluidMid(jQuery("#" + submenuId).html())
        }
    }
    ;
    this.fluidMid = function(html) {
        var obj = this;
        jQuery("#moduleSubMenuPlaceholder").append(html);
        obj.submenufluidity();
        jQuery(window).resize(function() {
            jQuery(".cbl_menuTabs").append(jQuery(".cbl_menuTabs li.lc_moreTabs ul").html());
            jQuery(".cbl_menuTabs li.lc_moreTabs").remove();
            obj.submenufluidity()
        });
        if (jQuery("#moduleSubMenuPlaceholder").find(".lc_moreLinkOptionList a").length > 0) {
            var moreOptUl = jQuery("#moduleSubMenuPlaceholder").find(".lc_moreLinkOptionList");
            if (jQuery(moreOptUl).find("a.selected").length > 0) {
                var selectedObj = jQuery(moreOptUl).find("a.selected");
                var currentSelection = jQuery(selectedObj).closest("li").html();
                var shuffleCurrentWith = jQuery(selectedObj).closest(".lc_moreLink").closest("li").prev("li").html();
                jQuery(selectedObj).closest(".lc_moreLink").closest("li").prev("li").html(currentSelection);
                var checkExtraWd = 0;
                var nextLiEle;
                jQuery(".cbl_menuTabs li").each(function() {
                    checkExtraWd += jQuery(this).outerWidth(true)
                });
                if ((jQuery(window).width() - (jQuery(".lc_navDiv").outerWidth(true) + jQuery(".lc_notifArea").outerWidth(true))) < checkExtraWd + 20) {
                    nextLiEle = jQuery(selectedObj).closest(".lc_moreLink").closest("li").prev("li").prev("li");
                    nextLiEle.remove()
                }
                jQuery(selectedObj).closest("li").html(shuffleCurrentWith).append(nextLiEle)
            }
        }
    }
    ;
    this.submenufluidity = function() {
        var menuWidth = jQuery(window).width() - (parseInt(jQuery(".lc_navDiv").outerWidth(true)) + parseInt(jQuery(".lc_notifArea").outerWidth(true)));
        jQuery(".cbl_menuTabs").width(menuWidth - 5);
        var liWd = 0;
        var menuWidth = menuWidth - 150;
        var menuhtml = "";
        jQuery(".cbl_menuTabs li").each(function() {
            liWd += jQuery(this).outerWidth(true);
            if (liWd >= menuWidth) {
                menuhtml += jQuery("<div>").append(jQuery(this).clone()).html();
                jQuery(this).remove()
            }
        });
        var moreLinkMarkup = '<li class="lc_moreTabs"><div class="lc_moreLink"><a href="javascript:void(0)" onclick="javascript:showOrHideSubmenuMoreLinks(this);"  id="lc_showMoreLinks"><span class="lc_moreLinkOption"> More</span><span class="role_arrow"></span></a><ul class="lc_moreLinkOptionList" style="display: none;">' + menuhtml + "</ul></div></li>";
        jQuery(".cbl_menuTabs").append(moreLinkMarkup);
        if (menuhtml == "") {
            jQuery(".cbl_menuTabs li.lc_moreTabs").hide()
        } else {
            jQuery(".cbl_menuTabs li.lc_moreTabs").show()
        }
    }
    ;
    this.loadEarnedLoudBadges = function(folderContentId) {
        jQuery.ajax({
            dataType: "json",
            url: this.appBasePath + "/loudbadge/loudbadge.lc?i=1&operation=getUserEarnedBadgesPopup&folderContentId=" + folderContentId + "&tempDate=" + new Date().getTime(),
            success: function(data) {
                if (data.badgeList && data.badgeList.length > 0) {
                    jQuery("#badgeEarnedLink").html(data.badgeList.length);
                    var html = '<div style="display: none;" class="cbl_inlinePopUp lc_badgesEarnedPopup" id="badgeEarnedLink_popup"><a class="close" href="javascript:void(0)"></a><h2>Badges Earned</h2><div class="cbl_inlinePopUpContent">       	<ul class="always-visible lc_badgesEarnedPopupListin">';
                    for (var i = 0; i < data.badgeList.length; i++) {
                        html += '           		<li>           			<img width="35" height="35" src="' + appNavObj.appBasePath + "/content/content.lc?operation=viewContent&contentId=" + data.badgeList[i].imageContentId + '" class="floatLeft ml10">						<a href="javascript: void(0)" onclick="appNavObj.previewBadge(\'' + data.badgeList[i].badgeId + '\')" class="floatLeft ml10 m8 ">' + data.badgeList[i].name + "</a>           		</li>"
                    }
                    html += "     </div>  </div>";
                    jQuery(html).insertAfter(jQuery("#badgeEarnedLink").parent());
                    jQuery(".openInlinePopup").click(function(e) {
                        var clickedItem = jQuery(this).attr("id");
                        jQuery(".openInlinePopup").each(function() {
                            if (jQuery(this).attr("id") != clickedItem) {
                                jQuery("#" + jQuery(this).attr("id") + "_popup").hide()
                            }
                        });
                        var intBtnPos = jQuery(this).position().top;
                        var intCurrentClickPos = (jQuery(this).offset().top - jQuery(window).scrollTop());
                        var intWinHT = jQuery(window).height() - 50;
                        var popupHt = jQuery(this).parent().next().height();
                        var intClickInScreenPos = intWinHT - intCurrentClickPos;
                        if (intClickInScreenPos < popupHt) {
                            jQuery(this).parent().next().css({
                                top: (intBtnPos - popupHt - 25) + "px"
                            });
                            jQuery(this).parent().next().addClass("cbl_inlinePopDown")
                        } else {
                            jQuery(this).parent().next().css({
                                top: (intBtnPos + 25) + "px"
                            });
                            jQuery(this).parent().next().removeClass("cbl_inlinePopDown")
                        }
                        jQuery("#" + clickedItem + "_popup").show()
                    });
                    jQuery(".cbl_inlinePopUp a.close").click(function(e) {
                        jQuery(this).closest(".cbl_inlinePopUp").slideUp()
                    });
                    jQuery("#badgesEearned").show()
                }
            }
        })
    }
    ;
    this.previewBadge = function(badgeId) {
        Boxy.load(this.appBasePath + "/loudbadge/loudbadge.lc?operation=previewBadge&bagdeFor=2&badgeId=" + badgeId + "&tempDate=" + new Date().getTime(), {
            unloadOnHide: true,
            afterShow: function() {
                prepareLoudbadPreview()
            }
        })
    }
    ;
    this.checkContentVisibilityDate = function(folderContentId, currentUserTime) {
        var classContent = this.findContentInJsonForOutline(this.classOutLineJson, folderContentId);
        if (classContent.alwaysVisible || (classContent.visibleStartDate <= currentUserTime && (classContent.visibilityTillEndDate || classContent.visibleEndDate >= currentUserTime))) {
            return 2
        } else {
            if (classContent.visibleStartDate > currentUserTime) {
                return "1_" + classContent.visibleStartDateStr
            } else {
                if (!classContent.visibilityTillEndDate && classContent.visibleEndDate < currentUserTime) {
                    return "3_" + classContent.visibleEndDateStr
                } else {
                    return 2
                }
            }
        }
    }
    ;
    this.studentGradebookAnalytics = function(classId, userId, fromPage, folderContentId, defaultTab, isFromInstructorProgressTab) {
        var url = appNavObj.appBasePath + "/gradebook/gradebook.lc?operation=getStudentGradebook&t=gradeBookMenuOption&classId=" + classId + "&folderContentId=" + folderContentId + "&userId=" + userId + "&fromPage=" + fromPage + "&displayTab=" + defaultTab + "&isFromInstructorProgressTab=" + isFromInstructorProgressTab + "&c=prepareStudentTaskView";
        appNavObj.setURL(url)
    }
    ;
    this.getClassMailForStudent = function(classId, fromPage, folderContentId, userId) {
        var url = appNavObj.appBasePath + "/class/mail.lc?operation=getClassMailHome&c=prepareClassMailForm&t=classMailMenuOption&classId=" + classId + "&displayTab=2&fromPage=" + fromPage + "&folderContentId=" + folderContentId + "&sendToUserId=" + userId;
        appNavObj.setURL(url)
    }
    ;
    this.openLBLitereader = function(url, portHoleUrl, folderContentId) {
        var obj = this;
        if (folderContentId != null) {
            this.setResourceContentId(folderContentId);
            if (this.isStudentRole) {
                if (eTimerIdForSyllabus == null) {
                    eTimerIdForSyllabus = setTimeout(function() {
                        if (jQuery("#nodeSpan_" + folderContentId).siblings(".icon_onlineReading_read").length == 0 && jQuery("#nodeSpan_" + folderContentId).children(".icon_onlineReading_read").length == 0) {
                            obj.updateClassOutlineJson()
                        }
                        eTimerIdForSyllabus = null
                    }, TIME_DELAYFOR_OUTLINE_JSON)
                }
            }
            var eTimerIdForSyllabus = null
        }
        jQuery("#speak-out-loud1").html("Processing your request");
        var lbReaderContainer = jQuery('<div id="lcs_lbLiteReaderContainer" class="lcs_lbLiteReaderContainer">');
        var lbReaderContainerHTML = '<div class="column-12 pl10 pr10 pt10 pb10 borderBox"><button id="closeReaderLite" type="button" onclick="appNavObj.closeLBLitereader()" class="btn btn_secondary floatRight">Exit Reader</button><br class="clear"/></div><div class="processingRequest greenTxt textCenter" style="display: block;" id="processingRequestSpanForLoudbok"><i class="fa fa-spinner fa-spin fa-3x fa-fw color-pending" aria-hidden="true"></i></div>';
        lbReaderContainer.html(lbReaderContainerHTML);
        var lbIframe = jQuery('<iframe id="loudbookLtiIframe">').attr({
            scrolling: "0",
            src: url,
            frameborder: "0"
        });
        lbReaderContainer.append('<div class="loudbookLtiIframeWrapper"></div>');
        jQuery("html,body").css({
            overflow: "hidden",
            width: "100%"
        });
        jQuery("body").append(lbReaderContainer);
        jQuery(".loudbookLtiIframeWrapper").append('<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0">');
        jQuery(".loudbookLtiIframeWrapper").append(lbIframe);
        jQuery(".loudbookLtiIframeWrapper").on("touchstart touchend", function() {
            windowProxy.post({
                onLoudbookLostFocus: "true"
            })
        });
        appNavObj.addWindowEventToArr("touchend");
        jQuery("#loudbookLtiIframe").load(function() {
            jQuery("#processingRequestSpanForLoudbok").css("display", "none");
            jQuery("#speak-out-loud1").html("Request completed. Loudbook is loaded");
            windowProxy = new Porthole.WindowProxy(portHoleUrl);
            windowProxy.addEventListener(onMessage);
            jQuery(".loudbookLtiIframeWrapper").scroll(function() {
                appNavObj.sendScrollPos()
            });
            appNavObj.sendScrollPos()
        })
    }
    ;
    this.closeLBLitereader = function() {
        jQuery("#lcs_lbLiteReaderContainer").remove();
        jQuery("html,body").removeAttr("style");
        jQuery(window).unbind("scroll");
        jQuery("#speak-out-loud1").html("LoudBook reader closed")
    }
    ;
    this.hideHTMLoverflow = function() {
        jQuery("html,body").css({
            overflow: "hidden",
            width: "100%"
        })
    }
    ;
    this.showHTMLoverflow = function() {
        jQuery("html,body").removeAttr("style")
    }
    ;
    this.sendScrollPos = function() {
        var iframeBottomPosition = parseInt(jQuery("#loudbookLtiIframe").offset().top);
        var footerTopPosition = parseInt(parseInt(jQuery(".footer").offset().top) + 5);
        var iframeRelativePos = footerTopPosition - iframeBottomPosition;
        if (windowProxy != null) {
            windowProxy.post({
                currentBottomMostPos: iframeRelativePos
            })
        }
    }
    ;
    this.generateStatusMarkUpForDelete = function(data, isIu) {
        var html = null;
        if (data) {
            html = "";
            if (data.rulesExist) {
                if (isIu) {
                    html += i18n("cr.rule.rules.exist.to.release.iu")
                } else {
                    html += i18n("cr.rule.rules.exist.to.release")
                }
            }
            if (data.criteriasExist) {
                html += "<br/>";
                if (isIu) {
                    html += i18n("cr.rule.criterias.exist.to.release.other.content.iu")
                } else {
                    html += i18n("cr.rule.criterias.exist.to.release.other.content")
                }
            }
            if (data.badgesExist) {
                html += "<br/>";
                if (isIu) {
                    html += i18n("iu.delete.badge.warning")
                } else {
                    html += i18n("content.delete.badge.warning")
                }
            }
            if (data.bulkDelete && !isIu) {
                if (data.criteriaIds && data.criteriaIds.length > 0) {
                    html += "<br/>";
                    html += i18n("cr.rule.bulk.delete.criterias.exist.to.release.other.content")
                }
                if (data.badgeIds && data.badgeIds.length > 0) {
                    html += "<br/>";
                    html += "Some of these assessments couldn't be deleted as they're linked to badge(s)."
                }
            }
        }
        return html
    }
    ;
    this.getCurrentNavSubTab = function() {
        return this.currentNavSubTab
    }
    ;
    this.setCurrentNavSubTab = function(currentNavSubTab) {
        this.currentNavSubTab = currentNavSubTab
    }
    ;
    var isOpenBoxyPopup = false;
    this.showAccommodatedStudents = function(folderContentId, classId) {
        if (!isOpenBoxyPopup) {
            isOpenBoxyPopup = true
        } else {
            return
        }
        Boxy.load(appNavObj.appBasePath + "/accomodation/accomodation.lc?operation=getAccommodatedStudentsForContent&tempDate=" + new Date().getTime() + "&classId=" + classId + "&folderContentId=" + folderContentId, {
            unloadOnHide: true,
            afterShow: function() {
                prepareAccommodatedStudents();
                isOpenBoxyPopup = false
            }
        })
    }
    ;
    this.registerFakeUser = function(currentUserId, currentClassId, flag) {
        if (currentUserId != null && currentUserId != undefined && currentClassId != null && currentClassId != undefined && flag == true) {
            var folderContentId = "";
            var classSyllabusId = "";
            var url = appNavObj.url.split("&")[0];
            if (url.indexOf("ClassOutline") != -1 && populateOutlineScreen != null && typeof populateOutlineScreen !== "undefined") {
                folderContentId = populateOutlineScreen.selectedFolderContentId;
                classSyllabusId = populateOutlineScreen.selectedCourseSyllabusId
            }
            window.location.href = this.appBasePath + "/user/users.lc?operation=registerFakeUser&userId=" + currentUserId + "&classId=" + currentClassId + "&folderContentId=" + folderContentId + "&navigateURL=" + url + "&isInstructor=" + flag + "&classSyllabusId=" + classSyllabusId
        }
    }
    ;
    this.removeRegisteredClassMember = function(currentUserId, currentClassId, flag) {
        var obj = this;
        if (currentUserId != null && currentUserId != undefined && currentClassId != null && currentClassId != undefined && flag == true) {
            jQuery.ajax({
                url: obj.appBasePath + "/class/class.lc?operation=removeFakeClassMember&userId=" + currentUserId + "&classId=" + currentClassId + "&isInstructor=" + flag,
                success: function(data) {
                    if (data == "true") {
                        Boxy.alert("Class Member removed successfully", null, {
                            title: "Message"
                        })
                    } else {
                        Boxy.alert("ERROR", null, {
                            title: "Message"
                        })
                    }
                }
            })
        }
    }
    ;
    this.exitStudentViewAlert = function(userId, classId) {
        var htmlMarkUp = '<div class="popCont popUpBig" style=""><h1><a class="close" title="Close"><span class="accLabel">Close</span></a>Confirmation</h1><div class="popContPadding"><h5 class="font14 mt10">' + i18n("exit.student.preview.alert") + '</h5><br class="clear"/><div class="mt10"><input type="checkbox" class="lcs_customFilterCheckbox" name="reset_content" id="reset_content"><label for="reset_content" class=""><strong>' + i18n("reset.content") + '</strong></label><br class="clear"/><p class="mt10">' + i18n("exit.student.preview.check.msg") + '</p><br class="clear"/><p class="mt10">' + i18n("exit.student.preview.uncheck.msg") + '</p></div></div><div class="ctalogButtnRow buttonRow" style="margin-left: -3px; margin-right: -4px;"><input name="" class="btn btn_primary btn_small_primary" type="button" value="Yes" onclick="javascript:appNavObj.modifyStudentViewData(\'' + userId + "','" + classId + '\');"/><input name="" class="btn close" type="button" value="No" id="closeExitStudentViewAlert"/></div></div>';
        new Boxy(htmlMarkUp,{
            closeable: true,
            afterShow: function(r) {},
            unloadOnHide: true
        })
    }
    ;
    this.resetStudentContent1 = function(userId, classId) {
        if (userId != null && userId != undefined && classId != null && classId != undefined) {
            var htmlMarkUp = '<div class="popCont popUpBig" style=""><h1><a class="close" title="Close"><span class="accLabel">Close</span></a>Reset Confirmation Popup</h1><div class="popContPadding"><h5 class="font14 mt10">' + i18n("reset.content.alert") + '</h5><br class="clear"/><div class="mt10"><p class="mt10">' + i18n("reset.content.check.msg") + '</p><br class="clear"/><p class="mt10">' + i18n("reset.content.uncheck.msg") + '</p></div></div><div class="ctalogButtnRow buttonRow" style="margin-left: -3px; margin-right: -4px;"><input name="" class="btn btn_primary btn_small_primary" type="button" value="Yes" onclick="javascript:appNavObj.resetStudentViewData(\'' + userId + "','" + classId + '\');" /><input name="" class="btn close" type="button" value="No" id="closeResetStudentContent1" /></div></div>';
            new Boxy(htmlMarkUp,{
                closeable: true,
                afterShow: function(r) {},
                unloadOnHide: true
            })
        }
    }
    ;
    this.modifyStudentViewData = function(userId, classId) {
        jQuery("#closeExitStudentViewAlert").click();
        var resetFlag = jQuery("input[name='reset_content']").is(":checked");
        var folderContentId = "";
        var classSyllabusId = "";
        var url = appNavObj.url.split("&")[0];
        if (url.indexOf("ClassOutline") != -1 && populateOutlineScreen != null && typeof populateOutlineScreen !== "undefined") {
            folderContentId = populateOutlineScreen.selectedFolderContentId;
            classSyllabusId = populateOutlineScreen.selectedCourseSyllabusId
        }
        window.location = this.appBasePath + "/user/users.lc?operation=exitStudentReview&userId=" + userId + "&resetStudentActivitiesFlag=" + resetFlag + "&classId=" + classId + "&folderContentId=" + folderContentId + "&isInstructor=true&navigateURL=" + url + "&classSyllabusId=" + classSyllabusId
    }
    ;
    this.resetStudentViewData = function(userId, classId) {
        var obj = this;
        if (userId != null && classId != null) {
            jQuery("#closeResetStudentContent1").click();
            window.location = this.appBasePath + "/user/users.lc?operation=resetStudentContent&userId=" + userId + "&classId=" + classId
        }
    }
    ;
    this.cpCallback;
    this.redirectUrl;
    this.fromMaster;
    this.cpCourseOrClassId;
    this.fromPageFlag;
    this.showContentPropagationBoxy = function(folderContentId, callbackFunctionName, url, fromMaster, courseOrClassId, contentTypeId, hideAcceptOrDecline, acceptDeclinePermission, fromPageFlag) {
        appNavObj.cpCallback = callbackFunctionName;
        appNavObj.redirectUrl = url;
        appNavObj.fromMaster = fromMaster;
        appNavObj.cpCourseOrClassId = courseOrClassId;
        appNavObj.fromPageFlag = fromPageFlag;
        jQuery.getJSON(this.appBasePath + "/contentpropagate/cpserver.lc?operation=getContentPropagationJSON&folderContentId=" + folderContentId + "&courseOrClassId=" + courseOrClassId + "&fromMaster=" + fromMaster + "&contentTypeId=" + contentTypeId + "&tempDate=" + new Date().getTime(), function(data) {
            if (data.result.length > 2) {
                appNavObj.generateContentPropagationBoxy(data.result, appNavObj.fromMaster, data.liveEditAvailable, hideAcceptOrDecline, acceptDeclinePermission)
            } else {
                eval(appNavObj.cpCallback + "('" + appNavObj.redirectUrl + "');")
            }
        })
    }
    ;
    this.deleteTranscriptAvailable = false;
    this.generateContentPropagationBoxy = function(data, fromMaster, liveEditAvailable, hideAcceptOrDecline, acceptDeclinePermission) {
        var html = '<div style="width:600px;" class="popCont"><h1> <a class="close"></a>Alert</h1><div class="popContInner" style="max-height:500px;overflow:auto;"><div class="popContPadding mb10 pb10 pt0 mt-5"><div class="lcs_errorLog floatLeft column-12"><p class="font13">';
        if (hideAcceptOrDecline == "true" || hideAcceptOrDecline == true) {
            html = html + "There are some pending changes for this class which needs a response from the instructor!</p>"
        } else {
            html = html + "There are already pending updates for this resource. For more information, view Content Updates > Pending tab.</p>"
        }
        +'</div><div class="font13 mb10 floatLeft column-12">';
        var dataJSON = jQuery.parseJSON(data);
        var date = null;
        const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var contentElement = null;
        for (var i = 0; i < dataJSON.length; i++) {
            if (!this.deleteTranscriptAvailable) {
                this.deleteTranscriptAvailable = dataJSON[i].contentAdded == "3"
            }
            if (dataJSON[i].contentTypeId == -2) {
                contentElement = findJsonElementByDataType(jQuery.parseJSON(dataJSON[i].transcriptXml), "question")
            } else {
                if (dataJSON[i].contentTypeId == 0) {
                    contentElement = dataJSON[i].contentAdded == "3" ? jQuery.parseJSON(dataJSON[i].transcriptXml) : findJsonElementByDataType(jQuery.parseJSON(dataJSON[i].transcriptXml), "iu")
                } else {
                    if (dataJSON[i].contentTypeId == -4) {
                        contentElement = dataJSON[i].contentAdded == "3" ? jQuery.parseJSON(dataJSON[i].transcriptXml) : findJsonElementByDataType(jQuery.parseJSON(dataJSON[i].transcriptXml), "questionCompetency")
                    } else {
                        if (dataJSON[i].contentTypeId == -5) {
                            contentElement = findJsonElementByDataType(jQuery.parseJSON(dataJSON[i].transcriptXml), "rubric")
                        } else {
                            contentElement = dataJSON[i].contentAdded == "3" ? jQuery.parseJSON(dataJSON[i].transcriptXml) : findJsonElementByDataType(jQuery.parseJSON(dataJSON[i].transcriptXml), "content")
                        }
                    }
                }
            }
            date = new Date(dataJSON[i].createdDate);
            html = html + '<div class="singleContentChanges floatLeft column-12 borderBox mb20"><div class="floatLeft column-10 borderBox transcriptClass"><input type="hidden" id="transcriptId" value="' + dataJSON[i].id + '"/><label class="mb0 pa0">' + findJsonElementByDataType(contentElement, "objectTitle").newValue + '</label><label class="column-12 borderBox lightText font11 mt5 mb0 pa0">' + monthNames[date.getMonth()] + " " + date.getDate() + ", " + date.getFullYear() + '</label><span id="notifySpan" class="column-12 borderBox lightText font11 mt5 mb0 pa0"></span></div></div>'
        }
        html = html + '</div></div></div><br class="clear" /><div class="buttonRow">';
        if (hideAcceptOrDecline == "false" || hideAcceptOrDecline == false) {
            html = html + '<input name="showCpChanges" class="btn btn_secondary mr10" type="button" id="showCPChanges" value="show me" /><br class="clear" />'
        }
        html = html + "</div></div>";
        new Boxy(html,{
            closeable: false,
            afterShow: function() {
                jQuery("#showCPChanges").click(function() {
                    appNavObj.setURL(appNavObj.appBasePath + "/contentpropagate/cpserver.lc?operation=getContentPropagationContentDetails&fromPage=2&fromRepo=" + appNavObj.fromPageFlag + "&courseId=" + appNavObj.cpCourseOrClassId);
                    jQuery(".close").click()
                })
            },
            unloadOnHide: true
        })
    }
    ;
    function findJsonElementByDataType(jsonStr, dataType) {
        var foundElement = null;
        for (var i = 0; i < jsonStr.cpPropList.length; i++) {
            var element = jsonStr.cpPropList[i];
            if (element.dataType == dataType) {
                foundElement = element;
                break
            }
        }
        return foundElement
    }
    this.prepareSearchParameters = function(params) {
        if (appNavObj.repositorySearchObj != null && appNavObj.repositorySearchObj.searchQuery != null) {
            if (params != null) {
                for (var tempParam in params) {
                    appNavObj.repositorySearchObj.searchQuery[tempParam] = params[tempParam]
                }
            }
            params = appNavObj.repositorySearchObj.searchQuery;
            params.fromSearch = true;
            var defaultParams = appNavObj.repoSearchSetting.defaultParams;
            var values = appNavObj.repoSearchSetting.values;
            if (defaultParams != null) {
                for (var i = 0; i < defaultParams.length; i++) {
                    if (params[defaultParams[i]] == null) {
                        params[defaultParams[i]] = values[defaultParams[i]]
                    }
                }
            }
            if (appNavObj.repoSearchSetting.searchType == 15) {
                params.sortBydate = false;
                if (appNavObj.repositorySearchObj.sortBydate != null) {
                    params.sortBydate = appNavObj.repositorySearchObj.sortBydate
                }
                if (appNavObj.repositorySearchObj.dateSort != null) {
                    params.dateSort = appNavObj.repositorySearchObj.dateSort;
                    params.ascOrDescDate = params.dateSort == 1 ? true : false
                }
                if (appNavObj.repositorySearchObj.searchQuery.sortByComp) {
                    params.ascOrDesc = false
                }
            }
        }
        return params
    }
    ;
    this.applySearchParameters = function() {
        if (appNavObj.repositorySearchObj != null && appNavObj.repositorySearchObj.searchQuery != null && appNavObj.repoSearchSetting != null) {
            if (appNavObj.repositorySearchObj.isAdvSearch) {
                var asParams = appNavObj.repoSearchSetting.advSParams;
                if (asParams != null) {
                    for (var i = 0; i < asParams.length; i++) {
                        this.setSearchParam(asParams[i])
                    }
                }
                jQuery(appNavObj.repoSearchSetting.advSearchSelector).trigger("click")
            } else {
                var sParams = appNavObj.repoSearchSetting.searchParams;
                if (sParams != null) {
                    for (var i = 0; i < sParams.length; i++) {
                        this.setSearchParam(sParams[i])
                    }
                }
            }
            var sParams = appNavObj.repoSearchSetting.sortParams;
            if (sParams != null) {
                for (var i = 0; i < sParams.length; i++) {
                    this.setSearchParam(sParams[i])
                }
            }
            if (appNavObj.repoSearchSetting.searchType == 15) {
                var tempSortByComp = appNavObj.repositorySearchObj.searchQuery.sortByComp;
                var cAscOrDesc = appNavObj.repositorySearchObj.cAscOrDesc;
                if (tempSortByComp) {
                    jQuery("#learningOSSpan").removeClass().addClass("sort_d");
                    if (cAscOrDesc) {
                        jQuery("#learningOSSpan").removeClass().addClass("sort_a")
                    }
                    sortQuestionByCompetency(jQuery("#learningOSSpan"))
                }
            }
        }
    }
    ;
    this.setSearchParam = function(param) {
        switch (param.type) {
        case 1:
            var pvalue = appNavObj.repositorySearchObj.searchQuery[param.vparam];
            if (pvalue != null) {
                if (typeof pvalue == "string") {
                    if (pvalue.trim() != "") {
                        jQuery(param.selector).val(pvalue.trim())
                    }
                } else {
                    jQuery(param.selector).val(pvalue)
                }
            }
            break;
        case 2:
            var pvalue = appNavObj.repositorySearchObj.searchQuery[param.vparam];
            if (pvalue != null && pvalue.trim() != "") {
                pvalue = pvalue.trim();
                pvalue = pvalue.replace(new RegExp(param.rValue,"g"), param.rWith).split(param.sValue);
                var fn = eval(param.fnName);
                for (var i = 0; i < pvalue.length; i++) {
                    fn(jQuery(param.selector + pvalue[i]))
                }
            }
            break;
        case 3:
            var pvalue = appNavObj.repositorySearchObj.searchQuery[param.vparam];
            if (pvalue != null && pvalue.trim() != "") {
                jQuery(param.selector).val(pvalue);
                jQuery(jQuery(param.pSelector).siblings(".transformSelect").find(".transformSelectDropdown li")[0]).trigger("click")
            }
            break;
        case 4:
            var pvalue = appNavObj.repositorySearchObj[param.vparam];
            if (pvalue != null && pvalue.trim() != "") {
                jQuery(param.selector).val(pvalue.trim());
                jQuery(param.cBSelector).show()
            }
            break;
        default:
            break
        }
    }
    ;
    this.getContentPropagationServerDetails = function(contentTypeId, transcriptId, courseId, createOrModifyMsg, cfc, isActive, isDraft, tabToDisplay, url, fromPage) {
        var obj = this;
        var contentTypeIds = [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14];
        if (url != null && url != undefined) {
            url = appNavObj.appBasePath + url
        }
        if (createOrModifyMsg == null) {
            createOrModifyMsg = ""
        }
        if (this.isMaster == "true") {
            Boxy.ask(createOrModifyMsg + " Do you wish to make changes to other production instances as well?", ["Yes", "No"], function(val) {
                if (val == "Yes") {
                    Boxy.load(appNavObj.appBasePath + "/contentpropagate/cpserver.lc?operation=getCPServerDetailsData&contentTypeId=" + contentTypeId + "&isMaster=" + obj.isMaster + "&courseId=" + courseId + "&tempDate=" + new Date().getTime(), {
                        unloadOnHide: true,
                        afterShow: function() {
                            prepareCPServerDetails(transcriptId);
                            if (contentTypeIds.includes(contentTypeId) || url != null) {
                                jQuery("#pushContentsClose").click(function() {
                                    if (url != null && contentTypeId == -2) {
                                        appNavObj.setURL(url)
                                    }
                                    if (cfc != null) {
                                        if (contentTypeId == 2) {
                                            afterSaveFunction(cfc, isActive, isDraft, fromPage, tabToDisplay)
                                        } else {
                                            afterSaveFunction(cfc, isActive, isDraft)
                                        }
                                    } else {
                                        if (contentTypeId == 2) {
                                            aftermodifyFunction(isActive, isDraft, fromPage, tabToDisplay)
                                        } else {
                                            aftermodifyFunction(isActive, isDraft)
                                        }
                                    }
                                })
                            }
                        }
                    })
                }
                if (val == "No") {
                    if (contentTypeIds.includes(contentTypeId) || url != null) {
                        if (url != null && contentTypeId == -2) {
                            appNavObj.setURL(url)
                        }
                        if (cfc != null) {
                            if (contentTypeId == 2) {
                                afterSaveFunction(cfc, isActive, isDraft, fromPage, tabToDisplay)
                            } else {
                                afterSaveFunction(cfc, isActive, isDraft)
                            }
                        } else {
                            if (contentTypeId == 2) {
                                aftermodifyFunction(isActive, isDraft, fromPage, tabToDisplay)
                            } else {
                                aftermodifyFunction(isActive, isDraft)
                            }
                        }
                    }
                }
            }, {
                title: "Alert"
            })
        } else {
            jQuery.ajax({
                url: obj.appBasePath + "/class/content.lc?operation=getActiveCPClassCountForCourse&courseId=" + courseId + "&tempDate=" + new Date().getTime(),
                dataType: "text",
                success: function(data) {
                    if (data != "0" && data != "-1") {
                        Boxy.ask(createOrModifyMsg + " Do you wish to make changes to other production Classes as well?", ["Yes", "No"], function(val) {
                            if (val == "Yes") {
                                Boxy.load(appNavObj.appBasePath + "/contentpropagate/cpserver.lc?operation=getCPServerDetailsData&contentTypeId=" + contentTypeId + "&isMaster=" + obj.isMaster + "&courseId=" + courseId + "&tempDate=" + new Date().getTime(), {
                                    unloadOnHide: true,
                                    afterShow: function() {
                                        prepareCPServerDetails(transcriptId);
                                        if (contentTypeIds.includes(contentTypeId) || url != null) {
                                            jQuery("#pushContentsClose").click(function() {
                                                if (url != null && contentTypeId == -2) {
                                                    appNavObj.setURL(url)
                                                }
                                                if (cfc != null) {
                                                    if (contentTypeId == 2) {
                                                        afterSaveFunction(cfc, isActive, isDraft, fromPage, tabToDisplay)
                                                    } else {
                                                        afterSaveFunction(cfc, isActive, isDraft)
                                                    }
                                                } else {
                                                    if (contentTypeId == 2) {
                                                        aftermodifyFunction(isActive, isDraft, fromPage, tabToDisplay)
                                                    } else {
                                                        aftermodifyFunction(isActive, isDraft)
                                                    }
                                                }
                                            })
                                        }
                                    }
                                })
                            }
                            if (val == "No") {
                                if (contentTypeIds.includes(contentTypeId) || url != null) {
                                    if (url != null && contentTypeId == -2) {
                                        appNavObj.setURL(url)
                                    }
                                    if (cfc != null) {
                                        if (contentTypeId == 2) {
                                            afterSaveFunction(cfc, isActive, isDraft, fromPage, tabToDisplay)
                                        } else {
                                            afterSaveFunction(cfc, isActive, isDraft)
                                        }
                                    } else {
                                        if (contentTypeId == 2) {
                                            aftermodifyFunction(isActive, isDraft, fromPage, tabToDisplay)
                                        } else {
                                            aftermodifyFunction(isActive, isDraft)
                                        }
                                    }
                                }
                            }
                        }, {
                            title: "Alert"
                        })
                    } else {
                        if (contentTypeIds.includes(contentTypeId) || url != null) {
                            if (url != null && contentTypeId == -2) {
                                appNavObj.setURL(url)
                            }
                            if (cfc != null) {
                                if (contentTypeId == 2) {
                                    afterSaveFunction(cfc, isActive, isDraft, fromPage, tabToDisplay)
                                } else {
                                    afterSaveFunction(cfc, isActive, isDraft)
                                }
                            } else {
                                if (contentTypeId == 2) {
                                    aftermodifyFunction(isActive, isDraft, fromPage, tabToDisplay)
                                } else {
                                    aftermodifyFunction(isActive, isDraft)
                                }
                            }
                        }
                    }
                }
            })
        }
    }
    ;
    this.sendNotificationToCoursewarePaymentAdmin = function(classId) {
        var url = this.appBasePath + "/class/class.lc?operation=sendPaymentDetailsNotificationToAdmin&classId=" + classId;
        jQuery.post(url, function(data) {
            Boxy.alert(i18n("class.publish.payment.error", CLASS_SINGULAR_SMALL), null, {
                title: i18n("message")
            })
        })
    }
    ;
    this.lmsPlatform;
    this.sharedLTIKey;
    this.sharedLTISecret;
    this.publishClassId;
    this.showLtiIntegrationPopup = function(classId) {
        appNavObj.publishClassId = classId;
        var boxyHtml = '<div class="popCont popQuiz" style="width:600px;"><h1 class="abc"> <a class="close"></a> Alert</h1><div style="max-height:750px;"><table width="100%" cellspacing="0" cellpadding="0" class="borderBox"><tr><td valign="top"><div class="pr20 pl20 mb20 column-12 borderBox posRel floatLeft"><div class="sectionHeader"><div class="floatLeft selectMedium searchByContain"><label class="column-12">' + i18n("class.publish.integration.msg.one") + '</label><br/><br/><label class="column-12">' + i18n("class.publish.integration.msg.two", CLASS_SINGULAR_SMALL) + '</label><br/><br/><label class="column-12">' + i18n("class.publish.integration.msg.three", CLASS_SINGULAR_SMALL) + '</label><br/><br/><label class="column-12 color-notmet">' + i18n("class.publish.integration.msg.four", CLASS_SINGULAR_SMALL) + '</label></div></div></div><br class="clear" /><div class="pagingbottomQuiz buttonRow previewButtonRow pr25"><input name="integrateButton" id="integrateButton"" type="button" value="I want to integrate" class="btn btn_primary mr10" /><input name="selfRegButton" id="selfRegButton" type="button" value="I want to continue with Self-registration" class="btn btn_secondary mr10" /></div></td></tr></table></div></div>';
        new Boxy(boxyHtml,{
            closeable: true,
            afterShow: function(r) {
                jQuery("#integrateButton").click(function() {
                    jQuery(".close").click();
                    publishClassCallback(classId, 1)
                });
                jQuery("#selfRegButton").click(function() {
                    jQuery(".close").click();
                    publishClassCallback(classId, 2)
                })
            },
            unloadOnHide: true
        })
    }
    ;
    this.showSelfRegPopup = function(classId, classCode, courseTitle) {
        var url = this.appBasePath + "/commerce/commerce.lc?operation=getOpenEnrollURL&classId=" + classId;
        jQuery.ajax({
            url: url,
            success: function(data) {
                if (data != "FAIL") {
                    var html = '<div class="popCont popQuiz" style="width:400px;"><h1 class="abc"> <a class="close"></a> Self Registration Link</h1><div style="max-height:750px;"><table width="100%" cellspacing="0" cellpadding="0" class="borderBox"><tr><td valign="top"><div class="pr20 pl20 mb20 column-12 borderBox posRel floatLeft"><div class="sectionHeader"><div class="floatLeft selectMedium searchByContain"><label class="column-12">' + i18n("class.publish.success.msg", CLASS_SINGULAR_CAPS) + '</label><br/><label class="column-12">' + classCode + " - " + courseTitle + '</label><br/><br/><label class="column-12">' + i18n("class.selfreg.msg", CLASS_SINGULAR_SMALL) + ':</label><br/><br/><label class="column-12"><a id="classLinkId">' + data + '</a></label><br/><br/><input name="copyLinkButton" id="copyLinkButton"" type="button" value="Copy URL" class="btn btn_primary mr10" /><br/><br/><label class="column-12"><strong>Note:</strong>This link is also available through this link icon<a class="lc_navIcons lc_classLinkIcon" href="javascript:void(0)" style="width: 25px;height: 14px;background-size: contain;"></a>on the top right of your screen.</label></div></div></div><br class="clear" /><div class="pagingbottomQuiz buttonRow previewButtonRow pr25"><input name="okButton" id="okButton" type="button" value="Ok" class="btn btn_primary mr10" /></div></td></tr></table></div></div>';
                    new Boxy(html,{
                        closeable: true,
                        afterShow: function(r) {
                            jQuery("#okButton").click(function() {
                                jQuery(".close").click()
                            });
                            jQuery("#copyLinkButton").click(function() {
                                var str = jQuery("#classLinkId").html();
                                appNavObj.copyToClipboard(str)
                            })
                        },
                        unloadOnHide: true
                    })
                }
            }
        })
    }
    ;
    this.showIntegrationPopup = function(classId, classCode, courseTitle, otherLmsPlatform, sharedKey, sharedSecret) {
        appNavObj.lmsPlatform = otherLmsPlatform;
        appNavObj.sharedLTIKey = sharedKey;
        appNavObj.sharedLTISecret = sharedSecret;
        var url = this.appBasePath + "/class/class.lc?operation=getLaunchClassUrl&classId=" + classId;
        jQuery.ajax({
            url: url,
            success: function(data) {
                if (data != null || data != "null") {
                    var html = '<div class="popCont popQuiz" style="width:580px;"><h1 class="abc"> <a class="close"></a> LTI Integration</h1><div style="max-height:750px;"><table width="100%" cellspacing="0" cellpadding="0" class="borderBox"><tr><td valign="top"><div class="pr20 pl20 mb20 column-12 borderBox posRel floatLeft"><div class="sectionHeader"><div class="floatLeft selectMedium searchByContain"><label class="column-12">' + i18n("class.publish.success.msg", CLASS_SINGULAR_CAPS) + '</label><br/><label class="column-12">' + classCode + " - " + courseTitle + '</label><br/><br/><label class="column-12">' + i18n("class.lti.integrate.msg") + ':</label><br/><br/><ul style="list-style-type:decimal;margin: 5px 10px 0 20px;">';
                    if (appNavObj.lmsPlatform == 1 || appNavObj.lmsPlatform == "1") {
                        html += '<li><strong>DOWNLOAD <a target="_blank" href="' + appNavObj.appBasePath + '/static/LoudCloud Courseware for Canvas - for Instructors 2019.pdf">THESE INSTRUCTIONS</a></strong> to integrate LoudCloud with your LMS.</li></li>'
                    } else {
                        if (appNavObj.lmsPlatform == 2 || appNavObj.lmsPlatform == "2") {
                            html += '<li><strong>DOWNLOAD <a target="_blank" href="' + appNavObj.appBasePath + '/static/LoudCloud Courseware for Blackboard - for Instructors 2019.pdf">THESE INSTRUCTIONS</a></strong>to integrate LoudCloud with your LMS.</li></li>'
                        } else {
                            if (appNavObj.lmsPlatform == 3 || appNavObj.lmsPlatform == "3") {
                                html += '<li><strong>DOWNLOAD <a target="_blank" href="' + appNavObj.appBasePath + '/static/LoudCloud Courseware for D2L Bright Space - for instructors 2019.pdf">THESE INSTRUCTIONS</a></strong>to integrate LoudCloud with your LMS.</li></li>'
                            } else {
                                if (appNavObj.lmsPlatform == 4 || appNavObj.lmsPlatform == "4") {
                                    html += '<li><strong>DOWNLOAD <a target="_blank" href="' + appNavObj.appBasePath + '/static/LoudCloud Courseware for Moodle - for instructors 2019.pdf">THESE INSTRUCTIONS</a></strong>to integrate LoudCloud with your LMS.</li></li>'
                                }
                            }
                        }
                    }
                    html += "<li>" + i18n("class.lti.integrate.step.two") + '</li></ul><br/><label class="column-12"><strong>Note: </strong>' + i18n("class.lti.integrate.note", CLASS_SINGULAR_SMALL) + '</label><br/><br/><div class="floatLeft column-12 borderBox" style=" padding: 10px 15px; background: #fffbf0; border-radius: 3px;"><label class="column-12"><strong>Class URL:</strong><a id="classLinkId">' + data + "</a></label><br/><br/>";
                    if (appNavObj.lmsPlatform == 1 || appNavObj.lmsPlatform == "1") {
                        html += "<span><strong>LTI Key: </strong>" + appNavObj.sharedLTIKey + "</span><br/><br/><span><strong>LTI Secret: </strong>" + appNavObj.sharedLTISecret + '</span><br/><br/><input name="copyCredentialsButton" id="copyCredentialsButton"" type="button" value="Copy Credentials" class="btn btn_primary mr10 floatLeft" /><label class="floatLeft mt5">This class URL is unique to the newly copied class and term.</label></div><br/>'
                    } else {
                        html += '<input name="copyCredentialsButton" id="copyCredentialsButton"" type="button" value="Copy URL" class="btn btn_primary mr10 floatLeft" /><label class="floatLeft mt5">This class URL is unique to the newly copied class and term.</label></div><br/>'
                    }
                    html += '</div></div></div><br class="clear" /><div class="pagingbottomQuiz buttonRow previewButtonRow pr25"><input name="okButton" id="okButton"" type="button" value="Ok" class="btn btn_primary mr10" /></div></td></tr></table></div></div>';
                    new Boxy(html,{
                        closeable: true,
                        afterShow: function(r) {
                            jQuery("#okButton").click(function() {
                                jQuery(".close").click()
                            });
                            jQuery("#copyCredentialsButton").click(function() {
                                var str = "";
                                if (appNavObj.lmsPlatform == 1 || appNavObj.lmsPlatform == "1") {
                                    str += "Class URL: " + jQuery("#classLinkId").html() + "\nLTI Key: " + appNavObj.sharedLTIKey + "\nLTI Secret: " + appNavObj.sharedLTISecret
                                } else {
                                    str += jQuery("#classLinkId").html()
                                }
                                appNavObj.copyToClipboard(str)
                            })
                        },
                        unloadOnHide: true
                    })
                }
            }
        })
    }
    ;
    this.copyToClipboard = function(str) {
        const el = document.createElement("textarea");
        el.value = str;
        el.setAttribute("readonly", "");
        el.style.position = "absolute";
        el.style.left = "-9999px";
        document.body.appendChild(el);
        var isiOSDevice = navigator.userAgent.match(/ipad|iphone/i);
        if (isiOSDevice) {
            var editable = el.contentEditable;
            var readOnly = el.readOnly;
            el.contentEditable = true;
            el.readOnly = false;
            var range = document.createRange();
            range.selectNodeContents(el);
            var selection = window.getSelection();
            selection.removeAllRanges();
            selection.addRange(range);
            el.setSelectionRange(0, 999999);
            el.contentEditable = editable;
            el.readOnly = readOnly
        } else {
            el.select()
        }
        document.execCommand("copy");
        document.body.removeChild(el);
        Boxy.alert("Copied to clipboard", null, {
            title: "Message"
        }, true, "fa-check", "lc_snackbarSuccess")
    }
}
jQuery(window).bind("beforeunload", function() {
    appNavObj.setResourceContentId(null, true)
});
jQuery(window).bind("unload", function() {
    appNavObj.setResourceContentId(null, true)
});
function lti_launch(a) {
    jQuery("#thirdPartyResource_" + a).trigger("click")
}
;var tinyMceFileBrowserObj;
var previousFileBrowserObj;
function inlineAuthoringContent(e, g, b, c, a, d, f) {
    this.userId = e;
    this.appBasePath = g;
    this.inlineAuthoringContentFor = b;
    this.uploadFilesId = "";
    this.canCreateCopy = false;
    this.ltiAppString = d;
    this.toc_xml_doc = null;
    this.fileExt = "jpg,jpeg,bmp,png,gif,tiff,ppm,pgm,pbm,pnm,wav,aiff,au,mp3,wma,m4a,m4p,3gp,3g2,3gp,asf,avi,flv,mov,mp4,webm,mpeg,rm,swf,wmv,doc,pdf,xlsx,docx,pptx,ppt,xls,txt,docm";
    this.fileSize = 10485760;
    this.type = "";
    if (f != null && f != "" && f.length > 0) {
        this.type = f
    }
    if (c != null && c != "" && c.length > 0) {
        this.fileExt = c
    }
    if (a != null && a != "" && a.length > 0) {
        this.fileSize = a
    }
    this.iaTOCXmlDataId = "#iaTOCXmlData";
    this.iaContentDataId = "#iacontentData";
    this.iafileNameId = "#iafileName";
    this.iaCurrentPageId = "#sel_url";
    this.iaAttachmentId = "#attachment_id";
    this.iaContentId = "#content_id";
    this.iaCurrentPageFormId = "#contentForm";
    this.iaContentRepositoryPathId = "#content_Repository_Path";
    this.inlineAuthoringIds = "#inlineAuthoringIds";
    this.createdInlineAuthoringIds = "#createdInlineAuthoringIds";
    this.inlineAuthoringContentLinksId = "#inlineAuthoringContentPageLinks";
    this.inlineAuthoringContentCreate = "#inlineAuthoringContentCreate";
    this.loaderImage = "#loaderImage";
    this.contentPageWithLink = "#contentPageWithLink";
    this.iaTitleId = "#iatitle";
    this.iaDocumentTitleId = "#documenttitle";
    this.tempIaContentDataId = "#tempIacontentData";
    this.iaTOCXmlName = "toc.xml";
    this.deleteCreatedInlineAuthoring = true;
    this.inlineAuthoringCurrentPageName = "";
    this.createdInlineAuthoringDeleted = false;
    this.contentModified = false;
    this.policyInline = false;
    this.iaControllerURL = this.appBasePath + "/inlineauthoring/inlineauthoring.lc";
    this.createInlineAuthoringInRepo = "?operation=createInlineAuthoringContentInRepo";
    this.editInlineAuthoringDocument = "?operation=createInlineAuthoringContent";
    this.viewInlineAuthoringDocument = "?operation=viewInlineAuthoringContent&type=" + this.type;
    this.deleteInlineAuthoringDocument = "?operation=deleteInlineAuthoringContent";
    this.editInlineAuthoringPolicies = "?operation=createInlineAuthoringPolicies";
    this.viewInlineAuthoringPolicies = "?operation=viewInlineAuthoringPolicies";
    this.editInlineAuthoringCurrentPage = "?operation=createInlineAuthoringContentPage";
    this.viewInlineAuthoringCurrentPage = "?operation=viewInlineAuthoringContentPage&type=" + this.type;
    this.deleteInlineAuthoringCurrentPage = "?operation=deleteInlineAuthoringContentPage";
    this.getTOCContents = function(j) {
        return j.toc_xml_doc
    }
    ;
    this.setTOCContents = function(k, j) {
        this.toc_xml_doc = j;
        jQuery(k.iaTOCXmlDataId).val(k.xml2Str(j))
    }
    ;
    this.isCreatedInlineAuthoringDeleted = function() {
        return this.createdInlineAuthoringDeleted
    }
    ;
    this.setCreatedInlineAuthoringDeleted = function(j) {
        this.createdInlineAuthoringDeleted = j
    }
    ;
    this.isCanCreateCopy = function() {
        return this.canCreateCopy
    }
    ;
    this.setCanCreateCopy = function(j) {
        this.canCreateCopy = j
    }
    ;
    this.isContentModified = function() {
        return this.contentModified
    }
    ;
    this.setContentModified = function(j) {
        this.contentModified = j
    }
    ;
    this.isPolicyInline = function() {
        return this.policyInline
    }
    ;
    this.setPolicyInline = function(j) {
        this.policyInline = j
    }
    ;
    this.xml2Str = function h(j) {
        try {
            return (new XMLSerializer()).serializeToString(j)
        } catch (k) {
            try {
                return j.xml
            } catch (k) {
                alert("Xmlserializer not supported")
            }
        }
        return false
    }
    ;
    this.parseTOCXML = function(k, m) {
        var l = m;
        var j;
        if (window.DOMParser) {
            parser = new DOMParser();
            j = parser.parseFromString(l, "text/xml")
        } else {
            j = new ActiveXObject("Microsoft.XMLDOM");
            j.async = false;
            j.loadXML(l)
        }
        k.setTOCContents(k, j);
        return j
    }
    ;
    this.addNewContentToXML = function(l) {
        var n = l.getTOCContents(l);
        var m = new Date().getTime() + ".html";
        var k = 0;
        var q;
        q = l.getTOCContents(l);
        var o = q.getElementsByTagName("content");
        if (o.length == 0) {
            jQuery(l.iaCurrentPageId).val(null)
        } else {
            for (i = 0; i < o.length; i++) {
                var p = parseInt(o[i].getAttribute("order"));
                if (k < p) {
                    k = p
                }
            }
        }
        var j = n.createElement("content");
        j.setAttribute("url", m);
        j.setAttribute("order", k + 1);
        j.setAttribute("title", jQuery.trim(jQuery("#iatitle").val()));
        x = n.getElementsByTagName("toc");
        x[0].appendChild(j);
        l.setTOCContents(l, n);
        l.setInlineAuthoringCurrentPageName(m);
        jQuery(l.iafileNameId).val(m)
    }
    ;
    this.removeContentFromXML = function(k, j) {
        var l = k.getTOCContents(k);
        var m = l.getElementsByTagName("content");
        for (i = 0; i < m.length; i++) {
            var n = m[i].getAttribute("url");
            if (n == j) {
                x = l.getElementsByTagName("toc");
                x[0].removeChild(m[i]);
                break
            }
        }
        k.setTOCContents(k, l)
    }
    ;
    this.setDeleteCreatedInlineAuthoring = function(j) {
        this.deleteCreatedInlineAuthoring = j
    }
    ;
    this.getDeleteCreatedInlineAuthoring = function() {
        return this.deleteCreatedInlineAuthoring
    }
    ;
    this.setInlineAuthoringCurrentPageName = function(j) {
        this.inlineAuthoringCurrentPageName = j
    }
    ;
    this.getInlineAuthoringCurrentPageName = function() {
        return this.inlineAuthoringCurrentPageName
    }
    ;
    this.setInlineAuthoringContentFor = function(j) {
        this.inlineAuthoringContentFor = j
    }
    ;
    this.getInlineAuthoringContentFor = function() {
        return this.inlineAuthoringContentFor
    }
    ;
    this.setUploadFilesId = function(j) {
        this.uploadFilesId = j
    }
    ;
    this.getUploadFilesId = function() {
        return this.uploadFilesId
    }
    ;
    this.createURL = this.iaControllerURL + this.createInlineAuthoringInRepo;
    this.createInlineAuthoringInRepo = function(k, l) {
        var j = k.createURL;
        if (k.isCanCreateCopy()) {
            if (jQuery("#" + l).val() != l) {
                j += "&canCreateCopy=true"
            }
        }
        jQuery.ajax({
            url: j,
            cache: false,
            async: true,
            dataType: "json",
            data: {
                referenceId: l,
                contentFor: k.getInlineAuthoringContentFor()
            },
            success: function(m) {
                if (m.result == "0") {
                    Boxy.alert(i18n("inlineauthoring.msg.repo.error"), null, {
                        title: i18n("message")
                    })
                } else {
                    jQuery(k.iaContentRepositoryPathId).val(m.inlineAuthoringContent.content.contentRepositoryPath);
                    jQuery(k.iaContentId).val(m.inlineAuthoringContent.content.contentId);
                    jQuery(k.iaAttachmentId).val(m.inlineAuthoringContent.attachmentId);
                    if (k.isPolicyInline()) {
                        jQuery(k.inlineAuthoringIds).append("<input type='hidden' id='" + jQuery(k.iaAttachmentId).val() + "' name='createdInlineAuthoringIds' value='" + jQuery(k.iaAttachmentId).val() + "'/>")
                    }
                    k.getInlineAuthoringContentFromRepo(k, k.iaTOCXmlName, "CREATE");
                    k.viewEditInlineAuthoringContentPage(k, "CREATE");
                    k.setContentModified(false);
                    jQuery(k.loaderImage).empty();
                    jQuery(k.contentPageWithLink).show();
                    k.afterShowBoxy();
                    jQuery("#saveInlineBtn").show();
                    jQuery("#saveInlineBtnSpan").hide();
                    jQuery("#cancelInlineBtn").attr("disabled", false).removeClass("disBtn")
                }
            }
        })
    }
    ;
    this.viewEditPoliciesOrResource = function(l, n, k, m, p) {
        var o = l.iaControllerURL;
        var j = false;
        if ("VIEW" == k) {
            j = true;
            o += l.viewInlineAuthoringPolicies
        } else {
            o += l.editInlineAuthoringPolicies
        }
        if ("CREATE" == k) {
            o += "&referenceId=" + n
        } else {
            o += "&attachmentId=" + n
        }
        o += "&contentFor=" + l.getInlineAuthoringContentFor();
        o += "&isBu=" + p;
        jQuery.ajax({
            url: o,
            success: function(q) {
                jQuery("#cpdDivId").show();
                jQuery("#inlineFormDiv").html(q);
                jQuery("#saveInlineBtn").attr("disabled", true).addClass("disBtn");
                jQuery("#cancelInlineBtn").attr("disabled", true).addClass("disBtn");
                jQuery(l.loaderImage).html('<div align="center" style="margin-top: 200px;"><img  src="' + l.appBasePath + '/images/1569445563950/loader.gif"/></div>');
                globlaInlineAuthoringObj = l;
                if ("CREATE" == k) {
                    l.createInlineAuthoringInRepo(l, n)
                } else {
                    l.getInlineAuthoringContentFromRepo(l, l.iaTOCXmlName, k);
                    l.viewEditInlineAuthoringContentPage(l, k)
                }
                jQuery(l.loaderImage).empty();
                jQuery(l.contentPageWithLink).show();
                l.afterShowBoxy();
                jQuery("#saveInlineBtn").attr("disabled", false).removeClass("disBtn");
                jQuery("#cancelInlineBtn").attr("disabled", false).removeClass("disBtn")
            }
        })
    }
    ;
    this.viewEditInlineAuthoring = function(l, m, k) {
        if (tinyMCE.activeEditor != null) {
            tinyMCE.activeEditor.remove();
            editorPreviewWithId(tinyActivateControl.attr("id"))
        }
        var n = l.iaControllerURL;
        var j = false;
        if ("VIEW" == k) {
            l.setContentModified(false);
            j = true;
            n += l.viewInlineAuthoringDocument
        } else {
            n += l.editInlineAuthoringDocument
        }
        n += "&contentFor=" + l.getInlineAuthoringContentFor();
        if ("CREATE" == k) {
            n += "&referenceId=" + m
        } else {
            n += "&attachmentId=" + m;
            jQuery("#" + m).val();
            if (l.isCanCreateCopy() && "VIEW" != k) {
                if (jQuery("#" + m).val() != m) {
                    n += "&canCreateCopy=true";
                    k = "CREATE"
                }
            }
        }
        Boxy.load(n, {
            unloadOnHide: true,
            afterShow: function() {
                jQuery("#saveInlineBtn").hide();
                jQuery("#saveInlineBtnSpan").show();
                jQuery("#cancelInlineBtn").attr("disabled", true).addClass("disBtn");
                jQuery(l.loaderImage).html('<div align="center" style="margin-top: 200px;"><img  src="' + l.appBasePath + '/images/1569445563950/loader.gif"/></div>');
                globlaInlineAuthoringObj = l;
                if ("CREATE" == k) {
                    l.createInlineAuthoringInRepo(l, m)
                } else {
                    l.getInlineAuthoringContentFromRepo(l, l.iaTOCXmlName, k);
                    l.viewEditInlineAuthoringContentPage(l, k)
                }
            }
        })
    }
    ;
    this.deleteInlineAuthoringURL = this.iaControllerURL + this.deleteInlineAuthoringDocument;
    this.deleteInlineAuthoring = function(k, l, j, o) {
        if (k.getUploadFilesId() != null && k.getUploadFilesId() != "" && jQuery("#" + k.getUploadFilesId()) != "undefined") {
            jQuery("#" + k.getUploadFilesId()).show()
        }
        var n = new Array(0);
        if ("D" == o) {
            jQuery("#" + j).remove();
            jQuery(l).parent().parent().parent().remove()
        } else {
            if (checkNullnEmptyValue(j)) {
                j = jQuery(k.iaAttachmentId).val()
            } else {
                n = j.split(",")
            }
        }
        if ("D" == o || (k.getDeleteCreatedInlineAuthoring() && "Y" == o)) {
            jQuery.ajax({
                url: k.deleteInlineAuthoringURL,
                cache: false,
                data: {
                    attachmentIds: j,
                    contentFor: k.getInlineAuthoringContentFor()
                },
                success: function(p) {
                    if (n && n.length > 0) {
                        for (var q = 0; q < this.createdIdArray.length; q++) {
                            jQuery("#" + n[q]).remove()
                        }
                    }
                }
            })
        } else {
            if (j != null) {
                var m = jQuery("#" + j);
                if (m == null || m == "undefined") {
                    jQuery(k.inlineAuthoringIds).append("<input type='hidden' id='" + j + "' name='createdInlineAuthoringIds' value='" + j + "'/>")
                }
            }
        }
        if (previousFileBrowserObj != undefined) {
            unloadTinyMce("textarea.tinymce");
            loadTinyMce("textarea.tinymce", false, previousFileBrowserObj)
        }
    }
    ;
    this.deleteCreatedInlineAuthoringContent = function(k, l, m) {
        var j = jQuery("input[name=createdInlineAuthoringIds]").val();
        if (!checkNullnEmptyValue(j)) {
            k.setDeleteCreatedInlineAuthoring(true);
            k.deleteInlineAuthoring(k, l, j, "Y")
        }
        k.setCreatedInlineAuthoringDeleted(true);
        if (m != "") {
            appNavObj.setURL(m)
        }
    }
    ;
    this.viewEditInlineAuthoringContentPage = function(m, l) {
        var n = jQuery(m.iaCurrentPageId).val();
        var j = m.iaControllerURL;
        var k = false;
        if ("VIEW" == l) {
            k = true;
            m.setContentModified(false);
            j += m.viewInlineAuthoringCurrentPage;
            jQuery.ajax({
                url: j,
                cache: false,
                data: {
                    attachmentId: jQuery(m.iaAttachmentId).val(),
                    contentId: jQuery(m.iaContentId).val(),
                    fileName: n,
                    contentFor: m.getInlineAuthoringContentFor()
                },
                success: function(o) {
                    jQuery(m.iaCurrentPageFormId).html(o);
                    prepareInlineAuthoringContentPage(m, l);
                    m.setContentModified(false)
                }
            })
        } else {
            j += m.editInlineAuthoringCurrentPage;
            if (l != "VIEW" && m.isContentModified()) {
                Boxy.ask(i18n("inlineauthoring.msg.confirm.page.save"), [i18n("ok"), i18n("cancel")], function(o) {
                    if (o == i18n("cancel")) {
                        m.setLoadPage(false)
                    } else {
                        jQuery.ajax({
                            url: j,
                            cache: false,
                            data: {
                                attachmentId: jQuery(m.iaAttachmentId).val(),
                                contentId: jQuery(m.iaContentId).val(),
                                fileName: n,
                                contentFor: m.getInlineAuthoringContentFor()
                            },
                            success: function(p) {
                                jQuery(m.iaCurrentPageFormId).html(p);
                                prepareInlineAuthoringContentPage(m, l);
                                m.setContentModified(false)
                            }
                        })
                    }
                }, {
                    title: i18n("message")
                })
            } else {
                jQuery.ajax({
                    url: j,
                    cache: false,
                    data: {
                        attachmentId: jQuery(m.iaAttachmentId).val(),
                        contentId: jQuery(m.iaContentId).val(),
                        fileName: n,
                        contentFor: m.getInlineAuthoringContentFor()
                    },
                    success: function(o) {
                        jQuery(m.iaCurrentPageFormId).html(o);
                        prepareInlineAuthoringContentPage(m, l);
                        m.setContentModified(false)
                    }
                })
            }
        }
    }
    ;
    this.loadSelectedPage = function(l, k, j) {
        if (j != "VIEW" && (l.isContentModified() || checkNullnEmptyValue(jQuery(l.iafileNameId).val()))) {
            Boxy.ask(i18n("inlineauthoring.msg.confirm.page.save"), [i18n("ok"), i18n("cancel")], function(m) {
                if (m == i18n("cancel")) {} else {
                    l.setContentModified(false);
                    jQuery(l.iaCurrentPageId).val(k);
                    jQuery(l.iafileNameId).val(k);
                    l.viewEditInlineAuthoringContentPage(l, j)
                }
            }, {
                title: i18n("message")
            })
        } else {
            l.setContentModified(false);
            jQuery(l.iaCurrentPageId).val(k);
            jQuery(l.iafileNameId).val(k);
            jQuery(l.tempIaContentDataId).html("");
            l.viewEditInlineAuthoringContentPage(l, j)
        }
        appNavObj.unbindEventsTocheckIfFormHasAnyUnsavedChanges();
        appNavObj.setInitialSerializedFormData("createPolicyForm", null, null);
        appNavObj.unbindEventsTocheckIfFormHasAnyUnsavedChanges();
        appNavObj.setInitialSerializedFormData("createInlineAuthoringContentPageForm", null, null);
        if (tinyMCE.activeEditor != null) {
            tinyMCE.activeEditor.remove();
            editorPreviewWithId(tinyActivateControl.attr("id"))
        }
    }
    ;
    this.deleteInlineAuthoringContentPageURL = this.iaControllerURL + this.deleteInlineAuthoringCurrentPage;
    this.deleteInlineAuthoringContentPage = function(l, k, j) {
        Boxy.ask(i18n("inlineauthoring.msg.confirm.page.delete"), [i18n("ok"), i18n("cancel")], function(n) {
            if (n == i18n("ok")) {
                jQuery(l).parent().hide();
                var m = k.getTOCContents(k);
                k.removeContentFromXML(k, j);
                jQuery.post(k.deleteInlineAuthoringContentPageURL, {
                    attachmentId: jQuery(k.iaAttachmentId).val(),
                    contentId: jQuery(k.iaContentId).val(),
                    fileName: j,
                    contentFor: k.getInlineAuthoringContentFor(),
                    iaTOCXmlData: jQuery(k.iaTOCXmlDataId).val()
                }, function(p, o) {
                    if (p == "1") {
                        Boxy.alert(i18n("inlineauthoring.msg.page.delete"), null, {
                            title: i18n("message")
                        });
                        globlaInlineAuthoringObj = k;
                        loadContentXMLLinks(k, k.xml2Str(k.getTOCContents(k)), "EDIT", null);
                        k.viewEditInlineAuthoringContentPage(k, "EDIT");
                        jQuery(l).parent().remove();
                        k.pageLinksScroll()
                    } else {
                        Boxy.alert(i18n("inlineauthoring.msg.page.delete.error"), null, {
                            title: i18n("message")
                        });
                        jQuery(l).parent().show();
                        k.setTOCContents(k, m)
                    }
                })
            }
        }, {
            title: i18n("message")
        })
    }
    ;
    this.inlineAuthoringContentRepoURL = this.appBasePath + "/contents/view/";
    this.getInlineAuthoringContentFromRepo = function(o, n, m) {
        if (checkNullnEmptyValue(n)) {
            return
        }
        var l = false;
        if ("VIEW" == m) {
            l = true
        }
        jQuery("#saveInlineBtn").hide();
        jQuery("#saveInlineBtnSpan").show();
        jQuery("#cancelInlineBtn").attr("disabled", true).addClass("disBtn");
        if ((n == o.iaTOCXmlName && l) || !l) {
            jQuery.ajax({
                async: false,
                cache: false,
                url: o.inlineAuthoringContentRepoURL + "/" + jQuery(o.iaContentRepositoryPathId).val() + "/" + n + "?operation=createOrEditInline&realContentId=" + jQuery(o.iaContentId).val(),
                success: function(t) {
                    if (n == o.iaTOCXmlName) {
                        jQuery(o.contentPageWithLink).hide();
                        globlaInlineAuthoringObj = o;
                        loadContentXMLLinks(o, o.xml2Str(t), m, null)
                    } else {
                        var v;
                        var s = "";
                        v = o.parseTOCXML(o, o.xml2Str(o.getTOCContents(o)));
                        var u = v.getElementsByTagName("content");
                        if (u.length == 0) {
                            jQuery(o.iaCurrentPageId).val(null)
                        } else {
                            for (i = 0; i < u.length; i++) {
                                var r = v.getElementsByTagName("content")[i].attributes;
                                if (r.getNamedItem("url").nodeValue == n) {
                                    s = r.getNamedItem("title").nodeValue;
                                    break
                                }
                            }
                        }
                        if (l) {
                            jQuery(o.iaContentDataId).html(t)
                        } else {
                            jQuery(o.iaContentDataId).val(t);
                            jQuery(o.tempIaContentDataId).html(t)
                        }
                        jQuery(o.iaTitleId).val(s);
                        jQuery(o.iafileNameId).val(n);
                        if (!jQuery(o.contentPageWithLink).is(":visible")) {
                            jQuery(o.contentPageWithLink).show();
                            o.afterShowBoxy();
                            jQuery(o.loaderImage).empty()
                        }
                    }
                    jQuery("#saveInlineBtn").show();
                    jQuery("#saveInlineBtnSpan").hide();
                    jQuery("#cancelInlineBtn").attr("disabled", false).removeClass("disBtn");
                    o.setContentModified(false)
                }
            })
        } else {
            var q;
            var k = "";
            q = o.parseTOCXML(o, o.xml2Str(o.getTOCContents(o)));
            var p = q.getElementsByTagName("content");
            if (p.length == 0) {
                jQuery(o.iaCurrentPageId).val(null)
            } else {
                for (i = 0; i < p.length; i++) {
                    var j = q.getElementsByTagName("content")[i].attributes;
                    if (j.getNamedItem("url").nodeValue == n) {
                        k = j.getNamedItem("title").nodeValue;
                        break
                    }
                }
            }
            jQuery(o.iaContentDataId).attr("src", o.inlineAuthoringContentRepoURL + jQuery(o.iaContentRepositoryPathId).val() + "/" + n);
            jQuery(o.loaderImage).remove();
            jQuery(o.iaTitleId).val(k);
            jQuery(o.iafileNameId).val(n);
            if (!jQuery(o.contentPageWithLink).is(":visible")) {
                jQuery(o.contentPageWithLink).show();
                o.afterShowBoxy();
                jQuery(o.loaderImage).empty()
            }
        }
    }
    ;
    this.afterShowBoxy = function() {
        jQuery(".tunyslide").toggle(function() {
            jQuery(".documentList").fadeOut("fast");
            jQuery(this).parent().parent().css("width", "97.5%");
            jQuery(this).addClass("tunyslideClick");
            jQuery(this).attr({
                "aria-expanded": "false",
                "aria-label": "Panel Expand"
            })
        }, function() {
            jQuery(".documentList").fadeIn("fast");
            jQuery(this).removeClass("tunyslideClick");
            jQuery(this).attr({
                "aria-expanded": "true",
                "aria-label": "Panel Collapse"
            });
            jQuery(this).parent().parent().css("width", "76.3%")
        });
        this.pageLinksScroll()
    }
    ;
    this.pageLinksScroll = function() {
        new PerfectScrollbar("#inlineAuthoringContentPageLinks",{
            suppressScrollX: true
        })
    }
    ;
    this.saveInlineAuthoringContent = function() {}
    ;
    this.validateInlineAuthoringForm = function(j) {
        jQuery("#processingInlineRequestSpan").show();
        jQuery("#saveInlineBtn").attr("disabled", true).addClass("disBtn");
        jQuery("#cancelInlineBtn").attr("disabled", true).addClass("disBtn");
        var u = true;
        var n = jQuery("#documenttitle").val();
        var p = jQuery("#iatitle").val();
        var m = jQuery("#iacontentData").text();
        var l = jQuery("#iacontentData").val();
        if (checkNullnEmptyValue(n)) {
            jQuery("#documenttitle").addClass("error");
            jQuery("#documenttitleValidation").show();
            jQuery("#documenttitleValidation").html(i18n("msg.required"));
            u = false
        } else {
            if (jQuery.trim(n) == i18n("inlineauthoring.document.title")) {
                jQuery("#documenttitle").addClass("error");
                jQuery("#documenttitleValidation").show();
                jQuery("#documenttitleValidation").html(i18n("inlineauthoring.msg.title.error", "Document Title"));
                u = false
            } else {
                jQuery("#documenttitle").removeClass("error");
                jQuery("#documenttitleValidation").hide()
            }
        }
        if (checkNullnEmptyValue(p)) {
            jQuery("#iatitle").addClass("error");
            jQuery("#iatitleValidation").show();
            jQuery("#iatitleValidation").html(i18n("msg.required"));
            u = false
        } else {
            if (jQuery.trim(p) == "Add Title") {
                jQuery("#iatitle").addClass("error");
                jQuery("#iatitleValidation").show();
                jQuery("#iatitleValidation").html(i18n("inlineauthoring.msg.title.error", "Page Title"));
                u = false
            } else {
                jQuery("#iatitle").removeClass("error");
                jQuery("#iatitleValidation").hide()
            }
        }
        if (checkNullnEmptyValueForDescription(l)) {
            jQuery("#iacontentData").addClass("error");
            jQuery("#iacontentdataValidation").show();
            jQuery("#iacontentdataValidation").html(i18n("msg.required"));
            u = false
        } else {
            if (jQuery.trim(m) == "Add Description") {
                jQuery("#iacontentData").addClass("error");
                jQuery("#iacontentdataValidation").show();
                jQuery("#iacontentdataValidation").html(i18n("inlineauthoring.msg.title.error", "Page Description"));
                u = false
            } else {
                jQuery("#iacontentData").removeClass("error");
                jQuery("#iacontentdataValidation").hide()
            }
        }
        if (u) {
            n = jQuery.trim(n);
            var s = "inlineAuthoringAttachment_" + jQuery(j.iaAttachmentId).val();
            var o = false;
            var r = jQuery("#oldAttachmentId").val();
            jQuery(".existingInlineContent").each(function(w) {
                if (s == jQuery(this).attr("id") || (!checkNullnEmptyValue(r) && "inlineAuthoringAttachment_" + r == jQuery(this).attr("id"))) {} else {
                    if (jQuery.trim(jQuery(this).html()) == n) {
                        o = true
                    }
                }
            });
            if (o) {
                Boxy.alert(i18n("inlineauthoring.msg.duplicate.title.error", "Document", "'" + n + "'"), null, {
                    title: i18n("message")
                });
                u = false
            }
            var q = jQuery(j.iafileNameId).val();
            var v;
            v = j.getTOCContents(j);
            var t = v.getElementsByTagName("content");
            if (t.length == 0) {
                jQuery(j.iaCurrentPageId).val(null)
            } else {
                o = false;
                if (checkNullnEmptyValue(p)) {
                    q = ""
                }
                p = jQuery.trim(p);
                for (i = 0; i < t.length; i++) {
                    if ((p == t[i].getAttribute("title")) && (q != t[i].getAttribute("url"))) {
                        o = true;
                        break
                    }
                }
                if (o) {
                    Boxy.alert(i18n("inlineauthoring.msg.duplicate.title.error", "Page", "'" + p + "'"), null, {
                        title: i18n("message")
                    });
                    u = false
                }
            }
            if (u) {
                var k = jQuery("#create").val();
                if (!checkNullnEmptyValue(k) && k == "true") {
                    j.addNewContentToXML(j)
                } else {
                    for (i = 0; i < t.length; i++) {
                        if (q == t[i].getAttribute("url")) {
                            t[i].setAttribute("title", p);
                            break
                        }
                    }
                    j.setTOCContents(j, v)
                }
            }
        }
        if (!u) {
            jQuery("#processingInlineRequestSpan").hide();
            jQuery("#saveInlineBtn").attr("disabled", false).removeClass("disBtn");
            jQuery("#cancelInlineBtn").attr("disabled", false).removeClass("disBtn")
        }
        return u
    }
}
function checkNullnEmptyValue(a) {
    var b = false;
    if (a == null || a == "undefined" || jQuery.trim(a).length == 0 || a.toUpperCase() == "NULL") {
        b = true
    }
    return b
}
function checkNullnEmptyValueForDescription(a) {
    if ((jQuery(a).text().trim() != "") || (jQuery(a).find("img").length > 0) || (jQuery(a).find("video").length > 0) || (jQuery(a).find("object").length > 0) || (jQuery(a).find("audio").length > 0)) {
        return false
    } else {
        return true
    }
}
function loadContentXMLLinks(a, f, d, b) {
    var c = false;
    if ("VIEW" == d) {
        c = true
    }
    var k;
    k = a.parseTOCXML(a, f);
    var j = k.getElementsByTagName("content");
    var h = "<ul>";
    if (j.length == 0) {
        jQuery(a.iaCurrentPageId).val(null)
    } else {
        var e = "";
        for (i = 0; i < j.length; i++) {
            var g = k.getElementsByTagName("content")[i].attributes;
            e = "";
            if (i == 0) {
                jQuery(a.iaCurrentPageId).val(g.getNamedItem("url").nodeValue);
                if (b == null) {
                    e = "actLi"
                }
            }
            if (b != null && b == g.getNamedItem("url").nodeValue) {
                e = "actLi";
                jQuery(a.iaCurrentPageId).val(g.getNamedItem("url").nodeValue)
            }
            if (!c) {
                h += "<li class='" + e + "' ><span class='icoDocfile floatLeft' style='display: block; height: 15px;'></span><span class='wrapTxt15' onclick=\"javascript:globlaInlineAuthoringObj.loadSelectedPage(globlaInlineAuthoringObj,escape('" + g.getNamedItem("url").nodeValue + "'), '" + d + "');\" >" + g.getNamedItem("title").nodeValue + "</span><a href='javascript:void(0);' class='cutList' title='Remove' onclick=\"javascript:globlaInlineAuthoringObj.deleteInlineAuthoringContentPage(this, globlaInlineAuthoringObj, escape('" + g.getNamedItem("url").nodeValue + "'));\" >&nbsp;</a></li>"
            } else {
                h += "<li class='" + e + "' ><span class='icoDocfile floatLeft' style='display: block; height: 15px;'></span><span class='wrapTxt15' onclick=\"javascript:globlaInlineAuthoringObj.loadSelectedPage(globlaInlineAuthoringObj,escape('" + g.getNamedItem("url").nodeValue + "'), '" + d + "');\" >" + g.getNamedItem("title").nodeValue + "</span></li>"
            }
        }
        h += "</ul>";
        jQuery(a.inlineAuthoringContentLinksId).html(h);
        jQuery(".documentList ul li").hover(function() {
            jQuery(this).find(".cutList").show()
        }, function() {
            jQuery(this).find(".cutList").hide()
        });
        jQuery(".documentList ul li").click(function() {
            jQuery(".documentList ul li").removeClass("actLi");
            jQuery(this).addClass("actLi")
        })
    }
}
function prepareInlineAuthoringContentPage(c, b) {
    if ("VIEW" == b) {
        c.getInlineAuthoringContentFromRepo(c, jQuery(c.iafileNameId).val(), b);
        return
    } else {
        if (jQuery("#inlineAuthoringContentCreate").val() == "Y") {
            c.setDeleteCreatedInlineAuthoring(true)
        } else {
            c.setDeleteCreatedInlineAuthoring(false)
        }
        c.getInlineAuthoringContentFromRepo(c, jQuery(c.iafileNameId).val(), b);
        if (fileBrowserObj != undefined) {
            previousFileBrowserObj = fileBrowserObj
        }
        var d = c.appBasePath.replace("/", "") + "/equation/editor.lc?operation=uploadEditorInlineAttachement&attachmentId=" + jQuery(c.iaAttachmentId).val();
        var e = {
            appContext: c.appBasePath + "/",
            editorFileListContainer: "tinymceEditorFileList",
            tempFieldInputName: "tempFileIds",
            editorAttachementInputName: "editorAttacmentFile",
            removedContentIdsInputName: "removedContentIds",
            formId: "createInlineAuthoringContentPageForm",
            fileSize: c.fileSize,
            allowedExtensions: c.fileExt,
            objName: "tinyMceFileBrowserObj",
            tinyMceViewType: "2",
            ltiAppString: c.ltiAppString,
            appBasePath: c.appBasePath,
            readOnly: false,
            mathEditorURL: d,
            moduleName: "inlineauthoring"
        };
        loadTinyMce("#iacontentData", false, e);
        jQuery(c.iaContentDataId + "-preview").html(jQuery(c.iaContentDataId).val());
        var a = new Array(0);
        appNavObj.unbindEventsTocheckIfFormHasAnyUnsavedChanges();
        appNavObj.setInitialSerializedFormData("createPolicyForm", null, null);
        appNavObj.unbindEventsTocheckIfFormHasAnyUnsavedChanges();
        appNavObj.setInitialSerializedFormData("createInlineAuthoringContentPageForm", null, null);
        jQuery("#createInlineAuthoringContentPageForm").ajaxForm({
            async: c.isPolicyInline() ? false : true,
            beforeSerialize: function(m, j) {
                if (c.isPolicyInline()) {
                    return true
                }
                jQuery("#processingInlineRequestSpan").show();
                jQuery("#saveInlineBtn").hide();
                jQuery("#saveInlineBtnSpan").show();
                jQuery("#cancelInlineBtn").attr("disabled", true).addClass("disBtn");
                var s = true;
                var l = jQuery("#documenttitle").val();
                var z = jQuery("#iatitle").val();
                var t = jQuery("#iacontentData").html();
                var n = jQuery("#iacontentData").text();
                var u = jQuery("#tempIacontentData").html();
                var y = jQuery("#iacontentData").val();
                jQuery("#tinymceMathEditorFileList").find(".findFileNameDivId").each(function() {
                    var A = jQuery(this).html();
                    if (u.indexOf(A) != -1) {
                        if (t.indexOf(A) == -1) {
                            jQuery("#createInlineAuthoringContentPageForm").append("<input type='hidden' name='removedFileNames' value='" + A + "'/>");
                            jQuery(this).closest("span").remove()
                        }
                    }
                });
                var f = jQuery("#iacontentData").html();
                var g = c.appBasePath;
                var h = "..";
                jQuery("#iacontentData").html(f.replace(new RegExp(g,"g"), h));
                if (checkNullnEmptyValue(l)) {
                    jQuery("#documenttitle").addClass("error");
                    jQuery("#documenttitleValidation").show();
                    jQuery("#documenttitleValidation").html(i18n("msg.required"));
                    s = false
                } else {
                    if (jQuery.trim(l) == i18n("inlineauthoring.document.title")) {
                        jQuery("#documenttitle").addClass("error");
                        jQuery("#documenttitleValidation").show();
                        jQuery("#documenttitleValidation").html(i18n("inlineauthoring.msg.title.error", "Document Title"));
                        s = false
                    } else {
                        jQuery("#documenttitle").removeClass("error");
                        jQuery("#documenttitleValidation").hide()
                    }
                }
                if (checkNullnEmptyValue(z)) {
                    jQuery("#iatitle").addClass("error");
                    jQuery("#iatitleValidation").show();
                    jQuery("#iatitleValidation").html(i18n("msg.required"));
                    s = false
                } else {
                    if (jQuery.trim(z) == i18n("inlineauthoring.page.title")) {
                        jQuery("#iatitle").addClass("error");
                        jQuery("#iatitleValidation").show();
                        jQuery("#iatitleValidation").html(i18n("inlineauthoring.msg.title.error", "Page Title"));
                        s = false
                    } else {
                        jQuery("#iatitle").removeClass("error");
                        jQuery("#iatitleValidation").hide()
                    }
                }
                if (checkNullnEmptyValueForDescription(y)) {
                    jQuery("#iacontentData").addClass("error");
                    jQuery("#iacontentdataValidation").show();
                    jQuery("#iacontentdataValidation").html(i18n("msg.required"));
                    s = false
                } else {
                    if (jQuery.trim(t) == "Add Description") {
                        jQuery("#iacontentData").addClass("error");
                        jQuery("#iacontentdataValidation").show();
                        jQuery("#iacontentdataValidation").html(i18n("inlineauthoring.msg.title.error", "Page Description"));
                        s = false
                    } else {
                        jQuery("#iacontentData").removeClass("error");
                        jQuery("#iacontentdataValidation").hide()
                    }
                }
                if (s) {
                    l = jQuery.trim(l);
                    var p = "inlineAuthoringAttachment_" + jQuery(c.iaAttachmentId).val();
                    var q = false;
                    var k = jQuery("#oldAttachmentId").val();
                    jQuery(".existingInlineContent").each(function(A) {
                        if (p == jQuery(this).attr("id") || (!checkNullnEmptyValue(k) && "inlineAuthoringAttachment_" + k == jQuery(this).attr("id"))) {} else {
                            if (jQuery.trim(jQuery(this).html()) == l) {
                                q = true
                            }
                        }
                    });
                    if (q) {
                        Boxy.alert(i18n("inlineauthoring.msg.duplicate.title.error", "Document", "'" + l + "'"), null, {
                            title: i18n("message")
                        });
                        s = false
                    }
                    var v = jQuery(c.iafileNameId).val();
                    var o;
                    o = c.getTOCContents(c);
                    var r = o.getElementsByTagName("content");
                    if (r.length == 0) {
                        jQuery(c.iaCurrentPageId).val(null)
                    } else {
                        q = false;
                        if (checkNullnEmptyValue(z)) {
                            v = ""
                        }
                        z = jQuery.trim(z);
                        for (i = 0; i < r.length; i++) {
                            if ((z == r[i].getAttribute("title")) && (v != r[i].getAttribute("url"))) {
                                q = true;
                                break
                            }
                        }
                        if (q) {
                            Boxy.alert(i18n("inlineauthoring.msg.duplicate.title.error", "Page", "'" + z + "'"), null, {
                                title: i18n("message")
                            });
                            s = false
                        }
                    }
                    if (s) {
                        var w = jQuery("#create").val();
                        if (!checkNullnEmptyValue(w) && w == "true") {
                            c.addNewContentToXML(c)
                        } else {
                            for (i = 0; i < r.length; i++) {
                                if (v == r[i].getAttribute("url")) {
                                    r[i].setAttribute("title", z);
                                    break
                                }
                            }
                            c.setTOCContents(c, o)
                        }
                    }
                }
                if (!s) {
                    jQuery("#processingInlineRequestSpan").hide();
                    jQuery("#saveInlineBtn").show();
                    jQuery("#saveInlineBtnSpan").hide();
                    jQuery("#cancelInlineBtn").attr("disabled", false).removeClass("disBtn")
                }
                return s
            },
            beforeSubmit: function(h, g, f) {
                return true
            },
            success: function(j, k, l, f) {
                jQuery("#processingInlineRequestSpan").hide();
                jQuery("#saveInlineBtn").show();
                jQuery("#saveInlineBtnSpan").hide();
                jQuery("#cancelInlineBtn").attr("disabled", false).removeClass("disBtn");
                if (j == "0") {
                    Boxy.alert(i18n("inlineauthoring.msg.page.save.error"), function() {
                        c.setContentModified(false)
                    }, {
                        title: i18n("message")
                    });
                    return
                } else {
                    if (!c.isPolicyInline()) {
                        Boxy.alert(i18n("inlineauthoring.msg.page.save"), function() {
                            c.setContentModified(false)
                        }, {
                            title: i18n("message")
                        })
                    }
                    var m = jQuery("#oldAttachmentId").val();
                    var h = jQuery("#oldContentId").val();
                    if (!checkNullnEmptyValue(m)) {
                        removeCopiedInlineAuthoring(m, h);
                        jQuery("#inlineAuthoringContentCreate").val("Y")
                    }
                    if (jQuery("#inlineAuthoringContentCreate").val() == "Y") {
                        jQuery("#inlineAuthoringContentCreate").val("N");
                        addInlineAuthoringTblRow(jQuery(c.iaAttachmentId).val());
                        var g = jQuery("#" + jQuery(c.iaAttachmentId).val()).val();
                        if (g == null || g == "undefined") {
                            jQuery(c.inlineAuthoringIds).append("<input type='hidden' id='" + jQuery(c.iaAttachmentId).val() + "' name='createdInlineAuthoringIds' value='" + jQuery(c.iaAttachmentId).val() + "'/>")
                        }
                    } else {
                        jQuery("#inlineAuthoringAttachment_" + jQuery(c.iaAttachmentId).val()).html(jQuery("#documenttitle").val());
                        jQuery("#inlineAuthoringAttachment_" + jQuery(c.iaAttachmentId).val()).attr("title", jQuery("#documenttitle").val())
                    }
                    c.setDeleteCreatedInlineAuthoring(false);
                    jQuery("#create").val("false");
                    globlaInlineAuthoringObj = c;
                    loadContentXMLLinks(c, c.xml2Str(c.getTOCContents(c)), b, jQuery(c.iafileNameId).val());
                    c.pageLinksScroll();
                    if (c.isPolicyInline()) {
                        getInlineDetailForShow()
                    }
                }
            }
        })
    }
}
function createAddFiles(b, c, a) {
    if (jQuery(b).val() == "1") {
        jQuery("#" + a).show()
    } else {
        if (jQuery(b).val() == "2") {
            jQuery("#" + a).hide();
            inlineAuthoringObj.setUploadFilesId(a);
            inlineAuthoringObj.viewEditInlineAuthoring(inlineAuthoringObj, c, "CREATE")
        }
    }
}
function createAddFilesForStudentAssignment(a) {
    inlineAuthoringObj.viewEditInlineAuthoring(inlineAuthoringObj, a, "CREATE")
}
function createInlinePoliciesOrResource(c, b, a, d) {
    inlineAuthoringObj.viewEditPoliciesOrResource(inlineAuthoringObj, c, a, b, d)
}
function createAddFilesForInstructorAssignment(a) {
    inlineAuthoringObj.viewEditInlineAuthoring(inlineAuthoringObj, a, "CREATE")
}
function getDataFromIFrame() {
    return jQuery("#iacontentDataIFrame")[0].contentWindow.getTextData()
}
;/*!
 * jQuery Form Plugin
 * version: 2.64 (25-FEB-2011)
 * @requires jQuery v1.3.2 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */
(function(b) {
    b.fn.ajaxSubmit = function(t) {
        if (!this.length) {
            a("ajaxSubmit: skipping submit process - no element selected");
            return this
        }
        if (typeof t == "function") {
            t = {
                success: t
            }
        }
        var h = this.attr("action");
        var d = (typeof h === "string") ? b.trim(h) : "";
        if (d) {
            d = (d.match(/^([^#]+)/) || [])[1]
        }
        d = d || window.location.href || "";
        t = b.extend(true, {
            url: d,
            type: this[0].getAttribute("method") || "GET",
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank"
        }, t);
        var u = {};
        this.trigger("form-pre-serialize", [this, t, u]);
        if (u.veto) {
            a("ajaxSubmit: submit vetoed via form-pre-serialize trigger");
            return this
        }
        if (t.beforeSerialize && t.beforeSerialize(this, t) === false) {
            a("ajaxSubmit: submit aborted via beforeSerialize callback");
            return this
        }
        var f, p, m = this.formToArray(t.semantic);
        if (t.data) {
            t.extraData = t.data;
            for (f in t.data) {
                if (t.data[f]instanceof Array) {
                    for (var i in t.data[f]) {
                        m.push({
                            name: f,
                            value: t.data[f][i]
                        })
                    }
                } else {
                    p = t.data[f];
                    p = b.isFunction(p) ? p() : p;
                    m.push({
                        name: f,
                        value: p
                    })
                }
            }
        }
        if (t.beforeSubmit && t.beforeSubmit(m, this, t) === false) {
            a("ajaxSubmit: submit aborted via beforeSubmit callback");
            return this
        }
        this.trigger("form-submit-validate", [m, this, t, u]);
        if (u.veto) {
            a("ajaxSubmit: submit vetoed via form-submit-validate trigger");
            return this
        }
        var c = b.param(m);
        if (t.type.toUpperCase() == "GET") {
            t.url += (t.url.indexOf("?") >= 0 ? "&" : "?") + c;
            t.data = null
        } else {
            t.data = c
        }
        var s = this
          , l = [];
        if (t.resetForm) {
            l.push(function() {
                s.resetForm()
            })
        }
        if (t.clearForm) {
            l.push(function() {
                s.clearForm()
            })
        }
        if (!t.dataType && t.target) {
            var r = t.success || function() {}
            ;
            l.push(function(n) {
                var k = t.replaceTarget ? "replaceWith" : "html";
                b(t.target)[k](n).each(r, arguments)
            })
        } else {
            if (t.success) {
                l.push(t.success)
            }
        }
        t.success = function(w, n, x) {
            var v = t.context || t;
            for (var q = 0, k = l.length; q < k; q++) {
                l[q].apply(v, [w, n, x || s, s])
            }
        }
        ;
        var g = b("input:file", this).length > 0;
        var e = "multipart/form-data";
        var j = (s.attr("enctype") == e || s.attr("encoding") == e);
        if (t.iframe !== false && (g || t.iframe || j)) {
            if (t.closeKeepAlive) {
                b.get(t.closeKeepAlive, o)
            } else {
                o()
            }
        } else {
            b.ajax(t)
        }
        this.trigger("form-submit-notify", [this, t]);
        return this;
        function o() {
            var v = s[0];
            if (b(":input[name=submit],:input[id=submit]", v).length) {
                alert('Error: Form elements must not have name or id of "submit".');
                return
            }
            var B = b.extend(true, {}, b.ajaxSettings, t);
            B.context = B.context || B;
            var E = "jqFormIO" + (new Date().getTime())
              , z = "_" + E;
            var w = b('<iframe id="' + E + '" name="' + E + '" src="' + B.iframeSrc + '" />');
            var A = w[0];
            w.css({
                position: "absolute",
                top: "-1000px",
                left: "-1000px"
            });
            var x = {
                aborted: 0,
                responseText: null,
                responseXML: null,
                status: 0,
                statusText: "n/a",
                getAllResponseHeaders: function() {},
                getResponseHeader: function() {},
                setRequestHeader: function() {},
                abort: function() {
                    this.aborted = 1;
                    w.attr("src", B.iframeSrc)
                }
            };
            var I = B.global;
            if (I && !b.active++) {
                b.event.trigger("ajaxStart")
            }
            if (I) {
                b.event.trigger("ajaxSend", [x, B])
            }
            if (B.beforeSend && B.beforeSend.call(B.context, x, B) === false) {
                if (B.global) {
                    b.active--
                }
                return
            }
            if (x.aborted) {
                return
            }
            var H = 0;
            var y = v.clk;
            if (y) {
                var F = y.name;
                if (F && !y.disabled) {
                    B.extraData = B.extraData || {};
                    B.extraData[F] = y.value;
                    if (y.type == "image") {
                        B.extraData[F + ".x"] = v.clk_x;
                        B.extraData[F + ".y"] = v.clk_y
                    }
                }
            }
            function G() {
                var O = s.attr("target")
                  , M = s.attr("action");
                v.setAttribute("target", E);
                if (v.getAttribute("method") != "POST") {
                    v.setAttribute("method", "POST")
                }
                if (v.getAttribute("action") != B.url) {
                    v.setAttribute("action", B.url)
                }
                if (!B.skipEncodingOverride) {
                    s.attr({
                        encoding: "multipart/form-data",
                        enctype: "multipart/form-data"
                    })
                }
                if (B.timeout) {
                    setTimeout(function() {
                        H = true;
                        D()
                    }, B.timeout)
                }
                var N = [];
                try {
                    if (B.extraData) {
                        for (var P in B.extraData) {
                            N.push(b('<input type="hidden" name="' + P + '" value="' + B.extraData[P] + '" />').appendTo(v)[0])
                        }
                    }
                    w.appendTo("body");
                    A.attachEvent ? A.attachEvent("onload", D) : A.addEventListener("load", D, false);
                    v.submit()
                } finally {
                    v.setAttribute("action", M);
                    if (O) {
                        v.setAttribute("target", O)
                    } else {
                        s.removeAttr("target")
                    }
                    b(N).remove()
                }
            }
            if (B.forceSync) {
                G()
            } else {
                setTimeout(G, 10)
            }
            var K, L, J = 50;
            function D() {
                L = A.contentWindow ? A.contentWindow.document : A.contentDocument ? A.contentDocument : A.document;
                if (!L || L.location.href == B.iframeSrc) {
                    return
                }
                A.detachEvent ? A.detachEvent("onload", D) : A.removeEventListener("load", D, false);
                var N = true;
                try {
                    if (H) {
                        throw "timeout"
                    }
                    var R = B.dataType == "xml" || L.XMLDocument || b.isXMLDoc(L);
                    a("isXml=" + R);
                    if (!R && window.opera && (L.body == null || L.body.innerHTML == "")) {
                        if (--J) {
                            a("requeing onLoad callback, DOM not available");
                            setTimeout(D, 250);
                            return
                        }
                    }
                    x.responseText = L.body ? L.body.innerHTML : L.documentElement ? L.documentElement.innerHTML : null;
                    x.responseXML = L.XMLDocument ? L.XMLDocument : L;
                    x.getResponseHeader = function(T) {
                        var S = {
                            "content-type": B.dataType
                        };
                        return S[T]
                    }
                    ;
                    var Q = /(json|script)/.test(B.dataType);
                    if (Q || B.textarea) {
                        var M = L.getElementsByTagName("textarea")[0];
                        if (M) {
                            x.responseText = M.value
                        } else {
                            if (Q) {
                                var P = L.getElementsByTagName("pre")[0];
                                var n = L.getElementsByTagName("body")[0];
                                if (P) {
                                    x.responseText = b(P).text()
                                } else {
                                    if (n) {
                                        x.responseText = n.innerHTML
                                    }
                                }
                            }
                        }
                    } else {
                        if (B.dataType == "xml" && !x.responseXML && x.responseText != null) {
                            x.responseXML = C(x.responseText)
                        }
                    }
                    K = k(x, B.dataType, B)
                } catch (O) {
                    a("error caught:", O);
                    N = false;
                    x.error = O;
                    B.error && B.error.call(B.context, x, "error", O);
                    I && b.event.trigger("ajaxError", [x, B, O])
                }
                if (x.aborted) {
                    a("upload aborted");
                    N = false
                }
                if (N) {
                    B.success && B.success.call(B.context, K, "success", x);
                    I && b.event.trigger("ajaxSuccess", [x, B])
                }
                I && b.event.trigger("ajaxComplete", [x, B]);
                if (I && !--b.active) {
                    b.event.trigger("ajaxStop")
                }
                B.complete && B.complete.call(B.context, x, N ? "success" : "error");
                setTimeout(function() {
                    w.removeData("form-plugin-onload");
                    w.remove();
                    x.responseXML = null
                }, 100)
            }
            var C = b.parseXML || function(n, M) {
                if (window.ActiveXObject) {
                    M = new ActiveXObject("Microsoft.XMLDOM");
                    M.async = "false";
                    M.loadXML(n)
                } else {
                    M = (new DOMParser()).parseFromString(n, "text/xml")
                }
                return (M && M.documentElement && M.documentElement.nodeName != "parsererror") ? M : null
            }
            ;
            var q = b.parseJSON || function(n) {
                return window["eval"]("(" + n + ")")
            }
            ;
            var k = function(Q, O, N) {
                var M = Q.getResponseHeader("content-type") || ""
                  , n = O === "xml" || !O && M.indexOf("xml") >= 0
                  , P = n ? Q.responseXML : Q.responseText;
                if (n && P.documentElement.nodeName === "parsererror") {
                    b.error && b.error("parsererror")
                }
                if (N && N.dataFilter) {
                    P = N.dataFilter(P, O)
                }
                if (typeof P === "string") {
                    if (O === "json" || !O && M.indexOf("json") >= 0) {
                        P = q(P)
                    } else {
                        if (O === "script" || !O && M.indexOf("javascript") >= 0) {
                            b.globalEval(P)
                        }
                    }
                }
                return P
            }
        }
    }
    ;
    b.fn.ajaxForm = function(c) {
        if (this.length === 0) {
            var d = {
                s: this.selector,
                c: this.context
            };
            if (!b.isReady && d.s) {
                a("DOM not ready, queuing ajaxForm");
                b(function() {
                    b(d.s, d.c).ajaxForm(c)
                });
                return this
            }
            a("terminating; zero elements found by selector" + (b.isReady ? "" : " (DOM not ready)"));
            return this
        }
        if (jQuery(this).attr("onsubmit") != "") {
            jQuery(this).removeAttr("onsubmit")
        }
        return this.ajaxFormUnbind().bind("submit.form-plugin", function(g) {
            var f = false;
            if (!g.isDefaultPrevented()) {
                g.preventDefault();
                f = true;
                b(this).ajaxSubmit(c)
            }
            if (!!window.MSInputMethodContext && !!document.documentMode && !f) {
                g.preventDefault();
                b(this).ajaxSubmit(c)
            }
        }).bind("click.form-plugin", function(j) {
            var i = j.target;
            var g = b(i);
            if (!(g.is(":submit,input:image"))) {
                var f = g.closest(":submit");
                if (f.length == 0) {
                    return
                }
                i = f[0]
            }
            var h = this;
            h.clk = i;
            if (i.type == "image") {
                if (j.offsetX != undefined) {
                    h.clk_x = j.offsetX;
                    h.clk_y = j.offsetY
                } else {
                    if (typeof b.fn.offset == "function") {
                        var k = g.offset();
                        h.clk_x = j.pageX - k.left;
                        h.clk_y = j.pageY - k.top
                    } else {
                        h.clk_x = j.pageX - i.offsetLeft;
                        h.clk_y = j.pageY - i.offsetTop
                    }
                }
            }
            setTimeout(function() {
                h.clk = h.clk_x = h.clk_y = null
            }, 100)
        })
    }
    ;
    b.fn.ajaxFormUnbind = function() {
        return this.unbind("submit.form-plugin click.form-plugin")
    }
    ;
    b.fn.formToArray = function(q) {
        var p = [];
        if (this.length === 0) {
            return p
        }
        var d = this[0];
        var g = q ? d.getElementsByTagName("*") : d.elements;
        if (!g) {
            return p
        }
        var k, h, f, r, e, m, c;
        for (k = 0,
        m = g.length; k < m; k++) {
            e = g[k];
            f = e.name;
            if (!f) {
                continue
            }
            if (q && d.clk && e.type == "image") {
                if (!e.disabled && d.clk == e) {
                    p.push({
                        name: f,
                        value: b(e).val()
                    });
                    p.push({
                        name: f + ".x",
                        value: d.clk_x
                    }, {
                        name: f + ".y",
                        value: d.clk_y
                    })
                }
                continue
            }
            r = b.fieldValue(e, true);
            if (r && r.constructor == Array) {
                for (h = 0,
                c = r.length; h < c; h++) {
                    p.push({
                        name: f,
                        value: r[h]
                    })
                }
            } else {
                if (r !== null && typeof r != "undefined") {
                    p.push({
                        name: f,
                        value: r
                    })
                }
            }
        }
        if (!q && d.clk) {
            var l = b(d.clk)
              , o = l[0];
            f = o.name;
            if (f && !o.disabled && o.type == "image") {
                p.push({
                    name: f,
                    value: l.val()
                });
                p.push({
                    name: f + ".x",
                    value: d.clk_x
                }, {
                    name: f + ".y",
                    value: d.clk_y
                })
            }
        }
        return p
    }
    ;
    b.fn.formSerialize = function(c) {
        return b.param(this.formToArray(c))
    }
    ;
    b.fn.fieldSerialize = function(d) {
        var c = [];
        this.each(function() {
            var h = this.name;
            if (!h) {
                return
            }
            var f = b.fieldValue(this, d);
            if (f && f.constructor == Array) {
                for (var g = 0, e = f.length; g < e; g++) {
                    c.push({
                        name: h,
                        value: f[g]
                    })
                }
            } else {
                if (f !== null && typeof f != "undefined") {
                    c.push({
                        name: this.name,
                        value: f
                    })
                }
            }
        });
        return b.param(c)
    }
    ;
    b.fn.fieldValue = function(h) {
        for (var g = [], e = 0, c = this.length; e < c; e++) {
            var f = this[e];
            var d = b.fieldValue(f, h);
            if (d === null || typeof d == "undefined" || (d.constructor == Array && !d.length)) {
                continue
            }
            d.constructor == Array ? b.merge(g, d) : g.push(d)
        }
        return g
    }
    ;
    b.fieldValue = function(c, j) {
        var e = c.name
          , p = c.type
          , q = c.tagName.toLowerCase();
        if (j === undefined) {
            j = true
        }
        if (j && (!e || c.disabled || p == "reset" || p == "button" || (p == "checkbox" || p == "radio") && !c.checked || (p == "submit" || p == "image") && c.form && c.form.clk != c || q == "select" && c.selectedIndex == -1)) {
            return null
        }
        if (q == "select") {
            var k = c.selectedIndex;
            if (k < 0) {
                return null
            }
            var m = []
              , d = c.options;
            var g = (p == "select-one");
            var l = (g ? k + 1 : d.length);
            for (var f = (g ? k : 0); f < l; f++) {
                var h = d[f];
                if (h.selected) {
                    var o = h.value;
                    if (!o) {
                        o = (h.attributes && h.attributes.value && !(h.attributes.value.specified)) ? h.text : h.value
                    }
                    if (g) {
                        return o
                    }
                    m.push(o)
                }
            }
            return m
        }
        return b(c).val()
    }
    ;
    b.fn.clearForm = function() {
        return this.each(function() {
            b("input,select,textarea", this).clearFields()
        })
    }
    ;
    b.fn.clearFields = b.fn.clearInputs = function() {
        return this.each(function() {
            var d = this.type
              , c = this.tagName.toLowerCase();
            if (d == "text" || d == "password" || c == "textarea") {
                this.value = ""
            } else {
                if (d == "checkbox" || d == "radio") {
                    this.checked = false
                } else {
                    if (c == "select") {
                        this.selectedIndex = -1
                    }
                }
            }
        })
    }
    ;
    b.fn.resetForm = function() {
        return this.each(function() {
            if (typeof this.reset == "function" || (typeof this.reset == "object" && !this.reset.nodeType)) {
                this.reset()
            }
        })
    }
    ;
    b.fn.enable = function(c) {
        if (c === undefined) {
            c = true
        }
        return this.each(function() {
            this.disabled = !c
        })
    }
    ;
    b.fn.selected = function(c) {
        if (c === undefined) {
            c = true
        }
        return this.each(function() {
            var d = this.type;
            if (d == "checkbox" || d == "radio") {
                this.checked = c
            } else {
                if (this.tagName.toLowerCase() == "option") {
                    var e = b(this).parent("select");
                    if (c && e[0] && e[0].type == "select-one") {
                        e.find("option").selected(false)
                    }
                    this.selected = c
                }
            }
        })
    }
    ;
    function a() {
        if (b.fn.ajaxSubmit.debug) {
            var c = "[jquery.form] " + Array.prototype.join.call(arguments, "");
            if (window.console && window.console.log) {
                window.console.log(c)
            } else {
                if (window.opera && window.opera.postError) {
                    window.opera.postError(c)
                }
            }
        }
    }
}
)(jQuery);
(function(a) {
    a.extend(a.fn, {
        swapClass: function(e, d) {
            var c = this.filter("." + e);
            this.filter("." + d).removeClass(d).addClass(e);
            c.removeClass(e).addClass(d);
            return this
        },
        replaceClass: function(d, c) {
            return this.filter("." + d).removeClass(d).addClass(c).end()
        },
        hoverClass: function(c) {
            c = c || "hover";
            return this.hover(function() {
                a(this).addClass(c)
            }, function() {
                a(this).removeClass(c)
            })
        },
        heightToggle: function(c, d) {
            c ? this.animate({
                height: "toggle"
            }, c, d) : this.each(function() {
                jQuery(this)[jQuery(this).is(":hidden") ? "show" : "hide"]();
                if (d) {
                    d.apply(this, arguments)
                }
            })
        },
        heightHide: function(c, d) {
            if (c) {
                this.animate({
                    height: "hide"
                }, c, d)
            } else {
                this.hide();
                if (d) {
                    this.each(d)
                }
            }
        },
        prepareBranches: function(c) {
            if (!c.prerendered) {
                this.filter(":last-child:not(ul)").addClass(b.last);
                this.filter((c.collapsed ? "" : "." + b.closed) + ":not(." + b.open + ")").find(">ul").hide()
            }
            return this.filter(":has(>ul)")
        },
        applyClasses: function(d, e) {
            this.filter(":has(>ul):not(:has(>a))").find(">span").unbind("click.treeview").bind("click.treeview", function(f) {
                if (this == f.target) {
                    e.apply(a(this).next())
                }
            }).add(a("a", this)).hoverClass();
            if (!d.prerendered) {
                this.filter(":has(>ul:hidden)").addClass(b.expandable).replaceClass(b.last, b.lastExpandable);
                this.not(":has(>ul:hidden)").addClass(b.collapsable).replaceClass(b.last, b.lastCollapsable);
                var c = this.find("div." + b.hitarea);
                if (!c.length) {
                    c = this.prepend('<div class="' + b.hitarea + '"/>').find("div." + b.hitarea)
                }
                c.removeClass().addClass(b.hitarea).each(function() {
                    var f = "";
                    a.each(a(this).parent().attr("class").split(" "), function() {
                        f += this + "-hitarea "
                    });
                    a(this).addClass(f)
                })
            }
            this.find("div." + b.hitarea).click(e)
        },
        treeview: function(d) {
            d = a.extend({
                cookieId: "treeview"
            }, d);
            if (d.toggle) {
                var j = d.toggle;
                d.toggle = function() {
                    return j.apply(a(this).parent()[0], arguments)
                }
            }
            function c(m, o) {
                function n(p) {
                    return function() {
                        f.apply(a("div." + b.hitarea, m).filter(function() {
                            return p ? a(this).parent("." + p).length : true
                        }));
                        return false
                    }
                }
                a("a:eq(0)", o).click(n(b.collapsable));
                a("a:eq(1)", o).click(n(b.expandable));
                a("a:eq(2)", o).click(n())
            }
            function f() {
                a(this).parent().find(">.hitarea").swapClass(b.collapsableHitarea, b.expandableHitarea).swapClass(b.lastCollapsableHitarea, b.lastExpandableHitarea).end().swapClass(b.collapsable, b.expandable).swapClass(b.lastCollapsable, b.lastExpandable).find(">ul").heightToggle(d.animated, d.toggle);
                if (d.unique) {
                    a(this).parent().siblings().find(">.hitarea").replaceClass(b.collapsableHitarea, b.expandableHitarea).replaceClass(b.lastCollapsableHitarea, b.lastExpandableHitarea).end().replaceClass(b.collapsable, b.expandable).replaceClass(b.lastCollapsable, b.lastExpandable).find(">ul").heightHide(d.animated, d.toggle)
                }
            }
            this.data("toggler", f);
            function l() {
                function n(o) {
                    return o ? 1 : 0
                }
                var m = [];
                k.each(function(o, p) {
                    m[o] = a(p).is(":has(>ul:visible)") ? 1 : 0
                });
                a.cookie(d.cookieId, m.join(""), d.cookieOptions)
            }
            function e() {
                var m = a.cookie(d.cookieId);
                if (m) {
                    var n = m.split("");
                    k.each(function(o, p) {
                        a(p).find(">ul")[parseInt(n[o]) ? "show" : "hide"]()
                    })
                }
            }
            this.addClass("treeview");
            var k = this.find("li").prepareBranches(d);
            switch (d.persist) {
            case "cookie":
                var i = d.toggle;
                d.toggle = function() {
                    l();
                    if (i) {
                        i.apply(this, arguments)
                    }
                }
                ;
                e();
                break;
            case "location":
                var g = this.find("a").filter(function() {
                    return location.href.toLowerCase().indexOf(this.href.toLowerCase()) == 0
                });
                if (g.length) {
                    var h = g.addClass("selected").parents("ul, li").add(g.next()).show();
                    if (d.prerendered) {
                        h.filter("li").swapClass(b.collapsable, b.expandable).swapClass(b.lastCollapsable, b.lastExpandable).find(">.hitarea").swapClass(b.collapsableHitarea, b.expandableHitarea).swapClass(b.lastCollapsableHitarea, b.lastExpandableHitarea)
                    }
                }
                break
            }
            k.applyClasses(d, f);
            if (d.control) {
                c(this, d.control);
                a(d.control).show()
            }
            return this
        }
    });
    a.treeview = {};
    var b = (a.treeview.classes = {
        open: "open",
        closed: "closed",
        expandable: "expandable",
        expandableHitarea: "expandable-hitarea",
        lastExpandableHitarea: "lastExpandable-hitarea",
        collapsable: "collapsable",
        collapsableHitarea: "collapsable-hitarea",
        lastCollapsableHitarea: "lastCollapsable-hitarea",
        lastCollapsable: "lastCollapsable",
        lastExpandable: "lastExpandable",
        last: "last",
        hitarea: "hitarea"
    })
}
)(jQuery);
var fileBrowserObj = null;
function loadTinyMce(c, b, a) {
    fileBrowserObj = a;
    jQuery(c).each(function() {
        var f = jQuery(this).attr("id");
        var d = jQuery(this).html();
        var e = jQuery("<div/>").html(d).text();
        if (typeof f === "undefined") {
            alert("There is no id for the text area");
            return
        }
        previewPanel = f + "-preview";
        jQuery("#" + f).wrap("<div class='editor-switch'></div>").attr({
            "data-preview-panel": "#" + previewPanel,
            "data-script-url": a.appContext
        });
        jQuery("#" + f).parents(".editor-switch").append('<div class="tinyPreview tinyPreviewOr" title="Click to edit" id="' + previewPanel + '" tabindex="0" role="link"></div><div class="tinyPreview ghost"></div>');
        jQuery(this).siblings(".tinyPreviewOr").html(jQuery(this).val());
        jQuery("#" + previewPanel).click(function(g) {
            if (jQuery(g.target).is("video") || jQuery(g.target).is("audio")) {
                g.stopPropagation()
            } else {
                tinymceCreate(jQuery(this))
            }
        });
        jQuery("#" + previewPanel).keyup(function(g) {
            if (g.keyCode == 13 || g.key == "Enter") {
                tinymceCreate(jQuery(this))
            }
        })
    })
}
$globalThis = null;
function tinymceCreate(d) {
    $globalThis = d;
    if (d.siblings("textarea").length > 0) {
        tinyActivateControl = d.siblings("textarea");
        var b = 200;
        if (d.siblings(".mce-tinymce").length <= 0) {
            var c = tinyActivateControl.data("min-height");
            if (typeof c === "undefined") {
                c = 100
            }
            var g = tinyActivateControl.data("max-height");
            if (typeof g === "undefined") {
                g = 400
            }
            var f = tinyActivateControl.attr("id");
            var e = tinyActivateControl.data("script-url");
            var a;
            if (typeof fileBrowserObj.blockedTool === "undefined") {
                a = ""
            } else {
                a = fileBrowserObj.blockedTool
            }
            fileBrowserObjTemp = {
                appContext: e,
                editorFileListContainer: fileBrowserObj.editorFileListContainer,
                editorId: f,
                tempFieldInputName: fileBrowserObj.tempFieldInputName,
                editorAttachementInputName: fileBrowserObj.editorAttachementInputName,
                removedContentIdsInputName: fileBrowserObj.removedContentIdsInputName,
                formId: fileBrowserObj.formId,
                fileSize: fileBrowserObj.fileSize,
                allowedExtensions: fileBrowserObj.allowedExtensions,
                objName: fileBrowserObj.objName,
                tinyMceViewType: fileBrowserObj.tinyMceViewType,
                subViewType: fileBrowserObj.subViewType,
                mathEditorURL: fileBrowserObj.mathEditorURL,
                moduleName: fileBrowserObj.moduleName,
                blockedTool: a,
                otherGroupedTinymceFileBrowserObjs: fileBrowserObj.otherGroupedTinymceFileBrowserObjs
            };
            if (tinyMCE.activeEditor != null) {
                tinyMCE.activeEditor.remove();
                editorPreviewWithId(tinyActivateControl.attr("id"))
            }
            window["tinyMceFileBrowserObj" + f] = new TinymceFileUploadUtil(fileBrowserObjTemp);
            tinyActivateControl.parent(".editor-switch").css({
                "min-height": c + b
            });
            tinyActivateControl.parent(".editor-switch").css({
                "max-height": g + b
            })
        } else {
            d.siblings(".mce-tinymce").show();
            tinymce.activeEditor.focus()
        }
        d.hide();
        d.siblings(".ghost").hide()
    }
}
function editorPreview(c) {
    var b = "#" + c.id;
    var a = jQuery(b).data("preview-panel");
    jQuery(a).html(jQuery(b).html()).show();
    jQuery(a).siblings(".ghost").html(jQuery(b).html()).show()
}
function editorPreviewWithId(c) {
    var b = "#" + c;
    var a = jQuery(b).data("preview-panel");
    jQuery(a).html(jQuery(b).html()).show();
    jQuery(a).siblings(".ghost").html(jQuery(b).html()).show()
}
function unloadTinyMce(a) {
    jQuery(a).each(function() {
        var d = jQuery(this).attr("id");
        var b = jQuery(this).html();
        var c = jQuery("<div/>").html(b).text();
        if (typeof d === "undefined") {
            alert("There is no id for the text area");
            return
        }
        previewPanel = d + "-preview";
        var e = jQuery(this).siblings(".tinyPreview");
        e.remove();
        jQuery("#" + d).unwrap(".editor-switch");
        jQuery("#" + d).show()
    })
}
jQuery(document).on("click", ".tinyPreview.ghost", function(b) {
    var a = jQuery(this).siblings(".tinyPreview");
    a.trigger("click")
});
var tinymcetoolbars = "";
var tinymceReplaceElements = [/postActionText-preview/g, /tinyPreviewOr/g, /tinyPreview/g, /editor-switch/g, /attemptStartDate/g, /attemptStartTime/g, /attemptEndDate/g, /attemptEndTime/g, /attemptStartDay/g, /attemptEndDay/g, /attemptTillEndDate/g, /lateSubmissionAllowedFlag/g, /lateSubmissionDay/g, /postActionDiv/g];
function TinymceFileUploadUtil(a) {
    this.appContext = a.appContext;
    this.editorId = a.editorId;
    this.tempFieldInputName = a.tempFieldInputName;
    this.removedContentIdsInputName = a.removedContentIdsInputName;
    this.editorAttachementInputName = a.editorAttachementInputName;
    this.formId = a.formId;
    this.editorFileListContainer = a.editorFileListContainer;
    this.fileSize = a.fileSize;
    this.objName = a.objName;
    this.tinyMceViewType = a.tinyMceViewType;
    this.subViewType = a.subViewType;
    this.moduleName = a.moduleName;
    this.toggleTinyMce = a.toggleTinyMce;
    this.toggleTinymceCallBack = a.toggleTinymceCallBack;
    this.ltiAppString = "";
    this.appBasePath = "";
    this.readOnly = false;
    this.mathEditorURL = a.mathEditorURL;
    this.otherGroupedTinymceFileBrowserObjs = a.otherGroupedTinymceFileBrowserObjs;
    this.autoResizeEditor = a.autoResizeEditor;
    this.equellaUrl = a.equellaContentUrl;
    this.directEditor = a.directEditor;
    if (a.tinyMceViewType == 2) {
        this.ltiAppString = a.ltiAppString;
        this.appBasePath = a.appBasePath;
        this.mathEditorURL = a.mathEditorURL;
        if (a.readOnly != null) {
            this.readOnly = a.readOnly
        }
        this.appContext = a.appBasePath + "/"
    }
    if (this.appContext == "undefined/") {
        this.appContext = "/learningPlatform/"
    }
    this.allowedExtensions = a.allowedExtensions;
    this.tempExtensions = a.allowedExtensions;
    this.editionFilesDivId = this.editorId + "tempDivId";
    jQuery("#" + this.formId).append('<div id="' + this.editionFilesDivId + '" style="display:none;"/>');
    this.makeClone = function(f, d) {
        if (a.tinyMceViewType != 2) {
            var b = jQuery("#voCountValId").val();
            var e = '<input type="hidden" name="editorVo[' + b + '].voContentId" value="' + d + '"><input type="hidden" name="editorVo[' + b + '].voContentType" value="1"><input type="hidden" name="editorVo[' + b + '].voContentTitle" value="">';
            jQuery("#" + this.editionFilesDivId).append(e);
            var c = parseInt(b) + 1;
            jQuery("#voCountValId").val(c)
        }
    }
    ;
    this.removeEditorAttachment = function(b, c, f) {
        var e = jQuery("#" + this.editorId).val();
        if (e.indexOf(b) != -1) {
            alert("This is used in description.Please remove reference first.");
            return false
        }
        if (this.otherGroupedTinymceFileBrowserObjs != null) {
            var d = false;
            jQuery(this.otherGroupedTinymceFileBrowserObjs).each(function(g, h) {
                if (jQuery("#" + h.id).val().indexOf(b) != -1) {
                    alert("This is used in other description.Please remove reference first.");
                    d = true;
                    return false
                }
            });
            if (d) {
                return false
            }
        }
        jQuery("#" + this.editorFileListContainer + " table a").each(function() {
            if (jQuery(this).html().indexOf(f) != -1) {
                jQuery(this).closest("tr").remove()
            }
        });
        if (!c) {
            jQuery("#" + this.formId).append("<input type='hidden' name='" + this.removedContentIdsInputName + "' value='" + b + "'/>")
        }
        return true
    }
    ;
    this.removeInlieEditorFile = function(d, c, e) {
        var b = false;
        jQuery.ajax({
            async: false,
            cache: false,
            url: "../inlineauthoring/inlineauthoring.lc?operation=removeUploadedFile&nodePath=" + d + "&workspaceId=" + c + "&fileName=" + e,
            success: function(f) {
                if (f == "0") {
                    b = false
                } else {
                    jQuery("#tinymceEditorFileList table a").each(function() {
                        if (jQuery(this).html().indexOf(e) != -1) {
                            jQuery(this).closest("tr").remove()
                        }
                    });
                    b = true
                }
            }
        });
        return b
    }
    ;
    this.addEditorAttachmentTblRow = function(b) {
        jQuery("#" + this.editorFileListContainer + " table").append(b);
        jQuery("#uploadedFileList table").append(b)
    }
    ;
    this.getExistingEditorAttachments = function() {
        return jQuery("#" + this.editorFileListContainer).html()
    }
    ;
    this.getTinyMceEditorAttachments = function() {
        return parent.jQuery("#" + this.editorFileListContainer).html()
    }
    ;
    this.checkEditorAttachmentSize = function(b) {
        if (b.size > this.fileSize) {
            alert("File size limit exceeded. Max file size allowed " + (this.fileSize / 1048576) + " MB");
            return false
        } else {
            return true
        }
    }
    ;
    this.checkValidFileExtension = function(e) {
        var c = e.value;
        var f = c.substring(c.lastIndexOf(".") + 1, c.length);
        var b = jQuery(".mce-title").text();
        var d = this.allowedExtensions;
        if (b.toLowerCase().indexOf("image") >= 0) {
            if (checkImageExtensionFromAllowedExtensions(d.toLowerCase()).indexOf(f.toLowerCase()) >= 0) {
                return true
            } else {
                alert("Please enter a value with a valid extension");
                return false
            }
        } else {
            if (b.toLowerCase().indexOf("media") >= 0) {
                if (checkMediaExtensionFromAllowedExtensions(d.toLowerCase()).indexOf(f.toLowerCase()) >= 0) {
                    return true
                } else {
                    alert("Please enter a value with a valid extension");
                    return false
                }
            } else {
                if (b.toLowerCase().indexOf("link") >= 0) {
                    if (checkDocExtensionFromAllowedExtensions(d.toLowerCase()).indexOf(f.toLowerCase()) >= 0) {
                        return true
                    } else {
                        alert("Please enter a value with a valid extension");
                        return false
                    }
                } else {
                    alert("Please enter a value with a valid extension");
                    return false
                }
            }
        }
    }
    ;
    this.fileUploadUrl = "";
    this.tinymceWithFileUpload = function(f, e, c, o, d) {
        this.fileUploadUrl = e + "tinymce/filemanager.lc?operation=getFileUpload&javascriptObjName=" + this.objName;
        var q = this;
        var r = "advanced";
        var p = ["advlist autolink link image image lists charmap print preview pagebreak searchreplace visualblocks visualchars code fullscreen insertdatetime media nonbreaking table contextmenu directionality emoticons textcolor paste textcolor colorpicker textpattern fmath_formula autoresize spellchecker "];
        tinymcetoolbars = ["bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | styleselect formatselect | fontselect fontsizeselect", "cut copy paste | searchreplace | bullist numlist | outdent indent blockquote | undo redo | link unlink image media code | insertdatetime preview | forecolor backcolor", "table | pagebreak removeformat | subscript superscript | charmap emoticons | print fullscreen | visualchars visualblocks nonbreaking fmath_formula | spellchecker"];
        var n = tinyActivateControl.data("min-height");
        if (typeof n === "undefined") {
            n = 100
        }
        var k = tinyActivateControl.data("max-height");
        if (typeof k === "undefined") {
            k = 400
        }
        var s = tinyActivateControl.data("additional-plugins");
        if (typeof s === "undefined") {
            s = ""
        } else {
            p[0] += s;
            tinymcetoolbars.push(s)
        }
        var b = tinyActivateControl.data("pluginonly");
        if (typeof b === "undefined") {
            b = ""
        } else {
            p[0] += b
        }
        if (a.blockedTool != "") {
            var m = a.blockedTool;
            var l = m.split(" ");
            for (var h = 0; h < l.length; h++) {
                for (var g = 0; g < p.length; g++) {
                    p[g] = p[g].replace(l[h], "")
                }
            }
            for (var h = 0; h < l.length; h++) {
                for (var g = 0; g < tinymcetoolbars.length; g++) {
                    tinymcetoolbars[g] = tinymcetoolbars[g].replace(l[h], "")
                }
            }
        }
        jQuery("#" + f).tinymce({
            mode: "textareas",
            branding: false,
            plugins: p,
            readonly: q.readOnly,
            toolbar: tinymcetoolbars,
            statusbar: false,
            contextmenu: "cut copy paste | link image ",
            menubar: false,
            autoresize_max_height: k,
            autoresize_min_height: n,
            image_advtab: true,
            content_css: e + "/css/1569445563950/tinymce.css",
            spellchecker_languages: "English=en",
            spellchecker_callback: function(u, t, j, i) {
                tinymce.util.JSONRequest.sendRPC({
                    url: "/spellchecker/jmyspell-spellchecker",
                    method: "spellcheck",
                    params: {
                        lang: "en-us",
                        words: t.match(this.getWordCharPattern())
                    },
                    success: function(v) {
                        j(v)
                    },
                    error: function(v, w) {
                        i("Please insert a text to use spellchecker")
                    }
                })
            },
            mceEditorOption: "descEditor",
            moduleName: q.moduleName,
            mathEditorURL: q.mathEditorURL ? q.mathEditorURL : q.appContext.replace("/", "") + q.moduleName + "/editor.lc?operation=uploadEditorMathAttachement",
            auto_focus: true,
            extended_valid_elements: "#iframe[allowfullscreen|width|height|frameborder|src|name],math[class|id|xmlns|altimg|alttext|display|overflow],semantics[encoding|definitionURL],annotation[encoding|definitionURL|cd|name|src],annotation-xml[cd|name|encoding|definitionURL|src],merror,mtext,mspace,mover[accent|align],munder,munderover,mstack,mrow[dir],msrow,mfenced[open|close|separators],menclose[notation],mphantom,msup,msub,msubsup,mmultiscripts,mi,mn,mo[fence],ms,mtable,mtr,mtd,mlabeledtr,mfrac[linethickness|bevelled|numalign|denomalign],mfraction,msline,msqrt,mroot,mscarries,mscarry",
            paste_preprocess: function(t, u) {
                u.content = (u.content).replace(/(<[a]\s[^>]*\s)(?:target|on\w+|\w+:\w+)=(?:"[^"]*"|'[^']*'|\w+)\s?/gi, "$1");
                u.content = (u.content).replace(/<a([^>]+)>/gi, '<a$1 target="_blank">');
                u.content = (u.content).replace(/ /ig, " ");
                for (var j = 0; j < tinymceReplaceElements.length; j++) {
                    u.content = (u.content).replace(tinymceReplaceElements[j], "")
                }
                u.content = (u.content).replace("ul-list-tymncy", "");
                u.content = (u.content).replace(/id=.*_text"/, "")
            },
            file_picker_callback: function(u, j, t) {
                var i = q.fileUploadUrl;
                jQuery("#editorFile").click();
                if (t.filetype == "file") {
                    u(j)
                }
                if (t.filetype == "image") {
                    u(j)
                }
                if (t.filetype == "media") {
                    u(j)
                }
            },
            setup: function(i) {
                i.on("focus", function() {});
                i.on("blur", function() {
                    editorPreview(i);
                    jQuery(this.contentAreaContainer.parentElement.parentElement).hide()
                });
                i.on("init", function() {
                    if (jQuery("#tinymce-image-upload-url-" + i.id).length <= 0) {
                        $globalThis.after("<input type='hidden' value='" + q.fileUploadUrl + "' name='tinymce-image-upload-url-" + i.id + "' id='tinymce-image-upload-url-" + i.id + "' class='ignoreForSerialization'/>")
                    }
                    tinyToolbarHeight = jQuery(this.contentAreaContainer.parentElement.parentElement).find("div.mce-toolbar-grp").height()
                })
            }
        })
    }
    ;
    this.tinymceWithFileUpload(this.editorId, this.appContext, this.tinyMceViewType, this.subViewType, this.toggleTinyMce)
}
function checkMediaExtensionFromAllowedExtensions(b) {
    var f = "";
    var d = ["mp3", "mp4", "ogg", "swf", "wav", "webm"];
    for (var c = 0; c < d.length; c++) {
        var e = b.split(",");
        for (var a = 0; a < e.length; a++) {
            if (e[a] == d[c]) {
                f = f + d[c] + ","
            }
        }
    }
    if (f == "") {
        return f
    } else {
        return f.substring(0, f.length - 1)
    }
}
function checkDocExtensionFromAllowedExtensions(b) {
    var f = "";
    var d = ["doc", "pdf", "xlsx", "docx", "pptx", "ppt", "xls", "txt", "java"];
    for (var c = 0; c < d.length; c++) {
        var e = b.split(",");
        for (var a = 0; a < e.length; a++) {
            if (e[a] == d[c]) {
                f = f + d[c] + ","
            }
        }
    }
    if (f == "") {
        return f
    } else {
        return f.substring(0, f.length - 1)
    }
}
function checkImageExtensionFromAllowedExtensions(b) {
    var f = "";
    var d = ["jpg", "jpeg", "bmp", "png", "gif", "tiff", "ppm", "pgm", "pbm", "pnm"];
    for (var c = 0; c < d.length; c++) {
        var e = b.split(",");
        for (var a = 0; a < e.length; a++) {
            if (e[a] == d[c]) {
                f = f + d[c] + ","
            }
        }
    }
    if (f == "") {
        return f
    } else {
        return f.substring(0, f.length - 1)
    }
}
;/*!
 * JavaScript Pretty Date
 * Copyright (c) 2008 John Resig (jquery.com)
 * Licensed under the MIT license.
 */
var montharray = new Array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
function prettyTime(a) {
    diff = ((CURRENT_SERVER_TIME - a) / 1000);
    var b = converDateToPretty(diff);
    if (b) {
        return b
    } else {
        return ""
    }
}
function formattedPrettyDateOnly(b) {
    var a = new Date(b);
    return a.format("mmm dd, yyyy HH:MM:ss")
}
function prettyDate(b) {
    var a = new Date((b || "").replace(/-/g, "/"));
    diff = ((CURRENT_SERVER_DATE.getTime() - a.getTime()) / 1000);
    return converDateToPretty(a)
}
function converDateToPretty(a) {
    day_diff = Math.floor(a / 86400);
    if (isNaN(day_diff) || day_diff < 0 || day_diff >= 7) {
        return
    }
    return day_diff == 0 && (a < 60 && "Just now" || a < 120 && "1 minute ago" || a < 3600 && Math.floor(a / 60) + " minutes ago" || a < 7200 && "1 hour ago" || a < 86400 && Math.floor(a / 3600) + " hours ago") || day_diff == 1 && "Yesterday" || day_diff < 7 && day_diff + " days ago"
}
var dateFormat = function() {
    var a = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g
      , b = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g
      , d = /[^-+\dA-Z]/g
      , c = function(f, e) {
        f = String(f);
        e = e || 2;
        while (f.length < e) {
            f = "0" + f
        }
        return f
    };
    return function(i, v, q) {
        var g = dateFormat;
        if (arguments.length == 1 && Object.prototype.toString.call(i) == "[object String]" && !/\d/.test(i)) {
            v = i;
            i = undefined
        }
        i = i ? new Date(i) : new Date;
        if (isNaN(i)) {
            throw SyntaxError("invalid date")
        }
        v = String(g.masks[v] || v || g.masks["default"]);
        if (v.slice(0, 4) == "UTC:") {
            v = v.slice(4);
            q = true
        }
        var t = q ? "getUTC" : "get"
          , l = i[t + "Date"]()
          , e = i[t + "Day"]()
          , j = i[t + "Month"]()
          , p = i[t + "FullYear"]()
          , r = i[t + "Hours"]()
          , k = i[t + "Minutes"]()
          , u = i[t + "Seconds"]()
          , n = i[t + "Milliseconds"]()
          , f = q ? 0 : i.getTimezoneOffset()
          , h = {
            d: l,
            dd: c(l),
            ddd: g.i18n.dayNames[e],
            dddd: g.i18n.dayNames[e + 7],
            m: j + 1,
            mm: c(j + 1),
            mmm: g.i18n.monthNames[j],
            mmmm: g.i18n.monthNames[j + 12],
            yy: String(p).slice(2),
            yyyy: p,
            h: r % 12 || 12,
            hh: c(r % 12 || 12),
            H: r,
            HH: c(r),
            M: k,
            MM: c(k),
            s: u,
            ss: c(u),
            l: c(n, 3),
            L: c(n > 99 ? Math.round(n / 10) : n),
            t: r < 12 ? "a" : "p",
            tt: r < 12 ? "am" : "pm",
            T: r < 12 ? "A" : "P",
            TT: r < 12 ? "AM" : "PM",
            Z: q ? "UTC" : (String(i).match(b) || [""]).pop().replace(d, ""),
            o: (f > 0 ? "-" : "+") + c(Math.floor(Math.abs(f) / 60) * 100 + Math.abs(f) % 60, 4),
            S: ["th", "st", "nd", "rd"][l % 10 > 3 ? 0 : (l % 100 - l % 10 != 10) * l % 10]
        };
        return v.replace(a, function(m) {
            return m in h ? h[m] : m.slice(1, m.length - 1)
        })
    }
}();
dateFormat.masks = {
    "default": "ddd mmm dd yyyy HH:MM:ss",
    shortDate: "m/d/yy",
    mediumDate: "mmm d, yyyy",
    longDate: "mmmm d, yyyy",
    fullDate: "dddd, mmmm d, yyyy",
    shortTime: "h:MM TT",
    mediumTime: "h:MM:ss TT",
    longTime: "h:MM:ss TT Z",
    isoDate: "yyyy-mm-dd",
    isoTime: "HH:MM:ss",
    isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
    isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
};
dateFormat.i18n = {
    dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
Date.prototype.format = function(a, b) {
    return dateFormat(this, a, b)
}
;
/*!******************************************************************************
 jquery.mb.components
 Copyright (c) 2001-2010. Matteo Bicocchi (Pupunzi); Open lab srl, Firenze - Italy
 email: mbicocchi@open-lab.com
 site: http://pupunzi.com

 Licences: MIT, GPL
 http://www.opensource.org/licenses/mit-license.php
 http://www.gnu.org/licenses/gpl.html
 ******************************************************************************/
(function($) {
    $.extend({
        metadata: {
            defaults: {
                type: "class",
                name: "metadata",
                cre: /({.*})/,
                single: "metadata"
            },
            setType: function(type, name) {
                this.defaults.type = type;
                this.defaults.name = name
            },
            get: function(elem, opts) {
                var settings = $.extend({}, this.defaults, opts);
                if (!settings.single.length) {
                    settings.single = "metadata"
                }
                var data = $.data(elem, settings.single);
                if (data) {
                    return data
                }
                data = "{}";
                if (settings.type == "class") {
                    var m = settings.cre.exec(elem.className);
                    if (m) {
                        data = m[1]
                    }
                } else {
                    if (settings.type == "elem") {
                        if (!elem.getElementsByTagName) {
                            return undefined
                        }
                        var e = elem.getElementsByTagName(settings.name);
                        if (e.length) {
                            data = $.trim(e[0].innerHTML)
                        }
                    } else {
                        if (elem.getAttribute != undefined) {
                            var attr = elem.getAttribute(settings.name);
                            if (attr) {
                                data = attr
                            }
                        }
                    }
                }
                if (data.indexOf("{") < 0) {
                    data = "{" + data + "}"
                }
                data = eval("(" + data + ")");
                $.data(elem, settings.single, data);
                return data
            }
        }
    });
    $.fn.metadata = function(opts) {
        return $.metadata.get(this[0], opts)
    }
}
)(jQuery);
/*!
 * jQuery idleTimer plugin
 * version 0.8.092209
 * by Paul Irish. 
 *   http://github.com/paulirish/yui-misc/tree/
 * MIT license
 
 * adapted from YUI idle timer by nzakas:
 *   http://github.com/nzakas/yui-misc/
 
 
 * Copyright (c) 2009 Nicholas C. Zakas
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
(function(b) {
    b.idleTimer = function a(m, i) {
        var f = false, j = true, l = 30000, n = "mousemove keydown DOMMouseScroll mousewheel mousedown idleTimerReset idleTimerCookieReset", d = i, e = false, g, h = function() {
            f = !f;
            a.olddate = +new Date;
            b(document).trigger(b.data(document, "idleTimer", f ? "idle" : "active") + ".idleTimer")
        }, k = function() {
            j = false;
            clearTimeout(b.idleTimer.tId);
            b(document).unbind(".idleTimer")
        }, c = function(o) {
            clearTimeout(b.idleTimer.tId);
            if (j) {
                if (f) {
                    h()
                }
                if (o.type != "idleTimerCookieReset") {
                    e = true;
                    b.idleTimer.tId = setTimeout(h, l - 500)
                } else {
                    e = false;
                    b.idleTimer.tId = setTimeout(h, l)
                }
            }
        };
        notifyTabs = function() {
            if (e) {
                e = false;
                if (!d.countdownOpen) {
                    jQuery.cookie(d.sessionId, d.tabId + "_" + new Date().getTime() + "_" + d.currentRoleId)
                }
            }
        }
        ;
        g = window.setInterval(notifyTabs, 1000);
        a.olddate = a.olddate || +new Date;
        if (typeof m == "number") {
            l = m
        } else {
            if (m === "destroy") {
                k();
                return this
            } else {
                if (m === "getElapsedTime") {
                    return (+new Date) - a.olddate
                }
            }
        }
        b(document).bind(b.trim((n + " ").split(" ").join(".idleTimer ")), c);
        b.idleTimer.tId = setTimeout(h, l);
        b.data(document, "idleTimer", "active")
    }
}
)(jQuery);
(function(a) {
    a.idleTimeout = function(c, d, b) {
        b = a.idleTimeout.options = a.extend({}, a.idleTimeout.options, b);
        var e = {
            init: function() {
                var f = this;
                this.tabId = new Date().getTime();
                this.warning = a(c);
                this.resume = a(d);
                this.countdownOpen = false;
                this.failedRequests = b.failedRequests;
                this._startTimer();
                this.sessionId = "zb" + b.sessionId;
                this.currentRoleId = b.currentRoleId;
                this.cookieCheckTimer = window.setInterval(e._checkCookies, 1000);
                this.prevCookieVal = this.tabId + "_" + new Date().getTime() + "_" + this.currentRoleId;
                jQuery.cookie(this.sessionId, this.prevCookieVal);
                a.idleTimer(b.idleAfter * 1000, e);
                a(document).bind("idle.idleTimer", function() {
                    if (a.data(document, "idleTimer") === "idle" && !f.countdownOpen) {
                        f._stopTimer();
                        f.countdownOpen = true;
                        f._idle()
                    }
                });
                this.resume.bind("click", function(g) {
                    g.preventDefault();
                    window.clearInterval(f.countdown);
                    f.countdownOpen = false;
                    jQuery.cookie(f.sessionId, f.tabId + "_" + new Date().getTime() + "_" + f.currentRoleId);
                    f._startTimer();
                    b.onResume.call(f.warning)
                })
            },
            _checkCookies: function() {
                var f = jQuery.cookie(e.sessionId);
                if (f.split("_")[0] != e.tabId && e.prevCookieVal != f) {
                    if (e.prevCookieVal.split("_")[2] != f.split("_")[2]) {
                        window.location.href = window.location.href.split("#")[0];
                        return false
                    }
                    if (e.countdownOpen) {
                        jQuery(e.resume).trigger("click");
                        return false
                    }
                    e.prevCookieVal = f;
                    jQuery(document).trigger("idleTimerCookieReset");
                    return false
                } else {
                    return true
                }
            },
            _idle: function() {
                var g = this
                  , h = this.warning[0]
                  , f = b.warningLength;
                b.onIdle.call(h);
                b.onCountdown.call(h, f);
                this.countdown = window.setInterval(function() {
                    f -= 1;
                    if (f === 0) {
                        window.clearInterval(g.countdown);
                        b.onTimeout.call(h)
                    } else {
                        b.onCountdown.call(h, f)
                    }
                }, 1000)
            },
            _startTimer: function() {
                this.timer = setTimeout(a.proxy(this._keepAlive, this), b.pollingInterval * 1000)
            },
            _stopTimer: function() {
                this.failedRequests = b.failedRequests;
                clearTimeout(this.timer)
            },
            _keepAlive: function() {
                var f = this;
                if (!this.failedRequests) {
                    this._stopTimer();
                    b.onAbort.call(this.warning[0]);
                    return
                }
                a.ajax({
                    timeout: b.AJAXTimeout,
                    url: b.keepAliveURL,
                    error: function() {
                        f.failedRequests--;
                        f._startTimer()
                    },
                    success: function(g) {
                        if (a.trim(g) !== b.serverResponseEquals) {
                            f.failedRequests--
                        }
                        f._startTimer()
                    }
                })
            }
        };
        e.init()
    }
    ;
    a.idleTimeout.options = {
        warningLength: 30,
        keepAliveURL: "",
        serverResponseEquals: "OK",
        idleAfter: 600,
        pollingInterval: 60,
        failedRequests: 5,
        AJAXTimeout: 250,
        onTimeout: function() {},
        onIdle: function() {},
        onCountdown: function() {},
        onResume: function() {},
        onAbort: function() {}
    }
}
)(jQuery);
(function(a) {
    a.fn.tooltip = function(c) {
        config = {
            dialog_content_selector: "div.tooltip_description",
            animation_distance: 50,
            arrow_left_offset: -10,
            arrow_top_offset: 40,
            arrow_height: 15,
            arrow_width: 15,
            animation_duration_ms: 1,
            event_in: "mouseover",
            event_out: "mouseout",
            hover_delay: 0
        };
        if (c) {
            a.extend(config, c)
        }
        this.each(function() {
            var f;
            a(this).bind(config.event_in, function() {
                var g = this;
                f = setTimeout(function() {
                    e(g)
                }, config.hover_delay)
            }).bind(config.event_out, function() {
                clearTimeout(f);
                b(this)
            })
        });
        function e(m) {
            var o = a(m).find(config.dialog_content_selector);
            var l = d(o);
            var n = a(m).hasClass("tooltiptopright");
            var g = a(m).hasClass("tooltipbottomright");
            var h = a(m).hasClass("tooltiptop");
            var i = a(m).hasClass("tooltipbottom");
            var j = n || g || h || i;
            var k;
            var f = a(m).offset();
            if (n || !j && (f.top < a(l).outerHeight() && f.top >= config.arrow_top_offset)) {
                k = {
                    start: {
                        left: f.left + a(m).outerWidth() + config.animation_distance,
                        top: f.top + (a(m).outerHeight() / 2) - config.arrow_top_offset
                    },
                    end: {
                        left: f.left + a(m).outerWidth(),
                        top: f.top + (a(m).outerHeight() / 2) - config.arrow_top_offset
                    },
                    arrow_class: "div.left_arrow"
                }
            } else {
                if (g || !j && (f.left < config.arrow_left_offset + a(m).outerWidth() && f.top > a(l).outerHeight())) {
                    k = {
                        start: {
                            left: f.left + a(m).outerWidth() + config.animation_distance,
                            top: f.top + (a(m).outerHeight() / 2) + config.arrow_top_offset - a(l).outerHeight() + config.arrow_height
                        },
                        end: {
                            left: f.left + a(m).outerWidth(),
                            top: f.top + (a(m).outerHeight() / 2) + config.arrow_top_offset - a(l).outerHeight() + config.arrow_height
                        },
                        arrow_class: "div.left_arrow"
                    };
                    a(l).find("div.left_arrow").css({
                        top: a(l).outerHeight() - (config.arrow_top_offset * 2) + "px"
                    })
                } else {
                    if (h || !j && (f.top + config.animation_distance > a(l).outerHeight() && f.left >= config.arrow_left_offset)) {
                        k = {
                            start: {
                                left: f.left + (a(m).outerWidth() / 2) - config.arrow_left_offset,
                                top: f.top - config.animation_distance - a(l).outerHeight()
                            },
                            end: {
                                left: f.left + (a(m).outerWidth() / 2) - config.arrow_left_offset,
                                top: f.top - a(l).outerHeight() + config.arrow_height
                            },
                            arrow_class: "div.down_arrow"
                        }
                    } else {
                        if (i || !j && (f.top + config.animation_distance < a(l).outerHeight())) {
                            k = {
                                start: {
                                    left: f.left + (a(m).outerWidth() / 2) - config.arrow_left_offset,
                                    top: f.top + a(m).outerHeight() + config.animation_distance
                                },
                                end: {
                                    left: f.left + (a(m).outerWidth() / 2) - config.arrow_left_offset,
                                    top: f.top + a(m).outerHeight()
                                },
                                arrow_class: "div.up_arrow"
                            }
                        }
                    }
                }
            }
            a(l).css({
                top: k.start.top + "px",
                left: k.start.left + "px",
                opacity: config.opacity
            });
            a(l).find("div.arrow").hide();
            a(l).find(k.arrow_class).show();
            a(l).animate({
                top: k.end.top,
                left: k.end.left,
                opacity: "toggle"
            }, config.animation_duration_ms)
        }
        function b(f) {
            a("body").find("div.jquery-gdakram-tooltip").stop().remove()
        }
        function d(f) {
            var g = (a(f).attr("title")) ? "<h1>" + a(f).attr("title") + "</h1>" : "";
            return a("<div class='jquery-gdakram-tooltip'>         <div class='up_arrow arrow'></div>         <div class='left_arrow arrow'></div>         <div style='border-radius:5px; -moz-border-radius: 5px; -webkit-border-radius: 5px;' class='content'>" + g + a(f).html() + "</div>         <div style='clear:both'></div>         <div class='down_arrow arrow'></div>       </div>").appendTo("body")
        }
        return this
    }
}
)(jQuery);
function notificationController(b, a) {
    this.baseURL = b;
    this.xmlString = "";
    this.currentXMLDoc = null;
    this.timerId = null;
    this.timerInterval = a;
    this.timerAlreadyRunning = false;
    this.getTimerInterval = function() {
        return this.timerInterval
    }
    ;
    this.setTimerInterval = function(c) {
        this.timerInterval = c
    }
    ;
    this.loadXMLDocFromString = function() {
        if (window.DOMParser) {
            parser = new DOMParser();
            xmlDoc = parser.parseFromString(this.xmlString, "text/xml")
        } else {
            xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
            xmlDoc.async = false;
            xmlDoc.loadXML(this.xmlString)
        }
        return xmlDoc
    }
    ;
    this.cancelTimer = function() {
        if (this.timerId) {
            clearInterval(this.timerId);
            this.timerId = null
        }
    }
    ;
    this.setNavigationUpdateFrequency = function() {
        if (!this.timerId) {
            this.timerId = setInterval("notificationControllerObj.updateNavigationCounts()", this.timerInterval)
        }
    }
    ;
    this.updateNavigationCounts = function() {
        var d = this;
        d.cancelTimer();
        var c = null;
        if (!d.timerAlreadyRunning) {
            d.timerAlreadyRunning = true;
            jQuery.ajax({
                type: "GET",
                url: this.baseURL + "/navigationmessagecount/index.lc?tempDate=" + new Date().getTime(),
                success: function(h) {
                    notificationControllerObj.xmlString = h;
                    var g = jQuery.parseXML(h);
                    var f = 0;
                    var e = 0;
                    jQuery(g).find("category").each(function() {
                        var i = jQuery(this).attr("unreadCount");
                        var j = jQuery(this).attr("type");
                        if (j == "F") {
                            f = f + parseInt(i);
                            jQuery("#taskForumCount").find("span").remove();
                            if (i > 0) {
                                jQuery("#taskForumCount").append("<span>" + i + "</span>")
                            }
                        }
                        if (j == "CW") {
                            f = f + parseInt(i);
                            jQuery("#taskClasswallCount").find("span").remove();
                            if (i > 0) {
                                jQuery("#taskClasswallCount").append("<span>" + i + "</span>")
                            }
                        }
                        if (j == "A") {
                            jQuery("#taskAnnouncementCount").find("a.lc_countLbl").remove();
                            if (i > 0) {
                                jQuery("#taskAnnouncementCount").append("<a class='lc_countLbl'  title='Announcements' href='javascript: void(0)'>" + i + "</a>")
                            }
                            e += parseInt(i)
                        }
                        if (j == "N") {
                            jQuery("#notificationCount").find("a.lc_countLbl").remove();
                            if (i > 0) {
                                jQuery("#notificationCount").append("<a class='lc_countLbl' title='Notifications' href='javascript: void(0)'>" + i + "</a>")
                            }
                            e += parseInt(i)
                        }
                    });
                    jQuery("#taskTotalConnectCount").find("span").remove();
                    if (f > 0) {
                        jQuery("#taskTotalConnectCount").append("<span>" + f + "</span>")
                    }
                    jQuery("#messageCount").find("span").remove();
                    if (e > 0) {
                        jQuery("#messageCount").append("<span>" + e + "</span>")
                    }
                },
                complete: function() {
                    d.timerAlreadyRunning = false;
                    notificationControllerObj.setNavigationUpdateFrequency()
                }
            })
        }
    }
    ;
    this.updateNavigationCounts()
}
;jQuery.getFeed = function(a) {
    a = jQuery.extend({
        url: null,
        data: null,
        cache: true,
        success: null,
        failure: null,
        error: null,
        global: true
    }, a);
    if (a.url) {
        if (jQuery.isFunction(a.failure) && jQuery.type(a.error) === "null") {
            a.error = function(d, c, b) {
                a.failure(c, b)
            }
        } else {
            if (jQuery.type(a.failure) === jQuery.type(a.error) === "null") {
                a.error = function(d, c, b) {
                    window.console && console.log("getFeed failed to load feed", d, c, b)
                }
            }
        }
        return jQuery.ajax({
            type: "GET",
            url: a.url,
            data: a.data,
            cache: a.cache,
            dataType: "xml",
            success: function(b) {
                var c = new JFeed(b);
                if (jQuery.isFunction(a.success)) {
                    a.success(c)
                }
            },
            error: a.error,
            global: a.global
        })
    }
}
;
function JFeed(a) {
    if (a) {
        this.parse(a)
    }
}
JFeed.prototype = {
    type: "",
    version: "",
    title: "",
    link: "",
    description: "",
    parse: function(a) {
        if (jQuery("channel", a).length == 1) {
            this.type = "rss";
            var b = new JRss(a)
        } else {
            if (jQuery("feed", a).length == 1) {
                this.type = "atom";
                var b = new JAtom(a)
            }
        }
        if (b) {
            jQuery.extend(this, b)
        }
    }
};
function JFeedItem() {}
JFeedItem.prototype = {
    title: "",
    link: "",
    description: "",
    updated: "",
    id: ""
};
function JAtom(a) {
    this._parse(a)
}
JAtom.prototype = {
    _parse: function(a) {
        var b = jQuery("feed", a).eq(0);
        this.version = "1.0";
        this.title = jQuery(b).find("title:first").text();
        this.link = jQuery(b).find("link:first").attr("href");
        this.description = jQuery(b).find("subtitle:first").text();
        this.language = jQuery(b).attr("xml:lang");
        this.updated = jQuery(b).find("updated:first").text();
        this.items = new Array();
        var c = this;
        jQuery("entry", a).each(function() {
            var d = new JFeedItem();
            d.title = jQuery(this).find("title").eq(0).text();
            d.link = jQuery(this).find("link").eq(0).attr("href");
            d.description = jQuery(this).find("content").eq(0).text();
            d.updated = jQuery(this).find("updated").eq(0).text();
            d.id = jQuery(this).find("id").eq(0).text();
            c.items.push(d)
        })
    }
};
function JRss(a) {
    this._parse(a)
}
JRss.prototype = {
    _parse: function(a) {
        if (jQuery("rss", a).length == 0) {
            this.version = "1.0"
        } else {
            this.version = jQuery("rss", a).eq(0).attr("version")
        }
        var b = jQuery("channel", a).eq(0);
        this.title = jQuery(b).find("title:first").text();
        this.link = jQuery(b).find("link:first").text();
        this.description = jQuery(b).find("description:first").text();
        this.language = jQuery(b).find("language:first").text();
        this.updated = jQuery(b).find("lastBuildDate:first").text();
        this.items = new Array();
        var c = this;
        jQuery("item", a).each(function() {
            var f = new JFeedItem();
            f.title = jQuery(this).find("title").eq(0).text();
            var d = jQuery(this).find("link");
            for (var e = 0; e < d.length; e++) {
                if (jQuery(d[e]).text() != "") {
                    f.link = jQuery(d[e]).text();
                    break
                }
            }
            f.description = jQuery(this).find("description").eq(0).text();
            f.updated = jQuery(this).find("pubDate").eq(0).text();
            f.id = jQuery(this).find("guid").eq(0).text();
            c.items.push(f)
        })
    }
};
var populateSearchScreenObj;
function hideSearchOuterDiv() {
    jQuery("#divSearchOuter").slideUp()
}
function prepareSearchContentForm() {
    jQuery("#linkSearchState").toggle(function() {
        jQuery("#linkSearchState").removeClass();
        jQuery("#linkSearchState").addClass("max");
        jQuery("#divSearchInner").slideUp();
        jQuery("#divSearchOuter").height(20)
    }, function() {
        jQuery("#linkSearchState").removeClass();
        jQuery("#linkSearchState").addClass("min");
        jQuery("#divSearchInner").slideDown();
        jQuery("#divSearchOuter").height(500)
    });
    jQuery(function() {
        var a = 0;
        jQuery("div#equilBox").find("div.equilBoxChild").each(function() {
            if (a < jQuery(this).height()) {
                a = jQuery(this).height()
            }
        });
        jQuery("div#equilBox").find("div.equilBoxChild").each(function() {
            jQuery(this).height(a)
        })
    });
    populateSearchScreenObj = new populateSearchScreen()
}
function populateSearchScreen() {
    this.dataMap = null;
    this.searchText = jQuery("#globalSearchText").val().toLowerCase();
    this.json = null;
    this.totalResults = 0;
    this.loudbooksHtml = "";
    this.forumsHtml = "";
    this.assignmentsHtml = "";
    this.quizzesHtml = "";
    this.electronicResourcesHtml = "";
    this.participationHtml = "";
    this.classWallHtml = "";
    this.announcementsHtml = "";
    this.rssFeedHtml = "";
    this.thirdPartyResourceHtml = "";
    this.thirdPartyGradedHtml = "";
    this.scoDetailsHtml = "";
    this.readingMaterialHtml = "";
    this.loudbooksResults = 0;
    this.forumsResults = 0;
    this.assignmentsResults = 0;
    this.quizzesResults = 0;
    this.electronicResourcesResults = 0;
    this.participationResults = 0;
    this.classWallResults = 0;
    this.announcementsResults = 0;
    this.rssFeedResults = 0;
    this.thirdPartyResourceResults = 0;
    this.readingMaterialResults = 0;
    this.scoDetailsResults = 0;
    this.thirdPartyGradedResults = 0;
    this.searchResultsHtml = "";
    this.contentTypes = [];
    this.contentTypeHtml = [];
    this.isInstructor = false;
    this.globalDataJson = null;
    this.classId = null;
    this.initializeJSONObj = function() {
        this.isInstructor = this.dataMap.isInstructor;
        this.json = jQuery.parseJSON(this.dataMap.jsonStr);
        this.globalDataJson = jQuery.parseJSON(this.dataMap.globalJson)
    }
    ;
    this.getSearchText = function() {
        return this.searchText
    }
    ;
    this.setSearchText = function(a) {
        this.searchText = a
    }
    ;
    this.viewSearchContents = function() {
        if (this.json) {
            this.classId = this.json.classId
        }
        if (this.json.classFolder) {
            this.getSearchContent(this.json.classFolder)
        }
    }
    ;
    this.resetVariables = function() {
        this.totalResults = 0,
        this.loudbooksResults = 0,
        this.forumsResults = 0,
        this.assignmentsResults = 0,
        this.quizzesResults = 0,
        this.electronicResourcesResults = 0,
        this.participationResults = 0,
        this.classWallResults = 0,
        this.announcementsResults = 0,
        this.rssFeedResults = 0,
        this.thirdPartyResourceResults = 0,
        this.readingMaterialResults = 0,
        this.scoDetailsResults = 0,
        this.thirdPartyGradedResults = 0;
        this.loudbooksHtml = "",
        this.forumsHtml = "",
        this.assignmentsHtml = "",
        this.quizzesHtml = "",
        this.electronicResourcesHtml = "",
        this.participationHtml = "",
        this.searchResultsHtml = "",
        this.classWallHtml = "",
        this.announcementsHtml = "",
        this.rssFeedHtml = "",
        this.thirdPartyResourceHtml = "",
        this.readingMaterialHtml = "",
        this.scoDetailsHtml = "",
        this.thirdPartyGradedHtml = "";
        this.contentTypeHtml = []
    }
    ;
    this.getSearchContent = function(b) {
        this.getSearchContentHTML(b);
        if (b.folderList && b.folderList.length > 0) {
            for (var a = 0; a < b.folderList.length; a++) {
                this.getSearchContent(b.folderList[a])
            }
        }
    }
    ;
    this.getSearchContentHTML = function(c) {
        if (c) {
            for (var b = 0; b < c.contentList.length; b++) {
                var e = c.contentList[b].classContentTypeId;
                var a = "";
                var d = appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutlineIUView&t=coursesMenuOption&c=prepareClassOutlineForm&fromOtherPage=true&folderContentId=" + c.contentList[b].folderContentId + "&classId=" + this.json.classFolder.classId;
                switch (e) {
                case 1:
                    a = c.contentList[b].assignment;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.assignmentsHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.assignmentsResults++;
                        this.totalResults++
                    }
                    break;
                case 2:
                    a = c.contentList[b].quiz;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.quizzesHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.quizzesResults++;
                        this.totalResults++
                    }
                    break;
                case 3:
                    a = c.contentList[b].loudbook;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.loudbooksHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.loudbooksResults++;
                        this.totalResults++
                    }
                    break;
                case 4:
                    a = c.contentList[b].electronicResource;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.electronicResourcesHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.electronicResourcesResults++;
                        this.totalResults++
                    }
                    break;
                case 5:
                    a = c.contentList[b].discussionQuestion;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.forumsHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.forumsResults++;
                        this.totalResults++
                    }
                    break;
                case 6:
                    a = c.contentList[b].participation;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.participationHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.participationResults++;
                        this.totalResults++
                    }
                    break;
                case 7:
                    a = c.contentList[b].thirdPartyResource;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.thirdPartyResourceHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.thirdPartyResourceResults++;
                        this.totalResults++
                    }
                    break;
                case 9:
                    a = c.contentList[b].readingMaterial;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.readingMaterialHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.readingMaterialResults++;
                        this.totalResults++
                    }
                    break;
                case 11:
                    a = c.contentList[b].rssFeed;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.rssFeedHtml += this.getRowHtml(a.title, a.description, d, e, a.rssFeedId);
                        this.rssFeedResults++;
                        this.totalResults++
                    }
                    break;
                case 12:
                    a = c.contentList[b].scoDetails;
                    if (a != null && (a.scoTitle.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.scoDetailsHtml += this.getRowHtml(a.scoTitle, a.description, d, e, null);
                        this.scoDetailsResults++;
                        this.totalResults++
                    }
                    break;
                case 14:
                    a = c.contentList[b].thirdPartyResource;
                    if (a != null && (a.title.toLowerCase().indexOf(this.searchText) != -1 || jQuery(a.description).text().toLowerCase().indexOf(this.searchText) != -1)) {
                        this.thirdPartyGradedHtml += this.getRowHtml(a.title, a.description, d, e, null);
                        this.thirdPartyGradedResults++;
                        this.totalResults++
                    }
                    break
                }
            }
        }
    }
    ;
    this.redirectToRSSFeed = function(a) {
        var b = appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassContentOutline&t=coursesMenuOption&c=prepareClassContentOutline&folderContentId=" + a + "&classId=" + this.classId;
        appNavObj.setURL(b)
    }
    ;
    this.getRowHtml = function(f, d, e, c, b) {
        var a = "";
        a = '<tr><td><p><a href="javascript:void(0);" onclick="javascript:appNavObj.setURL(\'' + e + "');\">" + f + "</a><br />" + ((d == null) ? "" : d) + "</p></td></tr>";
        return a
    }
    ;
    this.populatedNonContentJson = function() {
        var a = this;
        jQuery.ajax({
            url: appNavObj.appBasePath + "/common/common.lc?operation=globalContentSearch&searchTxt=" + jQuery("#globalSearchText").val().toLowerCase() + "&isFirstSearch=false",
            async: false,
            dataType: "json",
            success: function(b) {
                if (b) {
                    a.globalDataJson = jQuery.parseJSON(b.globalJson)
                }
            }
        })
    }
    ;
    this.getGlobalSearchContentTblHtml = function() {
        var c = this;
        if (c.globalDataJson != null) {
            var d = "";
            var b = "";
            for (var a = 0; a < c.globalDataJson.length; a++) {
                switch (c.globalDataJson[a].typeId) {
                case 100:
                    b = appNavObj.appBasePath + "/wall/classwall.lc?operation=getClassWall&t=classWallMenuOption&classId=" + c.globalDataJson[a].classId + "&c=prepareClassWall";
                    c.classWallHtml += c.getRowHtml(c.globalDataJson[a].title, c.globalDataJson[a].description, b, 9, null);
                    c.classWallResults++;
                    c.totalResults++;
                    break;
                case 101:
                    if (c.globalDataJson[a].BUAnnouncement) {
                        b = appNavObj.appBasePath + "/announcement/announcement.lc?operation=getBUAnnouncementDetail&announcementId=" + c.globalDataJson[a].classFolderContentId + "&c=preparebuAnnouncementDetailForm"
                    } else {
                        b = appNavObj.appBasePath + "/announcement/announcement.lc?operation=getClassAnnouncementDetail&announcementId=" + c.globalDataJson[a].classFolderContentId + "&classId=" + c.globalDataJson[a].classId + "&c=prepareClassAnnouncementDetailForm"
                    }
                    c.announcementsHtml += c.getRowHtml(c.globalDataJson[a].title, c.globalDataJson[a].description, b, 10, null);
                    c.announcementsResults++;
                    c.totalResults++;
                    break
                }
            }
        }
    }
    ;
    this.getSearchContentTblHtml = function(d, c, a) {
        var b = '<div class="searchMastBox1" id=""><table width="100%" id="searchMastBoxW_' + a + '" cellspacing="0" cellpadding="0"><tr><td><h2><strong class="orange1">' + d + " (Results " + c + ")</strong></h2></td></tr>";
        return b
    }
    ;
    this.filterSearchResults = function(a) {
        jQuery("#totalSearchResults").html("<strong> Search Results for &quot; " + this.searchText + " &quot; (Total " + this.totalResults + ")</strong>");
        jQuery("#searchResults").html(this.contentTypeHtml[parseInt(a)]);
        enableGetMoreLnk()
    }
    ;
    this.resetSearchResults = function() {
        jQuery("#searchResults").html(this.searchResultsHtml);
        enableGetMoreLnk()
    }
    ;
    this.prepareMarkup = function() {
        this.viewSearchContents();
        this.getGlobalSearchContentTblHtml();
        for (var b = 0; b < this.contentTypes.length; b++) {
            if (this.contentTypes[b]) {
                var d = parseInt(this.contentTypes[b].id);
                var c = "";
                var a = '<tr><td align="right"><a href="javascript:void(0);" class="getMore1 tblsmallFont" id="lnkGetMore_' + d + '">Get More</a></td></tr></table></div>';
                switch (d) {
                case 1:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.assignmentsResults, d) + this.assignmentsHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 2:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.quizzesResults, d) + this.quizzesHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 3:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.loudbooksResults, d) + this.loudbooksHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 4:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.electronicResourcesResults, d) + this.electronicResourcesHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 5:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.forumsResults, d) + this.forumsHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 6:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.participationResults, d) + this.participationHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 7:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.thirdPartyResourceResults, d) + this.thirdPartyResourceHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 9:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.readingMaterialResults, d) + this.readingMaterialHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 11:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.rssFeedResults, d) + this.rssFeedHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 12:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.scoDetailsResults, d) + this.scoDetailsHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 14:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.thirdPartyGradedResults, d) + this.thirdPartyGradedHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 100:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.classWallResults, d) + this.classWallHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break;
                case 101:
                    c = this.getSearchContentTblHtml(this.contentTypes[b].title, this.announcementsResults, d) + this.announcementsHtml + a;
                    this.searchResultsHtml += c;
                    this.contentTypeHtml[d] = c;
                    break
                }
            }
        }
        jQuery("#totalSearchResults").html("<strong> Search Results for &quot; " + this.searchText + " &quot; (Total " + this.totalResults + ")</strong>");
        jQuery("#searchResults").html(this.searchResultsHtml)
    }
    ;
    this.performSearch = function() {
        this.initializeJSONObj();
        this.prepareMarkup();
        enableGetMoreLnk()
    }
    ;
    this.reperformSearch = function() {
        this.resetVariables();
        this.populatedNonContentJson();
        this.prepareMarkup();
        enableGetMoreLnk()
    }
}
function enableGetMoreLnk() {
    jQuery(".getMore1").click(function() {});
    jQuery('table[id^="searchMastBoxW"]').each(function() {
        var d = this.id;
        var a = d.split("_");
        var c = a[1];
        var b = jQuery("#searchMastBoxW_" + c + " tr").length;
        if (b < 4) {
            jQuery("#searchMastBoxW_" + c + " tr:last").hide()
        } else {
            jQuery("#searchMastBoxW_" + c + " tr").hide();
            jQuery("#searchMastBoxW_" + c + " tr:first").show();
            jQuery("#searchMastBoxW_" + c + " tr:eq(1)").show();
            jQuery("#searchMastBoxW_" + c + " tr:last").show()
        }
    });
    jQuery('a[id^="lnkGetMore"]').each(function() {
        var c = this.id;
        var a = c.split("_");
        var b = a[1];
        jQuery("#lnkGetMore_" + b).toggle(function() {
            jQuery("#searchMastBoxW_" + b + " tr").show();
            jQuery("#lnkGetMore_" + b).html("Less")
        }, function() {
            jQuery("#searchMastBoxW_" + b + " tr").hide();
            jQuery("#searchMastBoxW_" + b + " tr:first").show();
            jQuery("#searchMastBoxW_" + b + " tr:eq(1)").show();
            jQuery("#searchMastBoxW_" + b + " tr:last").show();
            jQuery("#lnkGetMore_" + b).html("Get More")
        })
    })
}
function filterSearchResults(a) {
    if (a == -1) {
        populateSearchScreenObj.resetSearchResults()
    } else {
        populateSearchScreenObj.filterSearchResults(a)
    }
}
;var ActivityConstants = {
    LOGIN_TO_LMS: "1",
    POST_IN_MAIN_FORUM: "2",
    POST_IN_ANY_OTHER_FORUM: "3",
    POST_IN_CLASS_WALL: "4",
    LIKED_A_POST: "5",
    REPLY_TO_ANNOUNCEMENT: "6",
    CREATES_AN_ASSIGNMENT_ATTEMPT: "7",
    SUBMITS_AN_ASSIGNMENT: "8",
    CREATES_ENROLLS_IN_ASSIGNMENT_GROUP: "9",
    ATTEMPTS_SUBMITS__PRACTICE_QUIZ: "10",
    ATTEMPTS_SUBMITS_GRADED_QUIZ: "11",
    ACCESSES_A_LOUDBOOK: "12",
    CREATES_ANNOTATION_LOUDBOOK: "13",
    SHARE_AN_ANNOTATION: "14",
    CREATE_I_DONT_GET_THIS: "15",
    ATTENDS_VC_SESSION: "16",
    ACCESSES_A_SCO: "17",
    ACCESSES_A_SCO_5_MINS: "18",
    STUDENT_ENTERS_CLASS: "19",
    ATTEMPTS_THIRDPARTY_GRADED_RESOURCE: "20",
    ACCESSES_A_LOUDBOOK_5_MINS: "21",
    ACCESSES_AN_ER: "22",
    ACCESSES_AN_ER_5_MINS: "23",
    ATTEMPTS_THIRDPARTY_RESOURCE: "24"
};
function openChat(userName, name) {
    var bareJID = userName;
    var userFound = false;
    if (name == "") {
        jQuery(lcsConnect.getClassMembers()).each(function(index, value) {
            _userObj = eval(value);
            if (_userObj.userId == bareJID) {
                name = _userObj.displayName;
                userFound = true
            }
        })
    }
    if (jQuery("#chat-" + bareJID).length > 0) {
        jQuery("#chatWindowTabsContainer").tabs("option", "active", "#chat-" + bareJID)
    } else {
        var _tabwind = "";
        jQuery("#chatWindowTabsContainer #listUl").append("<li class='ui-state-default ui-corner-top'><a href='#chat-" + bareJID + "' data-anchor='" + bareJID + "'>" + name + "</a></li>");
        jQuery("#chatWindowTabsContainer").append("<div id='chat-" + bareJID + "'>");
        jQuery("#chat-" + bareJID).html("<div style='padding:10px 10px 10px 10px' class='mainchatWinds'><div class='FR'><a href='javascript:void(0)' class='previewIcon chatHistory' _to=" + bareJID + " id='history-of-" + bareJID + "'>View Chat History</a></div><div class='clear'></div></div><div class='midInr'><div class='chatArea chatAreaFix' id='chatArea-TD-" + bareJID + "'></div></div><div class='chatEnter' height='255' width='280' id='chatArea-" + bareJID + "'><div class='tabBoxclss'><textarea name='' cols='' rows='' id='messageText-" + bareJID + "' style='width: 256px; height: 41px; max-width: 241px; max-height: 41px; min-width: 241px; min-height: 41px;'></textarea><input name='' type='button' class='sendMessg button' value='Send' to='" + bareJID + "'/></div></div>");
        jQuery("#chatWindowTabsContainer").tabs("destroy");
        jQuery("#chatWindowTabsContainer").tabs({
            closable: true,
            active: -1
        });
        var tabs = jQuery("#chatWindowTabsContainer>div")
          , current = tabs.filter("#chat-" + bareJID)
          , index = tabs.index(current);
        jQuery("#chatWindowTabsContainer").tabs("option", "active", index - 1);
        jQuery("#chat-" + bareJID + " textarea").focus();
        if (!userFound) {
            lcsConnect.checkUserExist(userFound, userName)
        }
    }
}
;var lcs_CustomTooltip = {};
jQuery(document).ready(function() {
    lcs_CustomTooltip.targets = jQuery("[rel~=tooltip]");
    lcs_CustomTooltip.tip = false;
    lcs_CustomTooltip.target = false;
    lcs_CustomTooltip.tooltip = false;
    lcs_CustomTooltip.title = false;
    jQuery(document).on("mouseenter focus", "[rel~=tooltip]", function() {
        if (!ipad && !android) {
            if (jQuery("#tooltip").length > 0) {
                lcs_CustomTooltip.remove_tooltip()
            }
            lcs_CustomTooltip.target = jQuery(this);
            lcs_CustomTooltip.tip = lcs_CustomTooltip.target.attr("title");
            lcs_CustomTooltip.tooltip = jQuery('<div id="tooltip"></div>');
            if (!lcs_CustomTooltip.tip || lcs_CustomTooltip.tip == "") {
                return false
            }
            lcs_CustomTooltip.target.removeAttr("title");
            lcs_CustomTooltip.tooltip.css("opacity", 0).html(lcs_CustomTooltip.tip).appendTo("body");
            lcs_CustomTooltip.init_tooltip();
            jQuery(window).resize(lcs_CustomTooltip.init_tooltip);
            if (lcs_CustomTooltip.target.data("bound") != "true") {
                lcs_CustomTooltip.target.bind("mouseleave focusout", lcs_CustomTooltip.remove_tooltip);
                lcs_CustomTooltip.tooltip.bind("click focusout", lcs_CustomTooltip.remove_tooltip)
            }
        }
    });
    lcs_CustomTooltip.remove_tooltip = function() {
        lcs_CustomTooltip.target.data({
            bound: "true"
        });
        lcs_CustomTooltip.tooltip.animate({
            top: "-=10",
            opacity: 0
        }, 50, function() {
            jQuery(this).remove()
        });
        lcs_CustomTooltip.target.attr("title", lcs_CustomTooltip.tip)
    }
    ;
    lcs_CustomTooltip.setTooltip = function(a) {
        lcs_CustomTooltip.tip = a;
        if (jQuery("#tooltip").is(":visible")) {
            jQuery("#tooltip").html(a);
            lcs_CustomTooltip.init_tooltip()
        }
    }
    ;
    lcs_CustomTooltip.init_tooltip = function() {
        if (jQuery(window).width() < lcs_CustomTooltip.tooltip.outerWidth(false) * 1.5) {
            lcs_CustomTooltip.tooltip.css("max-width", jQuery(window).width() / 2)
        } else {
            lcs_CustomTooltip.tooltip.css("max-width", 340)
        }
        var a = lcs_CustomTooltip.target.offset().left + (lcs_CustomTooltip.target.outerWidth(false) / 2) - (lcs_CustomTooltip.tooltip.outerWidth(false) / 2);
        if ((lcs_CustomTooltip.target.hasClass("tickimgCls")) || (lcs_CustomTooltip.target.hasClass("tickimgCls1")) || (lcs_CustomTooltip.target.hasClass("tickimgCls2"))) {
            a = lcs_CustomTooltip.target.offset().left - (lcs_CustomTooltip.tooltip.outerWidth(false) / 2) + 5
        }
        var b = lcs_CustomTooltip.target.offset().top - lcs_CustomTooltip.tooltip.outerHeight(false) + 76;
        if (lcs_CustomTooltip.target.hasClass("tac-progress-done")) {
            a = lcs_CustomTooltip.target.offset().left - (lcs_CustomTooltip.tooltip.outerWidth(false) / 2) + lcs_CustomTooltip.target.outerWidth(false);
            b = lcs_CustomTooltip.target.offset().top + lcs_CustomTooltip.tooltip.outerHeight(false) + 10
        }
        if (lcs_CustomTooltip.target.hasClass("barstyle")) {
            a = lcs_CustomTooltip.target.offset().left - (lcs_CustomTooltip.tooltip.outerWidth(false) / 2) + lcs_CustomTooltip.target.outerWidth(false)
        }
        if (lcs_CustomTooltip.target.parent().hasClass("studentSegmentation")) {
            b = lcs_CustomTooltip.target.offset().top + lcs_CustomTooltip.tooltip.outerHeight(false) + 10
        }
        if (lcs_CustomTooltip.target.parents().hasClass("co_leftStructure")) {
            if (!lcs_CustomTooltip.target.hasClass("checkBtn")) {
                a = lcs_CustomTooltip.target.offset().left - lcs_CustomTooltip.tooltip.outerWidth(false) / 2 + 8
            }
            b = lcs_CustomTooltip.target.offset().top + lcs_CustomTooltip.tooltip.outerHeight(false) + 10
        }
        if (lcs_CustomTooltip.target.parents().hasClass("co_title")) {
            a = lcs_CustomTooltip.target.offset().left + (lcs_CustomTooltip.target.outerWidth(false)) - (lcs_CustomTooltip.tooltip.outerWidth(false) / 2) - 10
        }
        if (lcs_CustomTooltip.target.parent().hasClass("lc-meetinbox")) {
            b = lcs_CustomTooltip.target.offset().top + lcs_CustomTooltip.tooltip.outerHeight(false) + 20
        }
        if (a < 0) {
            a = lcs_CustomTooltip.target.offset().left + lcs_CustomTooltip.target.outerWidth(false) / 2 - 20;
            lcs_CustomTooltip.tooltip.addClass("left")
        } else {
            lcs_CustomTooltip.tooltip.removeClass("left")
        }
        if (a + lcs_CustomTooltip.tooltip.outerWidth(false) > jQuery(window).width()) {
            a = lcs_CustomTooltip.target.offset().left - lcs_CustomTooltip.tooltip.outerWidth(false) + lcs_CustomTooltip.target.outerWidth(false) / 2 + 20;
            lcs_CustomTooltip.tooltip.addClass("right")
        } else {
            lcs_CustomTooltip.tooltip.removeClass("right")
        }
        if (b < 0) {
            var b = lcs_CustomTooltip.target.offset().top + lcs_CustomTooltip.target.outerHeight(false);
            lcs_CustomTooltip.tooltip.addClass("top")
        } else {
            lcs_CustomTooltip.tooltip.removeClass("top")
        }
        lcs_CustomTooltip.tooltip.css({
            left: a,
            top: b
        }).animate({
            top: "+=10",
            opacity: 0.9
        }, 50)
    }
});
/*! jQuery UI - v1.12.1 - 2016-09-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */

(function(t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery)
}
)(function(t) {
    function e(t) {
        for (var e = t.css("visibility"); "inherit" === e; )
            t = t.parent(),
            e = t.css("visibility");
        return "hidden" !== e
    }
    function i(t) {
        for (var e, i; t.length && t[0] !== document; ) {
            if (e = t.css("position"),
            ("absolute" === e || "relative" === e || "fixed" === e) && (i = parseInt(t.css("zIndex"), 10),
            !isNaN(i) && 0 !== i))
                return i;
            t = t.parent()
        }
        return 0
    }
    function s() {
        this._curInst = null,
        this._keyEvent = !1,
        this._disabledInputs = [],
        this._datepickerShowing = !1,
        this._inDialog = !1,
        this._mainDivId = "ui-datepicker-div",
        this._inlineClass = "ui-datepicker-inline",
        this._appendClass = "ui-datepicker-append",
        this._triggerClass = "ui-datepicker-trigger",
        this._dialogClass = "ui-datepicker-dialog",
        this._disableClass = "ui-datepicker-disabled",
        this._unselectableClass = "ui-datepicker-unselectable",
        this._currentClass = "ui-datepicker-current-day",
        this._dayOverClass = "ui-datepicker-days-cell-over",
        this.regional = [],
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        },
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        },
        t.extend(this._defaults, this.regional[""]),
        this.regional.en = t.extend(!0, {}, this.regional[""]),
        this.regional["en-US"] = t.extend(!0, {}, this.regional.en),
        this.dpDiv = n(t("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    }
    function n(e) {
        var i = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return e.on("mouseout", i, function() {
            t(this).removeClass("ui-state-hover"),
            -1 !== this.className.indexOf("ui-datepicker-prev") && t(this).removeClass("ui-datepicker-prev-hover"),
            -1 !== this.className.indexOf("ui-datepicker-next") && t(this).removeClass("ui-datepicker-next-hover")
        }).on("mouseover", i, o)
    }
    function o() {
        t.datepicker._isDisabledDatepicker(m.inline ? m.dpDiv.parent()[0] : m.input[0]) || (t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
        t(this).addClass("ui-state-hover"),
        -1 !== this.className.indexOf("ui-datepicker-prev") && t(this).addClass("ui-datepicker-prev-hover"),
        -1 !== this.className.indexOf("ui-datepicker-next") && t(this).addClass("ui-datepicker-next-hover"))
    }
    function a(e, i) {
        t.extend(e, i);
        for (var s in i)
            null == i[s] && (e[s] = i[s]);
        return e
    }
    function r(t) {
        return function() {
            var e = this.element.val();
            t.apply(this, arguments),
            this._refresh(),
            e !== this.element.val() && this._trigger("change")
        }
    }
    t.ui = t.ui || {},
    t.ui.version = "1.12.1";
    var h = 0
      , l = Array.prototype.slice;
    t.cleanData = function(e) {
        return function(i) {
            var s, n, o;
            for (o = 0; null != (n = i[o]); o++)
                try {
                    s = t._data(n, "events"),
                    s && s.remove && t(n).triggerHandler("remove")
                } catch (a) {}
            e(i)
        }
    }(t.cleanData),
    t.widget = function(e, i, s) {
        var n, o, a, r = {}, h = e.split(".")[0];
        e = e.split(".")[1];
        var l = h + "-" + e;
        return s || (s = i,
        i = t.Widget),
        t.isArray(s) && (s = t.extend.apply(null, [{}].concat(s))),
        t.expr[":"][l.toLowerCase()] = function(e) {
            return !!t.data(e, l)
        }
        ,
        t[h] = t[h] || {},
        n = t[h][e],
        o = t[h][e] = function(t, e) {
            return this._createWidget ? (arguments.length && this._createWidget(t, e),
            void 0) : new o(t,e)
        }
        ,
        t.extend(o, n, {
            version: s.version,
            _proto: t.extend({}, s),
            _childConstructors: []
        }),
        a = new i,
        a.options = t.widget.extend({}, a.options),
        t.each(s, function(e, s) {
            return t.isFunction(s) ? (r[e] = function() {
                function t() {
                    return i.prototype[e].apply(this, arguments)
                }
                function n(t) {
                    return i.prototype[e].apply(this, t)
                }
                return function() {
                    var e, i = this._super, o = this._superApply;
                    return this._super = t,
                    this._superApply = n,
                    e = s.apply(this, arguments),
                    this._super = i,
                    this._superApply = o,
                    e
                }
            }(),
            void 0) : (r[e] = s,
            void 0)
        }),
        o.prototype = t.widget.extend(a, {
            widgetEventPrefix: n ? a.widgetEventPrefix || e : e
        }, r, {
            constructor: o,
            namespace: h,
            widgetName: e,
            widgetFullName: l
        }),
        n ? (t.each(n._childConstructors, function(e, i) {
            var s = i.prototype;
            t.widget(s.namespace + "." + s.widgetName, o, i._proto)
        }),
        delete n._childConstructors) : i._childConstructors.push(o),
        t.widget.bridge(e, o),
        o
    }
    ,
    t.widget.extend = function(e) {
        for (var i, s, n = l.call(arguments, 1), o = 0, a = n.length; a > o; o++)
            for (i in n[o])
                s = n[o][i],
                n[o].hasOwnProperty(i) && void 0 !== s && (e[i] = t.isPlainObject(s) ? t.isPlainObject(e[i]) ? t.widget.extend({}, e[i], s) : t.widget.extend({}, s) : s);
        return e
    }
    ,
    t.widget.bridge = function(e, i) {
        var s = i.prototype.widgetFullName || e;
        t.fn[e] = function(n) {
            var o = "string" == typeof n
              , a = l.call(arguments, 1)
              , r = this;
            return o ? this.length || "instance" !== n ? this.each(function() {
                var i, o = t.data(this, s);
                return "instance" === n ? (r = o,
                !1) : o ? t.isFunction(o[n]) && "_" !== n.charAt(0) ? (i = o[n].apply(o, a),
                i !== o && void 0 !== i ? (r = i && i.jquery ? r.pushStack(i.get()) : i,
                !1) : void 0) : t.error("no such method '" + n + "' for " + e + " widget instance") : t.error("cannot call methods on " + e + " prior to initialization; " + "attempted to call method '" + n + "'")
            }) : r = void 0 : (a.length && (n = t.widget.extend.apply(null, [n].concat(a))),
            this.each(function() {
                var e = t.data(this, s);
                e ? (e.option(n || {}),
                e._init && e._init()) : t.data(this, s, new i(n,this))
            })),
            r
        }
    }
    ,
    t.Widget = function() {}
    ,
    t.Widget._childConstructors = [],
    t.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            classes: {},
            disabled: !1,
            create: null
        },
        _createWidget: function(e, i) {
            i = t(i || this.defaultElement || this)[0],
            this.element = t(i),
            this.uuid = h++,
            this.eventNamespace = "." + this.widgetName + this.uuid,
            this.bindings = t(),
            this.hoverable = t(),
            this.focusable = t(),
            this.classesElementLookup = {},
            i !== this && (t.data(i, this.widgetFullName, this),
            this._on(!0, this.element, {
                remove: function(t) {
                    t.target === i && this.destroy()
                }
            }),
            this.document = t(i.style ? i.ownerDocument : i.document || i),
            this.window = t(this.document[0].defaultView || this.document[0].parentWindow)),
            this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e),
            this._create(),
            this.options.disabled && this._setOptionDisabled(this.options.disabled),
            this._trigger("create", null, this._getCreateEventData()),
            this._init()
        },
        _getCreateOptions: function() {
            return {}
        },
        _getCreateEventData: t.noop,
        _create: t.noop,
        _init: t.noop,
        destroy: function() {
            var e = this;
            this._destroy(),
            t.each(this.classesElementLookup, function(t, i) {
                e._removeClass(i, t)
            }),
            this.element.off(this.eventNamespace).removeData(this.widgetFullName),
            this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
            this.bindings.off(this.eventNamespace)
        },
        _destroy: t.noop,
        widget: function() {
            return this.element
        },
        option: function(e, i) {
            var s, n, o, a = e;
            if (0 === arguments.length)
                return t.widget.extend({}, this.options);
            if ("string" == typeof e)
                if (a = {},
                s = e.split("."),
                e = s.shift(),
                s.length) {
                    for (n = a[e] = t.widget.extend({}, this.options[e]),
                    o = 0; s.length - 1 > o; o++)
                        n[s[o]] = n[s[o]] || {},
                        n = n[s[o]];
                    if (e = s.pop(),
                    1 === arguments.length)
                        return void 0 === n[e] ? null : n[e];
                    n[e] = i
                } else {
                    if (1 === arguments.length)
                        return void 0 === this.options[e] ? null : this.options[e];
                    a[e] = i
                }
            return this._setOptions(a),
            this
        },
        _setOptions: function(t) {
            var e;
            for (e in t)
                this._setOption(e, t[e]);
            return this
        },
        _setOption: function(t, e) {
            return "classes" === t && this._setOptionClasses(e),
            this.options[t] = e,
            "disabled" === t && this._setOptionDisabled(e),
            this
        },
        _setOptionClasses: function(e) {
            var i, s, n;
            for (i in e)
                n = this.classesElementLookup[i],
                e[i] !== this.options.classes[i] && n && n.length && (s = t(n.get()),
                this._removeClass(n, i),
                s.addClass(this._classes({
                    element: s,
                    keys: i,
                    classes: e,
                    add: !0
                })))
        },
        _setOptionDisabled: function(t) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!t),
            t && (this._removeClass(this.hoverable, null, "ui-state-hover"),
            this._removeClass(this.focusable, null, "ui-state-focus"))
        },
        enable: function() {
            return this._setOptions({
                disabled: !1
            })
        },
        disable: function() {
            return this._setOptions({
                disabled: !0
            })
        },
        _classes: function(e) {
            function i(i, o) {
                var a, r;
                for (r = 0; i.length > r; r++)
                    a = n.classesElementLookup[i[r]] || t(),
                    a = e.add ? t(t.unique(a.get().concat(e.element.get()))) : t(a.not(e.element).get()),
                    n.classesElementLookup[i[r]] = a,
                    s.push(i[r]),
                    o && e.classes[i[r]] && s.push(e.classes[i[r]])
            }
            var s = []
              , n = this;
            return e = t.extend({
                element: this.element,
                classes: this.options.classes || {}
            }, e),
            this._on(e.element, {
                remove: "_untrackClassesElement"
            }),
            e.keys && i(e.keys.match(/\S+/g) || [], !0),
            e.extra && i(e.extra.match(/\S+/g) || []),
            s.join(" ")
        },
        _untrackClassesElement: function(e) {
            var i = this;
            t.each(i.classesElementLookup, function(s, n) {
                -1 !== t.inArray(e.target, n) && (i.classesElementLookup[s] = t(n.not(e.target).get()))
            })
        },
        _removeClass: function(t, e, i) {
            return this._toggleClass(t, e, i, !1)
        },
        _addClass: function(t, e, i) {
            return this._toggleClass(t, e, i, !0)
        },
        _toggleClass: function(t, e, i, s) {
            s = "boolean" == typeof s ? s : i;
            var n = "string" == typeof t || null === t
              , o = {
                extra: n ? e : i,
                keys: n ? t : e,
                element: n ? this.element : t,
                add: s
            };
            return o.element.toggleClass(this._classes(o), s),
            this
        },
        _on: function(e, i, s) {
            var n, o = this;
            "boolean" != typeof e && (s = i,
            i = e,
            e = !1),
            s ? (i = n = t(i),
            this.bindings = this.bindings.add(i)) : (s = i,
            i = this.element,
            n = this.widget()),
            t.each(s, function(s, a) {
                function r() {
                    return e || o.options.disabled !== !0 && !t(this).hasClass("ui-state-disabled") ? ("string" == typeof a ? o[a] : a).apply(o, arguments) : void 0
                }
                "string" != typeof a && (r.guid = a.guid = a.guid || r.guid || t.guid++);
                var h = s.match(/^([\w:-]*)\s*(.*)$/)
                  , l = h[1] + o.eventNamespace
                  , c = h[2];
                c ? n.on(l, c, r) : i.on(l, r)
            })
        },
        _off: function(e, i) {
            i = (i || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
            e.off(i).off(i),
            this.bindings = t(this.bindings.not(e).get()),
            this.focusable = t(this.focusable.not(e).get()),
            this.hoverable = t(this.hoverable.not(e).get())
        },
        _delay: function(t, e) {
            function i() {
                return ("string" == typeof t ? s[t] : t).apply(s, arguments)
            }
            var s = this;
            return setTimeout(i, e || 0)
        },
        _hoverable: function(e) {
            this.hoverable = this.hoverable.add(e),
            this._on(e, {
                mouseenter: function(e) {
                    this._addClass(t(e.currentTarget), null, "ui-state-hover")
                },
                mouseleave: function(e) {
                    this._removeClass(t(e.currentTarget), null, "ui-state-hover")
                }
            })
        },
        _focusable: function(e) {
            this.focusable = this.focusable.add(e),
            this._on(e, {
                focusin: function(e) {
                    this._addClass(t(e.currentTarget), null, "ui-state-focus")
                },
                focusout: function(e) {
                    this._removeClass(t(e.currentTarget), null, "ui-state-focus")
                }
            })
        },
        _trigger: function(e, i, s) {
            var n, o, a = this.options[e];
            if (s = s || {},
            i = t.Event(i),
            i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase(),
            i.target = this.element[0],
            o = i.originalEvent)
                for (n in o)
                    n in i || (i[n] = o[n]);
            return this.element.trigger(i, s),
            !(t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented())
        }
    },
    t.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(e, i) {
        t.Widget.prototype["_" + e] = function(s, n, o) {
            "string" == typeof n && (n = {
                effect: n
            });
            var a, r = n ? n === !0 || "number" == typeof n ? i : n.effect || i : e;
            n = n || {},
            "number" == typeof n && (n = {
                duration: n
            }),
            a = !t.isEmptyObject(n),
            n.complete = o,
            n.delay && s.delay(n.delay),
            a && t.effects && t.effects.effect[r] ? s[e](n) : r !== e && s[r] ? s[r](n.duration, n.easing, o) : s.queue(function(i) {
                t(this)[e](),
                o && o.call(s[0]),
                i()
            })
        }
    }),
    t.widget,
    function() {
        function e(t, e, i) {
            return [parseFloat(t[0]) * (u.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (u.test(t[1]) ? i / 100 : 1)]
        }
        function i(e, i) {
            return parseInt(t.css(e, i), 10) || 0
        }
        function s(e) {
            var i = e[0];
            return 9 === i.nodeType ? {
                width: e.width(),
                height: e.height(),
                offset: {
                    top: 0,
                    left: 0
                }
            } : t.isWindow(i) ? {
                width: e.width(),
                height: e.height(),
                offset: {
                    top: e.scrollTop(),
                    left: e.scrollLeft()
                }
            } : i.preventDefault ? {
                width: 0,
                height: 0,
                offset: {
                    top: i.pageY,
                    left: i.pageX
                }
            } : {
                width: e.outerWidth(),
                height: e.outerHeight(),
                offset: e.offset()
            }
        }
        var n, o = Math.max, a = Math.abs, r = /left|center|right/, h = /top|center|bottom/, l = /[\+\-]\d+(\.[\d]+)?%?/, c = /^\w+/, u = /%$/, d = t.fn.position;
        t.position = {
            scrollbarWidth: function() {
                if (void 0 !== n)
                    return n;
                var e, i, s = t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), o = s.children()[0];
                return t("body").append(s),
                e = o.offsetWidth,
                s.css("overflow", "scroll"),
                i = o.offsetWidth,
                e === i && (i = s[0].clientWidth),
                s.remove(),
                n = e - i
            },
            getScrollInfo: function(e) {
                var i = e.isWindow || e.isDocument ? "" : e.element.css("overflow-x")
                  , s = e.isWindow || e.isDocument ? "" : e.element.css("overflow-y")
                  , n = "scroll" === i || "auto" === i && e.width < e.element[0].scrollWidth
                  , o = "scroll" === s || "auto" === s && e.height < e.element[0].scrollHeight;
                return {
                    width: o ? t.position.scrollbarWidth() : 0,
                    height: n ? t.position.scrollbarWidth() : 0
                }
            },
            getWithinInfo: function(e) {
                var i = t(e || window)
                  , s = t.isWindow(i[0])
                  , n = !!i[0] && 9 === i[0].nodeType
                  , o = !s && !n;
                return {
                    element: i,
                    isWindow: s,
                    isDocument: n,
                    offset: o ? t(e).offset() : {
                        left: 0,
                        top: 0
                    },
                    scrollLeft: i.scrollLeft(),
                    scrollTop: i.scrollTop(),
                    width: i.outerWidth(),
                    height: i.outerHeight()
                }
            }
        },
        t.fn.position = function(n) {
            if (!n || !n.of)
                return d.apply(this, arguments);
            n = t.extend({}, n);
            var u, p, f, g, m, _, v = t(n.of), b = t.position.getWithinInfo(n.within), y = t.position.getScrollInfo(b), w = (n.collision || "flip").split(" "), k = {};
            return _ = s(v),
            v[0].preventDefault && (n.at = "left top"),
            p = _.width,
            f = _.height,
            g = _.offset,
            m = t.extend({}, g),
            t.each(["my", "at"], function() {
                var t, e, i = (n[this] || "").split(" ");
                1 === i.length && (i = r.test(i[0]) ? i.concat(["center"]) : h.test(i[0]) ? ["center"].concat(i) : ["center", "center"]),
                i[0] = r.test(i[0]) ? i[0] : "center",
                i[1] = h.test(i[1]) ? i[1] : "center",
                t = l.exec(i[0]),
                e = l.exec(i[1]),
                k[this] = [t ? t[0] : 0, e ? e[0] : 0],
                n[this] = [c.exec(i[0])[0], c.exec(i[1])[0]]
            }),
            1 === w.length && (w[1] = w[0]),
            "right" === n.at[0] ? m.left += p : "center" === n.at[0] && (m.left += p / 2),
            "bottom" === n.at[1] ? m.top += f : "center" === n.at[1] && (m.top += f / 2),
            u = e(k.at, p, f),
            m.left += u[0],
            m.top += u[1],
            this.each(function() {
                var s, r, h = t(this), l = h.outerWidth(), c = h.outerHeight(), d = i(this, "marginLeft"), _ = i(this, "marginTop"), x = l + d + i(this, "marginRight") + y.width, C = c + _ + i(this, "marginBottom") + y.height, D = t.extend({}, m), I = e(k.my, h.outerWidth(), h.outerHeight());
                "right" === n.my[0] ? D.left -= l : "center" === n.my[0] && (D.left -= l / 2),
                "bottom" === n.my[1] ? D.top -= c : "center" === n.my[1] && (D.top -= c / 2),
                D.left += I[0],
                D.top += I[1],
                s = {
                    marginLeft: d,
                    marginTop: _
                },
                t.each(["left", "top"], function(e, i) {
                    t.ui.position[w[e]] && t.ui.position[w[e]][i](D, {
                        targetWidth: p,
                        targetHeight: f,
                        elemWidth: l,
                        elemHeight: c,
                        collisionPosition: s,
                        collisionWidth: x,
                        collisionHeight: C,
                        offset: [u[0] + I[0], u[1] + I[1]],
                        my: n.my,
                        at: n.at,
                        within: b,
                        elem: h
                    })
                }),
                n.using && (r = function(t) {
                    var e = g.left - D.left
                      , i = e + p - l
                      , s = g.top - D.top
                      , r = s + f - c
                      , u = {
                        target: {
                            element: v,
                            left: g.left,
                            top: g.top,
                            width: p,
                            height: f
                        },
                        element: {
                            element: h,
                            left: D.left,
                            top: D.top,
                            width: l,
                            height: c
                        },
                        horizontal: 0 > i ? "left" : e > 0 ? "right" : "center",
                        vertical: 0 > r ? "top" : s > 0 ? "bottom" : "middle"
                    };
                    l > p && p > a(e + i) && (u.horizontal = "center"),
                    c > f && f > a(s + r) && (u.vertical = "middle"),
                    u.important = o(a(e), a(i)) > o(a(s), a(r)) ? "horizontal" : "vertical",
                    n.using.call(this, t, u)
                }
                ),
                h.offset(t.extend(D, {
                    using: r
                }))
            })
        }
        ,
        t.ui.position = {
            fit: {
                left: function(t, e) {
                    var i, s = e.within, n = s.isWindow ? s.scrollLeft : s.offset.left, a = s.width, r = t.left - e.collisionPosition.marginLeft, h = n - r, l = r + e.collisionWidth - a - n;
                    e.collisionWidth > a ? h > 0 && 0 >= l ? (i = t.left + h + e.collisionWidth - a - n,
                    t.left += h - i) : t.left = l > 0 && 0 >= h ? n : h > l ? n + a - e.collisionWidth : n : h > 0 ? t.left += h : l > 0 ? t.left -= l : t.left = o(t.left - r, t.left)
                },
                top: function(t, e) {
                    var i, s = e.within, n = s.isWindow ? s.scrollTop : s.offset.top, a = e.within.height, r = t.top - e.collisionPosition.marginTop, h = n - r, l = r + e.collisionHeight - a - n;
                    e.collisionHeight > a ? h > 0 && 0 >= l ? (i = t.top + h + e.collisionHeight - a - n,
                    t.top += h - i) : t.top = l > 0 && 0 >= h ? n : h > l ? n + a - e.collisionHeight : n : h > 0 ? t.top += h : l > 0 ? t.top -= l : t.top = o(t.top - r, t.top)
                }
            },
            flip: {
                left: function(t, e) {
                    var i, s, n = e.within, o = n.offset.left + n.scrollLeft, r = n.width, h = n.isWindow ? n.scrollLeft : n.offset.left, l = t.left - e.collisionPosition.marginLeft, c = l - h, u = l + e.collisionWidth - r - h, d = "left" === e.my[0] ? -e.elemWidth : "right" === e.my[0] ? e.elemWidth : 0, p = "left" === e.at[0] ? e.targetWidth : "right" === e.at[0] ? -e.targetWidth : 0, f = -2 * e.offset[0];
                    0 > c ? (i = t.left + d + p + f + e.collisionWidth - r - o,
                    (0 > i || a(c) > i) && (t.left += d + p + f)) : u > 0 && (s = t.left - e.collisionPosition.marginLeft + d + p + f - h,
                    (s > 0 || u > a(s)) && (t.left += d + p + f))
                },
                top: function(t, e) {
                    var i, s, n = e.within, o = n.offset.top + n.scrollTop, r = n.height, h = n.isWindow ? n.scrollTop : n.offset.top, l = t.top - e.collisionPosition.marginTop, c = l - h, u = l + e.collisionHeight - r - h, d = "top" === e.my[1], p = d ? -e.elemHeight : "bottom" === e.my[1] ? e.elemHeight : 0, f = "top" === e.at[1] ? e.targetHeight : "bottom" === e.at[1] ? -e.targetHeight : 0, g = -2 * e.offset[1];
                    0 > c ? (s = t.top + p + f + g + e.collisionHeight - r - o,
                    (0 > s || a(c) > s) && (t.top += p + f + g)) : u > 0 && (i = t.top - e.collisionPosition.marginTop + p + f + g - h,
                    (i > 0 || u > a(i)) && (t.top += p + f + g))
                }
            },
            flipfit: {
                left: function() {
                    t.ui.position.flip.left.apply(this, arguments),
                    t.ui.position.fit.left.apply(this, arguments)
                },
                top: function() {
                    t.ui.position.flip.top.apply(this, arguments),
                    t.ui.position.fit.top.apply(this, arguments)
                }
            }
        }
    }(),
    t.ui.position,
    t.extend(t.expr[":"], {
        data: t.expr.createPseudo ? t.expr.createPseudo(function(e) {
            return function(i) {
                return !!t.data(i, e)
            }
        }) : function(e, i, s) {
            return !!t.data(e, s[3])
        }
    }),
    t.fn.extend({
        disableSelection: function() {
            var t = "onselectstart"in document.createElement("div") ? "selectstart" : "mousedown";
            return function() {
                return this.on(t + ".ui-disableSelection", function(t) {
                    t.preventDefault()
                })
            }
        }(),
        enableSelection: function() {
            return this.off(".ui-disableSelection")
        }
    });
    var c = "ui-effects-"
      , u = "ui-effects-style"
      , d = "ui-effects-animated"
      , p = t;
    t.effects = {
        effect: {}
    },
    function(t, e) {
        function i(t, e, i) {
            var s = u[e.type] || {};
            return null == t ? i || !e.def ? null : e.def : (t = s.floor ? ~~t : parseFloat(t),
            isNaN(t) ? e.def : s.mod ? (t + s.mod) % s.mod : 0 > t ? 0 : t > s.max ? s.max : t)
        }
        function s(i) {
            var s = l()
              , n = s._rgba = [];
            return i = i.toLowerCase(),
            f(h, function(t, o) {
                var a, r = o.re.exec(i), h = r && o.parse(r), l = o.space || "rgba";
                return h ? (a = s[l](h),
                s[c[l].cache] = a[c[l].cache],
                n = s._rgba = a._rgba,
                !1) : e
            }),
            n.length ? ("0,0,0,0" === n.join() && t.extend(n, o.transparent),
            s) : o[i]
        }
        function n(t, e, i) {
            return i = (i + 1) % 1,
            1 > 6 * i ? t + 6 * (e - t) * i : 1 > 2 * i ? e : 2 > 3 * i ? t + 6 * (e - t) * (2 / 3 - i) : t
        }
        var o, a = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", r = /^([\-+])=\s*(\d+\.?\d*)/, h = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function(t) {
                return [t[1], t[2], t[3], t[4]]
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function(t) {
                return [2.55 * t[1], 2.55 * t[2], 2.55 * t[3], t[4]]
            }
        }, {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function(t) {
                return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)]
            }
        }, {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function(t) {
                return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)]
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function(t) {
                return [t[1], t[2] / 100, t[3] / 100, t[4]]
            }
        }], l = t.Color = function(e, i, s, n) {
            return new t.Color.fn.parse(e,i,s,n)
        }
        , c = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },
            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        }, u = {
            "byte": {
                floor: !0,
                max: 255
            },
            percent: {
                max: 1
            },
            degrees: {
                mod: 360,
                floor: !0
            }
        }, d = l.support = {}, p = t("<p>")[0], f = t.each;
        p.style.cssText = "background-color:rgba(1,1,1,.5)",
        d.rgba = p.style.backgroundColor.indexOf("rgba") > -1,
        f(c, function(t, e) {
            e.cache = "_" + t,
            e.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        }),
        l.fn = t.extend(l.prototype, {
            parse: function(n, a, r, h) {
                if (n === e)
                    return this._rgba = [null, null, null, null],
                    this;
                (n.jquery || n.nodeType) && (n = t(n).css(a),
                a = e);
                var u = this
                  , d = t.type(n)
                  , p = this._rgba = [];
                return a !== e && (n = [n, a, r, h],
                d = "array"),
                "string" === d ? this.parse(s(n) || o._default) : "array" === d ? (f(c.rgba.props, function(t, e) {
                    p[e.idx] = i(n[e.idx], e)
                }),
                this) : "object" === d ? (n instanceof l ? f(c, function(t, e) {
                    n[e.cache] && (u[e.cache] = n[e.cache].slice())
                }) : f(c, function(e, s) {
                    var o = s.cache;
                    f(s.props, function(t, e) {
                        if (!u[o] && s.to) {
                            if ("alpha" === t || null == n[t])
                                return;
                            u[o] = s.to(u._rgba)
                        }
                        u[o][e.idx] = i(n[t], e, !0)
                    }),
                    u[o] && 0 > t.inArray(null, u[o].slice(0, 3)) && (u[o][3] = 1,
                    s.from && (u._rgba = s.from(u[o])))
                }),
                this) : e
            },
            is: function(t) {
                var i = l(t)
                  , s = !0
                  , n = this;
                return f(c, function(t, o) {
                    var a, r = i[o.cache];
                    return r && (a = n[o.cache] || o.to && o.to(n._rgba) || [],
                    f(o.props, function(t, i) {
                        return null != r[i.idx] ? s = r[i.idx] === a[i.idx] : e
                    })),
                    s
                }),
                s
            },
            _space: function() {
                var t = []
                  , e = this;
                return f(c, function(i, s) {
                    e[s.cache] && t.push(i)
                }),
                t.pop()
            },
            transition: function(t, e) {
                var s = l(t)
                  , n = s._space()
                  , o = c[n]
                  , a = 0 === this.alpha() ? l("transparent") : this
                  , r = a[o.cache] || o.to(a._rgba)
                  , h = r.slice();
                return s = s[o.cache],
                f(o.props, function(t, n) {
                    var o = n.idx
                      , a = r[o]
                      , l = s[o]
                      , c = u[n.type] || {};
                    null !== l && (null === a ? h[o] = l : (c.mod && (l - a > c.mod / 2 ? a += c.mod : a - l > c.mod / 2 && (a -= c.mod)),
                    h[o] = i((l - a) * e + a, n)))
                }),
                this[n](h)
            },
            blend: function(e) {
                if (1 === this._rgba[3])
                    return this;
                var i = this._rgba.slice()
                  , s = i.pop()
                  , n = l(e)._rgba;
                return l(t.map(i, function(t, e) {
                    return (1 - s) * n[e] + s * t
                }))
            },
            toRgbaString: function() {
                var e = "rgba("
                  , i = t.map(this._rgba, function(t, e) {
                    return null == t ? e > 2 ? 1 : 0 : t
                });
                return 1 === i[3] && (i.pop(),
                e = "rgb("),
                e + i.join() + ")"
            },
            toHslaString: function() {
                var e = "hsla("
                  , i = t.map(this.hsla(), function(t, e) {
                    return null == t && (t = e > 2 ? 1 : 0),
                    e && 3 > e && (t = Math.round(100 * t) + "%"),
                    t
                });
                return 1 === i[3] && (i.pop(),
                e = "hsl("),
                e + i.join() + ")"
            },
            toHexString: function(e) {
                var i = this._rgba.slice()
                  , s = i.pop();
                return e && i.push(~~(255 * s)),
                "#" + t.map(i, function(t) {
                    return t = (t || 0).toString(16),
                    1 === t.length ? "0" + t : t
                }).join("")
            },
            toString: function() {
                return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
            }
        }),
        l.fn.parse.prototype = l.fn,
        c.hsla.to = function(t) {
            if (null == t[0] || null == t[1] || null == t[2])
                return [null, null, null, t[3]];
            var e, i, s = t[0] / 255, n = t[1] / 255, o = t[2] / 255, a = t[3], r = Math.max(s, n, o), h = Math.min(s, n, o), l = r - h, c = r + h, u = .5 * c;
            return e = h === r ? 0 : s === r ? 60 * (n - o) / l + 360 : n === r ? 60 * (o - s) / l + 120 : 60 * (s - n) / l + 240,
            i = 0 === l ? 0 : .5 >= u ? l / c : l / (2 - c),
            [Math.round(e) % 360, i, u, null == a ? 1 : a]
        }
        ,
        c.hsla.from = function(t) {
            if (null == t[0] || null == t[1] || null == t[2])
                return [null, null, null, t[3]];
            var e = t[0] / 360
              , i = t[1]
              , s = t[2]
              , o = t[3]
              , a = .5 >= s ? s * (1 + i) : s + i - s * i
              , r = 2 * s - a;
            return [Math.round(255 * n(r, a, e + 1 / 3)), Math.round(255 * n(r, a, e)), Math.round(255 * n(r, a, e - 1 / 3)), o]
        }
        ,
        f(c, function(s, n) {
            var o = n.props
              , a = n.cache
              , h = n.to
              , c = n.from;
            l.fn[s] = function(s) {
                if (h && !this[a] && (this[a] = h(this._rgba)),
                s === e)
                    return this[a].slice();
                var n, r = t.type(s), u = "array" === r || "object" === r ? s : arguments, d = this[a].slice();
                return f(o, function(t, e) {
                    var s = u["object" === r ? t : e.idx];
                    null == s && (s = d[e.idx]),
                    d[e.idx] = i(s, e)
                }),
                c ? (n = l(c(d)),
                n[a] = d,
                n) : l(d)
            }
            ,
            f(o, function(e, i) {
                l.fn[e] || (l.fn[e] = function(n) {
                    var o, a = t.type(n), h = "alpha" === e ? this._hsla ? "hsla" : "rgba" : s, l = this[h](), c = l[i.idx];
                    return "undefined" === a ? c : ("function" === a && (n = n.call(this, c),
                    a = t.type(n)),
                    null == n && i.empty ? this : ("string" === a && (o = r.exec(n),
                    o && (n = c + parseFloat(o[2]) * ("+" === o[1] ? 1 : -1))),
                    l[i.idx] = n,
                    this[h](l)))
                }
                )
            })
        }),
        l.hook = function(e) {
            var i = e.split(" ");
            f(i, function(e, i) {
                t.cssHooks[i] = {
                    set: function(e, n) {
                        var o, a, r = "";
                        if ("transparent" !== n && ("string" !== t.type(n) || (o = s(n)))) {
                            if (n = l(o || n),
                            !d.rgba && 1 !== n._rgba[3]) {
                                for (a = "backgroundColor" === i ? e.parentNode : e; ("" === r || "transparent" === r) && a && a.style; )
                                    try {
                                        r = t.css(a, "backgroundColor"),
                                        a = a.parentNode
                                    } catch (h) {}
                                n = n.blend(r && "transparent" !== r ? r : "_default")
                            }
                            n = n.toRgbaString()
                        }
                        try {
                            e.style[i] = n
                        } catch (h) {}
                    }
                },
                t.fx.step[i] = function(e) {
                    e.colorInit || (e.start = l(e.elem, i),
                    e.end = l(e.end),
                    e.colorInit = !0),
                    t.cssHooks[i].set(e.elem, e.start.transition(e.end, e.pos))
                }
            })
        }
        ,
        l.hook(a),
        t.cssHooks.borderColor = {
            expand: function(t) {
                var e = {};
                return f(["Top", "Right", "Bottom", "Left"], function(i, s) {
                    e["border" + s + "Color"] = t
                }),
                e
            }
        },
        o = t.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    }(p),
    function() {
        function e(e) {
            var i, s, n = e.ownerDocument.defaultView ? e.ownerDocument.defaultView.getComputedStyle(e, null) : e.currentStyle, o = {};
            if (n && n.length && n[0] && n[n[0]])
                for (s = n.length; s--; )
                    i = n[s],
                    "string" == typeof n[i] && (o[t.camelCase(i)] = n[i]);
            else
                for (i in n)
                    "string" == typeof n[i] && (o[i] = n[i]);
            return o
        }
        function i(e, i) {
            var s, o, a = {};
            for (s in i)
                o = i[s],
                e[s] !== o && (n[s] || (t.fx.step[s] || !isNaN(parseFloat(o))) && (a[s] = o));
            return a
        }
        var s = ["add", "remove", "toggle"]
          , n = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        t.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(e, i) {
            t.fx.step[i] = function(t) {
                ("none" !== t.end && !t.setAttr || 1 === t.pos && !t.setAttr) && (p.style(t.elem, i, t.end),
                t.setAttr = !0)
            }
        }),
        t.fn.addBack || (t.fn.addBack = function(t) {
            return this.add(null == t ? this.prevObject : this.prevObject.filter(t))
        }
        ),
        t.effects.animateClass = function(n, o, a, r) {
            var h = t.speed(o, a, r);
            return this.queue(function() {
                var o, a = t(this), r = a.attr("class") || "", l = h.children ? a.find("*").addBack() : a;
                l = l.map(function() {
                    var i = t(this);
                    return {
                        el: i,
                        start: e(this)
                    }
                }),
                o = function() {
                    t.each(s, function(t, e) {
                        n[e] && a[e + "Class"](n[e])
                    })
                }
                ,
                o(),
                l = l.map(function() {
                    return this.end = e(this.el[0]),
                    this.diff = i(this.start, this.end),
                    this
                }),
                a.attr("class", r),
                l = l.map(function() {
                    var e = this
                      , i = t.Deferred()
                      , s = t.extend({}, h, {
                        queue: !1,
                        complete: function() {
                            i.resolve(e)
                        }
                    });
                    return this.el.animate(this.diff, s),
                    i.promise()
                }),
                t.when.apply(t, l.get()).done(function() {
                    o(),
                    t.each(arguments, function() {
                        var e = this.el;
                        t.each(this.diff, function(t) {
                            e.css(t, "")
                        })
                    }),
                    h.complete.call(a[0])
                })
            })
        }
        ,
        t.fn.extend({
            addClass: function(e) {
                return function(i, s, n, o) {
                    return s ? t.effects.animateClass.call(this, {
                        add: i
                    }, s, n, o) : e.apply(this, arguments)
                }
            }(t.fn.addClass),
            removeClass: function(e) {
                return function(i, s, n, o) {
                    return arguments.length > 1 ? t.effects.animateClass.call(this, {
                        remove: i
                    }, s, n, o) : e.apply(this, arguments)
                }
            }(t.fn.removeClass),
            toggleClass: function(e) {
                return function(i, s, n, o, a) {
                    return "boolean" == typeof s || void 0 === s ? n ? t.effects.animateClass.call(this, s ? {
                        add: i
                    } : {
                        remove: i
                    }, n, o, a) : e.apply(this, arguments) : t.effects.animateClass.call(this, {
                        toggle: i
                    }, s, n, o)
                }
            }(t.fn.toggleClass),
            switchClass: function(e, i, s, n, o) {
                return t.effects.animateClass.call(this, {
                    add: i,
                    remove: e
                }, s, n, o)
            }
        })
    }(),
    function() {
        function e(e, i, s, n) {
            return t.isPlainObject(e) && (i = e,
            e = e.effect),
            e = {
                effect: e
            },
            null == i && (i = {}),
            t.isFunction(i) && (n = i,
            s = null,
            i = {}),
            ("number" == typeof i || t.fx.speeds[i]) && (n = s,
            s = i,
            i = {}),
            t.isFunction(s) && (n = s,
            s = null),
            i && t.extend(e, i),
            s = s || i.duration,
            e.duration = t.fx.off ? 0 : "number" == typeof s ? s : s in t.fx.speeds ? t.fx.speeds[s] : t.fx.speeds._default,
            e.complete = n || i.complete,
            e
        }
        function i(e) {
            return !e || "number" == typeof e || t.fx.speeds[e] ? !0 : "string" != typeof e || t.effects.effect[e] ? t.isFunction(e) ? !0 : "object" != typeof e || e.effect ? !1 : !0 : !0
        }
        function s(t, e) {
            var i = e.outerWidth()
              , s = e.outerHeight()
              , n = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/
              , o = n.exec(t) || ["", 0, i, s, 0];
            return {
                top: parseFloat(o[1]) || 0,
                right: "auto" === o[2] ? i : parseFloat(o[2]),
                bottom: "auto" === o[3] ? s : parseFloat(o[3]),
                left: parseFloat(o[4]) || 0
            }
        }
        t.expr && t.expr.filters && t.expr.filters.animated && (t.expr.filters.animated = function(e) {
            return function(i) {
                return !!t(i).data(d) || e(i)
            }
        }(t.expr.filters.animated)),
        t.uiBackCompat !== !1 && t.extend(t.effects, {
            save: function(t, e) {
                for (var i = 0, s = e.length; s > i; i++)
                    null !== e[i] && t.data(c + e[i], t[0].style[e[i]])
            },
            restore: function(t, e) {
                for (var i, s = 0, n = e.length; n > s; s++)
                    null !== e[s] && (i = t.data(c + e[s]),
                    t.css(e[s], i))
            },
            setMode: function(t, e) {
                return "toggle" === e && (e = t.is(":hidden") ? "show" : "hide"),
                e
            },
            createWrapper: function(e) {
                if (e.parent().is(".ui-effects-wrapper"))
                    return e.parent();
                var i = {
                    width: e.outerWidth(!0),
                    height: e.outerHeight(!0),
                    "float": e.css("float")
                }
                  , s = t("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                })
                  , n = {
                    width: e.width(),
                    height: e.height()
                }
                  , o = document.activeElement;
                try {
                    o.id
                } catch (a) {
                    o = document.body
                }
                return e.wrap(s),
                (e[0] === o || t.contains(e[0], o)) && t(o).trigger("focus"),
                s = e.parent(),
                "static" === e.css("position") ? (s.css({
                    position: "relative"
                }),
                e.css({
                    position: "relative"
                })) : (t.extend(i, {
                    position: e.css("position"),
                    zIndex: e.css("z-index")
                }),
                t.each(["top", "left", "bottom", "right"], function(t, s) {
                    i[s] = e.css(s),
                    isNaN(parseInt(i[s], 10)) && (i[s] = "auto")
                }),
                e.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })),
                e.css(n),
                s.css(i).show()
            },
            removeWrapper: function(e) {
                var i = document.activeElement;
                return e.parent().is(".ui-effects-wrapper") && (e.parent().replaceWith(e),
                (e[0] === i || t.contains(e[0], i)) && t(i).trigger("focus")),
                e
            }
        }),
        t.extend(t.effects, {
            version: "1.12.1",
            define: function(e, i, s) {
                return s || (s = i,
                i = "effect"),
                t.effects.effect[e] = s,
                t.effects.effect[e].mode = i,
                s
            },
            scaledDimensions: function(t, e, i) {
                if (0 === e)
                    return {
                        height: 0,
                        width: 0,
                        outerHeight: 0,
                        outerWidth: 0
                    };
                var s = "horizontal" !== i ? (e || 100) / 100 : 1
                  , n = "vertical" !== i ? (e || 100) / 100 : 1;
                return {
                    height: t.height() * n,
                    width: t.width() * s,
                    outerHeight: t.outerHeight() * n,
                    outerWidth: t.outerWidth() * s
                }
            },
            clipToBox: function(t) {
                return {
                    width: t.clip.right - t.clip.left,
                    height: t.clip.bottom - t.clip.top,
                    left: t.clip.left,
                    top: t.clip.top
                }
            },
            unshift: function(t, e, i) {
                var s = t.queue();
                e > 1 && s.splice.apply(s, [1, 0].concat(s.splice(e, i))),
                t.dequeue()
            },
            saveStyle: function(t) {
                t.data(u, t[0].style.cssText)
            },
            restoreStyle: function(t) {
                t[0].style.cssText = t.data(u) || "",
                t.removeData(u)
            },
            mode: function(t, e) {
                var i = t.is(":hidden");
                return "toggle" === e && (e = i ? "show" : "hide"),
                (i ? "hide" === e : "show" === e) && (e = "none"),
                e
            },
            getBaseline: function(t, e) {
                var i, s;
                switch (t[0]) {
                case "top":
                    i = 0;
                    break;
                case "middle":
                    i = .5;
                    break;
                case "bottom":
                    i = 1;
                    break;
                default:
                    i = t[0] / e.height
                }
                switch (t[1]) {
                case "left":
                    s = 0;
                    break;
                case "center":
                    s = .5;
                    break;
                case "right":
                    s = 1;
                    break;
                default:
                    s = t[1] / e.width
                }
                return {
                    x: s,
                    y: i
                }
            },
            createPlaceholder: function(e) {
                var i, s = e.css("position"), n = e.position();
                return e.css({
                    marginTop: e.css("marginTop"),
                    marginBottom: e.css("marginBottom"),
                    marginLeft: e.css("marginLeft"),
                    marginRight: e.css("marginRight")
                }).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),
                /^(static|relative)/.test(s) && (s = "absolute",
                i = t("<" + e[0].nodeName + ">").insertAfter(e).css({
                    display: /^(inline|ruby)/.test(e.css("display")) ? "inline-block" : "block",
                    visibility: "hidden",
                    marginTop: e.css("marginTop"),
                    marginBottom: e.css("marginBottom"),
                    marginLeft: e.css("marginLeft"),
                    marginRight: e.css("marginRight"),
                    "float": e.css("float")
                }).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"),
                e.data(c + "placeholder", i)),
                e.css({
                    position: s,
                    left: n.left,
                    top: n.top
                }),
                i
            },
            removePlaceholder: function(t) {
                var e = c + "placeholder"
                  , i = t.data(e);
                i && (i.remove(),
                t.removeData(e))
            },
            cleanUp: function(e) {
                t.effects.restoreStyle(e),
                t.effects.removePlaceholder(e)
            },
            setTransition: function(e, i, s, n) {
                return n = n || {},
                t.each(i, function(t, i) {
                    var o = e.cssUnit(i);
                    o[0] > 0 && (n[i] = o[0] * s + o[1])
                }),
                n
            }
        }),
        t.fn.extend({
            effect: function() {
                function i(e) {
                    function i() {
                        r.removeData(d),
                        t.effects.cleanUp(r),
                        "hide" === s.mode && r.hide(),
                        a()
                    }
                    function a() {
                        t.isFunction(h) && h.call(r[0]),
                        t.isFunction(e) && e()
                    }
                    var r = t(this);
                    s.mode = c.shift(),
                    t.uiBackCompat === !1 || o ? "none" === s.mode ? (r[l](),
                    a()) : n.call(r[0], s, i) : (r.is(":hidden") ? "hide" === l : "show" === l) ? (r[l](),
                    a()) : n.call(r[0], s, a)
                }
                var s = e.apply(this, arguments)
                  , n = t.effects.effect[s.effect]
                  , o = n.mode
                  , a = s.queue
                  , r = a || "fx"
                  , h = s.complete
                  , l = s.mode
                  , c = []
                  , u = function(e) {
                    var i = t(this)
                      , s = t.effects.mode(i, l) || o;
                    i.data(d, !0),
                    c.push(s),
                    o && ("show" === s || s === o && "hide" === s) && i.show(),
                    o && "none" === s || t.effects.saveStyle(i),
                    t.isFunction(e) && e()
                };
                return t.fx.off || !n ? l ? this[l](s.duration, h) : this.each(function() {
                    h && h.call(this)
                }) : a === !1 ? this.each(u).each(i) : this.queue(r, u).queue(r, i)
            },
            show: function(t) {
                return function(s) {
                    if (i(s))
                        return t.apply(this, arguments);
                    var n = e.apply(this, arguments);
                    return n.mode = "show",
                    this.effect.call(this, n)
                }
            }(t.fn.show),
            hide: function(t) {
                return function(s) {
                    if (i(s))
                        return t.apply(this, arguments);
                    var n = e.apply(this, arguments);
                    return n.mode = "hide",
                    this.effect.call(this, n)
                }
            }(t.fn.hide),
            toggle: function(t) {
                return function(s) {
                    if (i(s) || "boolean" == typeof s)
                        return t.apply(this, arguments);
                    var n = e.apply(this, arguments);
                    return n.mode = "toggle",
                    this.effect.call(this, n)
                }
            }(t.fn.toggle),
            cssUnit: function(e) {
                var i = this.css(e)
                  , s = [];
                return t.each(["em", "px", "%", "pt"], function(t, e) {
                    i.indexOf(e) > 0 && (s = [parseFloat(i), e])
                }),
                s
            },
            cssClip: function(t) {
                return t ? this.css("clip", "rect(" + t.top + "px " + t.right + "px " + t.bottom + "px " + t.left + "px)") : s(this.css("clip"), this)
            },
            transfer: function(e, i) {
                var s = t(this)
                  , n = t(e.to)
                  , o = "fixed" === n.css("position")
                  , a = t("body")
                  , r = o ? a.scrollTop() : 0
                  , h = o ? a.scrollLeft() : 0
                  , l = n.offset()
                  , c = {
                    top: l.top - r,
                    left: l.left - h,
                    height: n.innerHeight(),
                    width: n.innerWidth()
                }
                  , u = s.offset()
                  , d = t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({
                    top: u.top - r,
                    left: u.left - h,
                    height: s.innerHeight(),
                    width: s.innerWidth(),
                    position: o ? "fixed" : "absolute"
                }).animate(c, e.duration, e.easing, function() {
                    d.remove(),
                    t.isFunction(i) && i()
                })
            }
        }),
        t.fx.step.clip = function(e) {
            e.clipInit || (e.start = t(e.elem).cssClip(),
            "string" == typeof e.end && (e.end = s(e.end, e.elem)),
            e.clipInit = !0),
            t(e.elem).cssClip({
                top: e.pos * (e.end.top - e.start.top) + e.start.top,
                right: e.pos * (e.end.right - e.start.right) + e.start.right,
                bottom: e.pos * (e.end.bottom - e.start.bottom) + e.start.bottom,
                left: e.pos * (e.end.left - e.start.left) + e.start.left
            })
        }
    }(),
    function() {
        var e = {};
        t.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(t, i) {
            e[i] = function(e) {
                return Math.pow(e, t + 2)
            }
        }),
        t.extend(e, {
            Sine: function(t) {
                return 1 - Math.cos(t * Math.PI / 2)
            },
            Circ: function(t) {
                return 1 - Math.sqrt(1 - t * t)
            },
            Elastic: function(t) {
                return 0 === t || 1 === t ? t : -Math.pow(2, 8 * (t - 1)) * Math.sin((80 * (t - 1) - 7.5) * Math.PI / 15)
            },
            Back: function(t) {
                return t * t * (3 * t - 2)
            },
            Bounce: function(t) {
                for (var e, i = 4; ((e = Math.pow(2, --i)) - 1) / 11 > t; )
                    ;
                return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * e - 2) / 22 - t, 2)
            }
        }),
        t.each(e, function(e, i) {
            t.easing["easeIn" + e] = i,
            t.easing["easeOut" + e] = function(t) {
                return 1 - i(1 - t)
            }
            ,
            t.easing["easeInOut" + e] = function(t) {
                return .5 > t ? i(2 * t) / 2 : 1 - i(-2 * t + 2) / 2
            }
        })
    }();
    var f = t.effects;
    t.effects.define("blind", "hide", function(e, i) {
        var s = {
            up: ["bottom", "top"],
            vertical: ["bottom", "top"],
            down: ["top", "bottom"],
            left: ["right", "left"],
            horizontal: ["right", "left"],
            right: ["left", "right"]
        }
          , n = t(this)
          , o = e.direction || "up"
          , a = n.cssClip()
          , r = {
            clip: t.extend({}, a)
        }
          , h = t.effects.createPlaceholder(n);
        r.clip[s[o][0]] = r.clip[s[o][1]],
        "show" === e.mode && (n.cssClip(r.clip),
        h && h.css(t.effects.clipToBox(r)),
        r.clip = a),
        h && h.animate(t.effects.clipToBox(r), e.duration, e.easing),
        n.animate(r, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }),
    t.effects.define("bounce", function(e, i) {
        var s, n, o, a = t(this), r = e.mode, h = "hide" === r, l = "show" === r, c = e.direction || "up", u = e.distance, d = e.times || 5, p = 2 * d + (l || h ? 1 : 0), f = e.duration / p, g = e.easing, m = "up" === c || "down" === c ? "top" : "left", _ = "up" === c || "left" === c, v = 0, b = a.queue().length;
        for (t.effects.createPlaceholder(a),
        o = a.css(m),
        u || (u = a["top" === m ? "outerHeight" : "outerWidth"]() / 3),
        l && (n = {
            opacity: 1
        },
        n[m] = o,
        a.css("opacity", 0).css(m, _ ? 2 * -u : 2 * u).animate(n, f, g)),
        h && (u /= Math.pow(2, d - 1)),
        n = {},
        n[m] = o; d > v; v++)
            s = {},
            s[m] = (_ ? "-=" : "+=") + u,
            a.animate(s, f, g).animate(n, f, g),
            u = h ? 2 * u : u / 2;
        h && (s = {
            opacity: 0
        },
        s[m] = (_ ? "-=" : "+=") + u,
        a.animate(s, f, g)),
        a.queue(i),
        t.effects.unshift(a, b, p + 1)
    }),
    t.effects.define("clip", "hide", function(e, i) {
        var s, n = {}, o = t(this), a = e.direction || "vertical", r = "both" === a, h = r || "horizontal" === a, l = r || "vertical" === a;
        s = o.cssClip(),
        n.clip = {
            top: l ? (s.bottom - s.top) / 2 : s.top,
            right: h ? (s.right - s.left) / 2 : s.right,
            bottom: l ? (s.bottom - s.top) / 2 : s.bottom,
            left: h ? (s.right - s.left) / 2 : s.left
        },
        t.effects.createPlaceholder(o),
        "show" === e.mode && (o.cssClip(n.clip),
        n.clip = s),
        o.animate(n, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }),
    t.effects.define("drop", "hide", function(e, i) {
        var s, n = t(this), o = e.mode, a = "show" === o, r = e.direction || "left", h = "up" === r || "down" === r ? "top" : "left", l = "up" === r || "left" === r ? "-=" : "+=", c = "+=" === l ? "-=" : "+=", u = {
            opacity: 0
        };
        t.effects.createPlaceholder(n),
        s = e.distance || n["top" === h ? "outerHeight" : "outerWidth"](!0) / 2,
        u[h] = l + s,
        a && (n.css(u),
        u[h] = c + s,
        u.opacity = 1),
        n.animate(u, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }),
    t.effects.define("explode", "hide", function(e, i) {
        function s() {
            b.push(this),
            b.length === u * d && n()
        }
        function n() {
            p.css({
                visibility: "visible"
            }),
            t(b).remove(),
            i()
        }
        var o, a, r, h, l, c, u = e.pieces ? Math.round(Math.sqrt(e.pieces)) : 3, d = u, p = t(this), f = e.mode, g = "show" === f, m = p.show().css("visibility", "hidden").offset(), _ = Math.ceil(p.outerWidth() / d), v = Math.ceil(p.outerHeight() / u), b = [];
        for (o = 0; u > o; o++)
            for (h = m.top + o * v,
            c = o - (u - 1) / 2,
            a = 0; d > a; a++)
                r = m.left + a * _,
                l = a - (d - 1) / 2,
                p.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -a * _,
                    top: -o * v
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: _,
                    height: v,
                    left: r + (g ? l * _ : 0),
                    top: h + (g ? c * v : 0),
                    opacity: g ? 0 : 1
                }).animate({
                    left: r + (g ? 0 : l * _),
                    top: h + (g ? 0 : c * v),
                    opacity: g ? 1 : 0
                }, e.duration || 500, e.easing, s)
    }),
    t.effects.define("fade", "toggle", function(e, i) {
        var s = "show" === e.mode;
        t(this).css("opacity", s ? 0 : 1).animate({
            opacity: s ? 1 : 0
        }, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }),
    t.effects.define("fold", "hide", function(e, i) {
        var s = t(this)
          , n = e.mode
          , o = "show" === n
          , a = "hide" === n
          , r = e.size || 15
          , h = /([0-9]+)%/.exec(r)
          , l = !!e.horizFirst
          , c = l ? ["right", "bottom"] : ["bottom", "right"]
          , u = e.duration / 2
          , d = t.effects.createPlaceholder(s)
          , p = s.cssClip()
          , f = {
            clip: t.extend({}, p)
        }
          , g = {
            clip: t.extend({}, p)
        }
          , m = [p[c[0]], p[c[1]]]
          , _ = s.queue().length;
        h && (r = parseInt(h[1], 10) / 100 * m[a ? 0 : 1]),
        f.clip[c[0]] = r,
        g.clip[c[0]] = r,
        g.clip[c[1]] = 0,
        o && (s.cssClip(g.clip),
        d && d.css(t.effects.clipToBox(g)),
        g.clip = p),
        s.queue(function(i) {
            d && d.animate(t.effects.clipToBox(f), u, e.easing).animate(t.effects.clipToBox(g), u, e.easing),
            i()
        }).animate(f, u, e.easing).animate(g, u, e.easing).queue(i),
        t.effects.unshift(s, _, 4)
    }),
    t.effects.define("highlight", "show", function(e, i) {
        var s = t(this)
          , n = {
            backgroundColor: s.css("backgroundColor")
        };
        "hide" === e.mode && (n.opacity = 0),
        t.effects.saveStyle(s),
        s.css({
            backgroundImage: "none",
            backgroundColor: e.color || "#ffff99"
        }).animate(n, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }),
    t.effects.define("size", function(e, i) {
        var s, n, o, a = t(this), r = ["fontSize"], h = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], l = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], c = e.mode, u = "effect" !== c, d = e.scale || "both", p = e.origin || ["middle", "center"], f = a.css("position"), g = a.position(), m = t.effects.scaledDimensions(a), _ = e.from || m, v = e.to || t.effects.scaledDimensions(a, 0);
        t.effects.createPlaceholder(a),
        "show" === c && (o = _,
        _ = v,
        v = o),
        n = {
            from: {
                y: _.height / m.height,
                x: _.width / m.width
            },
            to: {
                y: v.height / m.height,
                x: v.width / m.width
            }
        },
        ("box" === d || "both" === d) && (n.from.y !== n.to.y && (_ = t.effects.setTransition(a, h, n.from.y, _),
        v = t.effects.setTransition(a, h, n.to.y, v)),
        n.from.x !== n.to.x && (_ = t.effects.setTransition(a, l, n.from.x, _),
        v = t.effects.setTransition(a, l, n.to.x, v))),
        ("content" === d || "both" === d) && n.from.y !== n.to.y && (_ = t.effects.setTransition(a, r, n.from.y, _),
        v = t.effects.setTransition(a, r, n.to.y, v)),
        p && (s = t.effects.getBaseline(p, m),
        _.top = (m.outerHeight - _.outerHeight) * s.y + g.top,
        _.left = (m.outerWidth - _.outerWidth) * s.x + g.left,
        v.top = (m.outerHeight - v.outerHeight) * s.y + g.top,
        v.left = (m.outerWidth - v.outerWidth) * s.x + g.left),
        a.css(_),
        ("content" === d || "both" === d) && (h = h.concat(["marginTop", "marginBottom"]).concat(r),
        l = l.concat(["marginLeft", "marginRight"]),
        a.find("*[width]").each(function() {
            var i = t(this)
              , s = t.effects.scaledDimensions(i)
              , o = {
                height: s.height * n.from.y,
                width: s.width * n.from.x,
                outerHeight: s.outerHeight * n.from.y,
                outerWidth: s.outerWidth * n.from.x
            }
              , a = {
                height: s.height * n.to.y,
                width: s.width * n.to.x,
                outerHeight: s.height * n.to.y,
                outerWidth: s.width * n.to.x
            };
            n.from.y !== n.to.y && (o = t.effects.setTransition(i, h, n.from.y, o),
            a = t.effects.setTransition(i, h, n.to.y, a)),
            n.from.x !== n.to.x && (o = t.effects.setTransition(i, l, n.from.x, o),
            a = t.effects.setTransition(i, l, n.to.x, a)),
            u && t.effects.saveStyle(i),
            i.css(o),
            i.animate(a, e.duration, e.easing, function() {
                u && t.effects.restoreStyle(i)
            })
        })),
        a.animate(v, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                var e = a.offset();
                0 === v.opacity && a.css("opacity", _.opacity),
                u || (a.css("position", "static" === f ? "relative" : f).offset(e),
                t.effects.saveStyle(a)),
                i()
            }
        })
    }),
    t.effects.define("scale", function(e, i) {
        var s = t(this)
          , n = e.mode
          , o = parseInt(e.percent, 10) || (0 === parseInt(e.percent, 10) ? 0 : "effect" !== n ? 0 : 100)
          , a = t.extend(!0, {
            from: t.effects.scaledDimensions(s),
            to: t.effects.scaledDimensions(s, o, e.direction || "both"),
            origin: e.origin || ["middle", "center"]
        }, e);
        e.fade && (a.from.opacity = 1,
        a.to.opacity = 0),
        t.effects.effect.size.call(this, a, i)
    }),
    t.effects.define("puff", "hide", function(e, i) {
        var s = t.extend(!0, {}, e, {
            fade: !0,
            percent: parseInt(e.percent, 10) || 150
        });
        t.effects.effect.scale.call(this, s, i)
    }),
    t.effects.define("pulsate", "show", function(e, i) {
        var s = t(this)
          , n = e.mode
          , o = "show" === n
          , a = "hide" === n
          , r = o || a
          , h = 2 * (e.times || 5) + (r ? 1 : 0)
          , l = e.duration / h
          , c = 0
          , u = 1
          , d = s.queue().length;
        for ((o || !s.is(":visible")) && (s.css("opacity", 0).show(),
        c = 1); h > u; u++)
            s.animate({
                opacity: c
            }, l, e.easing),
            c = 1 - c;
        s.animate({
            opacity: c
        }, l, e.easing),
        s.queue(i),
        t.effects.unshift(s, d, h + 1)
    }),
    t.effects.define("shake", function(e, i) {
        var s = 1
          , n = t(this)
          , o = e.direction || "left"
          , a = e.distance || 20
          , r = e.times || 3
          , h = 2 * r + 1
          , l = Math.round(e.duration / h)
          , c = "up" === o || "down" === o ? "top" : "left"
          , u = "up" === o || "left" === o
          , d = {}
          , p = {}
          , f = {}
          , g = n.queue().length;
        for (t.effects.createPlaceholder(n),
        d[c] = (u ? "-=" : "+=") + a,
        p[c] = (u ? "+=" : "-=") + 2 * a,
        f[c] = (u ? "-=" : "+=") + 2 * a,
        n.animate(d, l, e.easing); r > s; s++)
            n.animate(p, l, e.easing).animate(f, l, e.easing);
        n.animate(p, l, e.easing).animate(d, l / 2, e.easing).queue(i),
        t.effects.unshift(n, g, h + 1)
    }),
    t.effects.define("slide", "show", function(e, i) {
        var s, n, o = t(this), a = {
            up: ["bottom", "top"],
            down: ["top", "bottom"],
            left: ["right", "left"],
            right: ["left", "right"]
        }, r = e.mode, h = e.direction || "left", l = "up" === h || "down" === h ? "top" : "left", c = "up" === h || "left" === h, u = e.distance || o["top" === l ? "outerHeight" : "outerWidth"](!0), d = {};
        t.effects.createPlaceholder(o),
        s = o.cssClip(),
        n = o.position()[l],
        d[l] = (c ? -1 : 1) * u + n,
        d.clip = o.cssClip(),
        d.clip[a[h][1]] = d.clip[a[h][0]],
        "show" === r && (o.cssClip(d.clip),
        o.css(l, d[l]),
        d.clip = s,
        d[l] = n),
        o.animate(d, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    });
    var f;
    t.uiBackCompat !== !1 && (f = t.effects.define("transfer", function(e, i) {
        t(this).transfer(e, i)
    })),
    t.ui.focusable = function(i, s) {
        var n, o, a, r, h, l = i.nodeName.toLowerCase();
        return "area" === l ? (n = i.parentNode,
        o = n.name,
        i.href && o && "map" === n.nodeName.toLowerCase() ? (a = t("img[usemap='#" + o + "']"),
        a.length > 0 && a.is(":visible")) : !1) : (/^(input|select|textarea|button|object)$/.test(l) ? (r = !i.disabled,
        r && (h = t(i).closest("fieldset")[0],
        h && (r = !h.disabled))) : r = "a" === l ? i.href || s : s,
        r && t(i).is(":visible") && e(t(i)))
    }
    ,
    t.extend(t.expr[":"], {
        focusable: function(e) {
            return t.ui.focusable(e, null != t.attr(e, "tabindex"))
        }
    }),
    t.ui.focusable,
    t.fn.form = function() {
        return "string" == typeof this[0].form ? this.closest("form") : t(this[0].form)
    }
    ,
    t.ui.formResetMixin = {
        _formResetHandler: function() {
            var e = t(this);
            setTimeout(function() {
                var i = e.data("ui-form-reset-instances");
                t.each(i, function() {
                    this.refresh()
                })
            })
        },
        _bindFormResetHandler: function() {
            if (this.form = this.element.form(),
            this.form.length) {
                var t = this.form.data("ui-form-reset-instances") || [];
                t.length || this.form.on("reset.ui-form-reset", this._formResetHandler),
                t.push(this),
                this.form.data("ui-form-reset-instances", t)
            }
        },
        _unbindFormResetHandler: function() {
            if (this.form.length) {
                var e = this.form.data("ui-form-reset-instances");
                e.splice(t.inArray(this, e), 1),
                e.length ? this.form.data("ui-form-reset-instances", e) : this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")
            }
        }
    },
    "1.7" === t.fn.jquery.substring(0, 3) && (t.each(["Width", "Height"], function(e, i) {
        function s(e, i, s, o) {
            return t.each(n, function() {
                i -= parseFloat(t.css(e, "padding" + this)) || 0,
                s && (i -= parseFloat(t.css(e, "border" + this + "Width")) || 0),
                o && (i -= parseFloat(t.css(e, "margin" + this)) || 0)
            }),
            i
        }
        var n = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"]
          , o = i.toLowerCase()
          , a = {
            innerWidth: t.fn.innerWidth,
            innerHeight: t.fn.innerHeight,
            outerWidth: t.fn.outerWidth,
            outerHeight: t.fn.outerHeight
        };
        t.fn["inner" + i] = function(e) {
            return void 0 === e ? a["inner" + i].call(this) : this.each(function() {
                t(this).css(o, s(this, e) + "px")
            })
        }
        ,
        t.fn["outer" + i] = function(e, n) {
            return "number" != typeof e ? a["outer" + i].call(this, e) : this.each(function() {
                t(this).css(o, s(this, e, !0, n) + "px")
            })
        }
    }),
    t.fn.addBack = function(t) {
        return this.add(null == t ? this.prevObject : this.prevObject.filter(t))
    }
    ),
    t.ui.keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38
    },
    t.ui.escapeSelector = function() {
        var t = /([!"#$%&'()*+,.\/:;<=>?@[\]^`{|}~])/g;
        return function(e) {
            return e.replace(t, "\\$1")
        }
    }(),
    t.fn.labels = function() {
        var e, i, s, n, o;
        return this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (n = this.eq(0).parents("label"),
        s = this.attr("id"),
        s && (e = this.eq(0).parents().last(),
        o = e.add(e.length ? e.siblings() : this.siblings()),
        i = "label[for='" + t.ui.escapeSelector(s) + "']",
        n = n.add(o.find(i).addBack(i))),
        this.pushStack(n))
    }
    ,
    t.fn.scrollParent = function(e) {
        var i = this.css("position")
          , s = "absolute" === i
          , n = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/
          , o = this.parents().filter(function() {
            var e = t(this);
            return s && "static" === e.css("position") ? !1 : n.test(e.css("overflow") + e.css("overflow-y") + e.css("overflow-x"))
        }).eq(0);
        return "fixed" !== i && o.length ? o : t(this[0].ownerDocument || document)
    }
    ,
    t.extend(t.expr[":"], {
        tabbable: function(e) {
            var i = t.attr(e, "tabindex")
              , s = null != i;
            return (!s || i >= 0) && t.ui.focusable(e, s)
        }
    }),
    t.fn.extend({
        uniqueId: function() {
            var t = 0;
            return function() {
                return this.each(function() {
                    this.id || (this.id = "ui-id-" + ++t)
                })
            }
        }(),
        removeUniqueId: function() {
            return this.each(function() {
                /^ui-id-\d+$/.test(this.id) && t(this).removeAttr("id")
            })
        }
    }),
    t.widget("ui.accordion", {
        version: "1.12.1",
        options: {
            active: 0,
            animate: {},
            classes: {
                "ui-accordion-header": "ui-corner-top",
                "ui-accordion-header-collapsed": "ui-corner-all",
                "ui-accordion-content": "ui-corner-bottom"
            },
            collapsible: !1,
            event: "click",
            header: "> li > :first-child, > :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        hideProps: {
            borderTopWidth: "hide",
            borderBottomWidth: "hide",
            paddingTop: "hide",
            paddingBottom: "hide",
            height: "hide"
        },
        showProps: {
            borderTopWidth: "show",
            borderBottomWidth: "show",
            paddingTop: "show",
            paddingBottom: "show",
            height: "show"
        },
        _create: function() {
            var e = this.options;
            this.prevShow = this.prevHide = t(),
            this._addClass("ui-accordion", "ui-widget ui-helper-reset"),
            this.element.attr("role", "tablist"),
            e.collapsible || e.active !== !1 && null != e.active || (e.active = 0),
            this._processPanels(),
            0 > e.active && (e.active += this.headers.length),
            this._refresh()
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                panel: this.active.length ? this.active.next() : t()
            }
        },
        _createIcons: function() {
            var e, i, s = this.options.icons;
            s && (e = t("<span>"),
            this._addClass(e, "ui-accordion-header-icon", "ui-icon " + s.header),
            e.prependTo(this.headers),
            i = this.active.children(".ui-accordion-header-icon"),
            this._removeClass(i, s.header)._addClass(i, null, s.activeHeader)._addClass(this.headers, "ui-accordion-icons"))
        },
        _destroyIcons: function() {
            this._removeClass(this.headers, "ui-accordion-icons"),
            this.headers.children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var t;
            this.element.removeAttr("role"),
            this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),
            this._destroyIcons(),
            t = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),
            "content" !== this.options.heightStyle && t.css("height", "")
        },
        _setOption: function(t, e) {
            return "active" === t ? (this._activate(e),
            void 0) : ("event" === t && (this.options.event && this._off(this.headers, this.options.event),
            this._setupEvents(e)),
            this._super(t, e),
            "collapsible" !== t || e || this.options.active !== !1 || this._activate(0),
            "icons" === t && (this._destroyIcons(),
            e && this._createIcons()),
            void 0)
        },
        _setOptionDisabled: function(t) {
            this._super(t),
            this.element.attr("aria-disabled", t),
            this._toggleClass(null, "ui-state-disabled", !!t),
            this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!t)
        },
        _keydown: function(e) {
            if (!e.altKey && !e.ctrlKey) {
                var i = t.ui.keyCode
                  , s = this.headers.length
                  , n = this.headers.index(e.target)
                  , o = !1;
                switch (e.keyCode) {
                case i.RIGHT:
                case i.DOWN:
                    o = this.headers[(n + 1) % s];
                    break;
                case i.LEFT:
                case i.UP:
                    o = this.headers[(n - 1 + s) % s];
                    break;
                case i.SPACE:
                case i.ENTER:
                    this._eventHandler(e);
                    break;
                case i.HOME:
                    o = this.headers[0];
                    break;
                case i.END:
                    o = this.headers[s - 1]
                }
                o && (t(e.target).attr("tabIndex", -1),
                t(o).attr("tabIndex", 0),
                t(o).trigger("focus"),
                e.preventDefault())
            }
        },
        _panelKeyDown: function(e) {
            e.keyCode === t.ui.keyCode.UP && e.ctrlKey && t(e.currentTarget).prev().trigger("focus")
        },
        refresh: function() {
            var e = this.options;
            this._processPanels(),
            e.active === !1 && e.collapsible === !0 || !this.headers.length ? (e.active = !1,
            this.active = t()) : e.active === !1 ? this._activate(0) : this.active.length && !t.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (e.active = !1,
            this.active = t()) : this._activate(Math.max(0, e.active - 1)) : e.active = this.headers.index(this.active),
            this._destroyIcons(),
            this._refresh()
        },
        _processPanels: function() {
            var t = this.headers
              , e = this.panels;
            this.headers = this.element.find(this.options.header),
            this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default"),
            this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),
            this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content"),
            e && (this._off(t.not(this.headers)),
            this._off(e.not(this.panels)))
        },
        _refresh: function() {
            var e, i = this.options, s = i.heightStyle, n = this.element.parent();
            this.active = this._findActive(i.active),
            this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed"),
            this._addClass(this.active.next(), "ui-accordion-content-active"),
            this.active.next().show(),
            this.headers.attr("role", "tab").each(function() {
                var e = t(this)
                  , i = e.uniqueId().attr("id")
                  , s = e.next()
                  , n = s.uniqueId().attr("id");
                e.attr("aria-controls", n),
                s.attr("aria-labelledby", i)
            }).next().attr("role", "tabpanel"),
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }).next().attr({
                "aria-hidden": "true"
            }).hide(),
            this.active.length ? this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }).next().attr({
                "aria-hidden": "false"
            }) : this.headers.eq(0).attr("tabIndex", 0),
            this._createIcons(),
            this._setupEvents(i.event),
            "fill" === s ? (e = n.height(),
            this.element.siblings(":visible").each(function() {
                var i = t(this)
                  , s = i.css("position");
                "absolute" !== s && "fixed" !== s && (e -= i.outerHeight(!0))
            }),
            this.headers.each(function() {
                e -= t(this).outerHeight(!0)
            }),
            this.headers.next().each(function() {
                t(this).height(Math.max(0, e - t(this).innerHeight() + t(this).height()))
            }).css("overflow", "auto")) : "auto" === s && (e = 0,
            this.headers.next().each(function() {
                var i = t(this).is(":visible");
                i || t(this).show(),
                e = Math.max(e, t(this).css("height", "").height()),
                i || t(this).hide()
            }).height(e))
        },
        _activate: function(e) {
            var i = this._findActive(e)[0];
            i !== this.active[0] && (i = i || this.active[0],
            this._eventHandler({
                target: i,
                currentTarget: i,
                preventDefault: t.noop
            }))
        },
        _findActive: function(e) {
            return "number" == typeof e ? this.headers.eq(e) : t()
        },
        _setupEvents: function(e) {
            var i = {
                keydown: "_keydown"
            };
            e && t.each(e.split(" "), function(t, e) {
                i[e] = "_eventHandler"
            }),
            this._off(this.headers.add(this.headers.next())),
            this._on(this.headers, i),
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            }),
            this._hoverable(this.headers),
            this._focusable(this.headers)
        },
        _eventHandler: function(e) {
            var i, s, n = this.options, o = this.active, a = t(e.currentTarget), r = a[0] === o[0], h = r && n.collapsible, l = h ? t() : a.next(), c = o.next(), u = {
                oldHeader: o,
                oldPanel: c,
                newHeader: h ? t() : a,
                newPanel: l
            };
            e.preventDefault(),
            r && !n.collapsible || this._trigger("beforeActivate", e, u) === !1 || (n.active = h ? !1 : this.headers.index(a),
            this.active = r ? t() : a,
            this._toggle(u),
            this._removeClass(o, "ui-accordion-header-active", "ui-state-active"),
            n.icons && (i = o.children(".ui-accordion-header-icon"),
            this._removeClass(i, null, n.icons.activeHeader)._addClass(i, null, n.icons.header)),
            r || (this._removeClass(a, "ui-accordion-header-collapsed")._addClass(a, "ui-accordion-header-active", "ui-state-active"),
            n.icons && (s = a.children(".ui-accordion-header-icon"),
            this._removeClass(s, null, n.icons.header)._addClass(s, null, n.icons.activeHeader)),
            this._addClass(a.next(), "ui-accordion-content-active")))
        },
        _toggle: function(e) {
            var i = e.newPanel
              , s = this.prevShow.length ? this.prevShow : e.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0),
            this.prevShow = i,
            this.prevHide = s,
            this.options.animate ? this._animate(i, s, e) : (s.hide(),
            i.show(),
            this._toggleComplete(e)),
            s.attr({
                "aria-hidden": "true"
            }),
            s.prev().attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }),
            i.length && s.length ? s.prev().attr({
                tabIndex: -1,
                "aria-expanded": "false"
            }) : i.length && this.headers.filter(function() {
                return 0 === parseInt(t(this).attr("tabIndex"), 10)
            }).attr("tabIndex", -1),
            i.attr("aria-hidden", "false").prev().attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            })
        },
        _animate: function(t, e, i) {
            var s, n, o, a = this, r = 0, h = t.css("box-sizing"), l = t.length && (!e.length || t.index() < e.index()), c = this.options.animate || {}, u = l && c.down || c, d = function() {
                a._toggleComplete(i)
            };
            return "number" == typeof u && (o = u),
            "string" == typeof u && (n = u),
            n = n || u.easing || c.easing,
            o = o || u.duration || c.duration,
            e.length ? t.length ? (s = t.show().outerHeight(),
            e.animate(this.hideProps, {
                duration: o,
                easing: n,
                step: function(t, e) {
                    e.now = Math.round(t)
                }
            }),
            t.hide().animate(this.showProps, {
                duration: o,
                easing: n,
                complete: d,
                step: function(t, i) {
                    i.now = Math.round(t),
                    "height" !== i.prop ? "content-box" === h && (r += i.now) : "content" !== a.options.heightStyle && (i.now = Math.round(s - e.outerHeight() - r),
                    r = 0)
                }
            }),
            void 0) : e.animate(this.hideProps, o, n, d) : t.animate(this.showProps, o, n, d)
        },
        _toggleComplete: function(t) {
            var e = t.oldPanel
              , i = e.prev();
            this._removeClass(e, "ui-accordion-content-active"),
            this._removeClass(i, "ui-accordion-header-active")._addClass(i, "ui-accordion-header-collapsed"),
            e.length && (e.parent()[0].className = e.parent()[0].className),
            this._trigger("activate", null, t)
        }
    }),
    t.ui.safeActiveElement = function(t) {
        var e;
        try {
            e = t.activeElement
        } catch (i) {
            e = t.body
        }
        return e || (e = t.body),
        e.nodeName || (e = t.body),
        e
    }
    ,
    t.widget("ui.menu", {
        version: "1.12.1",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-caret-1-e"
            },
            items: "> *",
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element,
            this.mouseHandled = !1,
            this.element.uniqueId().attr({
                role: this.options.role,
                tabIndex: 0
            }),
            this._addClass("ui-menu", "ui-widget ui-widget-content"),
            this._on({
                "mousedown .ui-menu-item": function(t) {
                    t.preventDefault()
                },
                "click .ui-menu-item": function(e) {
                    var i = t(e.target)
                      , s = t(t.ui.safeActiveElement(this.document[0]));
                    !this.mouseHandled && i.not(".ui-state-disabled").length && (this.select(e),
                    e.isPropagationStopped() || (this.mouseHandled = !0),
                    i.has(".ui-menu").length ? this.expand(e) : !this.element.is(":focus") && s.closest(".ui-menu").length && (this.element.trigger("focus", [!0]),
                    this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
                },
                "mouseenter .ui-menu-item": function(e) {
                    if (!this.previousFilter) {
                        var i = t(e.target).closest(".ui-menu-item")
                          , s = t(e.currentTarget);
                        i[0] === s[0] && (this._removeClass(s.siblings().children(".ui-state-active"), null, "ui-state-active"),
                        this.focus(e, s))
                    }
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(t, e) {
                    var i = this.active || this.element.find(this.options.items).eq(0);
                    e || this.focus(t, i)
                },
                blur: function(e) {
                    this._delay(function() {
                        var i = !t.contains(this.element[0], t.ui.safeActiveElement(this.document[0]));
                        i && this.collapseAll(e)
                    })
                },
                keydown: "_keydown"
            }),
            this.refresh(),
            this._on(this.document, {
                click: function(t) {
                    this._closeOnDocumentClick(t) && this.collapseAll(t),
                    this.mouseHandled = !1
                }
            })
        },
        _destroy: function() {
            var e = this.element.find(".ui-menu-item").removeAttr("role aria-disabled")
              , i = e.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),
            i.children().each(function() {
                var e = t(this);
                e.data("ui-menu-submenu-caret") && e.remove()
            })
        },
        _keydown: function(e) {
            var i, s, n, o, a = !0;
            switch (e.keyCode) {
            case t.ui.keyCode.PAGE_UP:
                this.previousPage(e);
                break;
            case t.ui.keyCode.PAGE_DOWN:
                this.nextPage(e);
                break;
            case t.ui.keyCode.HOME:
                this._move("first", "first", e);
                break;
            case t.ui.keyCode.END:
                this._move("last", "last", e);
                break;
            case t.ui.keyCode.UP:
                this.previous(e);
                break;
            case t.ui.keyCode.DOWN:
                this.next(e);
                break;
            case t.ui.keyCode.LEFT:
                this.collapse(e);
                break;
            case t.ui.keyCode.RIGHT:
                this.active && !this.active.is(".ui-state-disabled") && this.expand(e);
                break;
            case t.ui.keyCode.ENTER:
            case t.ui.keyCode.SPACE:
                this._activate(e);
                break;
            case t.ui.keyCode.ESCAPE:
                this.collapse(e);
                break;
            default:
                a = !1,
                s = this.previousFilter || "",
                o = !1,
                n = e.keyCode >= 96 && 105 >= e.keyCode ? "" + (e.keyCode - 96) : String.fromCharCode(e.keyCode),
                clearTimeout(this.filterTimer),
                n === s ? o = !0 : n = s + n,
                i = this._filterMenuItems(n),
                i = o && -1 !== i.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : i,
                i.length || (n = String.fromCharCode(e.keyCode),
                i = this._filterMenuItems(n)),
                i.length ? (this.focus(e, i),
                this.previousFilter = n,
                this.filterTimer = this._delay(function() {
                    delete this.previousFilter
                }, 1e3)) : delete this.previousFilter
            }
            a && e.preventDefault()
        },
        _activate: function(t) {
            this.active && !this.active.is(".ui-state-disabled") && (this.active.children("[aria-haspopup='true']").length ? this.expand(t) : this.select(t))
        },
        refresh: function() {
            var e, i, s, n, o, a = this, r = this.options.icons.submenu, h = this.element.find(this.options.menus);
            this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length),
            s = h.filter(":not(.ui-menu)").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var e = t(this)
                  , i = e.prev()
                  , s = t("<span>").data("ui-menu-submenu-caret", !0);
                a._addClass(s, "ui-menu-icon", "ui-icon " + r),
                i.attr("aria-haspopup", "true").prepend(s),
                e.attr("aria-labelledby", i.attr("id"))
            }),
            this._addClass(s, "ui-menu", "ui-widget ui-widget-content ui-front"),
            e = h.add(this.element),
            i = e.find(this.options.items),
            i.not(".ui-menu-item").each(function() {
                var e = t(this);
                a._isDivider(e) && a._addClass(e, "ui-menu-divider", "ui-widget-content")
            }),
            n = i.not(".ui-menu-item, .ui-menu-divider"),
            o = n.children().not(".ui-menu").uniqueId().attr({
                tabIndex: -1,
                role: this._itemRole()
            }),
            this._addClass(n, "ui-menu-item")._addClass(o, "ui-menu-item-wrapper"),
            i.filter(".ui-state-disabled").attr("aria-disabled", "true"),
            this.active && !t.contains(this.element[0], this.active[0]) && this.blur()
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        _setOption: function(t, e) {
            if ("icons" === t) {
                var i = this.element.find(".ui-menu-icon");
                this._removeClass(i, null, this.options.icons.submenu)._addClass(i, null, e.submenu)
            }
            this._super(t, e)
        },
        _setOptionDisabled: function(t) {
            this._super(t),
            this.element.attr("aria-disabled", t + ""),
            this._toggleClass(null, "ui-state-disabled", !!t)
        },
        focus: function(t, e) {
            var i, s, n;
            this.blur(t, t && "focus" === t.type),
            this._scrollIntoView(e),
            this.active = e.first(),
            s = this.active.children(".ui-menu-item-wrapper"),
            this._addClass(s, null, "ui-state-active"),
            this.options.role && this.element.attr("aria-activedescendant", s.attr("id")),
            n = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),
            this._addClass(n, null, "ui-state-active"),
            t && "keydown" === t.type ? this._close() : this.timer = this._delay(function() {
                this._close()
            }, this.delay),
            i = e.children(".ui-menu"),
            i.length && t && /^mouse/.test(t.type) && this._startOpening(i),
            this.activeMenu = e.parent(),
            this._trigger("focus", t, {
                item: e
            })
        },
        _scrollIntoView: function(e) {
            var i, s, n, o, a, r;
            this._hasScroll() && (i = parseFloat(t.css(this.activeMenu[0], "borderTopWidth")) || 0,
            s = parseFloat(t.css(this.activeMenu[0], "paddingTop")) || 0,
            n = e.offset().top - this.activeMenu.offset().top - i - s,
            o = this.activeMenu.scrollTop(),
            a = this.activeMenu.height(),
            r = e.outerHeight(),
            0 > n ? this.activeMenu.scrollTop(o + n) : n + r > a && this.activeMenu.scrollTop(o + n - a + r))
        },
        blur: function(t, e) {
            e || clearTimeout(this.timer),
            this.active && (this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active"),
            this._trigger("blur", t, {
                item: this.active
            }),
            this.active = null)
        },
        _startOpening: function(t) {
            clearTimeout(this.timer),
            "true" === t.attr("aria-hidden") && (this.timer = this._delay(function() {
                this._close(),
                this._open(t)
            }, this.delay))
        },
        _open: function(e) {
            var i = t.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer),
            this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden", "true"),
            e.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(i)
        },
        collapseAll: function(e, i) {
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                var s = i ? this.element : t(e && e.target).closest(this.element.find(".ui-menu"));
                s.length || (s = this.element),
                this._close(s),
                this.blur(e),
                this._removeClass(s.find(".ui-state-active"), null, "ui-state-active"),
                this.activeMenu = s
            }, this.delay)
        },
        _close: function(t) {
            t || (t = this.active ? this.active.parent() : this.element),
            t.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false")
        },
        _closeOnDocumentClick: function(e) {
            return !t(e.target).closest(".ui-menu").length
        },
        _isDivider: function(t) {
            return !/[^\-\u2014\u2013\s]/.test(t.text())
        },
        collapse: function(t) {
            var e = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            e && e.length && (this._close(),
            this.focus(t, e))
        },
        expand: function(t) {
            var e = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
            e && e.length && (this._open(e.parent()),
            this._delay(function() {
                this.focus(t, e)
            }))
        },
        next: function(t) {
            this._move("next", "first", t)
        },
        previous: function(t) {
            this._move("prev", "last", t)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(t, e, i) {
            var s;
            this.active && (s = "first" === t || "last" === t ? this.active["first" === t ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[t + "All"](".ui-menu-item").eq(0)),
            s && s.length && this.active || (s = this.activeMenu.find(this.options.items)[e]()),
            this.focus(i, s)
        },
        nextPage: function(e) {
            var i, s, n;
            return this.active ? (this.isLastItem() || (this._hasScroll() ? (s = this.active.offset().top,
            n = this.element.height(),
            this.active.nextAll(".ui-menu-item").each(function() {
                return i = t(this),
                0 > i.offset().top - s - n
            }),
            this.focus(e, i)) : this.focus(e, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())),
            void 0) : (this.next(e),
            void 0)
        },
        previousPage: function(e) {
            var i, s, n;
            return this.active ? (this.isFirstItem() || (this._hasScroll() ? (s = this.active.offset().top,
            n = this.element.height(),
            this.active.prevAll(".ui-menu-item").each(function() {
                return i = t(this),
                i.offset().top - s + n > 0
            }),
            this.focus(e, i)) : this.focus(e, this.activeMenu.find(this.options.items).first())),
            void 0) : (this.next(e),
            void 0)
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(e) {
            this.active = this.active || t(e.target).closest(".ui-menu-item");
            var i = {
                item: this.active
            };
            this.active.has(".ui-menu").length || this.collapseAll(e, !0),
            this._trigger("select", e, i)
        },
        _filterMenuItems: function(e) {
            var i = e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
              , s = RegExp("^" + i, "i");
            return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function() {
                return s.test(t.trim(t(this).children(".ui-menu-item-wrapper").text()))
            })
        }
    }),
    t.widget("ui.autocomplete", {
        version: "1.12.1",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        requestIndex: 0,
        pending: 0,
        _create: function() {
            var e, i, s, n = this.element[0].nodeName.toLowerCase(), o = "textarea" === n, a = "input" === n;
            this.isMultiLine = o || !a && this._isContentEditable(this.element),
            this.valueMethod = this.element[o || a ? "val" : "text"],
            this.isNewMenu = !0,
            this._addClass("ui-autocomplete-input"),
            this.element.attr("autocomplete", "off"),
            this._on(this.element, {
                keydown: function(n) {
                    if (this.element.prop("readOnly"))
                        return e = !0,
                        s = !0,
                        i = !0,
                        void 0;
                    e = !1,
                    s = !1,
                    i = !1;
                    var o = t.ui.keyCode;
                    switch (n.keyCode) {
                    case o.PAGE_UP:
                        e = !0,
                        this._move("previousPage", n);
                        break;
                    case o.PAGE_DOWN:
                        e = !0,
                        this._move("nextPage", n);
                        break;
                    case o.UP:
                        e = !0,
                        this._keyEvent("previous", n);
                        break;
                    case o.DOWN:
                        e = !0,
                        this._keyEvent("next", n);
                        break;
                    case o.ENTER:
                        this.menu.active && (e = !0,
                        n.preventDefault(),
                        this.menu.select(n));
                        break;
                    case o.TAB:
                        this.menu.active && this.menu.select(n);
                        break;
                    case o.ESCAPE:
                        this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term),
                        this.close(n),
                        n.preventDefault());
                        break;
                    default:
                        i = !0,
                        this._searchTimeout(n)
                    }
                },
                keypress: function(s) {
                    if (e)
                        return e = !1,
                        (!this.isMultiLine || this.menu.element.is(":visible")) && s.preventDefault(),
                        void 0;
                    if (!i) {
                        var n = t.ui.keyCode;
                        switch (s.keyCode) {
                        case n.PAGE_UP:
                            this._move("previousPage", s);
                            break;
                        case n.PAGE_DOWN:
                            this._move("nextPage", s);
                            break;
                        case n.UP:
                            this._keyEvent("previous", s);
                            break;
                        case n.DOWN:
                            this._keyEvent("next", s)
                        }
                    }
                },
                input: function(t) {
                    return s ? (s = !1,
                    t.preventDefault(),
                    void 0) : (this._searchTimeout(t),
                    void 0)
                },
                focus: function() {
                    this.selectedItem = null,
                    this.previous = this._value()
                },
                blur: function(t) {
                    return this.cancelBlur ? (delete this.cancelBlur,
                    void 0) : (clearTimeout(this.searching),
                    this.close(t),
                    this._change(t),
                    void 0)
                }
            }),
            this._initSource(),
            this.menu = t("<ul>").appendTo(this._appendTo()).menu({
                role: null
            }).hide().menu("instance"),
            this._addClass(this.menu.element, "ui-autocomplete", "ui-front"),
            this._on(this.menu.element, {
                mousedown: function(e) {
                    e.preventDefault(),
                    this.cancelBlur = !0,
                    this._delay(function() {
                        delete this.cancelBlur,
                        this.element[0] !== t.ui.safeActiveElement(this.document[0]) && this.element.trigger("focus")
                    })
                },
                menufocus: function(e, i) {
                    var s, n;
                    return this.isNewMenu && (this.isNewMenu = !1,
                    e.originalEvent && /^mouse/.test(e.originalEvent.type)) ? (this.menu.blur(),
                    this.document.one("mousemove", function() {
                        t(e.target).trigger(e.originalEvent)
                    }),
                    void 0) : (n = i.item.data("ui-autocomplete-item"),
                    !1 !== this._trigger("focus", e, {
                        item: n
                    }) && e.originalEvent && /^key/.test(e.originalEvent.type) && this._value(n.value),
                    s = i.item.attr("aria-label") || n.value,
                    s && t.trim(s).length && (this.liveRegion.children().hide(),
                    t("<div>").text(s).appendTo(this.liveRegion)),
                    void 0)
                },
                menuselect: function(e, i) {
                    var s = i.item.data("ui-autocomplete-item")
                      , n = this.previous;
                    this.element[0] !== t.ui.safeActiveElement(this.document[0]) && (this.element.trigger("focus"),
                    this.previous = n,
                    this._delay(function() {
                        this.previous = n,
                        this.selectedItem = s
                    })),
                    !1 !== this._trigger("select", e, {
                        item: s
                    }) && this._value(s.value),
                    this.term = this._value(),
                    this.close(e),
                    this.selectedItem = s
                }
            }),
            this.liveRegion = t("<div>", {
                role: "status",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body),
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching),
            this.element.removeAttr("autocomplete"),
            this.menu.element.remove(),
            this.liveRegion.remove()
        },
        _setOption: function(t, e) {
            this._super(t, e),
            "source" === t && this._initSource(),
            "appendTo" === t && this.menu.element.appendTo(this._appendTo()),
            "disabled" === t && e && this.xhr && this.xhr.abort()
        },
        _isEventTargetInWidget: function(e) {
            var i = this.menu.element[0];
            return e.target === this.element[0] || e.target === i || t.contains(i, e.target)
        },
        _closeOnClickOutside: function(t) {
            this._isEventTargetInWidget(t) || this.close()
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            return e && (e = e.jquery || e.nodeType ? t(e) : this.document.find(e).eq(0)),
            e && e[0] || (e = this.element.closest(".ui-front, dialog")),
            e.length || (e = this.document[0].body),
            e
        },
        _initSource: function() {
            var e, i, s = this;
            t.isArray(this.options.source) ? (e = this.options.source,
            this.source = function(i, s) {
                s(t.ui.autocomplete.filter(e, i.term))
            }
            ) : "string" == typeof this.options.source ? (i = this.options.source,
            this.source = function(e, n) {
                s.xhr && s.xhr.abort(),
                s.xhr = t.ajax({
                    url: i,
                    data: e,
                    dataType: "json",
                    success: function(t) {
                        n(t)
                    },
                    error: function() {
                        n([])
                    }
                })
            }
            ) : this.source = this.options.source
        },
        _searchTimeout: function(t) {
            clearTimeout(this.searching),
            this.searching = this._delay(function() {
                var e = this.term === this._value()
                  , i = this.menu.element.is(":visible")
                  , s = t.altKey || t.ctrlKey || t.metaKey || t.shiftKey;
                (!e || e && !i && !s) && (this.selectedItem = null,
                this.search(null, t))
            }, this.options.delay)
        },
        search: function(t, e) {
            return t = null != t ? t : this._value(),
            this.term = this._value(),
            t.length < this.options.minLength ? this.close(e) : this._trigger("search", e) !== !1 ? this._search(t) : void 0
        },
        _search: function(t) {
            this.pending++,
            this._addClass("ui-autocomplete-loading"),
            this.cancelSearch = !1,
            this.source({
                term: t
            }, this._response())
        },
        _response: function() {
            var e = ++this.requestIndex;
            return t.proxy(function(t) {
                e === this.requestIndex && this.__response(t),
                this.pending--,
                this.pending || this._removeClass("ui-autocomplete-loading")
            }, this)
        },
        __response: function(t) {
            t && (t = this._normalize(t)),
            this._trigger("response", null, {
                content: t
            }),
            !this.options.disabled && t && t.length && !this.cancelSearch ? (this._suggest(t),
            this._trigger("open")) : this._close()
        },
        close: function(t) {
            this.cancelSearch = !0,
            this._close(t)
        },
        _close: function(t) {
            this._off(this.document, "mousedown"),
            this.menu.element.is(":visible") && (this.menu.element.hide(),
            this.menu.blur(),
            this.isNewMenu = !0,
            this._trigger("close", t))
        },
        _change: function(t) {
            this.previous !== this._value() && this._trigger("change", t, {
                item: this.selectedItem
            })
        },
        _normalize: function(e) {
            return e.length && e[0].label && e[0].value ? e : t.map(e, function(e) {
                return "string" == typeof e ? {
                    label: e,
                    value: e
                } : t.extend({}, e, {
                    label: e.label || e.value,
                    value: e.value || e.label
                })
            })
        },
        _suggest: function(e) {
            var i = this.menu.element.empty();
            this._renderMenu(i, e),
            this.isNewMenu = !0,
            this.menu.refresh(),
            i.show(),
            this._resizeMenu(),
            i.position(t.extend({
                of: this.element
            }, this.options.position)),
            this.options.autoFocus && this.menu.next(),
            this._on(this.document, {
                mousedown: "_closeOnClickOutside"
            })
        },
        _resizeMenu: function() {
            var t = this.menu.element;
            t.outerWidth(Math.max(t.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(e, i) {
            var s = this;
            t.each(i, function(t, i) {
                s._renderItemData(e, i)
            })
        },
        _renderItemData: function(t, e) {
            return this._renderItem(t, e).data("ui-autocomplete-item", e)
        },
        _renderItem: function(e, i) {
            return t("<li>").append(t("<div>").text(i.label)).appendTo(e)
        },
        _move: function(t, e) {
            return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(t) || this.menu.isLastItem() && /^next/.test(t) ? (this.isMultiLine || this._value(this.term),
            this.menu.blur(),
            void 0) : (this.menu[t](e),
            void 0) : (this.search(null, e),
            void 0)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(t, e) {
            (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(t, e),
            e.preventDefault())
        },
        _isContentEditable: function(t) {
            if (!t.length)
                return !1;
            var e = t.prop("contentEditable");
            return "inherit" === e ? this._isContentEditable(t.parent()) : "true" === e
        }
    }),
    t.extend(t.ui.autocomplete, {
        escapeRegex: function(t) {
            return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(e, i) {
            var s = RegExp(t.ui.autocomplete.escapeRegex(i), "i");
            return t.grep(e, function(t) {
                return s.test(t.label || t.value || t)
            })
        }
    }),
    t.widget("ui.autocomplete", t.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(t) {
                    return t + (t > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(e) {
            var i;
            this._superApply(arguments),
            this.options.disabled || this.cancelSearch || (i = e && e.length ? this.options.messages.results(e.length) : this.options.messages.noResults,
            this.liveRegion.children().hide(),
            t("<div>").text(i).appendTo(this.liveRegion))
        }
    }),
    t.ui.autocomplete;
    var g = /ui-corner-([a-z]){2,6}/g;
    t.widget("ui.controlgroup", {
        version: "1.12.1",
        defaultElement: "<div>",
        options: {
            direction: "horizontal",
            disabled: null,
            onlyVisible: !0,
            items: {
                button: "input[type=button], input[type=submit], input[type=reset], button, a",
                controlgroupLabel: ".ui-controlgroup-label",
                checkboxradio: "input[type='checkbox'], input[type='radio']",
                selectmenu: "select",
                spinner: ".ui-spinner-input"
            }
        },
        _create: function() {
            this._enhance()
        },
        _enhance: function() {
            this.element.attr("role", "toolbar"),
            this.refresh()
        },
        _destroy: function() {
            this._callChildMethod("destroy"),
            this.childWidgets.removeData("ui-controlgroup-data"),
            this.element.removeAttr("role"),
            this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()
        },
        _initWidgets: function() {
            var e = this
              , i = [];
            t.each(this.options.items, function(s, n) {
                var o, a = {};
                return n ? "controlgroupLabel" === s ? (o = e.element.find(n),
                o.each(function() {
                    var e = t(this);
                    e.children(".ui-controlgroup-label-contents").length || e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")
                }),
                e._addClass(o, null, "ui-widget ui-widget-content ui-state-default"),
                i = i.concat(o.get()),
                void 0) : (t.fn[s] && (a = e["_" + s + "Options"] ? e["_" + s + "Options"]("middle") : {
                    classes: {}
                },
                e.element.find(n).each(function() {
                    var n = t(this)
                      , o = n[s]("instance")
                      , r = t.widget.extend({}, a);
                    if ("button" !== s || !n.parent(".ui-spinner").length) {
                        o || (o = n[s]()[s]("instance")),
                        o && (r.classes = e._resolveClassesValues(r.classes, o)),
                        n[s](r);
                        var h = n[s]("widget");
                        t.data(h[0], "ui-controlgroup-data", o ? o : n[s]("instance")),
                        i.push(h[0])
                    }
                })),
                void 0) : void 0
            }),
            this.childWidgets = t(t.unique(i)),
            this._addClass(this.childWidgets, "ui-controlgroup-item")
        },
        _callChildMethod: function(e) {
            this.childWidgets.each(function() {
                var i = t(this)
                  , s = i.data("ui-controlgroup-data");
                s && s[e] && s[e]()
            })
        },
        _updateCornerClass: function(t, e) {
            var i = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"
              , s = this._buildSimpleOptions(e, "label").classes.label;
            this._removeClass(t, null, i),
            this._addClass(t, null, s)
        },
        _buildSimpleOptions: function(t, e) {
            var i = "vertical" === this.options.direction
              , s = {
                classes: {}
            };
            return s.classes[e] = {
                middle: "",
                first: "ui-corner-" + (i ? "top" : "left"),
                last: "ui-corner-" + (i ? "bottom" : "right"),
                only: "ui-corner-all"
            }[t],
            s
        },
        _spinnerOptions: function(t) {
            var e = this._buildSimpleOptions(t, "ui-spinner");
            return e.classes["ui-spinner-up"] = "",
            e.classes["ui-spinner-down"] = "",
            e
        },
        _buttonOptions: function(t) {
            return this._buildSimpleOptions(t, "ui-button")
        },
        _checkboxradioOptions: function(t) {
            return this._buildSimpleOptions(t, "ui-checkboxradio-label")
        },
        _selectmenuOptions: function(t) {
            var e = "vertical" === this.options.direction;
            return {
                width: e ? "auto" : !1,
                classes: {
                    middle: {
                        "ui-selectmenu-button-open": "",
                        "ui-selectmenu-button-closed": ""
                    },
                    first: {
                        "ui-selectmenu-button-open": "ui-corner-" + (e ? "top" : "tl"),
                        "ui-selectmenu-button-closed": "ui-corner-" + (e ? "top" : "left")
                    },
                    last: {
                        "ui-selectmenu-button-open": e ? "" : "ui-corner-tr",
                        "ui-selectmenu-button-closed": "ui-corner-" + (e ? "bottom" : "right")
                    },
                    only: {
                        "ui-selectmenu-button-open": "ui-corner-top",
                        "ui-selectmenu-button-closed": "ui-corner-all"
                    }
                }[t]
            }
        },
        _resolveClassesValues: function(e, i) {
            var s = {};
            return t.each(e, function(n) {
                var o = i.options.classes[n] || "";
                o = t.trim(o.replace(g, "")),
                s[n] = (o + " " + e[n]).replace(/\s+/g, " ")
            }),
            s
        },
        _setOption: function(t, e) {
            return "direction" === t && this._removeClass("ui-controlgroup-" + this.options.direction),
            this._super(t, e),
            "disabled" === t ? (this._callChildMethod(e ? "disable" : "enable"),
            void 0) : (this.refresh(),
            void 0)
        },
        refresh: function() {
            var e, i = this;
            this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction),
            "horizontal" === this.options.direction && this._addClass(null, "ui-helper-clearfix"),
            this._initWidgets(),
            e = this.childWidgets,
            this.options.onlyVisible && (e = e.filter(":visible")),
            e.length && (t.each(["first", "last"], function(t, s) {
                var n = e[s]().data("ui-controlgroup-data");
                if (n && i["_" + n.widgetName + "Options"]) {
                    var o = i["_" + n.widgetName + "Options"](1 === e.length ? "only" : s);
                    o.classes = i._resolveClassesValues(o.classes, n),
                    n.element[n.widgetName](o)
                } else
                    i._updateCornerClass(e[s](), s)
            }),
            this._callChildMethod("refresh"))
        }
    }),
    t.widget("ui.checkboxradio", [t.ui.formResetMixin, {
        version: "1.12.1",
        options: {
            disabled: null,
            label: null,
            icon: !0,
            classes: {
                "ui-checkboxradio-label": "ui-corner-all",
                "ui-checkboxradio-icon": "ui-corner-all"
            }
        },
        _getCreateOptions: function() {
            var e, i, s = this, n = this._super() || {};
            return this._readType(),
            i = this.element.labels(),
            this.label = t(i[i.length - 1]),
            this.label.length || t.error("No label found for checkboxradio widget"),
            this.originalLabel = "",
            this.label.contents().not(this.element[0]).each(function() {
                s.originalLabel += 3 === this.nodeType ? t(this).text() : this.outerHTML
            }),
            this.originalLabel && (n.label = this.originalLabel),
            e = this.element[0].disabled,
            null != e && (n.disabled = e),
            n
        },
        _create: function() {
            var t = this.element[0].checked;
            this._bindFormResetHandler(),
            null == this.options.disabled && (this.options.disabled = this.element[0].disabled),
            this._setOption("disabled", this.options.disabled),
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"),
            this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget"),
            "radio" === this.type && this._addClass(this.label, "ui-checkboxradio-radio-label"),
            this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel),
            this._enhance(),
            t && (this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active"),
            this.icon && this._addClass(this.icon, null, "ui-state-hover")),
            this._on({
                change: "_toggleClasses",
                focus: function() {
                    this._addClass(this.label, null, "ui-state-focus ui-visual-focus")
                },
                blur: function() {
                    this._removeClass(this.label, null, "ui-state-focus ui-visual-focus")
                }
            })
        },
        _readType: function() {
            var e = this.element[0].nodeName.toLowerCase();
            this.type = this.element[0].type,
            "input" === e && /radio|checkbox/.test(this.type) || t.error("Can't create checkboxradio on element.nodeName=" + e + " and element.type=" + this.type)
        },
        _enhance: function() {
            this._updateIcon(this.element[0].checked)
        },
        widget: function() {
            return this.label
        },
        _getRadioGroup: function() {
            var e, i = this.element[0].name, s = "input[name='" + t.ui.escapeSelector(i) + "']";
            return i ? (e = this.form.length ? t(this.form[0].elements).filter(s) : t(s).filter(function() {
                return 0 === t(this).form().length
            }),
            e.not(this.element)) : t([])
        },
        _toggleClasses: function() {
            var e = this.element[0].checked;
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", e),
            this.options.icon && "checkbox" === this.type && this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", e)._toggleClass(this.icon, null, "ui-icon-blank", !e),
            "radio" === this.type && this._getRadioGroup().each(function() {
                var e = t(this).checkboxradio("instance");
                e && e._removeClass(e.label, "ui-checkboxradio-checked", "ui-state-active")
            })
        },
        _destroy: function() {
            this._unbindFormResetHandler(),
            this.icon && (this.icon.remove(),
            this.iconSpace.remove())
        },
        _setOption: function(t, e) {
            return "label" !== t || e ? (this._super(t, e),
            "disabled" === t ? (this._toggleClass(this.label, null, "ui-state-disabled", e),
            this.element[0].disabled = e,
            void 0) : (this.refresh(),
            void 0)) : void 0
        },
        _updateIcon: function(e) {
            var i = "ui-icon ui-icon-background ";
            this.options.icon ? (this.icon || (this.icon = t("<span>"),
            this.iconSpace = t("<span> </span>"),
            this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")),
            "checkbox" === this.type ? (i += e ? "ui-icon-check ui-state-checked" : "ui-icon-blank",
            this._removeClass(this.icon, null, e ? "ui-icon-blank" : "ui-icon-check")) : i += "ui-icon-blank",
            this._addClass(this.icon, "ui-checkboxradio-icon", i),
            e || this._removeClass(this.icon, null, "ui-icon-check ui-state-checked"),
            this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(),
            this.iconSpace.remove(),
            delete this.icon)
        },
        _updateLabel: function() {
            var t = this.label.contents().not(this.element[0]);
            this.icon && (t = t.not(this.icon[0])),
            this.iconSpace && (t = t.not(this.iconSpace[0])),
            t.remove(),
            this.label.append(this.options.label)
        },
        refresh: function() {
            var t = this.element[0].checked
              , e = this.element[0].disabled;
            this._updateIcon(t),
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", t),
            null !== this.options.label && this._updateLabel(),
            e !== this.options.disabled && this._setOptions({
                disabled: e
            })
        }
    }]),
    t.ui.checkboxradio,
    t.widget("ui.button", {
        version: "1.12.1",
        defaultElement: "<button>",
        options: {
            classes: {
                "ui-button": "ui-corner-all"
            },
            disabled: null,
            icon: null,
            iconPosition: "beginning",
            label: null,
            showLabel: !0
        },
        _getCreateOptions: function() {
            var t, e = this._super() || {};
            return this.isInput = this.element.is("input"),
            t = this.element[0].disabled,
            null != t && (e.disabled = t),
            this.originalLabel = this.isInput ? this.element.val() : this.element.html(),
            this.originalLabel && (e.label = this.originalLabel),
            e
        },
        _create: function() {
            !this.option.showLabel & !this.options.icon && (this.options.showLabel = !0),
            null == this.options.disabled && (this.options.disabled = this.element[0].disabled || !1),
            this.hasTitle = !!this.element.attr("title"),
            this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)),
            this._addClass("ui-button", "ui-widget"),
            this._setOption("disabled", this.options.disabled),
            this._enhance(),
            this.element.is("a") && this._on({
                keyup: function(e) {
                    e.keyCode === t.ui.keyCode.SPACE && (e.preventDefault(),
                    this.element[0].click ? this.element[0].click() : this.element.trigger("click"))
                }
            })
        },
        _enhance: function() {
            this.element.is("button") || this.element.attr("role", "button"),
            this.options.icon && (this._updateIcon("icon", this.options.icon),
            this._updateTooltip())
        },
        _updateTooltip: function() {
            this.title = this.element.attr("title"),
            this.options.showLabel || this.title || this.element.attr("title", this.options.label)
        },
        _updateIcon: function(e, i) {
            var s = "iconPosition" !== e
              , n = s ? this.options.iconPosition : i
              , o = "top" === n || "bottom" === n;
            this.icon ? s && this._removeClass(this.icon, null, this.options.icon) : (this.icon = t("<span>"),
            this._addClass(this.icon, "ui-button-icon", "ui-icon"),
            this.options.showLabel || this._addClass("ui-button-icon-only")),
            s && this._addClass(this.icon, null, i),
            this._attachIcon(n),
            o ? (this._addClass(this.icon, null, "ui-widget-icon-block"),
            this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = t("<span> </span>"),
            this._addClass(this.iconSpace, "ui-button-icon-space")),
            this._removeClass(this.icon, null, "ui-wiget-icon-block"),
            this._attachIconSpace(n))
        },
        _destroy: function() {
            this.element.removeAttr("role"),
            this.icon && this.icon.remove(),
            this.iconSpace && this.iconSpace.remove(),
            this.hasTitle || this.element.removeAttr("title")
        },
        _attachIconSpace: function(t) {
            this.icon[/^(?:end|bottom)/.test(t) ? "before" : "after"](this.iconSpace)
        },
        _attachIcon: function(t) {
            this.element[/^(?:end|bottom)/.test(t) ? "append" : "prepend"](this.icon)
        },
        _setOptions: function(t) {
            var e = void 0 === t.showLabel ? this.options.showLabel : t.showLabel
              , i = void 0 === t.icon ? this.options.icon : t.icon;
            e || i || (t.showLabel = !0),
            this._super(t)
        },
        _setOption: function(t, e) {
            "icon" === t && (e ? this._updateIcon(t, e) : this.icon && (this.icon.remove(),
            this.iconSpace && this.iconSpace.remove())),
            "iconPosition" === t && this._updateIcon(t, e),
            "showLabel" === t && (this._toggleClass("ui-button-icon-only", null, !e),
            this._updateTooltip()),
            "label" === t && (this.isInput ? this.element.val(e) : (this.element.html(e),
            this.icon && (this._attachIcon(this.options.iconPosition),
            this._attachIconSpace(this.options.iconPosition)))),
            this._super(t, e),
            "disabled" === t && (this._toggleClass(null, "ui-state-disabled", e),
            this.element[0].disabled = e,
            e && this.element.blur())
        },
        refresh: function() {
            var t = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled");
            t !== this.options.disabled && this._setOptions({
                disabled: t
            }),
            this._updateTooltip()
        }
    }),
    t.uiBackCompat !== !1 && (t.widget("ui.button", t.ui.button, {
        options: {
            text: !0,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text),
            !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel),
            this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary,
            this.options.iconPosition = "end"),
            this._super()
        },
        _setOption: function(t, e) {
            return "text" === t ? (this._super("showLabel", e),
            void 0) : ("showLabel" === t && (this.options.text = e),
            "icon" === t && (this.options.icons.primary = e),
            "icons" === t && (e.primary ? (this._super("icon", e.primary),
            this._super("iconPosition", "beginning")) : e.secondary && (this._super("icon", e.secondary),
            this._super("iconPosition", "end"))),
            this._superApply(arguments),
            void 0)
        }
    }),
    t.fn.button = function(e) {
        return function() {
            return !this.length || this.length && "INPUT" !== this[0].tagName || this.length && "INPUT" === this[0].tagName && "checkbox" !== this.attr("type") && "radio" !== this.attr("type") ? e.apply(this, arguments) : (t.ui.checkboxradio || t.error("Checkboxradio widget missing"),
            0 === arguments.length ? this.checkboxradio({
                icon: !1
            }) : this.checkboxradio.apply(this, arguments))
        }
    }(t.fn.button),
    t.fn.buttonset = function() {
        return t.ui.controlgroup || t.error("Controlgroup widget missing"),
        "option" === arguments[0] && "items" === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [arguments[0], "items.button", arguments[2]]) : "option" === arguments[0] && "items" === arguments[1] ? this.controlgroup.apply(this, [arguments[0], "items.button"]) : ("object" == typeof arguments[0] && arguments[0].items && (arguments[0].items = {
            button: arguments[0].items
        }),
        this.controlgroup.apply(this, arguments))
    }
    ),
    t.ui.button,
    t.extend(t.ui, {
        datepicker: {
            version: "1.12.1"
        }
    });
    var m;
    t.extend(s.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(t) {
            return a(this._defaults, t || {}),
            this
        },
        _attachDatepicker: function(e, i) {
            var s, n, o;
            s = e.nodeName.toLowerCase(),
            n = "div" === s || "span" === s,
            e.id || (this.uuid += 1,
            e.id = "dp" + this.uuid),
            o = this._newInst(t(e), n),
            o.settings = t.extend({}, i || {}),
            "input" === s ? this._connectDatepicker(e, o) : n && this._inlineDatepicker(e, o)
        },
        _newInst: function(e, i) {
            var s = e[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return {
                id: s,
                input: e,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: i,
                dpDiv: i ? n(t("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv
            }
        },
        _connectDatepicker: function(e, i) {
            var s = t(e);
            i.append = t([]),
            i.trigger = t([]),
            s.hasClass(this.markerClassName) || (this._attachments(s, i),
            s.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp),
            this._autoSize(i),
            t.data(e, "datepicker", i),
            i.settings.disabled && this._disableDatepicker(e))
        },
        _attachments: function(e, i) {
            var s, n, o, a = this._get(i, "appendText"), r = this._get(i, "isRTL");
            i.append && i.append.remove(),
            a && (i.append = t("<span class='" + this._appendClass + "'>" + a + "</span>"),
            e[r ? "before" : "after"](i.append)),
            e.off("focus", this._showDatepicker),
            i.trigger && i.trigger.remove(),
            s = this._get(i, "showOn"),
            ("focus" === s || "both" === s) && e.on("focus", this._showDatepicker),
            ("button" === s || "both" === s) && (n = this._get(i, "buttonText"),
            o = this._get(i, "buttonImage"),
            i.trigger = t(this._get(i, "buttonImageOnly") ? t("<img/>").addClass(this._triggerClass).attr({
                src: o,
                alt: n,
                title: n
            }) : t("<button type='button'></button>").addClass(this._triggerClass).html(o ? t("<img/>").attr({
                src: o,
                alt: n,
                title: n
            }) : n)),
            e[r ? "before" : "after"](i.trigger),
            i.trigger.on("click", function() {
                return t.datepicker._datepickerShowing && t.datepicker._lastInput === e[0] ? t.datepicker._hideDatepicker() : t.datepicker._datepickerShowing && t.datepicker._lastInput !== e[0] ? (t.datepicker._hideDatepicker(),
                t.datepicker._showDatepicker(e[0])) : t.datepicker._showDatepicker(e[0]),
                !1
            }))
        },
        _autoSize: function(t) {
            if (this._get(t, "autoSize") && !t.inline) {
                var e, i, s, n, o = new Date(2009,11,20), a = this._get(t, "dateFormat");
                a.match(/[DM]/) && (e = function(t) {
                    for (i = 0,
                    s = 0,
                    n = 0; t.length > n; n++)
                        t[n].length > i && (i = t[n].length,
                        s = n);
                    return s
                }
                ,
                o.setMonth(e(this._get(t, a.match(/MM/) ? "monthNames" : "monthNamesShort"))),
                o.setDate(e(this._get(t, a.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - o.getDay())),
                t.input.attr("size", this._formatDate(t, o).length)
            }
        },
        _inlineDatepicker: function(e, i) {
            var s = t(e);
            s.hasClass(this.markerClassName) || (s.addClass(this.markerClassName).append(i.dpDiv),
            t.data(e, "datepicker", i),
            this._setDate(i, this._getDefaultDate(i), !0),
            this._updateDatepicker(i),
            this._updateAlternate(i),
            i.settings.disabled && this._disableDatepicker(e),
            i.dpDiv.css("display", "block"))
        },
        _dialogDatepicker: function(e, i, s, n, o) {
            var r, h, l, c, u, d = this._dialogInst;
            return d || (this.uuid += 1,
            r = "dp" + this.uuid,
            this._dialogInput = t("<input type='text' id='" + r + "' style='position: absolute; top: -100px; width: 0px;'/>"),
            this._dialogInput.on("keydown", this._doKeyDown),
            t("body").append(this._dialogInput),
            d = this._dialogInst = this._newInst(this._dialogInput, !1),
            d.settings = {},
            t.data(this._dialogInput[0], "datepicker", d)),
            a(d.settings, n || {}),
            i = i && i.constructor === Date ? this._formatDate(d, i) : i,
            this._dialogInput.val(i),
            this._pos = o ? o.length ? o : [o.pageX, o.pageY] : null,
            this._pos || (h = document.documentElement.clientWidth,
            l = document.documentElement.clientHeight,
            c = document.documentElement.scrollLeft || document.body.scrollLeft,
            u = document.documentElement.scrollTop || document.body.scrollTop,
            this._pos = [h / 2 - 100 + c, l / 2 - 150 + u]),
            this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"),
            d.settings.onSelect = s,
            this._inDialog = !0,
            this.dpDiv.addClass(this._dialogClass),
            this._showDatepicker(this._dialogInput[0]),
            t.blockUI && t.blockUI(this.dpDiv),
            t.data(this._dialogInput[0], "datepicker", d),
            this
        },
        _destroyDatepicker: function(e) {
            var i, s = t(e), n = t.data(e, "datepicker");
            s.hasClass(this.markerClassName) && (i = e.nodeName.toLowerCase(),
            t.removeData(e, "datepicker"),
            "input" === i ? (n.append.remove(),
            n.trigger.remove(),
            s.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp)) : ("div" === i || "span" === i) && s.removeClass(this.markerClassName).empty(),
            m === n && (m = null))
        },
        _enableDatepicker: function(e) {
            var i, s, n = t(e), o = t.data(e, "datepicker");
            n.hasClass(this.markerClassName) && (i = e.nodeName.toLowerCase(),
            "input" === i ? (e.disabled = !1,
            o.trigger.filter("button").each(function() {
                this.disabled = !1
            }).end().filter("img").css({
                opacity: "1.0",
                cursor: ""
            })) : ("div" === i || "span" === i) && (s = n.children("." + this._inlineClass),
            s.children().removeClass("ui-state-disabled"),
            s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)),
            this._disabledInputs = t.map(this._disabledInputs, function(t) {
                return t === e ? null : t
            }))
        },
        _disableDatepicker: function(e) {
            var i, s, n = t(e), o = t.data(e, "datepicker");
            n.hasClass(this.markerClassName) && (i = e.nodeName.toLowerCase(),
            "input" === i ? (e.disabled = !0,
            o.trigger.filter("button").each(function() {
                this.disabled = !0
            }).end().filter("img").css({
                opacity: "0.5",
                cursor: "default"
            })) : ("div" === i || "span" === i) && (s = n.children("." + this._inlineClass),
            s.children().addClass("ui-state-disabled"),
            s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)),
            this._disabledInputs = t.map(this._disabledInputs, function(t) {
                return t === e ? null : t
            }),
            this._disabledInputs[this._disabledInputs.length] = e)
        },
        _isDisabledDatepicker: function(t) {
            if (!t)
                return !1;
            for (var e = 0; this._disabledInputs.length > e; e++)
                if (this._disabledInputs[e] === t)
                    return !0;
            return !1
        },
        _getInst: function(e) {
            try {
                return t.data(e, "datepicker")
            } catch (i) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(e, i, s) {
            var n, o, r, h, l = this._getInst(e);
            return 2 === arguments.length && "string" == typeof i ? "defaults" === i ? t.extend({}, t.datepicker._defaults) : l ? "all" === i ? t.extend({}, l.settings) : this._get(l, i) : null : (n = i || {},
            "string" == typeof i && (n = {},
            n[i] = s),
            l && (this._curInst === l && this._hideDatepicker(),
            o = this._getDateDatepicker(e, !0),
            r = this._getMinMaxDate(l, "min"),
            h = this._getMinMaxDate(l, "max"),
            a(l.settings, n),
            null !== r && void 0 !== n.dateFormat && void 0 === n.minDate && (l.settings.minDate = this._formatDate(l, r)),
            null !== h && void 0 !== n.dateFormat && void 0 === n.maxDate && (l.settings.maxDate = this._formatDate(l, h)),
            "disabled"in n && (n.disabled ? this._disableDatepicker(e) : this._enableDatepicker(e)),
            this._attachments(t(e), l),
            this._autoSize(l),
            this._setDate(l, o),
            this._updateAlternate(l),
            this._updateDatepicker(l)),
            void 0)
        },
        _changeDatepicker: function(t, e, i) {
            this._optionDatepicker(t, e, i)
        },
        _refreshDatepicker: function(t) {
            var e = this._getInst(t);
            e && this._updateDatepicker(e)
        },
        _setDateDatepicker: function(t, e) {
            var i = this._getInst(t);
            i && (this._setDate(i, e),
            this._updateDatepicker(i),
            this._updateAlternate(i))
        },
        _getDateDatepicker: function(t, e) {
            var i = this._getInst(t);
            return i && !i.inline && this._setDateFromField(i, e),
            i ? this._getDate(i) : null
        },
        _doKeyDown: function(e) {
            var i, s, n, o = t.datepicker._getInst(e.target), a = !0, r = o.dpDiv.is(".ui-datepicker-rtl");
            if (o._keyEvent = !0,
            t.datepicker._datepickerShowing)
                switch (e.keyCode) {
                case 9:
                    t.datepicker._hideDatepicker(),
                    a = !1;
                    break;
                case 13:
                    return n = t("td." + t.datepicker._dayOverClass + ":not(." + t.datepicker._currentClass + ")", o.dpDiv),
                    n[0] && t.datepicker._selectDay(e.target, o.selectedMonth, o.selectedYear, n[0]),
                    i = t.datepicker._get(o, "onSelect"),
                    i ? (s = t.datepicker._formatDate(o),
                    i.apply(o.input ? o.input[0] : null, [s, o])) : t.datepicker._hideDatepicker(),
                    !1;
                case 27:
                    t.datepicker._hideDatepicker();
                    break;
                case 33:
                    t.datepicker._adjustDate(e.target, e.ctrlKey ? -t.datepicker._get(o, "stepBigMonths") : -t.datepicker._get(o, "stepMonths"), "M");
                    break;
                case 34:
                    t.datepicker._adjustDate(e.target, e.ctrlKey ? +t.datepicker._get(o, "stepBigMonths") : +t.datepicker._get(o, "stepMonths"), "M");
                    break;
                case 35:
                    (e.ctrlKey || e.metaKey) && t.datepicker._clearDate(e.target),
                    a = e.ctrlKey || e.metaKey;
                    break;
                case 36:
                    (e.ctrlKey || e.metaKey) && t.datepicker._gotoToday(e.target),
                    a = e.ctrlKey || e.metaKey;
                    break;
                case 37:
                    (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, r ? 1 : -1, "D"),
                    a = e.ctrlKey || e.metaKey,
                    e.originalEvent.altKey && t.datepicker._adjustDate(e.target, e.ctrlKey ? -t.datepicker._get(o, "stepBigMonths") : -t.datepicker._get(o, "stepMonths"), "M");
                    break;
                case 38:
                    (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, -7, "D"),
                    a = e.ctrlKey || e.metaKey;
                    break;
                case 39:
                    (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, r ? -1 : 1, "D"),
                    a = e.ctrlKey || e.metaKey,
                    e.originalEvent.altKey && t.datepicker._adjustDate(e.target, e.ctrlKey ? +t.datepicker._get(o, "stepBigMonths") : +t.datepicker._get(o, "stepMonths"), "M");
                    break;
                case 40:
                    (e.ctrlKey || e.metaKey) && t.datepicker._adjustDate(e.target, 7, "D"),
                    a = e.ctrlKey || e.metaKey;
                    break;
                default:
                    a = !1
                }
            else
                36 === e.keyCode && e.ctrlKey ? t.datepicker._showDatepicker(this) : a = !1;
            a && (e.preventDefault(),
            e.stopPropagation())
        },
        _doKeyPress: function(e) {
            var i, s, n = t.datepicker._getInst(e.target);
            return t.datepicker._get(n, "constrainInput") ? (i = t.datepicker._possibleChars(t.datepicker._get(n, "dateFormat")),
            s = String.fromCharCode(null == e.charCode ? e.keyCode : e.charCode),
            e.ctrlKey || e.metaKey || " " > s || !i || i.indexOf(s) > -1) : void 0
        },
        _doKeyUp: function(e) {
            var i, s = t.datepicker._getInst(e.target);
            if (s.input.val() !== s.lastVal)
                try {
                    i = t.datepicker.parseDate(t.datepicker._get(s, "dateFormat"), s.input ? s.input.val() : null, t.datepicker._getFormatConfig(s)),
                    i && (t.datepicker._setDateFromField(s),
                    t.datepicker._updateAlternate(s),
                    t.datepicker._updateDatepicker(s))
                } catch (n) {}
            return !0
        },
        _showDatepicker: function(e) {
            if (e = e.target || e,
            "input" !== e.nodeName.toLowerCase() && (e = t("input", e.parentNode)[0]),
            !t.datepicker._isDisabledDatepicker(e) && t.datepicker._lastInput !== e) {
                var s, n, o, r, h, l, c;
                s = t.datepicker._getInst(e),
                t.datepicker._curInst && t.datepicker._curInst !== s && (t.datepicker._curInst.dpDiv.stop(!0, !0),
                s && t.datepicker._datepickerShowing && t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),
                n = t.datepicker._get(s, "beforeShow"),
                o = n ? n.apply(e, [e, s]) : {},
                o !== !1 && (a(s.settings, o),
                s.lastVal = null,
                t.datepicker._lastInput = e,
                t.datepicker._setDateFromField(s),
                t.datepicker._inDialog && (e.value = ""),
                t.datepicker._pos || (t.datepicker._pos = t.datepicker._findPos(e),
                t.datepicker._pos[1] += e.offsetHeight),
                r = !1,
                t(e).parents().each(function() {
                    return r |= "fixed" === t(this).css("position"),
                    !r
                }),
                h = {
                    left: t.datepicker._pos[0],
                    top: t.datepicker._pos[1]
                },
                t.datepicker._pos = null,
                s.dpDiv.empty(),
                s.dpDiv.css({
                    position: "absolute",
                    display: "block",
                    top: "-1000px"
                }),
                t.datepicker._updateDatepicker(s),
                h = t.datepicker._checkOffset(s, h, r),
                s.dpDiv.css({
                    position: t.datepicker._inDialog && t.blockUI ? "static" : r ? "fixed" : "absolute",
                    display: "none",
                    left: h.left + "px",
                    top: h.top + "px"
                }),
                s.inline || (l = t.datepicker._get(s, "showAnim"),
                c = t.datepicker._get(s, "duration"),
                s.dpDiv.css("z-index", i(t(e)) + 1),
                t.datepicker._datepickerShowing = !0,
                t.effects && t.effects.effect[l] ? s.dpDiv.show(l, t.datepicker._get(s, "showOptions"), c) : s.dpDiv[l || "show"](l ? c : null),
                t.datepicker._shouldFocusInput(s) && s.input.trigger("focus"),
                t.datepicker._curInst = s))
            }
        },
        _updateDatepicker: function(e) {
            this.maxRows = 4,
            m = e,
            e.dpDiv.empty().append(this._generateHTML(e)),
            this._attachHandlers(e);
            var i, s = this._getNumberOfMonths(e), n = s[1], a = 17, r = e.dpDiv.find("." + this._dayOverClass + " a");
            r.length > 0 && o.apply(r.get(0)),
            e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),
            n > 1 && e.dpDiv.addClass("ui-datepicker-multi-" + n).css("width", a * n + "em"),
            e.dpDiv[(1 !== s[0] || 1 !== s[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"),
            e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"),
            e === t.datepicker._curInst && t.datepicker._datepickerShowing && t.datepicker._shouldFocusInput(e) && e.input.trigger("focus"),
            e.yearshtml && (i = e.yearshtml,
            setTimeout(function() {
                i === e.yearshtml && e.yearshtml && e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),
                i = e.yearshtml = null
            }, 0))
        },
        _shouldFocusInput: function(t) {
            return t.input && t.input.is(":visible") && !t.input.is(":disabled") && !t.input.is(":focus")
        },
        _checkOffset: function(e, i, s) {
            var n = e.dpDiv.outerWidth()
              , o = e.dpDiv.outerHeight()
              , a = e.input ? e.input.outerWidth() : 0
              , r = e.input ? e.input.outerHeight() : 0
              , h = document.documentElement.clientWidth + (s ? 0 : t(document).scrollLeft())
              , l = document.documentElement.clientHeight + (s ? 0 : t(document).scrollTop());
            return i.left -= this._get(e, "isRTL") ? n - a : 0,
            i.left -= s && i.left === e.input.offset().left ? t(document).scrollLeft() : 0,
            i.top -= s && i.top === e.input.offset().top + r ? t(document).scrollTop() : 0,
            i.left -= Math.min(i.left, i.left + n > h && h > n ? Math.abs(i.left + n - h) : 0),
            i.top -= Math.min(i.top, i.top + o > l && l > o ? Math.abs(o + r) : 0),
            i
        },
        _findPos: function(e) {
            for (var i, s = this._getInst(e), n = this._get(s, "isRTL"); e && ("hidden" === e.type || 1 !== e.nodeType || t.expr.filters.hidden(e)); )
                e = e[n ? "previousSibling" : "nextSibling"];
            return i = t(e).offset(),
            [i.left, i.top]
        },
        _hideDatepicker: function(e) {
            var i, s, n, o, a = this._curInst;
            !a || e && a !== t.data(e, "datepicker") || this._datepickerShowing && (i = this._get(a, "showAnim"),
            s = this._get(a, "duration"),
            n = function() {
                t.datepicker._tidyDialog(a)
            }
            ,
            t.effects && (t.effects.effect[i] || t.effects[i]) ? a.dpDiv.hide(i, t.datepicker._get(a, "showOptions"), s, n) : a.dpDiv["slideDown" === i ? "slideUp" : "fadeIn" === i ? "fadeOut" : "hide"](i ? s : null, n),
            i || n(),
            this._datepickerShowing = !1,
            o = this._get(a, "onClose"),
            o && o.apply(a.input ? a.input[0] : null, [a.input ? a.input.val() : "", a]),
            this._lastInput = null,
            this._inDialog && (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px"
            }),
            t.blockUI && (t.unblockUI(),
            t("body").append(this.dpDiv))),
            this._inDialog = !1)
        },
        _tidyDialog: function(t) {
            t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(e) {
            if (t.datepicker._curInst) {
                var i = t(e.target)
                  , s = t.datepicker._getInst(i[0]);
                (i[0].id !== t.datepicker._mainDivId && 0 === i.parents("#" + t.datepicker._mainDivId).length && !i.hasClass(t.datepicker.markerClassName) && !i.closest("." + t.datepicker._triggerClass).length && t.datepicker._datepickerShowing && (!t.datepicker._inDialog || !t.blockUI) || i.hasClass(t.datepicker.markerClassName) && t.datepicker._curInst !== s) && t.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function(e, i, s) {
            var n = t(e)
              , o = this._getInst(n[0]);
            this._isDisabledDatepicker(n[0]) || (this._adjustInstDate(o, i + ("M" === s ? this._get(o, "showCurrentAtPos") : 0), s),
            this._updateDatepicker(o))
        },
        _gotoToday: function(e) {
            var i, s = t(e), n = this._getInst(s[0]);
            this._get(n, "gotoCurrent") && n.currentDay ? (n.selectedDay = n.currentDay,
            n.drawMonth = n.selectedMonth = n.currentMonth,
            n.drawYear = n.selectedYear = n.currentYear) : (i = new Date,
            n.selectedDay = i.getDate(),
            n.drawMonth = n.selectedMonth = i.getMonth(),
            n.drawYear = n.selectedYear = i.getFullYear()),
            this._notifyChange(n),
            this._adjustDate(s)
        },
        _selectMonthYear: function(e, i, s) {
            var n = t(e)
              , o = this._getInst(n[0]);
            o["selected" + ("M" === s ? "Month" : "Year")] = o["draw" + ("M" === s ? "Month" : "Year")] = parseInt(i.options[i.selectedIndex].value, 10),
            this._notifyChange(o),
            this._adjustDate(n)
        },
        _selectDay: function(e, i, s, n) {
            var o, a = t(e);
            t(n).hasClass(this._unselectableClass) || this._isDisabledDatepicker(a[0]) || (o = this._getInst(a[0]),
            o.selectedDay = o.currentDay = t("a", n).html(),
            o.selectedMonth = o.currentMonth = i,
            o.selectedYear = o.currentYear = s,
            this._selectDate(e, this._formatDate(o, o.currentDay, o.currentMonth, o.currentYear)))
        },
        _clearDate: function(e) {
            var i = t(e);
            this._selectDate(i, "")
        },
        _selectDate: function(e, i) {
            var s, n = t(e), o = this._getInst(n[0]);
            i = null != i ? i : this._formatDate(o),
            o.input && o.input.val(i),
            this._updateAlternate(o),
            s = this._get(o, "onSelect"),
            s ? s.apply(o.input ? o.input[0] : null, [i, o]) : o.input && o.input.trigger("change"),
            o.inline ? this._updateDatepicker(o) : (this._hideDatepicker(),
            this._lastInput = o.input[0],
            "object" != typeof o.input[0] && o.input.trigger("focus"),
            this._lastInput = null)
        },
        _updateAlternate: function(e) {
            var i, s, n, o = this._get(e, "altField");
            o && (i = this._get(e, "altFormat") || this._get(e, "dateFormat"),
            s = this._getDate(e),
            n = this.formatDate(i, s, this._getFormatConfig(e)),
            t(o).val(n))
        },
        noWeekends: function(t) {
            var e = t.getDay();
            return [e > 0 && 6 > e, ""]
        },
        iso8601Week: function(t) {
            var e, i = new Date(t.getTime());
            return i.setDate(i.getDate() + 4 - (i.getDay() || 7)),
            e = i.getTime(),
            i.setMonth(0),
            i.setDate(1),
            Math.floor(Math.round((e - i) / 864e5) / 7) + 1
        },
        parseDate: function(e, i, s) {
            if (null == e || null == i)
                throw "Invalid arguments";
            if (i = "object" == typeof i ? "" + i : i + "",
            "" === i)
                return null;
            var n, o, a, r, h = 0, l = (s ? s.shortYearCutoff : null) || this._defaults.shortYearCutoff, c = "string" != typeof l ? l : (new Date).getFullYear() % 100 + parseInt(l, 10), u = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort, d = (s ? s.dayNames : null) || this._defaults.dayNames, p = (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort, f = (s ? s.monthNames : null) || this._defaults.monthNames, g = -1, m = -1, _ = -1, v = -1, b = !1, y = function(t) {
                var i = e.length > n + 1 && e.charAt(n + 1) === t;
                return i && n++,
                i
            }, w = function(t) {
                var e = y(t)
                  , s = "@" === t ? 14 : "!" === t ? 20 : "y" === t && e ? 4 : "o" === t ? 3 : 2
                  , n = "y" === t ? s : 1
                  , o = RegExp("^\\d{" + n + "," + s + "}")
                  , a = i.substring(h).match(o);
                if (!a)
                    throw "Missing number at position " + h;
                return h += a[0].length,
                parseInt(a[0], 10)
            }, k = function(e, s, n) {
                var o = -1
                  , a = t.map(y(e) ? n : s, function(t, e) {
                    return [[e, t]]
                }).sort(function(t, e) {
                    return -(t[1].length - e[1].length)
                });
                if (t.each(a, function(t, e) {
                    var s = e[1];
                    return i.substr(h, s.length).toLowerCase() === s.toLowerCase() ? (o = e[0],
                    h += s.length,
                    !1) : void 0
                }),
                -1 !== o)
                    return o + 1;
                throw "Unknown name at position " + h
            }, x = function() {
                if (i.charAt(h) !== e.charAt(n))
                    throw "Unexpected literal at position " + h;
                h++
            };
            for (n = 0; e.length > n; n++)
                if (b)
                    "'" !== e.charAt(n) || y("'") ? x() : b = !1;
                else
                    switch (e.charAt(n)) {
                    case "d":
                        _ = w("d");
                        break;
                    case "D":
                        k("D", u, d);
                        break;
                    case "o":
                        v = w("o");
                        break;
                    case "m":
                        m = w("m");
                        break;
                    case "M":
                        m = k("M", p, f);
                        break;
                    case "y":
                        g = w("y");
                        break;
                    case "@":
                        r = new Date(w("@")),
                        g = r.getFullYear(),
                        m = r.getMonth() + 1,
                        _ = r.getDate();
                        break;
                    case "!":
                        r = new Date((w("!") - this._ticksTo1970) / 1e4),
                        g = r.getFullYear(),
                        m = r.getMonth() + 1,
                        _ = r.getDate();
                        break;
                    case "'":
                        y("'") ? x() : b = !0;
                        break;
                    default:
                        x()
                    }
            if (i.length > h && (a = i.substr(h),
            !/^\s+/.test(a)))
                throw "Extra/unparsed characters found in date: " + a;
            if (-1 === g ? g = (new Date).getFullYear() : 100 > g && (g += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (c >= g ? 0 : -100)),
            v > -1)
                for (m = 1,
                _ = v; ; ) {
                    if (o = this._getDaysInMonth(g, m - 1),
                    o >= _)
                        break;
                    m++,
                    _ -= o
                }
            if (r = this._daylightSavingAdjust(new Date(g,m - 1,_)),
            r.getFullYear() !== g || r.getMonth() + 1 !== m || r.getDate() !== _)
                throw "Invalid date";
            return r
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: 1e7 * 60 * 60 * 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
        formatDate: function(t, e, i) {
            if (!e)
                return "";
            var s, n = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort, o = (i ? i.dayNames : null) || this._defaults.dayNames, a = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort, r = (i ? i.monthNames : null) || this._defaults.monthNames, h = function(e) {
                var i = t.length > s + 1 && t.charAt(s + 1) === e;
                return i && s++,
                i
            }, l = function(t, e, i) {
                var s = "" + e;
                if (h(t))
                    for (; i > s.length; )
                        s = "0" + s;
                return s
            }, c = function(t, e, i, s) {
                return h(t) ? s[e] : i[e]
            }, u = "", d = !1;
            if (e)
                for (s = 0; t.length > s; s++)
                    if (d)
                        "'" !== t.charAt(s) || h("'") ? u += t.charAt(s) : d = !1;
                    else
                        switch (t.charAt(s)) {
                        case "d":
                            u += l("d", e.getDate(), 2);
                            break;
                        case "D":
                            u += c("D", e.getDay(), n, o);
                            break;
                        case "o":
                            u += l("o", Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime() - new Date(e.getFullYear(),0,0).getTime()) / 864e5), 3);
                            break;
                        case "m":
                            u += l("m", e.getMonth() + 1, 2);
                            break;
                        case "M":
                            u += c("M", e.getMonth(), a, r);
                            break;
                        case "y":
                            u += h("y") ? e.getFullYear() : (10 > e.getFullYear() % 100 ? "0" : "") + e.getFullYear() % 100;
                            break;
                        case "@":
                            u += e.getTime();
                            break;
                        case "!":
                            u += 1e4 * e.getTime() + this._ticksTo1970;
                            break;
                        case "'":
                            h("'") ? u += "'" : d = !0;
                            break;
                        default:
                            u += t.charAt(s)
                        }
            return u
        },
        _possibleChars: function(t) {
            var e, i = "", s = !1, n = function(i) {
                var s = t.length > e + 1 && t.charAt(e + 1) === i;
                return s && e++,
                s
            };
            for (e = 0; t.length > e; e++)
                if (s)
                    "'" !== t.charAt(e) || n("'") ? i += t.charAt(e) : s = !1;
                else
                    switch (t.charAt(e)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        i += "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null;
                    case "'":
                        n("'") ? i += "'" : s = !0;
                        break;
                    default:
                        i += t.charAt(e)
                    }
            return i
        },
        _get: function(t, e) {
            return void 0 !== t.settings[e] ? t.settings[e] : this._defaults[e]
        },
        _setDateFromField: function(t, e) {
            if (t.input.val() !== t.lastVal) {
                var i = this._get(t, "dateFormat")
                  , s = t.lastVal = t.input ? t.input.val() : null
                  , n = this._getDefaultDate(t)
                  , o = n
                  , a = this._getFormatConfig(t);
                try {
                    o = this.parseDate(i, s, a) || n
                } catch (r) {
                    s = e ? "" : s
                }
                t.selectedDay = o.getDate(),
                t.drawMonth = t.selectedMonth = o.getMonth(),
                t.drawYear = t.selectedYear = o.getFullYear(),
                t.currentDay = s ? o.getDate() : 0,
                t.currentMonth = s ? o.getMonth() : 0,
                t.currentYear = s ? o.getFullYear() : 0,
                this._adjustInstDate(t)
            }
        },
        _getDefaultDate: function(t) {
            return this._restrictMinMax(t, this._determineDate(t, this._get(t, "defaultDate"), new Date))
        },
        _determineDate: function(e, i, s) {
            var n = function(t) {
                var e = new Date;
                return e.setDate(e.getDate() + t),
                e
            }
              , o = function(i) {
                try {
                    return t.datepicker.parseDate(t.datepicker._get(e, "dateFormat"), i, t.datepicker._getFormatConfig(e))
                } catch (s) {}
                for (var n = (i.toLowerCase().match(/^c/) ? t.datepicker._getDate(e) : null) || new Date, o = n.getFullYear(), a = n.getMonth(), r = n.getDate(), h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, l = h.exec(i); l; ) {
                    switch (l[2] || "d") {
                    case "d":
                    case "D":
                        r += parseInt(l[1], 10);
                        break;
                    case "w":
                    case "W":
                        r += 7 * parseInt(l[1], 10);
                        break;
                    case "m":
                    case "M":
                        a += parseInt(l[1], 10),
                        r = Math.min(r, t.datepicker._getDaysInMonth(o, a));
                        break;
                    case "y":
                    case "Y":
                        o += parseInt(l[1], 10),
                        r = Math.min(r, t.datepicker._getDaysInMonth(o, a))
                    }
                    l = h.exec(i)
                }
                return new Date(o,a,r)
            }
              , a = null == i || "" === i ? s : "string" == typeof i ? o(i) : "number" == typeof i ? isNaN(i) ? s : n(i) : new Date(i.getTime());
            return a = a && "Invalid Date" == "" + a ? s : a,
            a && (a.setHours(0),
            a.setMinutes(0),
            a.setSeconds(0),
            a.setMilliseconds(0)),
            this._daylightSavingAdjust(a)
        },
        _daylightSavingAdjust: function(t) {
            return t ? (t.setHours(t.getHours() > 12 ? t.getHours() + 2 : 0),
            t) : null
        },
        _setDate: function(t, e, i) {
            var s = !e
              , n = t.selectedMonth
              , o = t.selectedYear
              , a = this._restrictMinMax(t, this._determineDate(t, e, new Date));
            t.selectedDay = t.currentDay = a.getDate(),
            t.drawMonth = t.selectedMonth = t.currentMonth = a.getMonth(),
            t.drawYear = t.selectedYear = t.currentYear = a.getFullYear(),
            n === t.selectedMonth && o === t.selectedYear || i || this._notifyChange(t),
            this._adjustInstDate(t),
            t.input && t.input.val(s ? "" : this._formatDate(t))
        },
        _getDate: function(t) {
            var e = !t.currentYear || t.input && "" === t.input.val() ? null : this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));
            return e
        },
        _attachHandlers: function(e) {
            var i = this._get(e, "stepMonths")
              , s = "#" + e.id.replace(/\\\\/g, "\\");
            e.dpDiv.find("[data-handler]").map(function() {
                var e = {
                    prev: function() {
                        t.datepicker._adjustDate(s, -i, "M")
                    },
                    next: function() {
                        t.datepicker._adjustDate(s, +i, "M")
                    },
                    hide: function() {
                        t.datepicker._hideDatepicker()
                    },
                    today: function() {
                        t.datepicker._gotoToday(s)
                    },
                    selectDay: function() {
                        return t.datepicker._selectDay(s, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this),
                        !1
                    },
                    selectMonth: function() {
                        return t.datepicker._selectMonthYear(s, this, "M"),
                        !1
                    },
                    selectYear: function() {
                        return t.datepicker._selectMonthYear(s, this, "Y"),
                        !1
                    }
                };
                t(this).on(this.getAttribute("data-event"), e[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(t) {
            var e, i, s, n, o, a, r, h, l, c, u, d, p, f, g, m, _, v, b, y, w, k, x, C, D, I, T, P, M, S, H, z, O, A, N, W, E, F, L, R = new Date, B = this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())), Y = this._get(t, "isRTL"), j = this._get(t, "showButtonPanel"), q = this._get(t, "hideIfNoPrevNext"), K = this._get(t, "navigationAsDateFormat"), U = this._getNumberOfMonths(t), V = this._get(t, "showCurrentAtPos"), $ = this._get(t, "stepMonths"), X = 1 !== U[0] || 1 !== U[1], G = this._daylightSavingAdjust(t.currentDay ? new Date(t.currentYear,t.currentMonth,t.currentDay) : new Date(9999,9,9)), Q = this._getMinMaxDate(t, "min"), J = this._getMinMaxDate(t, "max"), Z = t.drawMonth - V, te = t.drawYear;
            if (0 > Z && (Z += 12,
            te--),
            J)
                for (e = this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth() - U[0] * U[1] + 1,J.getDate())),
                e = Q && Q > e ? Q : e; this._daylightSavingAdjust(new Date(te,Z,1)) > e; )
                    Z--,
                    0 > Z && (Z = 11,
                    te--);
            for (t.drawMonth = Z,
            t.drawYear = te,
            i = this._get(t, "prevText"),
            i = K ? this.formatDate(i, this._daylightSavingAdjust(new Date(te,Z - $,1)), this._getFormatConfig(t)) : i,
            s = this._canAdjustMonth(t, -1, te, Z) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "e" : "w") + "'>" + i + "</span></a>" : q ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "e" : "w") + "'>" + i + "</span></a>",
            n = this._get(t, "nextText"),
            n = K ? this.formatDate(n, this._daylightSavingAdjust(new Date(te,Z + $,1)), this._getFormatConfig(t)) : n,
            o = this._canAdjustMonth(t, 1, te, Z) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + n + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "w" : "e") + "'>" + n + "</span></a>" : q ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + n + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "w" : "e") + "'>" + n + "</span></a>",
            a = this._get(t, "currentText"),
            r = this._get(t, "gotoCurrent") && t.currentDay ? G : B,
            a = K ? this.formatDate(a, r, this._getFormatConfig(t)) : a,
            h = t.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(t, "closeText") + "</button>",
            l = j ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (Y ? h : "") + (this._isInRange(t, r) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + a + "</button>" : "") + (Y ? "" : h) + "</div>" : "",
            c = parseInt(this._get(t, "firstDay"), 10),
            c = isNaN(c) ? 0 : c,
            u = this._get(t, "showWeek"),
            d = this._get(t, "dayNames"),
            p = this._get(t, "dayNamesMin"),
            f = this._get(t, "monthNames"),
            g = this._get(t, "monthNamesShort"),
            m = this._get(t, "beforeShowDay"),
            _ = this._get(t, "showOtherMonths"),
            v = this._get(t, "selectOtherMonths"),
            b = this._getDefaultDate(t),
            y = "",
            k = 0; U[0] > k; k++) {
                for (x = "",
                this.maxRows = 4,
                C = 0; U[1] > C; C++) {
                    if (D = this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),
                    I = " ui-corner-all",
                    T = "",
                    X) {
                        if (T += "<div class='ui-datepicker-group",
                        U[1] > 1)
                            switch (C) {
                            case 0:
                                T += " ui-datepicker-group-first",
                                I = " ui-corner-" + (Y ? "right" : "left");
                                break;
                            case U[1] - 1:
                                T += " ui-datepicker-group-last",
                                I = " ui-corner-" + (Y ? "left" : "right");
                                break;
                            default:
                                T += " ui-datepicker-group-middle",
                                I = ""
                            }
                        T += "'>"
                    }
                    for (T += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + I + "'>" + (/all|left/.test(I) && 0 === k ? Y ? o : s : "") + (/all|right/.test(I) && 0 === k ? Y ? s : o : "") + this._generateMonthYearHeader(t, Z, te, Q, J, k > 0 || C > 0, f, g) + "</div><table class='ui-datepicker-calendar'><thead>" + "<tr>",
                    P = u ? "<th class='ui-datepicker-week-col'>" + this._get(t, "weekHeader") + "</th>" : "",
                    w = 0; 7 > w; w++)
                        M = (w + c) % 7,
                        P += "<th scope='col'" + ((w + c + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + d[M] + "'>" + p[M] + "</span></th>";
                    for (T += P + "</tr></thead><tbody>",
                    S = this._getDaysInMonth(te, Z),
                    te === t.selectedYear && Z === t.selectedMonth && (t.selectedDay = Math.min(t.selectedDay, S)),
                    H = (this._getFirstDayOfMonth(te, Z) - c + 7) % 7,
                    z = Math.ceil((H + S) / 7),
                    O = X ? this.maxRows > z ? this.maxRows : z : z,
                    this.maxRows = O,
                    A = this._daylightSavingAdjust(new Date(te,Z,1 - H)),
                    N = 0; O > N; N++) {
                        for (T += "<tr>",
                        W = u ? "<td class='ui-datepicker-week-col'>" + this._get(t, "calculateWeek")(A) + "</td>" : "",
                        w = 0; 7 > w; w++)
                            E = m ? m.apply(t.input ? t.input[0] : null, [A]) : [!0, ""],
                            F = A.getMonth() !== Z,
                            L = F && !v || !E[0] || Q && Q > A || J && A > J,
                            W += "<td class='" + ((w + c + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (F ? " ui-datepicker-other-month" : "") + (A.getTime() === D.getTime() && Z === t.selectedMonth && t._keyEvent || b.getTime() === A.getTime() && b.getTime() === D.getTime() ? " " + this._dayOverClass : "") + (L ? " " + this._unselectableClass + " ui-state-disabled" : "") + (F && !_ ? "" : " " + E[1] + (A.getTime() === G.getTime() ? " " + this._currentClass : "") + (A.getTime() === B.getTime() ? " ui-datepicker-today" : "")) + "'" + (F && !_ || !E[2] ? "" : " title='" + E[2].replace(/'/g, "&#39;") + "'") + (L ? "" : " data-handler='selectDay' data-event='click' data-month='" + A.getMonth() + "' data-year='" + A.getFullYear() + "'") + ">" + (F && !_ ? "&#xa0;" : L ? "<span class='ui-state-default'>" + A.getDate() + "</span>" : "<a class='ui-state-default" + (A.getTime() === B.getTime() ? " ui-state-highlight" : "") + (A.getTime() === G.getTime() ? " ui-state-active" : "") + (F ? " ui-priority-secondary" : "") + "' href='#'>" + A.getDate() + "</a>") + "</td>",
                            A.setDate(A.getDate() + 1),
                            A = this._daylightSavingAdjust(A);
                        T += W + "</tr>"
                    }
                    Z++,
                    Z > 11 && (Z = 0,
                    te++),
                    T += "</tbody></table>" + (X ? "</div>" + (U[0] > 0 && C === U[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""),
                    x += T
                }
                y += x
            }
            return y += l,
            t._keyEvent = !1,
            y
        },
        _generateMonthYearHeader: function(t, e, i, s, n, o, a, r) {
            var h, l, c, u, d, p, f, g, m = this._get(t, "changeMonth"), _ = this._get(t, "changeYear"), v = this._get(t, "showMonthAfterYear"), b = "<div class='ui-datepicker-title'>", y = "";
            if (o || !m)
                y += "<span class='ui-datepicker-month'>" + a[e] + "</span>";
            else {
                for (h = s && s.getFullYear() === i,
                l = n && n.getFullYear() === i,
                y += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",
                c = 0; 12 > c; c++)
                    (!h || c >= s.getMonth()) && (!l || n.getMonth() >= c) && (y += "<option value='" + c + "'" + (c === e ? " selected='selected'" : "") + ">" + r[c] + "</option>");
                y += "</select>"
            }
            if (v || (b += y + (!o && m && _ ? "" : "&#xa0;")),
            !t.yearshtml)
                if (t.yearshtml = "",
                o || !_)
                    b += "<span class='ui-datepicker-year'>" + i + "</span>";
                else {
                    for (u = this._get(t, "yearRange").split(":"),
                    d = (new Date).getFullYear(),
                    p = function(t) {
                        var e = t.match(/c[+\-].*/) ? i + parseInt(t.substring(1), 10) : t.match(/[+\-].*/) ? d + parseInt(t, 10) : parseInt(t, 10);
                        return isNaN(e) ? d : e
                    }
                    ,
                    f = p(u[0]),
                    g = Math.max(f, p(u[1] || "")),
                    f = s ? Math.max(f, s.getFullYear()) : f,
                    g = n ? Math.min(g, n.getFullYear()) : g,
                    t.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; g >= f; f++)
                        t.yearshtml += "<option value='" + f + "'" + (f === i ? " selected='selected'" : "") + ">" + f + "</option>";
                    t.yearshtml += "</select>",
                    b += t.yearshtml,
                    t.yearshtml = null
                }
            return b += this._get(t, "yearSuffix"),
            v && (b += (!o && m && _ ? "" : "&#xa0;") + y),
            b += "</div>"
        },
        _adjustInstDate: function(t, e, i) {
            var s = t.selectedYear + ("Y" === i ? e : 0)
              , n = t.selectedMonth + ("M" === i ? e : 0)
              , o = Math.min(t.selectedDay, this._getDaysInMonth(s, n)) + ("D" === i ? e : 0)
              , a = this._restrictMinMax(t, this._daylightSavingAdjust(new Date(s,n,o)));
            t.selectedDay = a.getDate(),
            t.drawMonth = t.selectedMonth = a.getMonth(),
            t.drawYear = t.selectedYear = a.getFullYear(),
            ("M" === i || "Y" === i) && this._notifyChange(t)
        },
        _restrictMinMax: function(t, e) {
            var i = this._getMinMaxDate(t, "min")
              , s = this._getMinMaxDate(t, "max")
              , n = i && i > e ? i : e;
            return s && n > s ? s : n
        },
        _notifyChange: function(t) {
            var e = this._get(t, "onChangeMonthYear");
            e && e.apply(t.input ? t.input[0] : null, [t.selectedYear, t.selectedMonth + 1, t])
        },
        _getNumberOfMonths: function(t) {
            var e = this._get(t, "numberOfMonths");
            return null == e ? [1, 1] : "number" == typeof e ? [1, e] : e
        },
        _getMinMaxDate: function(t, e) {
            return this._determineDate(t, this._get(t, e + "Date"), null)
        },
        _getDaysInMonth: function(t, e) {
            return 32 - this._daylightSavingAdjust(new Date(t,e,32)).getDate()
        },
        _getFirstDayOfMonth: function(t, e) {
            return new Date(t,e,1).getDay()
        },
        _canAdjustMonth: function(t, e, i, s) {
            var n = this._getNumberOfMonths(t)
              , o = this._daylightSavingAdjust(new Date(i,s + (0 > e ? e : n[0] * n[1]),1));
            return 0 > e && o.setDate(this._getDaysInMonth(o.getFullYear(), o.getMonth())),
            this._isInRange(t, o)
        },
        _isInRange: function(t, e) {
            var i, s, n = this._getMinMaxDate(t, "min"), o = this._getMinMaxDate(t, "max"), a = null, r = null, h = this._get(t, "yearRange");
            return h && (i = h.split(":"),
            s = (new Date).getFullYear(),
            a = parseInt(i[0], 10),
            r = parseInt(i[1], 10),
            i[0].match(/[+\-].*/) && (a += s),
            i[1].match(/[+\-].*/) && (r += s)),
            (!n || e.getTime() >= n.getTime()) && (!o || e.getTime() <= o.getTime()) && (!a || e.getFullYear() >= a) && (!r || r >= e.getFullYear())
        },
        _getFormatConfig: function(t) {
            var e = this._get(t, "shortYearCutoff");
            return e = "string" != typeof e ? e : (new Date).getFullYear() % 100 + parseInt(e, 10),
            {
                shortYearCutoff: e,
                dayNamesShort: this._get(t, "dayNamesShort"),
                dayNames: this._get(t, "dayNames"),
                monthNamesShort: this._get(t, "monthNamesShort"),
                monthNames: this._get(t, "monthNames")
            }
        },
        _formatDate: function(t, e, i, s) {
            e || (t.currentDay = t.selectedDay,
            t.currentMonth = t.selectedMonth,
            t.currentYear = t.selectedYear);
            var n = e ? "object" == typeof e ? e : this._daylightSavingAdjust(new Date(s,i,e)) : this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));
            return this.formatDate(this._get(t, "dateFormat"), n, this._getFormatConfig(t))
        }
    }),
    t.fn.datepicker = function(e) {
        if (!this.length)
            return this;
        t.datepicker.initialized || (t(document).on("mousedown", t.datepicker._checkExternalClick),
        t.datepicker.initialized = !0),
        0 === t("#" + t.datepicker._mainDivId).length && t("body").append(t.datepicker.dpDiv);
        var i = Array.prototype.slice.call(arguments, 1);
        return "string" != typeof e || "isDisabled" !== e && "getDate" !== e && "widget" !== e ? "option" === e && 2 === arguments.length && "string" == typeof arguments[1] ? t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i)) : this.each(function() {
            "string" == typeof e ? t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this].concat(i)) : t.datepicker._attachDatepicker(this, e)
        }) : t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i))
    }
    ,
    t.datepicker = new s,
    t.datepicker.initialized = !1,
    t.datepicker.uuid = (new Date).getTime(),
    t.datepicker.version = "1.12.1",
    t.datepicker,
    t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
    var _ = !1;
    t(document).on("mouseup", function() {
        _ = !1
    }),
    t.widget("ui.mouse", {
        version: "1.12.1",
        options: {
            cancel: "input, textarea, button, select, option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var e = this;
            this.element.on("mousedown." + this.widgetName, function(t) {
                return e._mouseDown(t)
            }).on("click." + this.widgetName, function(i) {
                return !0 === t.data(i.target, e.widgetName + ".preventClickEvent") ? (t.removeData(i.target, e.widgetName + ".preventClickEvent"),
                i.stopImmediatePropagation(),
                !1) : void 0
            }),
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.off("." + this.widgetName),
            this._mouseMoveDelegate && this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function(e) {
            if (!_) {
                this._mouseMoved = !1,
                this._mouseStarted && this._mouseUp(e),
                this._mouseDownEvent = e;
                var i = this
                  , s = 1 === e.which
                  , n = "string" == typeof this.options.cancel && e.target.nodeName ? t(e.target).closest(this.options.cancel).length : !1;
                return s && !n && this._mouseCapture(e) ? (this.mouseDelayMet = !this.options.delay,
                this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                    i.mouseDelayMet = !0
                }, this.options.delay)),
                this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(e) !== !1,
                !this._mouseStarted) ? (e.preventDefault(),
                !0) : (!0 === t.data(e.target, this.widgetName + ".preventClickEvent") && t.removeData(e.target, this.widgetName + ".preventClickEvent"),
                this._mouseMoveDelegate = function(t) {
                    return i._mouseMove(t)
                }
                ,
                this._mouseUpDelegate = function(t) {
                    return i._mouseUp(t)
                }
                ,
                this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate),
                e.preventDefault(),
                _ = !0,
                !0)) : !0
            }
        },
        _mouseMove: function(e) {
            if (this._mouseMoved) {
                if (t.ui.ie && (!document.documentMode || 9 > document.documentMode) && !e.button)
                    return this._mouseUp(e);
                if (!e.which)
                    if (e.originalEvent.altKey || e.originalEvent.ctrlKey || e.originalEvent.metaKey || e.originalEvent.shiftKey)
                        this.ignoreMissingWhich = !0;
                    else if (!this.ignoreMissingWhich)
                        return this._mouseUp(e)
            }
            return (e.which || e.button) && (this._mouseMoved = !0),
            this._mouseStarted ? (this._mouseDrag(e),
            e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1,
            this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)),
            !this._mouseStarted)
        },
        _mouseUp: function(e) {
            this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate),
            this._mouseStarted && (this._mouseStarted = !1,
            e.target === this._mouseDownEvent.target && t.data(e.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(e)),
            this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer),
            delete this._mouseDelayTimer),
            this.ignoreMissingWhich = !1,
            _ = !1,
            e.preventDefault()
        },
        _mouseDistanceMet: function(t) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return !0
        }
    }),
    t.ui.plugin = {
        add: function(e, i, s) {
            var n, o = t.ui[e].prototype;
            for (n in s)
                o.plugins[n] = o.plugins[n] || [],
                o.plugins[n].push([i, s[n]])
        },
        call: function(t, e, i, s) {
            var n, o = t.plugins[e];
            if (o && (s || t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType))
                for (n = 0; o.length > n; n++)
                    t.options[o[n][0]] && o[n][1].apply(t.element, i)
        }
    },
    t.ui.safeBlur = function(e) {
        e && "body" !== e.nodeName.toLowerCase() && t(e).trigger("blur")
    }
    ,
    t.widget("ui.draggable", t.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            "original" === this.options.helper && this._setPositionRelative(),
            this.options.addClasses && this._addClass("ui-draggable"),
            this._setHandleClassName(),
            this._mouseInit()
        },
        _setOption: function(t, e) {
            this._super(t, e),
            "handle" === t && (this._removeHandleClassName(),
            this._setHandleClassName())
        },
        _destroy: function() {
            return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0,
            void 0) : (this._removeHandleClassName(),
            this._mouseDestroy(),
            void 0)
        },
        _mouseCapture: function(e) {
            var i = this.options;
            return this.helper || i.disabled || t(e.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(e),
            this.handle ? (this._blurActiveElement(e),
            this._blockFrames(i.iframeFix === !0 ? "iframe" : i.iframeFix),
            !0) : !1)
        },
        _blockFrames: function(e) {
            this.iframeBlocks = this.document.find(e).map(function() {
                var e = t(this);
                return t("<div>").css("position", "absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]
            })
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(),
            delete this.iframeBlocks)
        },
        _blurActiveElement: function(e) {
            var i = t.ui.safeActiveElement(this.document[0])
              , s = t(e.target);
            s.closest(i).length || t.ui.safeBlur(i)
        },
        _mouseStart: function(e) {
            var i = this.options;
            return this.helper = this._createHelper(e),
            this._addClass(this.helper, "ui-draggable-dragging"),
            this._cacheHelperProportions(),
            t.ui.ddmanager && (t.ui.ddmanager.current = this),
            this._cacheMargins(),
            this.cssPosition = this.helper.css("position"),
            this.scrollParent = this.helper.scrollParent(!0),
            this.offsetParent = this.helper.offsetParent(),
            this.hasFixedAncestor = this.helper.parents().filter(function() {
                return "fixed" === t(this).css("position")
            }).length > 0,
            this.positionAbs = this.element.offset(),
            this._refreshOffsets(e),
            this.originalPosition = this.position = this._generatePosition(e, !1),
            this.originalPageX = e.pageX,
            this.originalPageY = e.pageY,
            i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
            this._setContainment(),
            this._trigger("start", e) === !1 ? (this._clear(),
            !1) : (this._cacheHelperProportions(),
            t.ui.ddmanager && !i.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e),
            this._mouseDrag(e, !0),
            t.ui.ddmanager && t.ui.ddmanager.dragStart(this, e),
            !0)
        },
        _refreshOffsets: function(t) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: !1,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            },
            this.offset.click = {
                left: t.pageX - this.offset.left,
                top: t.pageY - this.offset.top
            }
        },
        _mouseDrag: function(e, i) {
            if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()),
            this.position = this._generatePosition(e, !0),
            this.positionAbs = this._convertPositionTo("absolute"),
            !i) {
                var s = this._uiHash();
                if (this._trigger("drag", e, s) === !1)
                    return this._mouseUp(new t.Event("mouseup",e)),
                    !1;
                this.position = s.position
            }
            return this.helper[0].style.left = this.position.left + "px",
            this.helper[0].style.top = this.position.top + "px",
            t.ui.ddmanager && t.ui.ddmanager.drag(this, e),
            !1
        },
        _mouseStop: function(e) {
            var i = this
              , s = !1;
            return t.ui.ddmanager && !this.options.dropBehaviour && (s = t.ui.ddmanager.drop(this, e)),
            this.dropped && (s = this.dropped,
            this.dropped = !1),
            "invalid" === this.options.revert && !s || "valid" === this.options.revert && s || this.options.revert === !0 || t.isFunction(this.options.revert) && this.options.revert.call(this.element, s) ? t(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                i._trigger("stop", e) !== !1 && i._clear()
            }) : this._trigger("stop", e) !== !1 && this._clear(),
            !1
        },
        _mouseUp: function(e) {
            return this._unblockFrames(),
            t.ui.ddmanager && t.ui.ddmanager.dragStop(this, e),
            this.handleElement.is(e.target) && this.element.trigger("focus"),
            t.ui.mouse.prototype._mouseUp.call(this, e)
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp(new t.Event("mouseup",{
                target: this.element[0]
            })) : this._clear(),
            this
        },
        _getHandle: function(e) {
            return this.options.handle ? !!t(e.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _setHandleClassName: function() {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element,
            this._addClass(this.handleElement, "ui-draggable-handle")
        },
        _removeHandleClassName: function() {
            this._removeClass(this.handleElement, "ui-draggable-handle")
        },
        _createHelper: function(e) {
            var i = this.options
              , s = t.isFunction(i.helper)
              , n = s ? t(i.helper.apply(this.element[0], [e])) : "clone" === i.helper ? this.element.clone().removeAttr("id") : this.element;
            return n.parents("body").length || n.appendTo("parent" === i.appendTo ? this.element[0].parentNode : i.appendTo),
            s && n[0] === this.element[0] && this._setPositionRelative(),
            n[0] === this.element[0] || /(fixed|absolute)/.test(n.css("position")) || n.css("position", "absolute"),
            n
        },
        _setPositionRelative: function() {
            /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative")
        },
        _adjustOffsetFromHelper: function(e) {
            "string" == typeof e && (e = e.split(" ")),
            t.isArray(e) && (e = {
                left: +e[0],
                top: +e[1] || 0
            }),
            "left"in e && (this.offset.click.left = e.left + this.margins.left),
            "right"in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left),
            "top"in e && (this.offset.click.top = e.top + this.margins.top),
            "bottom"in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top)
        },
        _isRootNode: function(t) {
            return /(html|body)/i.test(t.tagName) || t === this.document[0]
        },
        _getParentOffset: function() {
            var e = this.offsetParent.offset()
              , i = this.document[0];
            return "absolute" === this.cssPosition && this.scrollParent[0] !== i && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(),
            e.top += this.scrollParent.scrollTop()),
            this._isRootNode(this.offsetParent[0]) && (e = {
                top: 0,
                left: 0
            }),
            {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if ("relative" !== this.cssPosition)
                return {
                    top: 0,
                    left: 0
                };
            var t = this.element.position()
              , e = this._isRootNode(this.scrollParent[0]);
            return {
                top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + (e ? 0 : this.scrollParent.scrollTop()),
                left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + (e ? 0 : this.scrollParent.scrollLeft())
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var e, i, s, n = this.options, o = this.document[0];
            return this.relativeContainer = null,
            n.containment ? "window" === n.containment ? (this.containment = [t(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, t(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, t(window).scrollLeft() + t(window).width() - this.helperProportions.width - this.margins.left, t(window).scrollTop() + (t(window).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top],
            void 0) : "document" === n.containment ? (this.containment = [0, 0, t(o).width() - this.helperProportions.width - this.margins.left, (t(o).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top],
            void 0) : n.containment.constructor === Array ? (this.containment = n.containment,
            void 0) : ("parent" === n.containment && (n.containment = this.helper[0].parentNode),
            i = t(n.containment),
            s = i[0],
            s && (e = /(scroll|auto)/.test(i.css("overflow")),
            this.containment = [(parseInt(i.css("borderLeftWidth"), 10) || 0) + (parseInt(i.css("paddingLeft"), 10) || 0), (parseInt(i.css("borderTopWidth"), 10) || 0) + (parseInt(i.css("paddingTop"), 10) || 0), (e ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) - (parseInt(i.css("borderRightWidth"), 10) || 0) - (parseInt(i.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (e ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) - (parseInt(i.css("borderBottomWidth"), 10) || 0) - (parseInt(i.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom],
            this.relativeContainer = i),
            void 0) : (this.containment = null,
            void 0)
        },
        _convertPositionTo: function(t, e) {
            e || (e = this.position);
            var i = "absolute" === t ? 1 : -1
              , s = this._isRootNode(this.scrollParent[0]);
            return {
                top: e.top + this.offset.relative.top * i + this.offset.parent.top * i - ("fixed" === this.cssPosition ? -this.offset.scroll.top : s ? 0 : this.offset.scroll.top) * i,
                left: e.left + this.offset.relative.left * i + this.offset.parent.left * i - ("fixed" === this.cssPosition ? -this.offset.scroll.left : s ? 0 : this.offset.scroll.left) * i
            }
        },
        _generatePosition: function(t, e) {
            var i, s, n, o, a = this.options, r = this._isRootNode(this.scrollParent[0]), h = t.pageX, l = t.pageY;
            return r && this.offset.scroll || (this.offset.scroll = {
                top: this.scrollParent.scrollTop(),
                left: this.scrollParent.scrollLeft()
            }),
            e && (this.containment && (this.relativeContainer ? (s = this.relativeContainer.offset(),
            i = [this.containment[0] + s.left, this.containment[1] + s.top, this.containment[2] + s.left, this.containment[3] + s.top]) : i = this.containment,
            t.pageX - this.offset.click.left < i[0] && (h = i[0] + this.offset.click.left),
            t.pageY - this.offset.click.top < i[1] && (l = i[1] + this.offset.click.top),
            t.pageX - this.offset.click.left > i[2] && (h = i[2] + this.offset.click.left),
            t.pageY - this.offset.click.top > i[3] && (l = i[3] + this.offset.click.top)),
            a.grid && (n = a.grid[1] ? this.originalPageY + Math.round((l - this.originalPageY) / a.grid[1]) * a.grid[1] : this.originalPageY,
            l = i ? n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3] ? n : n - this.offset.click.top >= i[1] ? n - a.grid[1] : n + a.grid[1] : n,
            o = a.grid[0] ? this.originalPageX + Math.round((h - this.originalPageX) / a.grid[0]) * a.grid[0] : this.originalPageX,
            h = i ? o - this.offset.click.left >= i[0] || o - this.offset.click.left > i[2] ? o : o - this.offset.click.left >= i[0] ? o - a.grid[0] : o + a.grid[0] : o),
            "y" === a.axis && (h = this.originalPageX),
            "x" === a.axis && (l = this.originalPageY)),
            {
                top: l - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : r ? 0 : this.offset.scroll.top),
                left: h - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : r ? 0 : this.offset.scroll.left)
            }
        },
        _clear: function() {
            this._removeClass(this.helper, "ui-draggable-dragging"),
            this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(),
            this.helper = null,
            this.cancelHelperRemoval = !1,
            this.destroyOnClear && this.destroy()
        },
        _trigger: function(e, i, s) {
            return s = s || this._uiHash(),
            t.ui.plugin.call(this, e, [i, s, this], !0),
            /^(drag|start|stop)/.test(e) && (this.positionAbs = this._convertPositionTo("absolute"),
            s.offset = this.positionAbs),
            t.Widget.prototype._trigger.call(this, e, i, s)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }),
    t.ui.plugin.add("draggable", "connectToSortable", {
        start: function(e, i, s) {
            var n = t.extend({}, i, {
                item: s.element
            });
            s.sortables = [],
            t(s.options.connectToSortable).each(function() {
                var i = t(this).sortable("instance");
                i && !i.options.disabled && (s.sortables.push(i),
                i.refreshPositions(),
                i._trigger("activate", e, n))
            })
        },
        stop: function(e, i, s) {
            var n = t.extend({}, i, {
                item: s.element
            });
            s.cancelHelperRemoval = !1,
            t.each(s.sortables, function() {
                var t = this;
                t.isOver ? (t.isOver = 0,
                s.cancelHelperRemoval = !0,
                t.cancelHelperRemoval = !1,
                t._storedCSS = {
                    position: t.placeholder.css("position"),
                    top: t.placeholder.css("top"),
                    left: t.placeholder.css("left")
                },
                t._mouseStop(e),
                t.options.helper = t.options._helper) : (t.cancelHelperRemoval = !0,
                t._trigger("deactivate", e, n))
            })
        },
        drag: function(e, i, s) {
            t.each(s.sortables, function() {
                var n = !1
                  , o = this;
                o.positionAbs = s.positionAbs,
                o.helperProportions = s.helperProportions,
                o.offset.click = s.offset.click,
                o._intersectsWith(o.containerCache) && (n = !0,
                t.each(s.sortables, function() {
                    return this.positionAbs = s.positionAbs,
                    this.helperProportions = s.helperProportions,
                    this.offset.click = s.offset.click,
                    this !== o && this._intersectsWith(this.containerCache) && t.contains(o.element[0], this.element[0]) && (n = !1),
                    n
                })),
                n ? (o.isOver || (o.isOver = 1,
                s._parent = i.helper.parent(),
                o.currentItem = i.helper.appendTo(o.element).data("ui-sortable-item", !0),
                o.options._helper = o.options.helper,
                o.options.helper = function() {
                    return i.helper[0]
                }
                ,
                e.target = o.currentItem[0],
                o._mouseCapture(e, !0),
                o._mouseStart(e, !0, !0),
                o.offset.click.top = s.offset.click.top,
                o.offset.click.left = s.offset.click.left,
                o.offset.parent.left -= s.offset.parent.left - o.offset.parent.left,
                o.offset.parent.top -= s.offset.parent.top - o.offset.parent.top,
                s._trigger("toSortable", e),
                s.dropped = o.element,
                t.each(s.sortables, function() {
                    this.refreshPositions()
                }),
                s.currentItem = s.element,
                o.fromOutside = s),
                o.currentItem && (o._mouseDrag(e),
                i.position = o.position)) : o.isOver && (o.isOver = 0,
                o.cancelHelperRemoval = !0,
                o.options._revert = o.options.revert,
                o.options.revert = !1,
                o._trigger("out", e, o._uiHash(o)),
                o._mouseStop(e, !0),
                o.options.revert = o.options._revert,
                o.options.helper = o.options._helper,
                o.placeholder && o.placeholder.remove(),
                i.helper.appendTo(s._parent),
                s._refreshOffsets(e),
                i.position = s._generatePosition(e, !0),
                s._trigger("fromSortable", e),
                s.dropped = !1,
                t.each(s.sortables, function() {
                    this.refreshPositions()
                }))
            })
        }
    }),
    t.ui.plugin.add("draggable", "cursor", {
        start: function(e, i, s) {
            var n = t("body")
              , o = s.options;
            n.css("cursor") && (o._cursor = n.css("cursor")),
            n.css("cursor", o.cursor)
        },
        stop: function(e, i, s) {
            var n = s.options;
            n._cursor && t("body").css("cursor", n._cursor)
        }
    }),
    t.ui.plugin.add("draggable", "opacity", {
        start: function(e, i, s) {
            var n = t(i.helper)
              , o = s.options;
            n.css("opacity") && (o._opacity = n.css("opacity")),
            n.css("opacity", o.opacity)
        },
        stop: function(e, i, s) {
            var n = s.options;
            n._opacity && t(i.helper).css("opacity", n._opacity)
        }
    }),
    t.ui.plugin.add("draggable", "scroll", {
        start: function(t, e, i) {
            i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
            i.scrollParentNotHidden[0] !== i.document[0] && "HTML" !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset())
        },
        drag: function(e, i, s) {
            var n = s.options
              , o = !1
              , a = s.scrollParentNotHidden[0]
              , r = s.document[0];
            a !== r && "HTML" !== a.tagName ? (n.axis && "x" === n.axis || (s.overflowOffset.top + a.offsetHeight - e.pageY < n.scrollSensitivity ? a.scrollTop = o = a.scrollTop + n.scrollSpeed : e.pageY - s.overflowOffset.top < n.scrollSensitivity && (a.scrollTop = o = a.scrollTop - n.scrollSpeed)),
            n.axis && "y" === n.axis || (s.overflowOffset.left + a.offsetWidth - e.pageX < n.scrollSensitivity ? a.scrollLeft = o = a.scrollLeft + n.scrollSpeed : e.pageX - s.overflowOffset.left < n.scrollSensitivity && (a.scrollLeft = o = a.scrollLeft - n.scrollSpeed))) : (n.axis && "x" === n.axis || (e.pageY - t(r).scrollTop() < n.scrollSensitivity ? o = t(r).scrollTop(t(r).scrollTop() - n.scrollSpeed) : t(window).height() - (e.pageY - t(r).scrollTop()) < n.scrollSensitivity && (o = t(r).scrollTop(t(r).scrollTop() + n.scrollSpeed))),
            n.axis && "y" === n.axis || (e.pageX - t(r).scrollLeft() < n.scrollSensitivity ? o = t(r).scrollLeft(t(r).scrollLeft() - n.scrollSpeed) : t(window).width() - (e.pageX - t(r).scrollLeft()) < n.scrollSensitivity && (o = t(r).scrollLeft(t(r).scrollLeft() + n.scrollSpeed)))),
            o !== !1 && t.ui.ddmanager && !n.dropBehaviour && t.ui.ddmanager.prepareOffsets(s, e)
        }
    }),
    t.ui.plugin.add("draggable", "snap", {
        start: function(e, i, s) {
            var n = s.options;
            s.snapElements = [],
            t(n.snap.constructor !== String ? n.snap.items || ":data(ui-draggable)" : n.snap).each(function() {
                var e = t(this)
                  , i = e.offset();
                this !== s.element[0] && s.snapElements.push({
                    item: this,
                    width: e.outerWidth(),
                    height: e.outerHeight(),
                    top: i.top,
                    left: i.left
                })
            })
        },
        drag: function(e, i, s) {
            var n, o, a, r, h, l, c, u, d, p, f = s.options, g = f.snapTolerance, m = i.offset.left, _ = m + s.helperProportions.width, v = i.offset.top, b = v + s.helperProportions.height;
            for (d = s.snapElements.length - 1; d >= 0; d--)
                h = s.snapElements[d].left - s.margins.left,
                l = h + s.snapElements[d].width,
                c = s.snapElements[d].top - s.margins.top,
                u = c + s.snapElements[d].height,
                h - g > _ || m > l + g || c - g > b || v > u + g || !t.contains(s.snapElements[d].item.ownerDocument, s.snapElements[d].item) ? (s.snapElements[d].snapping && s.options.snap.release && s.options.snap.release.call(s.element, e, t.extend(s._uiHash(), {
                    snapItem: s.snapElements[d].item
                })),
                s.snapElements[d].snapping = !1) : ("inner" !== f.snapMode && (n = g >= Math.abs(c - b),
                o = g >= Math.abs(u - v),
                a = g >= Math.abs(h - _),
                r = g >= Math.abs(l - m),
                n && (i.position.top = s._convertPositionTo("relative", {
                    top: c - s.helperProportions.height,
                    left: 0
                }).top),
                o && (i.position.top = s._convertPositionTo("relative", {
                    top: u,
                    left: 0
                }).top),
                a && (i.position.left = s._convertPositionTo("relative", {
                    top: 0,
                    left: h - s.helperProportions.width
                }).left),
                r && (i.position.left = s._convertPositionTo("relative", {
                    top: 0,
                    left: l
                }).left)),
                p = n || o || a || r,
                "outer" !== f.snapMode && (n = g >= Math.abs(c - v),
                o = g >= Math.abs(u - b),
                a = g >= Math.abs(h - m),
                r = g >= Math.abs(l - _),
                n && (i.position.top = s._convertPositionTo("relative", {
                    top: c,
                    left: 0
                }).top),
                o && (i.position.top = s._convertPositionTo("relative", {
                    top: u - s.helperProportions.height,
                    left: 0
                }).top),
                a && (i.position.left = s._convertPositionTo("relative", {
                    top: 0,
                    left: h
                }).left),
                r && (i.position.left = s._convertPositionTo("relative", {
                    top: 0,
                    left: l - s.helperProportions.width
                }).left)),
                !s.snapElements[d].snapping && (n || o || a || r || p) && s.options.snap.snap && s.options.snap.snap.call(s.element, e, t.extend(s._uiHash(), {
                    snapItem: s.snapElements[d].item
                })),
                s.snapElements[d].snapping = n || o || a || r || p)
        }
    }),
    t.ui.plugin.add("draggable", "stack", {
        start: function(e, i, s) {
            var n, o = s.options, a = t.makeArray(t(o.stack)).sort(function(e, i) {
                return (parseInt(t(e).css("zIndex"), 10) || 0) - (parseInt(t(i).css("zIndex"), 10) || 0)
            });
            a.length && (n = parseInt(t(a[0]).css("zIndex"), 10) || 0,
            t(a).each(function(e) {
                t(this).css("zIndex", n + e)
            }),
            this.css("zIndex", n + a.length))
        }
    }),
    t.ui.plugin.add("draggable", "zIndex", {
        start: function(e, i, s) {
            var n = t(i.helper)
              , o = s.options;
            n.css("zIndex") && (o._zIndex = n.css("zIndex")),
            n.css("zIndex", o.zIndex)
        },
        stop: function(e, i, s) {
            var n = s.options;
            n._zIndex && t(i.helper).css("zIndex", n._zIndex)
        }
    }),
    t.ui.draggable,
    t.widget("ui.resizable", t.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            classes: {
                "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se"
            },
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _num: function(t) {
            return parseFloat(t) || 0
        },
        _isNumber: function(t) {
            return !isNaN(parseFloat(t))
        },
        _hasScroll: function(e, i) {
            if ("hidden" === t(e).css("overflow"))
                return !1;
            var s = i && "left" === i ? "scrollLeft" : "scrollTop"
              , n = !1;
            return e[s] > 0 ? !0 : (e[s] = 1,
            n = e[s] > 0,
            e[s] = 0,
            n)
        },
        _create: function() {
            var e, i = this.options, s = this;
            this._addClass("ui-resizable"),
            t.extend(this, {
                _aspectRatio: !!i.aspectRatio,
                aspectRatio: i.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: i.helper || i.ghost || i.animate ? i.helper || "ui-resizable-helper" : null
            }),
            this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })),
            this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")),
            this.elementIsWrapper = !0,
            e = {
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom"),
                marginLeft: this.originalElement.css("marginLeft")
            },
            this.element.css(e),
            this.originalElement.css("margin", 0),
            this.originalResizeStyle = this.originalElement.css("resize"),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })),
            this.originalElement.css(e),
            this._proportionallyResize()),
            this._setupHandles(),
            i.autoHide && t(this.element).on("mouseenter", function() {
                i.disabled || (s._removeClass("ui-resizable-autohide"),
                s._handles.show())
            }).on("mouseleave", function() {
                i.disabled || s.resizing || (s._addClass("ui-resizable-autohide"),
                s._handles.hide())
            }),
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var e, i = function(e) {
                t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()
            };
            return this.elementIsWrapper && (i(this.element),
            e = this.element,
            this.originalElement.css({
                position: e.css("position"),
                width: e.outerWidth(),
                height: e.outerHeight(),
                top: e.css("top"),
                left: e.css("left")
            }).insertAfter(e),
            e.remove()),
            this.originalElement.css("resize", this.originalResizeStyle),
            i(this.originalElement),
            this
        },
        _setOption: function(t, e) {
            switch (this._super(t, e),
            t) {
            case "handles":
                this._removeHandles(),
                this._setupHandles();
                break;
            default:
            }
        },
        _setupHandles: function() {
            var e, i, s, n, o, a = this.options, r = this;
            if (this.handles = a.handles || (t(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se"),
            this._handles = t(),
            this.handles.constructor === String)
                for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
                s = this.handles.split(","),
                this.handles = {},
                i = 0; s.length > i; i++)
                    e = t.trim(s[i]),
                    n = "ui-resizable-" + e,
                    o = t("<div>"),
                    this._addClass(o, "ui-resizable-handle " + n),
                    o.css({
                        zIndex: a.zIndex
                    }),
                    this.handles[e] = ".ui-resizable-" + e,
                    this.element.append(o);
            this._renderAxis = function(e) {
                var i, s, n, o;
                e = e || this.element;
                for (i in this.handles)
                    this.handles[i].constructor === String ? this.handles[i] = this.element.children(this.handles[i]).first().show() : (this.handles[i].jquery || this.handles[i].nodeType) && (this.handles[i] = t(this.handles[i]),
                    this._on(this.handles[i], {
                        mousedown: r._mouseDown
                    })),
                    this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (s = t(this.handles[i], this.element),
                    o = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth(),
                    n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join(""),
                    e.css(n, o),
                    this._proportionallyResize()),
                    this._handles = this._handles.add(this.handles[i])
            }
            ,
            this._renderAxis(this.element),
            this._handles = this._handles.add(this.element.find(".ui-resizable-handle")),
            this._handles.disableSelection(),
            this._handles.on("mouseover", function() {
                r.resizing || (this.className && (o = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),
                r.axis = o && o[1] ? o[1] : "se")
            }),
            a.autoHide && (this._handles.hide(),
            this._addClass("ui-resizable-autohide"))
        },
        _removeHandles: function() {
            this._handles.remove()
        },
        _mouseCapture: function(e) {
            var i, s, n = !1;
            for (i in this.handles)
                s = t(this.handles[i])[0],
                (s === e.target || t.contains(s, e.target)) && (n = !0);
            return !this.options.disabled && n
        },
        _mouseStart: function(e) {
            var i, s, n, o = this.options, a = this.element;
            return this.resizing = !0,
            this._renderProxy(),
            i = this._num(this.helper.css("left")),
            s = this._num(this.helper.css("top")),
            o.containment && (i += t(o.containment).scrollLeft() || 0,
            s += t(o.containment).scrollTop() || 0),
            this.offset = this.helper.offset(),
            this.position = {
                left: i,
                top: s
            },
            this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: a.width(),
                height: a.height()
            },
            this.originalSize = this._helper ? {
                width: a.outerWidth(),
                height: a.outerHeight()
            } : {
                width: a.width(),
                height: a.height()
            },
            this.sizeDiff = {
                width: a.outerWidth() - a.width(),
                height: a.outerHeight() - a.height()
            },
            this.originalPosition = {
                left: i,
                top: s
            },
            this.originalMousePosition = {
                left: e.pageX,
                top: e.pageY
            },
            this.aspectRatio = "number" == typeof o.aspectRatio ? o.aspectRatio : this.originalSize.width / this.originalSize.height || 1,
            n = t(".ui-resizable-" + this.axis).css("cursor"),
            t("body").css("cursor", "auto" === n ? this.axis + "-resize" : n),
            this._addClass("ui-resizable-resizing"),
            this._propagate("start", e),
            !0
        },
        _mouseDrag: function(e) {
            var i, s, n = this.originalMousePosition, o = this.axis, a = e.pageX - n.left || 0, r = e.pageY - n.top || 0, h = this._change[o];
            return this._updatePrevProperties(),
            h ? (i = h.apply(this, [e, a, r]),
            this._updateVirtualBoundaries(e.shiftKey),
            (this._aspectRatio || e.shiftKey) && (i = this._updateRatio(i, e)),
            i = this._respectSize(i, e),
            this._updateCache(i),
            this._propagate("resize", e),
            s = this._applyChanges(),
            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(),
            t.isEmptyObject(s) || (this._updatePrevProperties(),
            this._trigger("resize", e, this.ui()),
            this._applyChanges()),
            !1) : !1
        },
        _mouseStop: function(e) {
            this.resizing = !1;
            var i, s, n, o, a, r, h, l = this.options, c = this;
            return this._helper && (i = this._proportionallyResizeElements,
            s = i.length && /textarea/i.test(i[0].nodeName),
            n = s && this._hasScroll(i[0], "left") ? 0 : c.sizeDiff.height,
            o = s ? 0 : c.sizeDiff.width,
            a = {
                width: c.helper.width() - o,
                height: c.helper.height() - n
            },
            r = parseFloat(c.element.css("left")) + (c.position.left - c.originalPosition.left) || null,
            h = parseFloat(c.element.css("top")) + (c.position.top - c.originalPosition.top) || null,
            l.animate || this.element.css(t.extend(a, {
                top: h,
                left: r
            })),
            c.helper.height(c.size.height),
            c.helper.width(c.size.width),
            this._helper && !l.animate && this._proportionallyResize()),
            t("body").css("cursor", "auto"),
            this._removeClass("ui-resizable-resizing"),
            this._propagate("stop", e),
            this._helper && this.helper.remove(),
            !1
        },
        _updatePrevProperties: function() {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            },
            this.prevSize = {
                width: this.size.width,
                height: this.size.height
            }
        },
        _applyChanges: function() {
            var t = {};
            return this.position.top !== this.prevPosition.top && (t.top = this.position.top + "px"),
            this.position.left !== this.prevPosition.left && (t.left = this.position.left + "px"),
            this.size.width !== this.prevSize.width && (t.width = this.size.width + "px"),
            this.size.height !== this.prevSize.height && (t.height = this.size.height + "px"),
            this.helper.css(t),
            t
        },
        _updateVirtualBoundaries: function(t) {
            var e, i, s, n, o, a = this.options;
            o = {
                minWidth: this._isNumber(a.minWidth) ? a.minWidth : 0,
                maxWidth: this._isNumber(a.maxWidth) ? a.maxWidth : 1 / 0,
                minHeight: this._isNumber(a.minHeight) ? a.minHeight : 0,
                maxHeight: this._isNumber(a.maxHeight) ? a.maxHeight : 1 / 0
            },
            (this._aspectRatio || t) && (e = o.minHeight * this.aspectRatio,
            s = o.minWidth / this.aspectRatio,
            i = o.maxHeight * this.aspectRatio,
            n = o.maxWidth / this.aspectRatio,
            e > o.minWidth && (o.minWidth = e),
            s > o.minHeight && (o.minHeight = s),
            o.maxWidth > i && (o.maxWidth = i),
            o.maxHeight > n && (o.maxHeight = n)),
            this._vBoundaries = o
        },
        _updateCache: function(t) {
            this.offset = this.helper.offset(),
            this._isNumber(t.left) && (this.position.left = t.left),
            this._isNumber(t.top) && (this.position.top = t.top),
            this._isNumber(t.height) && (this.size.height = t.height),
            this._isNumber(t.width) && (this.size.width = t.width)
        },
        _updateRatio: function(t) {
            var e = this.position
              , i = this.size
              , s = this.axis;
            return this._isNumber(t.height) ? t.width = t.height * this.aspectRatio : this._isNumber(t.width) && (t.height = t.width / this.aspectRatio),
            "sw" === s && (t.left = e.left + (i.width - t.width),
            t.top = null),
            "nw" === s && (t.top = e.top + (i.height - t.height),
            t.left = e.left + (i.width - t.width)),
            t
        },
        _respectSize: function(t) {
            var e = this._vBoundaries
              , i = this.axis
              , s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width
              , n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height
              , o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width
              , a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height
              , r = this.originalPosition.left + this.originalSize.width
              , h = this.originalPosition.top + this.originalSize.height
              , l = /sw|nw|w/.test(i)
              , c = /nw|ne|n/.test(i);
            return o && (t.width = e.minWidth),
            a && (t.height = e.minHeight),
            s && (t.width = e.maxWidth),
            n && (t.height = e.maxHeight),
            o && l && (t.left = r - e.minWidth),
            s && l && (t.left = r - e.maxWidth),
            a && c && (t.top = h - e.minHeight),
            n && c && (t.top = h - e.maxHeight),
            t.width || t.height || t.left || !t.top ? t.width || t.height || t.top || !t.left || (t.left = null) : t.top = null,
            t
        },
        _getPaddingPlusBorderDimensions: function(t) {
            for (var e = 0, i = [], s = [t.css("borderTopWidth"), t.css("borderRightWidth"), t.css("borderBottomWidth"), t.css("borderLeftWidth")], n = [t.css("paddingTop"), t.css("paddingRight"), t.css("paddingBottom"), t.css("paddingLeft")]; 4 > e; e++)
                i[e] = parseFloat(s[e]) || 0,
                i[e] += parseFloat(n[e]) || 0;
            return {
                height: i[0] + i[2],
                width: i[1] + i[3]
            }
        },
        _proportionallyResize: function() {
            if (this._proportionallyResizeElements.length)
                for (var t, e = 0, i = this.helper || this.element; this._proportionallyResizeElements.length > e; e++)
                    t = this._proportionallyResizeElements[e],
                    this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(t)),
                    t.css({
                        height: i.height() - this.outerDimensions.height || 0,
                        width: i.width() - this.outerDimensions.width || 0
                    })
        },
        _renderProxy: function() {
            var e = this.element
              , i = this.options;
            this.elementOffset = e.offset(),
            this._helper ? (this.helper = this.helper || t("<div style='overflow:hidden;'></div>"),
            this._addClass(this.helper, this._helper),
            this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++i.zIndex
            }),
            this.helper.appendTo("body").disableSelection()) : this.helper = this.element
        },
        _change: {
            e: function(t, e) {
                return {
                    width: this.originalSize.width + e
                }
            },
            w: function(t, e) {
                var i = this.originalSize
                  , s = this.originalPosition;
                return {
                    left: s.left + e,
                    width: i.width - e
                }
            },
            n: function(t, e, i) {
                var s = this.originalSize
                  , n = this.originalPosition;
                return {
                    top: n.top + i,
                    height: s.height - i
                }
            },
            s: function(t, e, i) {
                return {
                    height: this.originalSize.height + i
                }
            },
            se: function(e, i, s) {
                return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s]))
            },
            sw: function(e, i, s) {
                return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s]))
            },
            ne: function(e, i, s) {
                return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s]))
            },
            nw: function(e, i, s) {
                return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s]))
            }
        },
        _propagate: function(e, i) {
            t.ui.plugin.call(this, e, [i, this.ui()]),
            "resize" !== e && this._trigger(e, i, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }),
    t.ui.plugin.add("resizable", "animate", {
        stop: function(e) {
            var i = t(this).resizable("instance")
              , s = i.options
              , n = i._proportionallyResizeElements
              , o = n.length && /textarea/i.test(n[0].nodeName)
              , a = o && i._hasScroll(n[0], "left") ? 0 : i.sizeDiff.height
              , r = o ? 0 : i.sizeDiff.width
              , h = {
                width: i.size.width - r,
                height: i.size.height - a
            }
              , l = parseFloat(i.element.css("left")) + (i.position.left - i.originalPosition.left) || null
              , c = parseFloat(i.element.css("top")) + (i.position.top - i.originalPosition.top) || null;
            i.element.animate(t.extend(h, c && l ? {
                top: c,
                left: l
            } : {}), {
                duration: s.animateDuration,
                easing: s.animateEasing,
                step: function() {
                    var s = {
                        width: parseFloat(i.element.css("width")),
                        height: parseFloat(i.element.css("height")),
                        top: parseFloat(i.element.css("top")),
                        left: parseFloat(i.element.css("left"))
                    };
                    n && n.length && t(n[0]).css({
                        width: s.width,
                        height: s.height
                    }),
                    i._updateCache(s),
                    i._propagate("resize", e)
                }
            })
        }
    }),
    t.ui.plugin.add("resizable", "containment", {
        start: function() {
            var e, i, s, n, o, a, r, h = t(this).resizable("instance"), l = h.options, c = h.element, u = l.containment, d = u instanceof t ? u.get(0) : /parent/.test(u) ? c.parent().get(0) : u;
            d && (h.containerElement = t(d),
            /document/.test(u) || u === document ? (h.containerOffset = {
                left: 0,
                top: 0
            },
            h.containerPosition = {
                left: 0,
                top: 0
            },
            h.parentData = {
                element: t(document),
                left: 0,
                top: 0,
                width: t(document).width(),
                height: t(document).height() || document.body.parentNode.scrollHeight
            }) : (e = t(d),
            i = [],
            t(["Top", "Right", "Left", "Bottom"]).each(function(t, s) {
                i[t] = h._num(e.css("padding" + s))
            }),
            h.containerOffset = e.offset(),
            h.containerPosition = e.position(),
            h.containerSize = {
                height: e.innerHeight() - i[3],
                width: e.innerWidth() - i[1]
            },
            s = h.containerOffset,
            n = h.containerSize.height,
            o = h.containerSize.width,
            a = h._hasScroll(d, "left") ? d.scrollWidth : o,
            r = h._hasScroll(d) ? d.scrollHeight : n,
            h.parentData = {
                element: d,
                left: s.left,
                top: s.top,
                width: a,
                height: r
            }))
        },
        resize: function(e) {
            var i, s, n, o, a = t(this).resizable("instance"), r = a.options, h = a.containerOffset, l = a.position, c = a._aspectRatio || e.shiftKey, u = {
                top: 0,
                left: 0
            }, d = a.containerElement, p = !0;
            d[0] !== document && /static/.test(d.css("position")) && (u = h),
            l.left < (a._helper ? h.left : 0) && (a.size.width = a.size.width + (a._helper ? a.position.left - h.left : a.position.left - u.left),
            c && (a.size.height = a.size.width / a.aspectRatio,
            p = !1),
            a.position.left = r.helper ? h.left : 0),
            l.top < (a._helper ? h.top : 0) && (a.size.height = a.size.height + (a._helper ? a.position.top - h.top : a.position.top),
            c && (a.size.width = a.size.height * a.aspectRatio,
            p = !1),
            a.position.top = a._helper ? h.top : 0),
            n = a.containerElement.get(0) === a.element.parent().get(0),
            o = /relative|absolute/.test(a.containerElement.css("position")),
            n && o ? (a.offset.left = a.parentData.left + a.position.left,
            a.offset.top = a.parentData.top + a.position.top) : (a.offset.left = a.element.offset().left,
            a.offset.top = a.element.offset().top),
            i = Math.abs(a.sizeDiff.width + (a._helper ? a.offset.left - u.left : a.offset.left - h.left)),
            s = Math.abs(a.sizeDiff.height + (a._helper ? a.offset.top - u.top : a.offset.top - h.top)),
            i + a.size.width >= a.parentData.width && (a.size.width = a.parentData.width - i,
            c && (a.size.height = a.size.width / a.aspectRatio,
            p = !1)),
            s + a.size.height >= a.parentData.height && (a.size.height = a.parentData.height - s,
            c && (a.size.width = a.size.height * a.aspectRatio,
            p = !1)),
            p || (a.position.left = a.prevPosition.left,
            a.position.top = a.prevPosition.top,
            a.size.width = a.prevSize.width,
            a.size.height = a.prevSize.height)
        },
        stop: function() {
            var e = t(this).resizable("instance")
              , i = e.options
              , s = e.containerOffset
              , n = e.containerPosition
              , o = e.containerElement
              , a = t(e.helper)
              , r = a.offset()
              , h = a.outerWidth() - e.sizeDiff.width
              , l = a.outerHeight() - e.sizeDiff.height;
            e._helper && !i.animate && /relative/.test(o.css("position")) && t(this).css({
                left: r.left - n.left - s.left,
                width: h,
                height: l
            }),
            e._helper && !i.animate && /static/.test(o.css("position")) && t(this).css({
                left: r.left - n.left - s.left,
                width: h,
                height: l
            })
        }
    }),
    t.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var e = t(this).resizable("instance")
              , i = e.options;
            t(i.alsoResize).each(function() {
                var e = t(this);
                e.data("ui-resizable-alsoresize", {
                    width: parseFloat(e.width()),
                    height: parseFloat(e.height()),
                    left: parseFloat(e.css("left")),
                    top: parseFloat(e.css("top"))
                })
            })
        },
        resize: function(e, i) {
            var s = t(this).resizable("instance")
              , n = s.options
              , o = s.originalSize
              , a = s.originalPosition
              , r = {
                height: s.size.height - o.height || 0,
                width: s.size.width - o.width || 0,
                top: s.position.top - a.top || 0,
                left: s.position.left - a.left || 0
            };
            t(n.alsoResize).each(function() {
                var e = t(this)
                  , s = t(this).data("ui-resizable-alsoresize")
                  , n = {}
                  , o = e.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                t.each(o, function(t, e) {
                    var i = (s[e] || 0) + (r[e] || 0);
                    i && i >= 0 && (n[e] = i || null)
                }),
                e.css(n)
            })
        },
        stop: function() {
            t(this).removeData("ui-resizable-alsoresize")
        }
    }),
    t.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var e = t(this).resizable("instance")
              , i = e.size;
            e.ghost = e.originalElement.clone(),
            e.ghost.css({
                opacity: .25,
                display: "block",
                position: "relative",
                height: i.height,
                width: i.width,
                margin: 0,
                left: 0,
                top: 0
            }),
            e._addClass(e.ghost, "ui-resizable-ghost"),
            t.uiBackCompat !== !1 && "string" == typeof e.options.ghost && e.ghost.addClass(this.options.ghost),
            e.ghost.appendTo(e.helper)
        },
        resize: function() {
            var e = t(this).resizable("instance");
            e.ghost && e.ghost.css({
                position: "relative",
                height: e.size.height,
                width: e.size.width
            })
        },
        stop: function() {
            var e = t(this).resizable("instance");
            e.ghost && e.helper && e.helper.get(0).removeChild(e.ghost.get(0))
        }
    }),
    t.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var e, i = t(this).resizable("instance"), s = i.options, n = i.size, o = i.originalSize, a = i.originalPosition, r = i.axis, h = "number" == typeof s.grid ? [s.grid, s.grid] : s.grid, l = h[0] || 1, c = h[1] || 1, u = Math.round((n.width - o.width) / l) * l, d = Math.round((n.height - o.height) / c) * c, p = o.width + u, f = o.height + d, g = s.maxWidth && p > s.maxWidth, m = s.maxHeight && f > s.maxHeight, _ = s.minWidth && s.minWidth > p, v = s.minHeight && s.minHeight > f;
            s.grid = h,
            _ && (p += l),
            v && (f += c),
            g && (p -= l),
            m && (f -= c),
            /^(se|s|e)$/.test(r) ? (i.size.width = p,
            i.size.height = f) : /^(ne)$/.test(r) ? (i.size.width = p,
            i.size.height = f,
            i.position.top = a.top - d) : /^(sw)$/.test(r) ? (i.size.width = p,
            i.size.height = f,
            i.position.left = a.left - u) : ((0 >= f - c || 0 >= p - l) && (e = i._getPaddingPlusBorderDimensions(this)),
            f - c > 0 ? (i.size.height = f,
            i.position.top = a.top - d) : (f = c - e.height,
            i.size.height = f,
            i.position.top = a.top + o.height - f),
            p - l > 0 ? (i.size.width = p,
            i.position.left = a.left - u) : (p = l - e.width,
            i.size.width = p,
            i.position.left = a.left + o.width - p))
        }
    }),
    t.ui.resizable,
    t.widget("ui.dialog", {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            classes: {
                "ui-dialog": "ui-corner-all",
                "ui-dialog-titlebar": "ui-corner-all"
            },
            closeOnEscape: !0,
            closeText: "Close",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(e) {
                    var i = t(this).css(e).offset().top;
                    0 > i && t(this).css("top", e.top - i)
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        sizeRelatedOptions: {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        resizableRelatedOptions: {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            },
            this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            },
            this.originalTitle = this.element.attr("title"),
            null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle),
            this.options.disabled && (this.options.disabled = !1),
            this._createWrapper(),
            this.element.show().removeAttr("title").appendTo(this.uiDialog),
            this._addClass("ui-dialog-content", "ui-widget-content"),
            this._createTitlebar(),
            this._createButtonPane(),
            this.options.draggable && t.fn.draggable && this._makeDraggable(),
            this.options.resizable && t.fn.resizable && this._makeResizable(),
            this._isOpen = !1,
            this._trackFocus()
        },
        _init: function() {
            this.options.autoOpen && this.open()
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            return e && (e.jquery || e.nodeType) ? t(e) : this.document.find(e || "body").eq(0)
        },
        _destroy: function() {
            var t, e = this.originalPosition;
            this._untrackInstance(),
            this._destroyOverlay(),
            this.element.removeUniqueId().css(this.originalCss).detach(),
            this.uiDialog.remove(),
            this.originalTitle && this.element.attr("title", this.originalTitle),
            t = e.parent.children().eq(e.index),
            t.length && t[0] !== this.element[0] ? t.before(this.element) : e.parent.append(this.element)
        },
        widget: function() {
            return this.uiDialog
        },
        disable: t.noop,
        enable: t.noop,
        close: function(e) {
            var i = this;
            this._isOpen && this._trigger("beforeClose", e) !== !1 && (this._isOpen = !1,
            this._focusedElement = null,
            this._destroyOverlay(),
            this._untrackInstance(),
            this.opener.filter(":focusable").trigger("focus").length || t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),
            this._hide(this.uiDialog, this.options.hide, function() {
                i._trigger("close", e)
            }))
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function() {
            this._moveToTop()
        },
        _moveToTop: function(e, i) {
            var s = !1
              , n = this.uiDialog.siblings(".ui-front:visible").map(function() {
                return +t(this).css("z-index")
            }).get()
              , o = Math.max.apply(null, n);
            return o >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", o + 1),
            s = !0),
            s && !i && this._trigger("focus", e),
            s
        },
        open: function() {
            var e = this;
            return this._isOpen ? (this._moveToTop() && this._focusTabbable(),
            void 0) : (this._isOpen = !0,
            this.opener = t(t.ui.safeActiveElement(this.document[0])),
            this._size(),
            this._position(),
            this._createOverlay(),
            this._moveToTop(null, !0),
            this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1),
            this._show(this.uiDialog, this.options.show, function() {
                e._focusTabbable(),
                e._trigger("focus")
            }),
            this._makeFocusTarget(),
            this._trigger("open"),
            void 0)
        },
        _focusTabbable: function() {
            var t = this._focusedElement;
            t || (t = this.element.find("[autofocus]")),
            t.length || (t = this.element.find(":tabbable")),
            t.length || (t = this.uiDialogButtonPane.find(":tabbable")),
            t.length || (t = this.uiDialogTitlebarClose.filter(":tabbable")),
            t.length || (t = this.uiDialog),
            t.eq(0).trigger("focus")
        },
        _keepFocus: function(e) {
            function i() {
                var e = t.ui.safeActiveElement(this.document[0])
                  , i = this.uiDialog[0] === e || t.contains(this.uiDialog[0], e);
                i || this._focusTabbable()
            }
            e.preventDefault(),
            i.call(this),
            this._delay(i)
        },
        _createWrapper: function() {
            this.uiDialog = t("<div>").hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo()),
            this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front"),
            this._on(this.uiDialog, {
                keydown: function(e) {
                    if (this.options.closeOnEscape && !e.isDefaultPrevented() && e.keyCode && e.keyCode === t.ui.keyCode.ESCAPE)
                        return e.preventDefault(),
                        this.close(e),
                        void 0;
                    if (e.keyCode === t.ui.keyCode.TAB && !e.isDefaultPrevented()) {
                        var i = this.uiDialog.find(":tabbable")
                          , s = i.filter(":first")
                          , n = i.filter(":last");
                        e.target !== n[0] && e.target !== this.uiDialog[0] || e.shiftKey ? e.target !== s[0] && e.target !== this.uiDialog[0] || !e.shiftKey || (this._delay(function() {
                            n.trigger("focus")
                        }),
                        e.preventDefault()) : (this._delay(function() {
                            s.trigger("focus")
                        }),
                        e.preventDefault())
                    }
                },
                mousedown: function(t) {
                    this._moveToTop(t) && this._focusTabbable()
                }
            }),
            this.element.find("[aria-describedby]").length || this.uiDialog.attr({
                "aria-describedby": this.element.uniqueId().attr("id")
            })
        },
        _createTitlebar: function() {
            var e;
            this.uiDialogTitlebar = t("<div>"),
            this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix"),
            this._on(this.uiDialogTitlebar, {
                mousedown: function(e) {
                    t(e.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.trigger("focus")
                }
            }),
            this.uiDialogTitlebarClose = t("<button type='button'></button>").button({
                label: t("<a>").text(this.options.closeText).html(),
                icon: "ui-icon-closethick",
                showLabel: !1
            }).appendTo(this.uiDialogTitlebar),
            this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close"),
            this._on(this.uiDialogTitlebarClose, {
                click: function(t) {
                    t.preventDefault(),
                    this.close(t)
                }
            }),
            e = t("<span>").uniqueId().prependTo(this.uiDialogTitlebar),
            this._addClass(e, "ui-dialog-title"),
            this._title(e),
            this.uiDialogTitlebar.prependTo(this.uiDialog),
            this.uiDialog.attr({
                "aria-labelledby": e.attr("id")
            })
        },
        _title: function(t) {
            this.options.title ? t.text(this.options.title) : t.html("&#160;")
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = t("<div>"),
            this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix"),
            this.uiButtonSet = t("<div>").appendTo(this.uiDialogButtonPane),
            this._addClass(this.uiButtonSet, "ui-dialog-buttonset"),
            this._createButtons()
        },
        _createButtons: function() {
            var e = this
              , i = this.options.buttons;
            return this.uiDialogButtonPane.remove(),
            this.uiButtonSet.empty(),
            t.isEmptyObject(i) || t.isArray(i) && !i.length ? (this._removeClass(this.uiDialog, "ui-dialog-buttons"),
            void 0) : (t.each(i, function(i, s) {
                var n, o;
                s = t.isFunction(s) ? {
                    click: s,
                    text: i
                } : s,
                s = t.extend({
                    type: "button"
                }, s),
                n = s.click,
                o = {
                    icon: s.icon,
                    iconPosition: s.iconPosition,
                    showLabel: s.showLabel,
                    icons: s.icons,
                    text: s.text
                },
                delete s.click,
                delete s.icon,
                delete s.iconPosition,
                delete s.showLabel,
                delete s.icons,
                "boolean" == typeof s.text && delete s.text,
                t("<button></button>", s).button(o).appendTo(e.uiButtonSet).on("click", function() {
                    n.apply(e.element[0], arguments)
                })
            }),
            this._addClass(this.uiDialog, "ui-dialog-buttons"),
            this.uiDialogButtonPane.appendTo(this.uiDialog),
            void 0)
        },
        _makeDraggable: function() {
            function e(t) {
                return {
                    position: t.position,
                    offset: t.offset
                }
            }
            var i = this
              , s = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(s, n) {
                    i._addClass(t(this), "ui-dialog-dragging"),
                    i._blockFrames(),
                    i._trigger("dragStart", s, e(n))
                },
                drag: function(t, s) {
                    i._trigger("drag", t, e(s))
                },
                stop: function(n, o) {
                    var a = o.offset.left - i.document.scrollLeft()
                      , r = o.offset.top - i.document.scrollTop();
                    s.position = {
                        my: "left top",
                        at: "left" + (a >= 0 ? "+" : "") + a + " " + "top" + (r >= 0 ? "+" : "") + r,
                        of: i.window
                    },
                    i._removeClass(t(this), "ui-dialog-dragging"),
                    i._unblockFrames(),
                    i._trigger("dragStop", n, e(o))
                }
            })
        },
        _makeResizable: function() {
            function e(t) {
                return {
                    originalPosition: t.originalPosition,
                    originalSize: t.originalSize,
                    position: t.position,
                    size: t.size
                }
            }
            var i = this
              , s = this.options
              , n = s.resizable
              , o = this.uiDialog.css("position")
              , a = "string" == typeof n ? n : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: s.maxWidth,
                maxHeight: s.maxHeight,
                minWidth: s.minWidth,
                minHeight: this._minHeight(),
                handles: a,
                start: function(s, n) {
                    i._addClass(t(this), "ui-dialog-resizing"),
                    i._blockFrames(),
                    i._trigger("resizeStart", s, e(n))
                },
                resize: function(t, s) {
                    i._trigger("resize", t, e(s))
                },
                stop: function(n, o) {
                    var a = i.uiDialog.offset()
                      , r = a.left - i.document.scrollLeft()
                      , h = a.top - i.document.scrollTop();
                    s.height = i.uiDialog.height(),
                    s.width = i.uiDialog.width(),
                    s.position = {
                        my: "left top",
                        at: "left" + (r >= 0 ? "+" : "") + r + " " + "top" + (h >= 0 ? "+" : "") + h,
                        of: i.window
                    },
                    i._removeClass(t(this), "ui-dialog-resizing"),
                    i._unblockFrames(),
                    i._trigger("resizeStop", n, e(o))
                }
            }).css("position", o)
        },
        _trackFocus: function() {
            this._on(this.widget(), {
                focusin: function(e) {
                    this._makeFocusTarget(),
                    this._focusedElement = t(e.target)
                }
            })
        },
        _makeFocusTarget: function() {
            this._untrackInstance(),
            this._trackingInstances().unshift(this)
        },
        _untrackInstance: function() {
            var e = this._trackingInstances()
              , i = t.inArray(this, e);
            -1 !== i && e.splice(i, 1)
        },
        _trackingInstances: function() {
            var t = this.document.data("ui-dialog-instances");
            return t || (t = [],
            this.document.data("ui-dialog-instances", t)),
            t
        },
        _minHeight: function() {
            var t = this.options;
            return "auto" === t.height ? t.minHeight : Math.min(t.minHeight, t.height)
        },
        _position: function() {
            var t = this.uiDialog.is(":visible");
            t || this.uiDialog.show(),
            this.uiDialog.position(this.options.position),
            t || this.uiDialog.hide()
        },
        _setOptions: function(e) {
            var i = this
              , s = !1
              , n = {};
            t.each(e, function(t, e) {
                i._setOption(t, e),
                t in i.sizeRelatedOptions && (s = !0),
                t in i.resizableRelatedOptions && (n[t] = e)
            }),
            s && (this._size(),
            this._position()),
            this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", n)
        },
        _setOption: function(e, i) {
            var s, n, o = this.uiDialog;
            "disabled" !== e && (this._super(e, i),
            "appendTo" === e && this.uiDialog.appendTo(this._appendTo()),
            "buttons" === e && this._createButtons(),
            "closeText" === e && this.uiDialogTitlebarClose.button({
                label: t("<a>").text("" + this.options.closeText).html()
            }),
            "draggable" === e && (s = o.is(":data(ui-draggable)"),
            s && !i && o.draggable("destroy"),
            !s && i && this._makeDraggable()),
            "position" === e && this._position(),
            "resizable" === e && (n = o.is(":data(ui-resizable)"),
            n && !i && o.resizable("destroy"),
            n && "string" == typeof i && o.resizable("option", "handles", i),
            n || i === !1 || this._makeResizable()),
            "title" === e && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
        },
        _size: function() {
            var t, e, i, s = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            }),
            s.minWidth > s.width && (s.width = s.minWidth),
            t = this.uiDialog.css({
                height: "auto",
                width: s.width
            }).outerHeight(),
            e = Math.max(0, s.minHeight - t),
            i = "number" == typeof s.maxHeight ? Math.max(0, s.maxHeight - t) : "none",
            "auto" === s.height ? this.element.css({
                minHeight: e,
                maxHeight: i,
                height: "auto"
            }) : this.element.height(Math.max(0, s.height - t)),
            this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var e = t(this);
                return t("<div>").css({
                    position: "absolute",
                    width: e.outerWidth(),
                    height: e.outerHeight()
                }).appendTo(e.parent()).offset(e.offset())[0]
            })
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(),
            delete this.iframeBlocks)
        },
        _allowInteraction: function(e) {
            return t(e.target).closest(".ui-dialog").length ? !0 : !!t(e.target).closest(".ui-datepicker").length
        },
        _createOverlay: function() {
            if (this.options.modal) {
                var e = !0;
                this._delay(function() {
                    e = !1
                }),
                this.document.data("ui-dialog-overlays") || this._on(this.document, {
                    focusin: function(t) {
                        e || this._allowInteraction(t) || (t.preventDefault(),
                        this._trackingInstances()[0]._focusTabbable())
                    }
                }),
                this.overlay = t("<div>").appendTo(this._appendTo()),
                this._addClass(this.overlay, null, "ui-widget-overlay ui-front"),
                this._on(this.overlay, {
                    mousedown: "_keepFocus"
                }),
                this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1)
            }
        },
        _destroyOverlay: function() {
            if (this.options.modal && this.overlay) {
                var t = this.document.data("ui-dialog-overlays") - 1;
                t ? this.document.data("ui-dialog-overlays", t) : (this._off(this.document, "focusin"),
                this.document.removeData("ui-dialog-overlays")),
                this.overlay.remove(),
                this.overlay = null
            }
        }
    }),
    t.uiBackCompat !== !1 && t.widget("ui.dialog", t.ui.dialog, {
        options: {
            dialogClass: ""
        },
        _createWrapper: function() {
            this._super(),
            this.uiDialog.addClass(this.options.dialogClass)
        },
        _setOption: function(t, e) {
            "dialogClass" === t && this.uiDialog.removeClass(this.options.dialogClass).addClass(e),
            this._superApply(arguments)
        }
    }),
    t.ui.dialog,
    t.widget("ui.droppable", {
        version: "1.12.1",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            addClasses: !0,
            greedy: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {
            var e, i = this.options, s = i.accept;
            this.isover = !1,
            this.isout = !0,
            this.accept = t.isFunction(s) ? s : function(t) {
                return t.is(s)
            }
            ,
            this.proportions = function() {
                return arguments.length ? (e = arguments[0],
                void 0) : e ? e : e = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight
                }
            }
            ,
            this._addToManager(i.scope),
            i.addClasses && this._addClass("ui-droppable")
        },
        _addToManager: function(e) {
            t.ui.ddmanager.droppables[e] = t.ui.ddmanager.droppables[e] || [],
            t.ui.ddmanager.droppables[e].push(this)
        },
        _splice: function(t) {
            for (var e = 0; t.length > e; e++)
                t[e] === this && t.splice(e, 1)
        },
        _destroy: function() {
            var e = t.ui.ddmanager.droppables[this.options.scope];
            this._splice(e)
        },
        _setOption: function(e, i) {
            if ("accept" === e)
                this.accept = t.isFunction(i) ? i : function(t) {
                    return t.is(i)
                }
                ;
            else if ("scope" === e) {
                var s = t.ui.ddmanager.droppables[this.options.scope];
                this._splice(s),
                this._addToManager(i)
            }
            this._super(e, i)
        },
        _activate: function(e) {
            var i = t.ui.ddmanager.current;
            this._addActiveClass(),
            i && this._trigger("activate", e, this.ui(i))
        },
        _deactivate: function(e) {
            var i = t.ui.ddmanager.current;
            this._removeActiveClass(),
            i && this._trigger("deactivate", e, this.ui(i))
        },
        _over: function(e) {
            var i = t.ui.ddmanager.current;
            i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this._addHoverClass(),
            this._trigger("over", e, this.ui(i)))
        },
        _out: function(e) {
            var i = t.ui.ddmanager.current;
            i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this._removeHoverClass(),
            this._trigger("out", e, this.ui(i)))
        },
        _drop: function(e, i) {
            var s = i || t.ui.ddmanager.current
              , n = !1;
            return s && (s.currentItem || s.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                var i = t(this).droppable("instance");
                return i.options.greedy && !i.options.disabled && i.options.scope === s.options.scope && i.accept.call(i.element[0], s.currentItem || s.element) && v(s, t.extend(i, {
                    offset: i.element.offset()
                }), i.options.tolerance, e) ? (n = !0,
                !1) : void 0
            }),
            n ? !1 : this.accept.call(this.element[0], s.currentItem || s.element) ? (this._removeActiveClass(),
            this._removeHoverClass(),
            this._trigger("drop", e, this.ui(s)),
            this.element) : !1) : !1
        },
        ui: function(t) {
            return {
                draggable: t.currentItem || t.element,
                helper: t.helper,
                position: t.position,
                offset: t.positionAbs
            }
        },
        _addHoverClass: function() {
            this._addClass("ui-droppable-hover")
        },
        _removeHoverClass: function() {
            this._removeClass("ui-droppable-hover")
        },
        _addActiveClass: function() {
            this._addClass("ui-droppable-active")
        },
        _removeActiveClass: function() {
            this._removeClass("ui-droppable-active")
        }
    });
    var v = t.ui.intersect = function() {
        function t(t, e, i) {
            return t >= e && e + i > t
        }
        return function(e, i, s, n) {
            if (!i.offset)
                return !1;
            var o = (e.positionAbs || e.position.absolute).left + e.margins.left
              , a = (e.positionAbs || e.position.absolute).top + e.margins.top
              , r = o + e.helperProportions.width
              , h = a + e.helperProportions.height
              , l = i.offset.left
              , c = i.offset.top
              , u = l + i.proportions().width
              , d = c + i.proportions().height;
            switch (s) {
            case "fit":
                return o >= l && u >= r && a >= c && d >= h;
            case "intersect":
                return o + e.helperProportions.width / 2 > l && u > r - e.helperProportions.width / 2 && a + e.helperProportions.height / 2 > c && d > h - e.helperProportions.height / 2;
            case "pointer":
                return t(n.pageY, c, i.proportions().height) && t(n.pageX, l, i.proportions().width);
            case "touch":
                return (a >= c && d >= a || h >= c && d >= h || c > a && h > d) && (o >= l && u >= o || r >= l && u >= r || l > o && r > u);
            default:
                return !1
            }
        }
    }();
    t.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(e, i) {
            var s, n, o = t.ui.ddmanager.droppables[e.options.scope] || [], a = i ? i.type : null, r = (e.currentItem || e.element).find(":data(ui-droppable)").addBack();
            t: for (s = 0; o.length > s; s++)
                if (!(o[s].options.disabled || e && !o[s].accept.call(o[s].element[0], e.currentItem || e.element))) {
                    for (n = 0; r.length > n; n++)
                        if (r[n] === o[s].element[0]) {
                            o[s].proportions().height = 0;
                            continue t
                        }
                    o[s].visible = "none" !== o[s].element.css("display"),
                    o[s].visible && ("mousedown" === a && o[s]._activate.call(o[s], i),
                    o[s].offset = o[s].element.offset(),
                    o[s].proportions({
                        width: o[s].element[0].offsetWidth,
                        height: o[s].element[0].offsetHeight
                    }))
                }
        },
        drop: function(e, i) {
            var s = !1;
            return t.each((t.ui.ddmanager.droppables[e.options.scope] || []).slice(), function() {
                this.options && (!this.options.disabled && this.visible && v(e, this, this.options.tolerance, i) && (s = this._drop.call(this, i) || s),
                !this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element) && (this.isout = !0,
                this.isover = !1,
                this._deactivate.call(this, i)))
            }),
            s
        },
        dragStart: function(e, i) {
            e.element.parentsUntil("body").on("scroll.droppable", function() {
                e.options.refreshPositions || t.ui.ddmanager.prepareOffsets(e, i)
            })
        },
        drag: function(e, i) {
            e.options.refreshPositions && t.ui.ddmanager.prepareOffsets(e, i),
            t.each(t.ui.ddmanager.droppables[e.options.scope] || [], function() {
                if (!this.options.disabled && !this.greedyChild && this.visible) {
                    var s, n, o, a = v(e, this, this.options.tolerance, i), r = !a && this.isover ? "isout" : a && !this.isover ? "isover" : null;
                    r && (this.options.greedy && (n = this.options.scope,
                    o = this.element.parents(":data(ui-droppable)").filter(function() {
                        return t(this).droppable("instance").options.scope === n
                    }),
                    o.length && (s = t(o[0]).droppable("instance"),
                    s.greedyChild = "isover" === r)),
                    s && "isover" === r && (s.isover = !1,
                    s.isout = !0,
                    s._out.call(s, i)),
                    this[r] = !0,
                    this["isout" === r ? "isover" : "isout"] = !1,
                    this["isover" === r ? "_over" : "_out"].call(this, i),
                    s && "isout" === r && (s.isout = !1,
                    s.isover = !0,
                    s._over.call(s, i)))
                }
            })
        },
        dragStop: function(e, i) {
            e.element.parentsUntil("body").off("scroll.droppable"),
            e.options.refreshPositions || t.ui.ddmanager.prepareOffsets(e, i)
        }
    },
    t.uiBackCompat !== !1 && t.widget("ui.droppable", t.ui.droppable, {
        options: {
            hoverClass: !1,
            activeClass: !1
        },
        _addActiveClass: function() {
            this._super(),
            this.options.activeClass && this.element.addClass(this.options.activeClass)
        },
        _removeActiveClass: function() {
            this._super(),
            this.options.activeClass && this.element.removeClass(this.options.activeClass)
        },
        _addHoverClass: function() {
            this._super(),
            this.options.hoverClass && this.element.addClass(this.options.hoverClass)
        },
        _removeHoverClass: function() {
            this._super(),
            this.options.hoverClass && this.element.removeClass(this.options.hoverClass)
        }
    }),
    t.ui.droppable,
    t.widget("ui.progressbar", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-progressbar": "ui-corner-all",
                "ui-progressbar-value": "ui-corner-left",
                "ui-progressbar-complete": "ui-corner-right"
            },
            max: 100,
            value: 0,
            change: null,
            complete: null
        },
        min: 0,
        _create: function() {
            this.oldValue = this.options.value = this._constrainedValue(),
            this.element.attr({
                role: "progressbar",
                "aria-valuemin": this.min
            }),
            this._addClass("ui-progressbar", "ui-widget ui-widget-content"),
            this.valueDiv = t("<div>").appendTo(this.element),
            this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header"),
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),
            this.valueDiv.remove()
        },
        value: function(t) {
            return void 0 === t ? this.options.value : (this.options.value = this._constrainedValue(t),
            this._refreshValue(),
            void 0)
        },
        _constrainedValue: function(t) {
            return void 0 === t && (t = this.options.value),
            this.indeterminate = t === !1,
            "number" != typeof t && (t = 0),
            this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, t))
        },
        _setOptions: function(t) {
            var e = t.value;
            delete t.value,
            this._super(t),
            this.options.value = this._constrainedValue(e),
            this._refreshValue()
        },
        _setOption: function(t, e) {
            "max" === t && (e = Math.max(this.min, e)),
            this._super(t, e)
        },
        _setOptionDisabled: function(t) {
            this._super(t),
            this.element.attr("aria-disabled", t),
            this._toggleClass(null, "ui-state-disabled", !!t)
        },
        _percentage: function() {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
        },
        _refreshValue: function() {
            var e = this.options.value
              , i = this._percentage();
            this.valueDiv.toggle(this.indeterminate || e > this.min).width(i.toFixed(0) + "%"),
            this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, e === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate),
            this.indeterminate ? (this.element.removeAttr("aria-valuenow"),
            this.overlayDiv || (this.overlayDiv = t("<div>").appendTo(this.valueDiv),
            this._addClass(this.overlayDiv, "ui-progressbar-overlay"))) : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": e
            }),
            this.overlayDiv && (this.overlayDiv.remove(),
            this.overlayDiv = null)),
            this.oldValue !== e && (this.oldValue = e,
            this._trigger("change")),
            e === this.options.max && this._trigger("complete")
        }
    }),
    t.widget("ui.selectable", t.ui.mouse, {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function() {
            var e = this;
            this._addClass("ui-selectable"),
            this.dragged = !1,
            this.refresh = function() {
                e.elementPos = t(e.element[0]).offset(),
                e.selectees = t(e.options.filter, e.element[0]),
                e._addClass(e.selectees, "ui-selectee"),
                e.selectees.each(function() {
                    var i = t(this)
                      , s = i.offset()
                      , n = {
                        left: s.left - e.elementPos.left,
                        top: s.top - e.elementPos.top
                    };
                    t.data(this, "selectable-item", {
                        element: this,
                        $element: i,
                        left: n.left,
                        top: n.top,
                        right: n.left + i.outerWidth(),
                        bottom: n.top + i.outerHeight(),
                        startselected: !1,
                        selected: i.hasClass("ui-selected"),
                        selecting: i.hasClass("ui-selecting"),
                        unselecting: i.hasClass("ui-unselecting")
                    })
                })
            }
            ,
            this.refresh(),
            this._mouseInit(),
            this.helper = t("<div>"),
            this._addClass(this.helper, "ui-selectable-helper")
        },
        _destroy: function() {
            this.selectees.removeData("selectable-item"),
            this._mouseDestroy()
        },
        _mouseStart: function(e) {
            var i = this
              , s = this.options;
            this.opos = [e.pageX, e.pageY],
            this.elementPos = t(this.element[0]).offset(),
            this.options.disabled || (this.selectees = t(s.filter, this.element[0]),
            this._trigger("start", e),
            t(s.appendTo).append(this.helper),
            this.helper.css({
                left: e.pageX,
                top: e.pageY,
                width: 0,
                height: 0
            }),
            s.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function() {
                var s = t.data(this, "selectable-item");
                s.startselected = !0,
                e.metaKey || e.ctrlKey || (i._removeClass(s.$element, "ui-selected"),
                s.selected = !1,
                i._addClass(s.$element, "ui-unselecting"),
                s.unselecting = !0,
                i._trigger("unselecting", e, {
                    unselecting: s.element
                }))
            }),
            t(e.target).parents().addBack().each(function() {
                var s, n = t.data(this, "selectable-item");
                return n ? (s = !e.metaKey && !e.ctrlKey || !n.$element.hasClass("ui-selected"),
                i._removeClass(n.$element, s ? "ui-unselecting" : "ui-selected")._addClass(n.$element, s ? "ui-selecting" : "ui-unselecting"),
                n.unselecting = !s,
                n.selecting = s,
                n.selected = s,
                s ? i._trigger("selecting", e, {
                    selecting: n.element
                }) : i._trigger("unselecting", e, {
                    unselecting: n.element
                }),
                !1) : void 0
            }))
        },
        _mouseDrag: function(e) {
            if (this.dragged = !0,
            !this.options.disabled) {
                var i, s = this, n = this.options, o = this.opos[0], a = this.opos[1], r = e.pageX, h = e.pageY;
                return o > r && (i = r,
                r = o,
                o = i),
                a > h && (i = h,
                h = a,
                a = i),
                this.helper.css({
                    left: o,
                    top: a,
                    width: r - o,
                    height: h - a
                }),
                this.selectees.each(function() {
                    var i = t.data(this, "selectable-item")
                      , l = !1
                      , c = {};
                    i && i.element !== s.element[0] && (c.left = i.left + s.elementPos.left,
                    c.right = i.right + s.elementPos.left,
                    c.top = i.top + s.elementPos.top,
                    c.bottom = i.bottom + s.elementPos.top,
                    "touch" === n.tolerance ? l = !(c.left > r || o > c.right || c.top > h || a > c.bottom) : "fit" === n.tolerance && (l = c.left > o && r > c.right && c.top > a && h > c.bottom),
                    l ? (i.selected && (s._removeClass(i.$element, "ui-selected"),
                    i.selected = !1),
                    i.unselecting && (s._removeClass(i.$element, "ui-unselecting"),
                    i.unselecting = !1),
                    i.selecting || (s._addClass(i.$element, "ui-selecting"),
                    i.selecting = !0,
                    s._trigger("selecting", e, {
                        selecting: i.element
                    }))) : (i.selecting && ((e.metaKey || e.ctrlKey) && i.startselected ? (s._removeClass(i.$element, "ui-selecting"),
                    i.selecting = !1,
                    s._addClass(i.$element, "ui-selected"),
                    i.selected = !0) : (s._removeClass(i.$element, "ui-selecting"),
                    i.selecting = !1,
                    i.startselected && (s._addClass(i.$element, "ui-unselecting"),
                    i.unselecting = !0),
                    s._trigger("unselecting", e, {
                        unselecting: i.element
                    }))),
                    i.selected && (e.metaKey || e.ctrlKey || i.startselected || (s._removeClass(i.$element, "ui-selected"),
                    i.selected = !1,
                    s._addClass(i.$element, "ui-unselecting"),
                    i.unselecting = !0,
                    s._trigger("unselecting", e, {
                        unselecting: i.element
                    })))))
                }),
                !1
            }
        },
        _mouseStop: function(e) {
            var i = this;
            return this.dragged = !1,
            t(".ui-unselecting", this.element[0]).each(function() {
                var s = t.data(this, "selectable-item");
                i._removeClass(s.$element, "ui-unselecting"),
                s.unselecting = !1,
                s.startselected = !1,
                i._trigger("unselected", e, {
                    unselected: s.element
                })
            }),
            t(".ui-selecting", this.element[0]).each(function() {
                var s = t.data(this, "selectable-item");
                i._removeClass(s.$element, "ui-selecting")._addClass(s.$element, "ui-selected"),
                s.selecting = !1,
                s.selected = !0,
                s.startselected = !0,
                i._trigger("selected", e, {
                    selected: s.element
                })
            }),
            this._trigger("stop", e),
            this.helper.remove(),
            !1
        }
    }),
    t.widget("ui.selectmenu", [t.ui.formResetMixin, {
        version: "1.12.1",
        defaultElement: "<select>",
        options: {
            appendTo: null,
            classes: {
                "ui-selectmenu-button-open": "ui-corner-top",
                "ui-selectmenu-button-closed": "ui-corner-all"
            },
            disabled: null,
            icons: {
                button: "ui-icon-triangle-1-s"
            },
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            width: !1,
            change: null,
            close: null,
            focus: null,
            open: null,
            select: null
        },
        _create: function() {
            var e = this.element.uniqueId().attr("id");
            this.ids = {
                element: e,
                button: e + "-button",
                menu: e + "-menu"
            },
            this._drawButton(),
            this._drawMenu(),
            this._bindFormResetHandler(),
            this._rendered = !1,
            this.menuItems = t()
        },
        _drawButton: function() {
            var e, i = this, s = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex);
            this.labels = this.element.labels().attr("for", this.ids.button),
            this._on(this.labels, {
                click: function(t) {
                    this.button.focus(),
                    t.preventDefault()
                }
            }),
            this.element.hide(),
            this.button = t("<span>", {
                tabindex: this.options.disabled ? -1 : 0,
                id: this.ids.button,
                role: "combobox",
                "aria-expanded": "false",
                "aria-autocomplete": "list",
                "aria-owns": this.ids.menu,
                "aria-haspopup": "true",
                title: this.element.attr("title")
            }).insertAfter(this.element),
            this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget"),
            e = t("<span>").appendTo(this.button),
            this._addClass(e, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button),
            this.buttonItem = this._renderButtonItem(s).appendTo(this.button),
            this.options.width !== !1 && this._resizeButton(),
            this._on(this.button, this._buttonEvents),
            this.button.one("focusin", function() {
                i._rendered || i._refreshMenu()
            })
        },
        _drawMenu: function() {
            var e = this;
            this.menu = t("<ul>", {
                "aria-hidden": "true",
                "aria-labelledby": this.ids.button,
                id: this.ids.menu
            }),
            this.menuWrap = t("<div>").append(this.menu),
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"),
            this.menuWrap.appendTo(this._appendTo()),
            this.menuInstance = this.menu.menu({
                classes: {
                    "ui-menu": "ui-corner-bottom"
                },
                role: "listbox",
                select: function(t, i) {
                    t.preventDefault(),
                    e._setSelection(),
                    e._select(i.item.data("ui-selectmenu-item"), t)
                },
                focus: function(t, i) {
                    var s = i.item.data("ui-selectmenu-item");
                    null != e.focusIndex && s.index !== e.focusIndex && (e._trigger("focus", t, {
                        item: s
                    }),
                    e.isOpen || e._select(s, t)),
                    e.focusIndex = s.index,
                    e.button.attr("aria-activedescendant", e.menuItems.eq(s.index).attr("id"))
                }
            }).menu("instance"),
            this.menuInstance._off(this.menu, "mouseleave"),
            this.menuInstance._closeOnDocumentClick = function() {
                return !1
            }
            ,
            this.menuInstance._isDivider = function() {
                return !1
            }
        },
        refresh: function() {
            this._refreshMenu(),
            this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item") || {})),
            null === this.options.width && this._resizeButton()
        },
        _refreshMenu: function() {
            var t, e = this.element.find("option");
            this.menu.empty(),
            this._parseOptions(e),
            this._renderMenu(this.menu, this.items),
            this.menuInstance.refresh(),
            this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),
            this._rendered = !0,
            e.length && (t = this._getSelectedItem(),
            this.menuInstance.focus(null, t),
            this._setAria(t.data("ui-selectmenu-item")),
            this._setOption("disabled", this.element.prop("disabled")))
        },
        open: function(t) {
            this.options.disabled || (this._rendered ? (this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active"),
            this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(),
            this.menuItems.length && (this.isOpen = !0,
            this._toggleAttr(),
            this._resizeMenu(),
            this._position(),
            this._on(this.document, this._documentClick),
            this._trigger("open", t)))
        },
        _position: function() {
            this.menuWrap.position(t.extend({
                of: this.button
            }, this.options.position))
        },
        close: function(t) {
            this.isOpen && (this.isOpen = !1,
            this._toggleAttr(),
            this.range = null,
            this._off(this.document),
            this._trigger("close", t))
        },
        widget: function() {
            return this.button
        },
        menuWidget: function() {
            return this.menu
        },
        _renderButtonItem: function(e) {
            var i = t("<span>");
            return this._setText(i, e.label),
            this._addClass(i, "ui-selectmenu-text"),
            i
        },
        _renderMenu: function(e, i) {
            var s = this
              , n = "";
            t.each(i, function(i, o) {
                var a;
                o.optgroup !== n && (a = t("<li>", {
                    text: o.optgroup
                }),
                s._addClass(a, "ui-selectmenu-optgroup", "ui-menu-divider" + (o.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : "")),
                a.appendTo(e),
                n = o.optgroup),
                s._renderItemData(e, o)
            })
        },
        _renderItemData: function(t, e) {
            return this._renderItem(t, e).data("ui-selectmenu-item", e)
        },
        _renderItem: function(e, i) {
            var s = t("<li>")
              , n = t("<div>", {
                title: i.element.attr("title")
            });
            return i.disabled && this._addClass(s, null, "ui-state-disabled"),
            this._setText(n, i.label),
            s.append(n).appendTo(e)
        },
        _setText: function(t, e) {
            e ? t.text(e) : t.html("&#160;")
        },
        _move: function(t, e) {
            var i, s, n = ".ui-menu-item";
            this.isOpen ? i = this.menuItems.eq(this.focusIndex).parent("li") : (i = this.menuItems.eq(this.element[0].selectedIndex).parent("li"),
            n += ":not(.ui-state-disabled)"),
            s = "first" === t || "last" === t ? i["first" === t ? "prevAll" : "nextAll"](n).eq(-1) : i[t + "All"](n).eq(0),
            s.length && this.menuInstance.focus(e, s)
        },
        _getSelectedItem: function() {
            return this.menuItems.eq(this.element[0].selectedIndex).parent("li")
        },
        _toggle: function(t) {
            this[this.isOpen ? "close" : "open"](t)
        },
        _setSelection: function() {
            var t;
            this.range && (window.getSelection ? (t = window.getSelection(),
            t.removeAllRanges(),
            t.addRange(this.range)) : this.range.select(),
            this.button.focus())
        },
        _documentClick: {
            mousedown: function(e) {
                this.isOpen && (t(e.target).closest(".ui-selectmenu-menu, #" + t.ui.escapeSelector(this.ids.button)).length || this.close(e))
            }
        },
        _buttonEvents: {
            mousedown: function() {
                var t;
                window.getSelection ? (t = window.getSelection(),
                t.rangeCount && (this.range = t.getRangeAt(0))) : this.range = document.selection.createRange()
            },
            click: function(t) {
                this._setSelection(),
                this._toggle(t)
            },
            keydown: function(e) {
                var i = !0;
                switch (e.keyCode) {
                case t.ui.keyCode.TAB:
                case t.ui.keyCode.ESCAPE:
                    this.close(e),
                    i = !1;
                    break;
                case t.ui.keyCode.ENTER:
                    this.isOpen && this._selectFocusedItem(e);
                    break;
                case t.ui.keyCode.UP:
                    e.altKey ? this._toggle(e) : this._move("prev", e);
                    break;
                case t.ui.keyCode.DOWN:
                    e.altKey ? this._toggle(e) : this._move("next", e);
                    break;
                case t.ui.keyCode.SPACE:
                    this.isOpen ? this._selectFocusedItem(e) : this._toggle(e);
                    break;
                case t.ui.keyCode.LEFT:
                    this._move("prev", e);
                    break;
                case t.ui.keyCode.RIGHT:
                    this._move("next", e);
                    break;
                case t.ui.keyCode.HOME:
                case t.ui.keyCode.PAGE_UP:
                    this._move("first", e);
                    break;
                case t.ui.keyCode.END:
                case t.ui.keyCode.PAGE_DOWN:
                    this._move("last", e);
                    break;
                default:
                    this.menu.trigger(e),
                    i = !1
                }
                i && e.preventDefault()
            }
        },
        _selectFocusedItem: function(t) {
            var e = this.menuItems.eq(this.focusIndex).parent("li");
            e.hasClass("ui-state-disabled") || this._select(e.data("ui-selectmenu-item"), t)
        },
        _select: function(t, e) {
            var i = this.element[0].selectedIndex;
            this.element[0].selectedIndex = t.index,
            this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(t)),
            this._setAria(t),
            this._trigger("select", e, {
                item: t
            }),
            t.index !== i && this._trigger("change", e, {
                item: t
            }),
            this.close(e)
        },
        _setAria: function(t) {
            var e = this.menuItems.eq(t.index).attr("id");
            this.button.attr({
                "aria-labelledby": e,
                "aria-activedescendant": e
            }),
            this.menu.attr("aria-activedescendant", e)
        },
        _setOption: function(t, e) {
            if ("icons" === t) {
                var i = this.button.find("span.ui-icon");
                this._removeClass(i, null, this.options.icons.button)._addClass(i, null, e.button)
            }
            this._super(t, e),
            "appendTo" === t && this.menuWrap.appendTo(this._appendTo()),
            "width" === t && this._resizeButton()
        },
        _setOptionDisabled: function(t) {
            this._super(t),
            this.menuInstance.option("disabled", t),
            this.button.attr("aria-disabled", t),
            this._toggleClass(this.button, null, "ui-state-disabled", t),
            this.element.prop("disabled", t),
            t ? (this.button.attr("tabindex", -1),
            this.close()) : this.button.attr("tabindex", 0)
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            return e && (e = e.jquery || e.nodeType ? t(e) : this.document.find(e).eq(0)),
            e && e[0] || (e = this.element.closest(".ui-front, dialog")),
            e.length || (e = this.document[0].body),
            e
        },
        _toggleAttr: function() {
            this.button.attr("aria-expanded", this.isOpen),
            this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen),
            this.menu.attr("aria-hidden", !this.isOpen)
        },
        _resizeButton: function() {
            var t = this.options.width;
            return t === !1 ? (this.button.css("width", ""),
            void 0) : (null === t && (t = this.element.show().outerWidth(),
            this.element.hide()),
            this.button.outerWidth(t),
            void 0)
        },
        _resizeMenu: function() {
            this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1))
        },
        _getCreateOptions: function() {
            var t = this._super();
            return t.disabled = this.element.prop("disabled"),
            t
        },
        _parseOptions: function(e) {
            var i = this
              , s = [];
            e.each(function(e, n) {
                s.push(i._parseOption(t(n), e))
            }),
            this.items = s
        },
        _parseOption: function(t, e) {
            var i = t.parent("optgroup");
            return {
                element: t,
                index: e,
                value: t.val(),
                label: t.text(),
                optgroup: i.attr("label") || "",
                disabled: i.prop("disabled") || t.prop("disabled")
            }
        },
        _destroy: function() {
            this._unbindFormResetHandler(),
            this.menuWrap.remove(),
            this.button.remove(),
            this.element.show(),
            this.element.removeUniqueId(),
            this.labels.attr("for", this.ids.element)
        }
    }]),
    t.widget("ui.slider", t.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            classes: {
                "ui-slider": "ui-corner-all",
                "ui-slider-handle": "ui-corner-all",
                "ui-slider-range": "ui-corner-all ui-widget-header"
            },
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        numPages: 5,
        _create: function() {
            this._keySliding = !1,
            this._mouseSliding = !1,
            this._animateOff = !0,
            this._handleIndex = null,
            this._detectOrientation(),
            this._mouseInit(),
            this._calculateNewMax(),
            this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content"),
            this._refresh(),
            this._animateOff = !1
        },
        _refresh: function() {
            this._createRange(),
            this._createHandles(),
            this._setupEvents(),
            this._refreshValue()
        },
        _createHandles: function() {
            var e, i, s = this.options, n = this.element.find(".ui-slider-handle"), o = "<span tabindex='0'></span>", a = [];
            for (i = s.values && s.values.length || 1,
            n.length > i && (n.slice(i).remove(),
            n = n.slice(0, i)),
            e = n.length; i > e; e++)
                a.push(o);
            this.handles = n.add(t(a.join("")).appendTo(this.element)),
            this._addClass(this.handles, "ui-slider-handle", "ui-state-default"),
            this.handle = this.handles.eq(0),
            this.handles.each(function(e) {
                t(this).data("ui-slider-handle-index", e).attr("tabIndex", 0)
            })
        },
        _createRange: function() {
            var e = this.options;
            e.range ? (e.range === !0 && (e.values ? e.values.length && 2 !== e.values.length ? e.values = [e.values[0], e.values[0]] : t.isArray(e.values) && (e.values = e.values.slice(0)) : e.values = [this._valueMin(), this._valueMin()]),
            this.range && this.range.length ? (this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max"),
            this.range.css({
                left: "",
                bottom: ""
            })) : (this.range = t("<div>").appendTo(this.element),
            this._addClass(this.range, "ui-slider-range")),
            ("min" === e.range || "max" === e.range) && this._addClass(this.range, "ui-slider-range-" + e.range)) : (this.range && this.range.remove(),
            this.range = null)
        },
        _setupEvents: function() {
            this._off(this.handles),
            this._on(this.handles, this._handleEvents),
            this._hoverable(this.handles),
            this._focusable(this.handles)
        },
        _destroy: function() {
            this.handles.remove(),
            this.range && this.range.remove(),
            this._mouseDestroy()
        },
        _mouseCapture: function(e) {
            var i, s, n, o, a, r, h, l, c = this, u = this.options;
            return u.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            },
            this.elementOffset = this.element.offset(),
            i = {
                x: e.pageX,
                y: e.pageY
            },
            s = this._normValueFromMouse(i),
            n = this._valueMax() - this._valueMin() + 1,
            this.handles.each(function(e) {
                var i = Math.abs(s - c.values(e));
                (n > i || n === i && (e === c._lastChangedValue || c.values(e) === u.min)) && (n = i,
                o = t(this),
                a = e)
            }),
            r = this._start(e, a),
            r === !1 ? !1 : (this._mouseSliding = !0,
            this._handleIndex = a,
            this._addClass(o, null, "ui-state-active"),
            o.trigger("focus"),
            h = o.offset(),
            l = !t(e.target).parents().addBack().is(".ui-slider-handle"),
            this._clickOffset = l ? {
                left: 0,
                top: 0
            } : {
                left: e.pageX - h.left - o.width() / 2,
                top: e.pageY - h.top - o.height() / 2 - (parseInt(o.css("borderTopWidth"), 10) || 0) - (parseInt(o.css("borderBottomWidth"), 10) || 0) + (parseInt(o.css("marginTop"), 10) || 0)
            },
            this.handles.hasClass("ui-state-hover") || this._slide(e, a, s),
            this._animateOff = !0,
            !0))
        },
        _mouseStart: function() {
            return !0
        },
        _mouseDrag: function(t) {
            var e = {
                x: t.pageX,
                y: t.pageY
            }
              , i = this._normValueFromMouse(e);
            return this._slide(t, this._handleIndex, i),
            !1
        },
        _mouseStop: function(t) {
            return this._removeClass(this.handles, null, "ui-state-active"),
            this._mouseSliding = !1,
            this._stop(t, this._handleIndex),
            this._change(t, this._handleIndex),
            this._handleIndex = null,
            this._clickOffset = null,
            this._animateOff = !1,
            !1
        },
        _detectOrientation: function() {
            this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(t) {
            var e, i, s, n, o;
            return "horizontal" === this.orientation ? (e = this.elementSize.width,
            i = t.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (e = this.elementSize.height,
            i = t.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)),
            s = i / e,
            s > 1 && (s = 1),
            0 > s && (s = 0),
            "vertical" === this.orientation && (s = 1 - s),
            n = this._valueMax() - this._valueMin(),
            o = this._valueMin() + s * n,
            this._trimAlignValue(o)
        },
        _uiHash: function(t, e, i) {
            var s = {
                handle: this.handles[t],
                handleIndex: t,
                value: void 0 !== e ? e : this.value()
            };
            return this._hasMultipleValues() && (s.value = void 0 !== e ? e : this.values(t),
            s.values = i || this.values()),
            s
        },
        _hasMultipleValues: function() {
            return this.options.values && this.options.values.length
        },
        _start: function(t, e) {
            return this._trigger("start", t, this._uiHash(e))
        },
        _slide: function(t, e, i) {
            var s, n, o = this.value(), a = this.values();
            this._hasMultipleValues() && (n = this.values(e ? 0 : 1),
            o = this.values(e),
            2 === this.options.values.length && this.options.range === !0 && (i = 0 === e ? Math.min(n, i) : Math.max(n, i)),
            a[e] = i),
            i !== o && (s = this._trigger("slide", t, this._uiHash(e, i, a)),
            s !== !1 && (this._hasMultipleValues() ? this.values(e, i) : this.value(i)))
        },
        _stop: function(t, e) {
            this._trigger("stop", t, this._uiHash(e))
        },
        _change: function(t, e) {
            this._keySliding || this._mouseSliding || (this._lastChangedValue = e,
            this._trigger("change", t, this._uiHash(e)))
        },
        value: function(t) {
            return arguments.length ? (this.options.value = this._trimAlignValue(t),
            this._refreshValue(),
            this._change(null, 0),
            void 0) : this._value()
        },
        values: function(e, i) {
            var s, n, o;
            if (arguments.length > 1)
                return this.options.values[e] = this._trimAlignValue(i),
                this._refreshValue(),
                this._change(null, e),
                void 0;
            if (!arguments.length)
                return this._values();
            if (!t.isArray(arguments[0]))
                return this._hasMultipleValues() ? this._values(e) : this.value();
            for (s = this.options.values,
            n = arguments[0],
            o = 0; s.length > o; o += 1)
                s[o] = this._trimAlignValue(n[o]),
                this._change(null, o);
            this._refreshValue()
        },
        _setOption: function(e, i) {
            var s, n = 0;
            switch ("range" === e && this.options.range === !0 && ("min" === i ? (this.options.value = this._values(0),
            this.options.values = null) : "max" === i && (this.options.value = this._values(this.options.values.length - 1),
            this.options.values = null)),
            t.isArray(this.options.values) && (n = this.options.values.length),
            this._super(e, i),
            e) {
            case "orientation":
                this._detectOrientation(),
                this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation),
                this._refreshValue(),
                this.options.range && this._refreshRange(i),
                this.handles.css("horizontal" === i ? "bottom" : "left", "");
                break;
            case "value":
                this._animateOff = !0,
                this._refreshValue(),
                this._change(null, 0),
                this._animateOff = !1;
                break;
            case "values":
                for (this._animateOff = !0,
                this._refreshValue(),
                s = n - 1; s >= 0; s--)
                    this._change(null, s);
                this._animateOff = !1;
                break;
            case "step":
            case "min":
            case "max":
                this._animateOff = !0,
                this._calculateNewMax(),
                this._refreshValue(),
                this._animateOff = !1;
                break;
            case "range":
                this._animateOff = !0,
                this._refresh(),
                this._animateOff = !1
            }
        },
        _setOptionDisabled: function(t) {
            this._super(t),
            this._toggleClass(null, "ui-state-disabled", !!t)
        },
        _value: function() {
            var t = this.options.value;
            return t = this._trimAlignValue(t)
        },
        _values: function(t) {
            var e, i, s;
            if (arguments.length)
                return e = this.options.values[t],
                e = this._trimAlignValue(e);
            if (this._hasMultipleValues()) {
                for (i = this.options.values.slice(),
                s = 0; i.length > s; s += 1)
                    i[s] = this._trimAlignValue(i[s]);
                return i
            }
            return []
        },
        _trimAlignValue: function(t) {
            if (this._valueMin() >= t)
                return this._valueMin();
            if (t >= this._valueMax())
                return this._valueMax();
            var e = this.options.step > 0 ? this.options.step : 1
              , i = (t - this._valueMin()) % e
              , s = t - i;
            return 2 * Math.abs(i) >= e && (s += i > 0 ? e : -e),
            parseFloat(s.toFixed(5))
        },
        _calculateNewMax: function() {
            var t = this.options.max
              , e = this._valueMin()
              , i = this.options.step
              , s = Math.round((t - e) / i) * i;
            t = s + e,
            t > this.options.max && (t -= i),
            this.max = parseFloat(t.toFixed(this._precision()))
        },
        _precision: function() {
            var t = this._precisionOf(this.options.step);
            return null !== this.options.min && (t = Math.max(t, this._precisionOf(this.options.min))),
            t
        },
        _precisionOf: function(t) {
            var e = "" + t
              , i = e.indexOf(".");
            return -1 === i ? 0 : e.length - i - 1
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.max
        },
        _refreshRange: function(t) {
            "vertical" === t && this.range.css({
                width: "",
                left: ""
            }),
            "horizontal" === t && this.range.css({
                height: "",
                bottom: ""
            })
        },
        _refreshValue: function() {
            var e, i, s, n, o, a = this.options.range, r = this.options, h = this, l = this._animateOff ? !1 : r.animate, c = {};
            this._hasMultipleValues() ? this.handles.each(function(s) {
                i = 100 * ((h.values(s) - h._valueMin()) / (h._valueMax() - h._valueMin())),
                c["horizontal" === h.orientation ? "left" : "bottom"] = i + "%",
                t(this).stop(1, 1)[l ? "animate" : "css"](c, r.animate),
                h.options.range === !0 && ("horizontal" === h.orientation ? (0 === s && h.range.stop(1, 1)[l ? "animate" : "css"]({
                    left: i + "%"
                }, r.animate),
                1 === s && h.range[l ? "animate" : "css"]({
                    width: i - e + "%"
                }, {
                    queue: !1,
                    duration: r.animate
                })) : (0 === s && h.range.stop(1, 1)[l ? "animate" : "css"]({
                    bottom: i + "%"
                }, r.animate),
                1 === s && h.range[l ? "animate" : "css"]({
                    height: i - e + "%"
                }, {
                    queue: !1,
                    duration: r.animate
                }))),
                e = i
            }) : (s = this.value(),
            n = this._valueMin(),
            o = this._valueMax(),
            i = o !== n ? 100 * ((s - n) / (o - n)) : 0,
            c["horizontal" === this.orientation ? "left" : "bottom"] = i + "%",
            this.handle.stop(1, 1)[l ? "animate" : "css"](c, r.animate),
            "min" === a && "horizontal" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({
                width: i + "%"
            }, r.animate),
            "max" === a && "horizontal" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({
                width: 100 - i + "%"
            }, r.animate),
            "min" === a && "vertical" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({
                height: i + "%"
            }, r.animate),
            "max" === a && "vertical" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({
                height: 100 - i + "%"
            }, r.animate))
        },
        _handleEvents: {
            keydown: function(e) {
                var i, s, n, o, a = t(e.target).data("ui-slider-handle-index");
                switch (e.keyCode) {
                case t.ui.keyCode.HOME:
                case t.ui.keyCode.END:
                case t.ui.keyCode.PAGE_UP:
                case t.ui.keyCode.PAGE_DOWN:
                case t.ui.keyCode.UP:
                case t.ui.keyCode.RIGHT:
                case t.ui.keyCode.DOWN:
                case t.ui.keyCode.LEFT:
                    if (e.preventDefault(),
                    !this._keySliding && (this._keySliding = !0,
                    this._addClass(t(e.target), null, "ui-state-active"),
                    i = this._start(e, a),
                    i === !1))
                        return
                }
                switch (o = this.options.step,
                s = n = this._hasMultipleValues() ? this.values(a) : this.value(),
                e.keyCode) {
                case t.ui.keyCode.HOME:
                    n = this._valueMin();
                    break;
                case t.ui.keyCode.END:
                    n = this._valueMax();
                    break;
                case t.ui.keyCode.PAGE_UP:
                    n = this._trimAlignValue(s + (this._valueMax() - this._valueMin()) / this.numPages);
                    break;
                case t.ui.keyCode.PAGE_DOWN:
                    n = this._trimAlignValue(s - (this._valueMax() - this._valueMin()) / this.numPages);
                    break;
                case t.ui.keyCode.UP:
                case t.ui.keyCode.RIGHT:
                    if (s === this._valueMax())
                        return;
                    n = this._trimAlignValue(s + o);
                    break;
                case t.ui.keyCode.DOWN:
                case t.ui.keyCode.LEFT:
                    if (s === this._valueMin())
                        return;
                    n = this._trimAlignValue(s - o)
                }
                this._slide(e, a, n)
            },
            keyup: function(e) {
                var i = t(e.target).data("ui-slider-handle-index");
                this._keySliding && (this._keySliding = !1,
                this._stop(e, i),
                this._change(e, i),
                this._removeClass(t(e.target), null, "ui-state-active"))
            }
        }
    }),
    t.widget("ui.sortable", t.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1e3,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _isOverAxis: function(t, e, i) {
            return t >= e && e + i > t
        },
        _isFloating: function(t) {
            return /left|right/.test(t.css("float")) || /inline|table-cell/.test(t.css("display"))
        },
        _create: function() {
            this.containerCache = {},
            this._addClass("ui-sortable"),
            this.refresh(),
            this.offset = this.element.offset(),
            this._mouseInit(),
            this._setHandleClassName(),
            this.ready = !0
        },
        _setOption: function(t, e) {
            this._super(t, e),
            "handle" === t && this._setHandleClassName()
        },
        _setHandleClassName: function() {
            var e = this;
            this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle"),
            t.each(this.items, function() {
                e._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle")
            })
        },
        _destroy: function() {
            this._mouseDestroy();
            for (var t = this.items.length - 1; t >= 0; t--)
                this.items[t].item.removeData(this.widgetName + "-item");
            return this
        },
        _mouseCapture: function(e, i) {
            var s = null
              , n = !1
              , o = this;
            return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(e),
            t(e.target).parents().each(function() {
                return t.data(this, o.widgetName + "-item") === o ? (s = t(this),
                !1) : void 0
            }),
            t.data(e.target, o.widgetName + "-item") === o && (s = t(e.target)),
            s ? !this.options.handle || i || (t(this.options.handle, s).find("*").addBack().each(function() {
                this === e.target && (n = !0)
            }),
            n) ? (this.currentItem = s,
            this._removeCurrentsFromItems(),
            !0) : !1 : !1)
        },
        _mouseStart: function(e, i, s) {
            var n, o, a = this.options;
            if (this.currentContainer = this,
            this.refreshPositions(),
            this.helper = this._createHelper(e),
            this._cacheHelperProportions(),
            this._cacheMargins(),
            this.scrollParent = this.helper.scrollParent(),
            this.offset = this.currentItem.offset(),
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            },
            t.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }),
            this.helper.css("position", "absolute"),
            this.cssPosition = this.helper.css("position"),
            this.originalPosition = this._generatePosition(e),
            this.originalPageX = e.pageX,
            this.originalPageY = e.pageY,
            a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt),
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            },
            this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
            this._createPlaceholder(),
            a.containment && this._setContainment(),
            a.cursor && "auto" !== a.cursor && (o = this.document.find("body"),
            this.storedCursor = o.css("cursor"),
            o.css("cursor", a.cursor),
            this.storedStylesheet = t("<style>*{ cursor: " + a.cursor + " !important; }</style>").appendTo(o)),
            a.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", a.opacity)),
            a.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", a.zIndex)),
            this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()),
            this._trigger("start", e, this._uiHash()),
            this._preserveHelperProportions || this._cacheHelperProportions(),
            !s)
                for (n = this.containers.length - 1; n >= 0; n--)
                    this.containers[n]._trigger("activate", e, this._uiHash(this));
            return t.ui.ddmanager && (t.ui.ddmanager.current = this),
            t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e),
            this.dragging = !0,
            this._addClass(this.helper, "ui-sortable-helper"),
            this._mouseDrag(e),
            !0
        },
        _mouseDrag: function(e) {
            var i, s, n, o, a = this.options, r = !1;
            for (this.position = this._generatePosition(e),
            this.positionAbs = this._convertPositionTo("absolute"),
            this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs),
            this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < a.scrollSensitivity ? this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop + a.scrollSpeed : e.pageY - this.overflowOffset.top < a.scrollSensitivity && (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop - a.scrollSpeed),
            this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < a.scrollSensitivity ? this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft + a.scrollSpeed : e.pageX - this.overflowOffset.left < a.scrollSensitivity && (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft - a.scrollSpeed)) : (e.pageY - this.document.scrollTop() < a.scrollSensitivity ? r = this.document.scrollTop(this.document.scrollTop() - a.scrollSpeed) : this.window.height() - (e.pageY - this.document.scrollTop()) < a.scrollSensitivity && (r = this.document.scrollTop(this.document.scrollTop() + a.scrollSpeed)),
            e.pageX - this.document.scrollLeft() < a.scrollSensitivity ? r = this.document.scrollLeft(this.document.scrollLeft() - a.scrollSpeed) : this.window.width() - (e.pageX - this.document.scrollLeft()) < a.scrollSensitivity && (r = this.document.scrollLeft(this.document.scrollLeft() + a.scrollSpeed))),
            r !== !1 && t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e)),
            this.positionAbs = this._convertPositionTo("absolute"),
            this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"),
            this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"),
            i = this.items.length - 1; i >= 0; i--)
                if (s = this.items[i],
                n = s.item[0],
                o = this._intersectsWithPointer(s),
                o && s.instance === this.currentContainer && n !== this.currentItem[0] && this.placeholder[1 === o ? "next" : "prev"]()[0] !== n && !t.contains(this.placeholder[0], n) && ("semi-dynamic" === this.options.type ? !t.contains(this.element[0], n) : !0)) {
                    if (this.direction = 1 === o ? "down" : "up",
                    "pointer" !== this.options.tolerance && !this._intersectsWithSides(s))
                        break;
                    this._rearrange(e, s),
                    this._trigger("change", e, this._uiHash());
                    break
                }
            return this._contactContainers(e),
            t.ui.ddmanager && t.ui.ddmanager.drag(this, e),
            this._trigger("sort", e, this._uiHash()),
            this.lastPositionAbs = this.positionAbs,
            !1
        },
        _mouseStop: function(e, i) {
            if (e) {
                if (t.ui.ddmanager && !this.options.dropBehaviour && t.ui.ddmanager.drop(this, e),
                this.options.revert) {
                    var s = this
                      , n = this.placeholder.offset()
                      , o = this.options.axis
                      , a = {};
                    o && "x" !== o || (a.left = n.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)),
                    o && "y" !== o || (a.top = n.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)),
                    this.reverting = !0,
                    t(this.helper).animate(a, parseInt(this.options.revert, 10) || 500, function() {
                        s._clear(e)
                    })
                } else
                    this._clear(e, i);
                return !1
            }
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp(new t.Event("mouseup",{
                    target: null
                })),
                "original" === this.options.helper ? (this.currentItem.css(this._storedCSS),
                this._removeClass(this.currentItem, "ui-sortable-helper")) : this.currentItem.show();
                for (var e = this.containers.length - 1; e >= 0; e--)
                    this.containers[e]._trigger("deactivate", null, this._uiHash(this)),
                    this.containers[e].containerCache.over && (this.containers[e]._trigger("out", null, this._uiHash(this)),
                    this.containers[e].containerCache.over = 0)
            }
            return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(),
            t.extend(this, {
                helper: null,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null
            }),
            this.domPosition.prev ? t(this.domPosition.prev).after(this.currentItem) : t(this.domPosition.parent).prepend(this.currentItem)),
            this
        },
        serialize: function(e) {
            var i = this._getItemsAsjQuery(e && e.connected)
              , s = [];
            return e = e || {},
            t(i).each(function() {
                var i = (t(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[\-=_](.+)/);
                i && s.push((e.key || i[1] + "[]") + "=" + (e.key && e.expression ? i[1] : i[2]))
            }),
            !s.length && e.key && s.push(e.key + "="),
            s.join("&")
        },
        toArray: function(e) {
            var i = this._getItemsAsjQuery(e && e.connected)
              , s = [];
            return e = e || {},
            i.each(function() {
                s.push(t(e.item || this).attr(e.attribute || "id") || "")
            }),
            s
        },
        _intersectsWith: function(t) {
            var e = this.positionAbs.left
              , i = e + this.helperProportions.width
              , s = this.positionAbs.top
              , n = s + this.helperProportions.height
              , o = t.left
              , a = o + t.width
              , r = t.top
              , h = r + t.height
              , l = this.offset.click.top
              , c = this.offset.click.left
              , u = "x" === this.options.axis || s + l > r && h > s + l
              , d = "y" === this.options.axis || e + c > o && a > e + c
              , p = u && d;
            return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > t[this.floating ? "width" : "height"] ? p : e + this.helperProportions.width / 2 > o && a > i - this.helperProportions.width / 2 && s + this.helperProportions.height / 2 > r && h > n - this.helperProportions.height / 2
        },
        _intersectsWithPointer: function(t) {
            var e, i, s = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top, t.height), n = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left, t.width), o = s && n;
            return o ? (e = this._getDragVerticalDirection(),
            i = this._getDragHorizontalDirection(),
            this.floating ? "right" === i || "down" === e ? 2 : 1 : e && ("down" === e ? 2 : 1)) : !1
        },
        _intersectsWithSides: function(t) {
            var e = this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height)
              , i = this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width)
              , s = this._getDragVerticalDirection()
              , n = this._getDragHorizontalDirection();
            return this.floating && n ? "right" === n && i || "left" === n && !i : s && ("down" === s && e || "up" === s && !e)
        },
        _getDragVerticalDirection: function() {
            var t = this.positionAbs.top - this.lastPositionAbs.top;
            return 0 !== t && (t > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var t = this.positionAbs.left - this.lastPositionAbs.left;
            return 0 !== t && (t > 0 ? "right" : "left")
        },
        refresh: function(t) {
            return this._refreshItems(t),
            this._setHandleClassName(),
            this.refreshPositions(),
            this
        },
        _connectWith: function() {
            var t = this.options;
            return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith
        },
        _getItemsAsjQuery: function(e) {
            function i() {
                r.push(this)
            }
            var s, n, o, a, r = [], h = [], l = this._connectWith();
            if (l && e)
                for (s = l.length - 1; s >= 0; s--)
                    for (o = t(l[s], this.document[0]),
                    n = o.length - 1; n >= 0; n--)
                        a = t.data(o[n], this.widgetFullName),
                        a && a !== this && !a.options.disabled && h.push([t.isFunction(a.options.items) ? a.options.items.call(a.element) : t(a.options.items, a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), a]);
            for (h.push([t.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : t(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]),
            s = h.length - 1; s >= 0; s--)
                h[s][0].each(i);
            return t(r)
        },
        _removeCurrentsFromItems: function() {
            var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = t.grep(this.items, function(t) {
                for (var i = 0; e.length > i; i++)
                    if (e[i] === t.item[0])
                        return !1;
                return !0
            })
        },
        _refreshItems: function(e) {
            this.items = [],
            this.containers = [this];
            var i, s, n, o, a, r, h, l, c = this.items, u = [[t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
                item: this.currentItem
            }) : t(this.options.items, this.element), this]], d = this._connectWith();
            if (d && this.ready)
                for (i = d.length - 1; i >= 0; i--)
                    for (n = t(d[i], this.document[0]),
                    s = n.length - 1; s >= 0; s--)
                        o = t.data(n[s], this.widgetFullName),
                        o && o !== this && !o.options.disabled && (u.push([t.isFunction(o.options.items) ? o.options.items.call(o.element[0], e, {
                            item: this.currentItem
                        }) : t(o.options.items, o.element), o]),
                        this.containers.push(o));
            for (i = u.length - 1; i >= 0; i--)
                for (a = u[i][1],
                r = u[i][0],
                s = 0,
                l = r.length; l > s; s++)
                    h = t(r[s]),
                    h.data(this.widgetName + "-item", a),
                    c.push({
                        item: h,
                        instance: a,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
        },
        refreshPositions: function(e) {
            this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1,
            this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
            var i, s, n, o;
            for (i = this.items.length - 1; i >= 0; i--)
                s = this.items[i],
                s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0] || (n = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item,
                e || (s.width = n.outerWidth(),
                s.height = n.outerHeight()),
                o = n.offset(),
                s.left = o.left,
                s.top = o.top);
            if (this.options.custom && this.options.custom.refreshContainers)
                this.options.custom.refreshContainers.call(this);
            else
                for (i = this.containers.length - 1; i >= 0; i--)
                    o = this.containers[i].element.offset(),
                    this.containers[i].containerCache.left = o.left,
                    this.containers[i].containerCache.top = o.top,
                    this.containers[i].containerCache.width = this.containers[i].element.outerWidth(),
                    this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
            return this
        },
        _createPlaceholder: function(e) {
            e = e || this;
            var i, s = e.options;
            s.placeholder && s.placeholder.constructor !== String || (i = s.placeholder,
            s.placeholder = {
                element: function() {
                    var s = e.currentItem[0].nodeName.toLowerCase()
                      , n = t("<" + s + ">", e.document[0]);
                    return e._addClass(n, "ui-sortable-placeholder", i || e.currentItem[0].className)._removeClass(n, "ui-sortable-helper"),
                    "tbody" === s ? e._createTrPlaceholder(e.currentItem.find("tr").eq(0), t("<tr>", e.document[0]).appendTo(n)) : "tr" === s ? e._createTrPlaceholder(e.currentItem, n) : "img" === s && n.attr("src", e.currentItem.attr("src")),
                    i || n.css("visibility", "hidden"),
                    n
                },
                update: function(t, n) {
                    (!i || s.forcePlaceholderSize) && (n.height() || n.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10)),
                    n.width() || n.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10)))
                }
            }),
            e.placeholder = t(s.placeholder.element.call(e.element, e.currentItem)),
            e.currentItem.after(e.placeholder),
            s.placeholder.update(e, e.placeholder)
        },
        _createTrPlaceholder: function(e, i) {
            var s = this;
            e.children().each(function() {
                t("<td>&#160;</td>", s.document[0]).attr("colspan", t(this).attr("colspan") || 1).appendTo(i)
            })
        },
        _contactContainers: function(e) {
            var i, s, n, o, a, r, h, l, c, u, d = null, p = null;
            for (i = this.containers.length - 1; i >= 0; i--)
                if (!t.contains(this.currentItem[0], this.containers[i].element[0]))
                    if (this._intersectsWith(this.containers[i].containerCache)) {
                        if (d && t.contains(this.containers[i].element[0], d.element[0]))
                            continue;
                        d = this.containers[i],
                        p = i
                    } else
                        this.containers[i].containerCache.over && (this.containers[i]._trigger("out", e, this._uiHash(this)),
                        this.containers[i].containerCache.over = 0);
            if (d)
                if (1 === this.containers.length)
                    this.containers[p].containerCache.over || (this.containers[p]._trigger("over", e, this._uiHash(this)),
                    this.containers[p].containerCache.over = 1);
                else {
                    for (n = 1e4,
                    o = null,
                    c = d.floating || this._isFloating(this.currentItem),
                    a = c ? "left" : "top",
                    r = c ? "width" : "height",
                    u = c ? "pageX" : "pageY",
                    s = this.items.length - 1; s >= 0; s--)
                        t.contains(this.containers[p].element[0], this.items[s].item[0]) && this.items[s].item[0] !== this.currentItem[0] && (h = this.items[s].item.offset()[a],
                        l = !1,
                        e[u] - h > this.items[s][r] / 2 && (l = !0),
                        n > Math.abs(e[u] - h) && (n = Math.abs(e[u] - h),
                        o = this.items[s],
                        this.direction = l ? "up" : "down"));
                    if (!o && !this.options.dropOnEmpty)
                        return;
                    if (this.currentContainer === this.containers[p])
                        return this.currentContainer.containerCache.over || (this.containers[p]._trigger("over", e, this._uiHash()),
                        this.currentContainer.containerCache.over = 1),
                        void 0;
                    o ? this._rearrange(e, o, null, !0) : this._rearrange(e, null, this.containers[p].element, !0),
                    this._trigger("change", e, this._uiHash()),
                    this.containers[p]._trigger("change", e, this._uiHash(this)),
                    this.currentContainer = this.containers[p],
                    this.options.placeholder.update(this.currentContainer, this.placeholder),
                    this.containers[p]._trigger("over", e, this._uiHash(this)),
                    this.containers[p].containerCache.over = 1
                }
        },
        _createHelper: function(e) {
            var i = this.options
              , s = t.isFunction(i.helper) ? t(i.helper.apply(this.element[0], [e, this.currentItem])) : "clone" === i.helper ? this.currentItem.clone() : this.currentItem;
            return s.parents("body").length || t("parent" !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]),
            s[0] === this.currentItem[0] && (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            }),
            (!s[0].style.width || i.forceHelperSize) && s.width(this.currentItem.width()),
            (!s[0].style.height || i.forceHelperSize) && s.height(this.currentItem.height()),
            s
        },
        _adjustOffsetFromHelper: function(e) {
            "string" == typeof e && (e = e.split(" ")),
            t.isArray(e) && (e = {
                left: +e[0],
                top: +e[1] || 0
            }),
            "left"in e && (this.offset.click.left = e.left + this.margins.left),
            "right"in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left),
            "top"in e && (this.offset.click.top = e.top + this.margins.top),
            "bottom"in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var e = this.offsetParent.offset();
            return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(),
            e.top += this.scrollParent.scrollTop()),
            (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && t.ui.ie) && (e = {
                top: 0,
                left: 0
            }),
            {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if ("relative" === this.cssPosition) {
                var t = this.currentItem.position();
                return {
                    top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var e, i, s, n = this.options;
            "parent" === n.containment && (n.containment = this.helper[0].parentNode),
            ("document" === n.containment || "window" === n.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === n.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === n.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]),
            /^(document|window|parent)$/.test(n.containment) || (e = t(n.containment)[0],
            i = t(n.containment).offset(),
            s = "hidden" !== t(e).css("overflow"),
            this.containment = [i.left + (parseInt(t(e).css("borderLeftWidth"), 10) || 0) + (parseInt(t(e).css("paddingLeft"), 10) || 0) - this.margins.left, i.top + (parseInt(t(e).css("borderTopWidth"), 10) || 0) + (parseInt(t(e).css("paddingTop"), 10) || 0) - this.margins.top, i.left + (s ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(t(e).css("borderLeftWidth"), 10) || 0) - (parseInt(t(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (s ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(t(e).css("borderTopWidth"), 10) || 0) - (parseInt(t(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
        },
        _convertPositionTo: function(e, i) {
            i || (i = this.position);
            var s = "absolute" === e ? 1 : -1
              , n = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , o = /(html|body)/i.test(n[0].tagName);
            return {
                top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : o ? 0 : n.scrollTop()) * s,
                left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft()) * s
            }
        },
        _generatePosition: function(e) {
            var i, s, n = this.options, o = e.pageX, a = e.pageY, r = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, h = /(html|body)/i.test(r[0].tagName);
            return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()),
            this.originalPosition && (this.containment && (e.pageX - this.offset.click.left < this.containment[0] && (o = this.containment[0] + this.offset.click.left),
            e.pageY - this.offset.click.top < this.containment[1] && (a = this.containment[1] + this.offset.click.top),
            e.pageX - this.offset.click.left > this.containment[2] && (o = this.containment[2] + this.offset.click.left),
            e.pageY - this.offset.click.top > this.containment[3] && (a = this.containment[3] + this.offset.click.top)),
            n.grid && (i = this.originalPageY + Math.round((a - this.originalPageY) / n.grid[1]) * n.grid[1],
            a = this.containment ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3] ? i : i - this.offset.click.top >= this.containment[1] ? i - n.grid[1] : i + n.grid[1] : i,
            s = this.originalPageX + Math.round((o - this.originalPageX) / n.grid[0]) * n.grid[0],
            o = this.containment ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2] ? s : s - this.offset.click.left >= this.containment[0] ? s - n.grid[0] : s + n.grid[0] : s)),
            {
                top: a - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : h ? 0 : r.scrollTop()),
                left: o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : h ? 0 : r.scrollLeft())
            }
        },
        _rearrange: function(t, e, i, s) {
            i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? e.item[0] : e.item[0].nextSibling),
            this.counter = this.counter ? ++this.counter : 1;
            var n = this.counter;
            this._delay(function() {
                n === this.counter && this.refreshPositions(!s)
            })
        },
        _clear: function(t, e) {
            function i(t, e, i) {
                return function(s) {
                    i._trigger(t, s, e._uiHash(e))
                }
            }
            this.reverting = !1;
            var s, n = [];
            if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem),
            this._noFinalSort = null,
            this.helper[0] === this.currentItem[0]) {
                for (s in this._storedCSS)
                    ("auto" === this._storedCSS[s] || "static" === this._storedCSS[s]) && (this._storedCSS[s] = "");
                this.currentItem.css(this._storedCSS),
                this._removeClass(this.currentItem, "ui-sortable-helper")
            } else
                this.currentItem.show();
            for (this.fromOutside && !e && n.push(function(t) {
                this._trigger("receive", t, this._uiHash(this.fromOutside))
            }),
            !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || e || n.push(function(t) {
                this._trigger("update", t, this._uiHash())
            }),
            this !== this.currentContainer && (e || (n.push(function(t) {
                this._trigger("remove", t, this._uiHash())
            }),
            n.push(function(t) {
                return function(e) {
                    t._trigger("receive", e, this._uiHash(this))
                }
            }
            .call(this, this.currentContainer)),
            n.push(function(t) {
                return function(e) {
                    t._trigger("update", e, this._uiHash(this))
                }
            }
            .call(this, this.currentContainer)))),
            s = this.containers.length - 1; s >= 0; s--)
                e || n.push(i("deactivate", this, this.containers[s])),
                this.containers[s].containerCache.over && (n.push(i("out", this, this.containers[s])),
                this.containers[s].containerCache.over = 0);
            if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor),
            this.storedStylesheet.remove()),
            this._storedOpacity && this.helper.css("opacity", this._storedOpacity),
            this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex),
            this.dragging = !1,
            e || this._trigger("beforeStop", t, this._uiHash()),
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
            this.helper = null),
            !e) {
                for (s = 0; n.length > s; s++)
                    n[s].call(this, t);
                this._trigger("stop", t, this._uiHash())
            }
            return this.fromOutside = !1,
            !this.cancelHelperRemoval
        },
        _trigger: function() {
            t.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
        },
        _uiHash: function(e) {
            var i = e || this;
            return {
                helper: i.helper,
                placeholder: i.placeholder || t([]),
                position: i.position,
                originalPosition: i.originalPosition,
                offset: i.positionAbs,
                item: i.currentItem,
                sender: e ? e.element : null
            }
        }
    }),
    t.widget("ui.spinner", {
        version: "1.12.1",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            classes: {
                "ui-spinner": "ui-corner-all",
                "ui-spinner-down": "ui-corner-br",
                "ui-spinner-up": "ui-corner-tr"
            },
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max),
            this._setOption("min", this.options.min),
            this._setOption("step", this.options.step),
            "" !== this.value() && this._value(this.element.val(), !0),
            this._draw(),
            this._on(this._events),
            this._refresh(),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var e = this._super()
              , i = this.element;
            return t.each(["min", "max", "step"], function(t, s) {
                var n = i.attr(s);
                null != n && n.length && (e[s] = n)
            }),
            e
        },
        _events: {
            keydown: function(t) {
                this._start(t) && this._keydown(t) && t.preventDefault()
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val()
            },
            blur: function(t) {
                return this.cancelBlur ? (delete this.cancelBlur,
                void 0) : (this._stop(),
                this._refresh(),
                this.previous !== this.element.val() && this._trigger("change", t),
                void 0)
            },
            mousewheel: function(t, e) {
                if (e) {
                    if (!this.spinning && !this._start(t))
                        return !1;
                    this._spin((e > 0 ? 1 : -1) * this.options.step, t),
                    clearTimeout(this.mousewheelTimer),
                    this.mousewheelTimer = this._delay(function() {
                        this.spinning && this._stop(t)
                    }, 100),
                    t.preventDefault()
                }
            },
            "mousedown .ui-spinner-button": function(e) {
                function i() {
                    var e = this.element[0] === t.ui.safeActiveElement(this.document[0]);
                    e || (this.element.trigger("focus"),
                    this.previous = s,
                    this._delay(function() {
                        this.previous = s
                    }))
                }
                var s;
                s = this.element[0] === t.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val(),
                e.preventDefault(),
                i.call(this),
                this.cancelBlur = !0,
                this._delay(function() {
                    delete this.cancelBlur,
                    i.call(this)
                }),
                this._start(e) !== !1 && this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(e) {
                return t(e.currentTarget).hasClass("ui-state-active") ? this._start(e) === !1 ? !1 : (this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e),
                void 0) : void 0
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _enhance: function() {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent().append("<a></a><a></a>")
        },
        _draw: function() {
            this._enhance(),
            this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content"),
            this._addClass("ui-spinner-input"),
            this.element.attr("role", "spinbutton"),
            this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", !0).button({
                classes: {
                    "ui-button": ""
                }
            }),
            this._removeClass(this.buttons, "ui-corner-all"),
            this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up"),
            this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down"),
            this.buttons.first().button({
                icon: this.options.icons.up,
                showLabel: !1
            }),
            this.buttons.last().button({
                icon: this.options.icons.down,
                showLabel: !1
            }),
            this.buttons.height() > Math.ceil(.5 * this.uiSpinner.height()) && this.uiSpinner.height() > 0 && this.uiSpinner.height(this.uiSpinner.height())
        },
        _keydown: function(e) {
            var i = this.options
              , s = t.ui.keyCode;
            switch (e.keyCode) {
            case s.UP:
                return this._repeat(null, 1, e),
                !0;
            case s.DOWN:
                return this._repeat(null, -1, e),
                !0;
            case s.PAGE_UP:
                return this._repeat(null, i.page, e),
                !0;
            case s.PAGE_DOWN:
                return this._repeat(null, -i.page, e),
                !0
            }
            return !1
        },
        _start: function(t) {
            return this.spinning || this._trigger("start", t) !== !1 ? (this.counter || (this.counter = 1),
            this.spinning = !0,
            !0) : !1
        },
        _repeat: function(t, e, i) {
            t = t || 500,
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                this._repeat(40, e, i)
            }, t),
            this._spin(e * this.options.step, i)
        },
        _spin: function(t, e) {
            var i = this.value() || 0;
            this.counter || (this.counter = 1),
            i = this._adjustValue(i + t * this._increment(this.counter)),
            this.spinning && this._trigger("spin", e, {
                value: i
            }) === !1 || (this._value(i),
            this.counter++)
        },
        _increment: function(e) {
            var i = this.options.incremental;
            return i ? t.isFunction(i) ? i(e) : Math.floor(e * e * e / 5e4 - e * e / 500 + 17 * e / 200 + 1) : 1
        },
        _precision: function() {
            var t = this._precisionOf(this.options.step);
            return null !== this.options.min && (t = Math.max(t, this._precisionOf(this.options.min))),
            t
        },
        _precisionOf: function(t) {
            var e = "" + t
              , i = e.indexOf(".");
            return -1 === i ? 0 : e.length - i - 1
        },
        _adjustValue: function(t) {
            var e, i, s = this.options;
            return e = null !== s.min ? s.min : 0,
            i = t - e,
            i = Math.round(i / s.step) * s.step,
            t = e + i,
            t = parseFloat(t.toFixed(this._precision())),
            null !== s.max && t > s.max ? s.max : null !== s.min && s.min > t ? s.min : t
        },
        _stop: function(t) {
            this.spinning && (clearTimeout(this.timer),
            clearTimeout(this.mousewheelTimer),
            this.counter = 0,
            this.spinning = !1,
            this._trigger("stop", t))
        },
        _setOption: function(t, e) {
            var i, s, n;
            return "culture" === t || "numberFormat" === t ? (i = this._parse(this.element.val()),
            this.options[t] = e,
            this.element.val(this._format(i)),
            void 0) : (("max" === t || "min" === t || "step" === t) && "string" == typeof e && (e = this._parse(e)),
            "icons" === t && (s = this.buttons.first().find(".ui-icon"),
            this._removeClass(s, null, this.options.icons.up),
            this._addClass(s, null, e.up),
            n = this.buttons.last().find(".ui-icon"),
            this._removeClass(n, null, this.options.icons.down),
            this._addClass(n, null, e.down)),
            this._super(t, e),
            void 0)
        },
        _setOptionDisabled: function(t) {
            this._super(t),
            this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!t),
            this.element.prop("disabled", !!t),
            this.buttons.button(t ? "disable" : "enable")
        },
        _setOptions: r(function(t) {
            this._super(t)
        }),
        _parse: function(t) {
            return "string" == typeof t && "" !== t && (t = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(t, 10, this.options.culture) : +t),
            "" === t || isNaN(t) ? null : t
        },
        _format: function(t) {
            return "" === t ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(t, this.options.numberFormat, this.options.culture) : t
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        isValid: function() {
            var t = this.value();
            return null === t ? !1 : t === this._adjustValue(t)
        },
        _value: function(t, e) {
            var i;
            "" !== t && (i = this._parse(t),
            null !== i && (e || (i = this._adjustValue(i)),
            t = this._format(i))),
            this.element.val(t),
            this._refresh()
        },
        _destroy: function() {
            this.element.prop("disabled", !1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: r(function(t) {
            this._stepUp(t)
        }),
        _stepUp: function(t) {
            this._start() && (this._spin((t || 1) * this.options.step),
            this._stop())
        },
        stepDown: r(function(t) {
            this._stepDown(t)
        }),
        _stepDown: function(t) {
            this._start() && (this._spin((t || 1) * -this.options.step),
            this._stop())
        },
        pageUp: r(function(t) {
            this._stepUp((t || 1) * this.options.page)
        }),
        pageDown: r(function(t) {
            this._stepDown((t || 1) * this.options.page)
        }),
        value: function(t) {
            return arguments.length ? (r(this._value).call(this, t),
            void 0) : this._parse(this.element.val())
        },
        widget: function() {
            return this.uiSpinner
        }
    }),
    t.uiBackCompat !== !1 && t.widget("ui.spinner", t.ui.spinner, {
        _enhance: function() {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())
        },
        _uiSpinnerHtml: function() {
            return "<span>"
        },
        _buttonHtml: function() {
            return "<a></a><a></a>"
        }
    }),
    t.ui.spinner,
    t.widget("ui.tabs", {
        version: "1.12.1",
        delay: 300,
        options: {
            active: null,
            classes: {
                "ui-tabs": "ui-corner-all",
                "ui-tabs-nav": "ui-corner-all",
                "ui-tabs-panel": "ui-corner-bottom",
                "ui-tabs-tab": "ui-corner-top"
            },
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _isLocal: function() {
            var t = /#.*$/;
            return function(e) {
                var i, s;
                i = e.href.replace(t, ""),
                s = location.href.replace(t, "");
                try {
                    i = decodeURIComponent(i)
                } catch (n) {}
                try {
                    s = decodeURIComponent(s)
                } catch (n) {}
                return e.hash.length > 1 && i === s
            }
        }(),
        _create: function() {
            var e = this
              , i = this.options;
            this.running = !1,
            this._addClass("ui-tabs", "ui-widget ui-widget-content"),
            this._toggleClass("ui-tabs-collapsible", null, i.collapsible),
            this._processTabs(),
            i.active = this._initialActive(),
            t.isArray(i.disabled) && (i.disabled = t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"), function(t) {
                return e.tabs.index(t)
            }))).sort()),
            this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(i.active) : t(),
            this._refresh(),
            this.active.length && this.load(i.active)
        },
        _initialActive: function() {
            var e = this.options.active
              , i = this.options.collapsible
              , s = location.hash.substring(1);
            return null === e && (s && this.tabs.each(function(i, n) {
                return t(n).attr("aria-controls") === s ? (e = i,
                !1) : void 0
            }),
            null === e && (e = this.tabs.index(this.tabs.filter(".ui-tabs-active"))),
            (null === e || -1 === e) && (e = this.tabs.length ? 0 : !1)),
            e !== !1 && (e = this.tabs.index(this.tabs.eq(e)),
            -1 === e && (e = i ? !1 : 0)),
            !i && e === !1 && this.anchors.length && (e = 0),
            e
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: this.active.length ? this._getPanelForTab(this.active) : t()
            }
        },
        _tabKeydown: function(e) {
            var i = t(t.ui.safeActiveElement(this.document[0])).closest("li")
              , s = this.tabs.index(i)
              , n = !0;
            if (!this._handlePageNav(e)) {
                switch (e.keyCode) {
                case t.ui.keyCode.RIGHT:
                case t.ui.keyCode.DOWN:
                    s++;
                    break;
                case t.ui.keyCode.UP:
                case t.ui.keyCode.LEFT:
                    n = !1,
                    s--;
                    break;
                case t.ui.keyCode.END:
                    s = this.anchors.length - 1;
                    break;
                case t.ui.keyCode.HOME:
                    s = 0;
                    break;
                case t.ui.keyCode.SPACE:
                    return e.preventDefault(),
                    clearTimeout(this.activating),
                    this._activate(s),
                    void 0;
                case t.ui.keyCode.ENTER:
                    return e.preventDefault(),
                    clearTimeout(this.activating),
                    this._activate(s === this.options.active ? !1 : s),
                    void 0;
                default:
                    return
                }
                e.preventDefault(),
                clearTimeout(this.activating),
                s = this._focusNextTab(s, n),
                e.ctrlKey || e.metaKey || (i.attr("aria-selected", "false"),
                this.tabs.eq(s).attr("aria-selected", "true"),
                this.activating = this._delay(function() {
                    this.option("active", s)
                }, this.delay))
            }
        },
        _panelKeydown: function(e) {
            this._handlePageNav(e) || e.ctrlKey && e.keyCode === t.ui.keyCode.UP && (e.preventDefault(),
            this.active.trigger("focus"))
        },
        _handlePageNav: function(e) {
            return e.altKey && e.keyCode === t.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)),
            !0) : e.altKey && e.keyCode === t.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)),
            !0) : void 0
        },
        _findNextTab: function(e, i) {
            function s() {
                return e > n && (e = 0),
                0 > e && (e = n),
                e
            }
            for (var n = this.tabs.length - 1; -1 !== t.inArray(s(), this.options.disabled); )
                e = i ? e + 1 : e - 1;
            return e
        },
        _focusNextTab: function(t, e) {
            return t = this._findNextTab(t, e),
            this.tabs.eq(t).trigger("focus"),
            t
        },
        _setOption: function(t, e) {
            return "active" === t ? (this._activate(e),
            void 0) : (this._super(t, e),
            "collapsible" === t && (this._toggleClass("ui-tabs-collapsible", null, e),
            e || this.options.active !== !1 || this._activate(0)),
            "event" === t && this._setupEvents(e),
            "heightStyle" === t && this._setupHeightStyle(e),
            void 0)
        },
        _sanitizeSelector: function(t) {
            return t ? t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var e = this.options
              , i = this.tablist.children(":has(a[href])");
            e.disabled = t.map(i.filter(".ui-state-disabled"), function(t) {
                return i.index(t)
            }),
            this._processTabs(),
            e.active !== !1 && this.anchors.length ? this.active.length && !t.contains(this.tablist[0], this.active[0]) ? this.tabs.length === e.disabled.length ? (e.active = !1,
            this.active = t()) : this._activate(this._findNextTab(Math.max(0, e.active - 1), !1)) : e.active = this.tabs.index(this.active) : (e.active = !1,
            this.active = t()),
            this._refresh()
        },
        _refresh: function() {
            this._setOptionDisabled(this.options.disabled),
            this._setupEvents(this.options.event),
            this._setupHeightStyle(this.options.heightStyle),
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }),
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-hidden": "true"
            }),
            this.active.length ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }),
            this._addClass(this.active, "ui-tabs-active", "ui-state-active"),
            this._getPanelForTab(this.active).show().attr({
                "aria-hidden": "false"
            })) : this.tabs.eq(0).attr("tabIndex", 0)
        },
        _processTabs: function() {
            var e = this
              , i = this.tabs
              , s = this.anchors
              , n = this.panels;
            this.tablist = this._getList().attr("role", "tablist"),
            this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header"),
            this.tablist.on("mousedown" + this.eventNamespace, "> li", function(e) {
                t(this).is(".ui-state-disabled") && e.preventDefault()
            }).on("focus" + this.eventNamespace, ".ui-tabs-anchor", function() {
                t(this).closest("li").is(".ui-state-disabled") && this.blur()
            }),
            this.tabs = this.tablist.find("> li:has(a[href])").attr({
                role: "tab",
                tabIndex: -1
            }),
            this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"),
            this.anchors = this.tabs.map(function() {
                return t("a", this)[0]
            }).attr({
                role: "presentation",
                tabIndex: -1
            }),
            this._addClass(this.anchors, "ui-tabs-anchor"),
            this.panels = t(),
            this.anchors.each(function(i, s) {
                var n, o, a, r = t(s).uniqueId().attr("id"), h = t(s).closest("li"), l = h.attr("aria-controls");
                e._isLocal(s) ? (n = s.hash,
                a = n.substring(1),
                o = e.element.find(e._sanitizeSelector(n))) : (a = h.attr("aria-controls") || t({}).uniqueId()[0].id,
                n = "#" + a,
                o = e.element.find(n),
                o.length || (o = e._createPanel(a),
                o.insertAfter(e.panels[i - 1] || e.tablist)),
                o.attr("aria-live", "polite")),
                o.length && (e.panels = e.panels.add(o)),
                l && h.data("ui-tabs-aria-controls", l),
                h.attr({
                    "aria-controls": a,
                    "aria-labelledby": r
                }),
                o.attr("aria-labelledby", r)
            }),
            this.panels.attr("role", "tabpanel"),
            this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"),
            i && (this._off(i.not(this.tabs)),
            this._off(s.not(this.anchors)),
            this._off(n.not(this.panels)))
        },
        _getList: function() {
            return this.tablist || this.element.find("ol, ul").eq(0)
        },
        _createPanel: function(e) {
            return t("<div>").attr("id", e).data("ui-tabs-destroy", !0)
        },
        _setOptionDisabled: function(e) {
            var i, s, n;
            for (t.isArray(e) && (e.length ? e.length === this.anchors.length && (e = !0) : e = !1),
            n = 0; s = this.tabs[n]; n++)
                i = t(s),
                e === !0 || -1 !== t.inArray(n, e) ? (i.attr("aria-disabled", "true"),
                this._addClass(i, null, "ui-state-disabled")) : (i.removeAttr("aria-disabled"),
                this._removeClass(i, null, "ui-state-disabled"));
            this.options.disabled = e,
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, e === !0)
        },
        _setupEvents: function(e) {
            var i = {};
            e && t.each(e.split(" "), function(t, e) {
                i[e] = "_eventHandler"
            }),
            this._off(this.anchors.add(this.tabs).add(this.panels)),
            this._on(!0, this.anchors, {
                click: function(t) {
                    t.preventDefault()
                }
            }),
            this._on(this.anchors, i),
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            }),
            this._on(this.panels, {
                keydown: "_panelKeydown"
            }),
            this._focusable(this.tabs),
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(e) {
            var i, s = this.element.parent();
            "fill" === e ? (i = s.height(),
            i -= this.element.outerHeight() - this.element.height(),
            this.element.siblings(":visible").each(function() {
                var e = t(this)
                  , s = e.css("position");
                "absolute" !== s && "fixed" !== s && (i -= e.outerHeight(!0))
            }),
            this.element.children().not(this.panels).each(function() {
                i -= t(this).outerHeight(!0)
            }),
            this.panels.each(function() {
                t(this).height(Math.max(0, i - t(this).innerHeight() + t(this).height()))
            }).css("overflow", "auto")) : "auto" === e && (i = 0,
            this.panels.each(function() {
                i = Math.max(i, t(this).height("").height())
            }).height(i))
        },
        _eventHandler: function(e) {
            var i = this.options
              , s = this.active
              , n = t(e.currentTarget)
              , o = n.closest("li")
              , a = o[0] === s[0]
              , r = a && i.collapsible
              , h = r ? t() : this._getPanelForTab(o)
              , l = s.length ? this._getPanelForTab(s) : t()
              , c = {
                oldTab: s,
                oldPanel: l,
                newTab: r ? t() : o,
                newPanel: h
            };
            e.preventDefault(),
            o.hasClass("ui-state-disabled") || o.hasClass("ui-tabs-loading") || this.running || a && !i.collapsible || this._trigger("beforeActivate", e, c) === !1 || (i.active = r ? !1 : this.tabs.index(o),
            this.active = a ? t() : o,
            this.xhr && this.xhr.abort(),
            l.length || h.length || t.error("jQuery UI Tabs: Mismatching fragment identifier."),
            h.length && this.load(this.tabs.index(o), e),
            this._toggle(e, c))
        },
        _toggle: function(e, i) {
            function s() {
                o.running = !1,
                o._trigger("activate", e, i)
            }
            function n() {
                o._addClass(i.newTab.closest("li"), "ui-tabs-active", "ui-state-active"),
                a.length && o.options.show ? o._show(a, o.options.show, s) : (a.show(),
                s())
            }
            var o = this
              , a = i.newPanel
              , r = i.oldPanel;
            this.running = !0,
            r.length && this.options.hide ? this._hide(r, this.options.hide, function() {
                o._removeClass(i.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"),
                n()
            }) : (this._removeClass(i.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"),
            r.hide(),
            n()),
            r.attr("aria-hidden", "true"),
            i.oldTab.attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }),
            a.length && r.length ? i.oldTab.attr("tabIndex", -1) : a.length && this.tabs.filter(function() {
                return 0 === t(this).attr("tabIndex")
            }).attr("tabIndex", -1),
            a.attr("aria-hidden", "false"),
            i.newTab.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            })
        },
        _activate: function(e) {
            var i, s = this._findActive(e);
            s[0] !== this.active[0] && (s.length || (s = this.active),
            i = s.find(".ui-tabs-anchor")[0],
            this._eventHandler({
                target: i,
                currentTarget: i,
                preventDefault: t.noop
            }))
        },
        _findActive: function(e) {
            return e === !1 ? t() : this.tabs.eq(e)
        },
        _getIndex: function(e) {
            return "string" == typeof e && (e = this.anchors.index(this.anchors.filter("[href$='" + t.ui.escapeSelector(e) + "']"))),
            e
        },
        _destroy: function() {
            this.xhr && this.xhr.abort(),
            this.tablist.removeAttr("role").off(this.eventNamespace),
            this.anchors.removeAttr("role tabIndex").removeUniqueId(),
            this.tabs.add(this.panels).each(function() {
                t.data(this, "ui-tabs-destroy") ? t(this).remove() : t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")
            }),
            this.tabs.each(function() {
                var e = t(this)
                  , i = e.data("ui-tabs-aria-controls");
                i ? e.attr("aria-controls", i).removeData("ui-tabs-aria-controls") : e.removeAttr("aria-controls")
            }),
            this.panels.show(),
            "content" !== this.options.heightStyle && this.panels.css("height", "")
        },
        enable: function(e) {
            var i = this.options.disabled;
            i !== !1 && (void 0 === e ? i = !1 : (e = this._getIndex(e),
            i = t.isArray(i) ? t.map(i, function(t) {
                return t !== e ? t : null
            }) : t.map(this.tabs, function(t, i) {
                return i !== e ? i : null
            })),
            this._setOptionDisabled(i))
        },
        disable: function(e) {
            var i = this.options.disabled;
            if (i !== !0) {
                if (void 0 === e)
                    i = !0;
                else {
                    if (e = this._getIndex(e),
                    -1 !== t.inArray(e, i))
                        return;
                    i = t.isArray(i) ? t.merge([e], i).sort() : [e]
                }
                this._setOptionDisabled(i)
            }
        },
        load: function(e, i) {
            e = this._getIndex(e);
            var s = this
              , n = this.tabs.eq(e)
              , o = n.find(".ui-tabs-anchor")
              , a = this._getPanelForTab(n)
              , r = {
                tab: n,
                panel: a
            }
              , h = function(t, e) {
                "abort" === e && s.panels.stop(!1, !0),
                s._removeClass(n, "ui-tabs-loading"),
                a.removeAttr("aria-busy"),
                t === s.xhr && delete s.xhr
            };
            this._isLocal(o[0]) || (this.xhr = t.ajax(this._ajaxSettings(o, i, r)),
            this.xhr && "canceled" !== this.xhr.statusText && (this._addClass(n, "ui-tabs-loading"),
            a.attr("aria-busy", "true"),
            this.xhr.done(function(t, e, n) {
                setTimeout(function() {
                    a.html(t),
                    s._trigger("load", i, r),
                    h(n, e)
                }, 1)
            }).fail(function(t, e) {
                setTimeout(function() {
                    h(t, e)
                }, 1)
            })))
        },
        _ajaxSettings: function(e, i, s) {
            var n = this;
            return {
                url: e.attr("href").replace(/#.*$/, ""),
                beforeSend: function(e, o) {
                    return n._trigger("beforeLoad", i, t.extend({
                        jqXHR: e,
                        ajaxSettings: o
                    }, s))
                }
            }
        },
        _getPanelForTab: function(e) {
            var i = t(e).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + i))
        }
    }),
    t.uiBackCompat !== !1 && t.widget("ui.tabs", t.ui.tabs, {
        _processTabs: function() {
            this._superApply(arguments),
            this._addClass(this.tabs, "ui-tab")
        }
    }),
    t.ui.tabs,
    t.widget("ui.tooltip", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-tooltip": "ui-corner-all ui-widget-shadow"
            },
            content: function() {
                var e = t(this).attr("title") || "";
                return t("<a>").text(e).html()
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: !0,
            track: !1,
            close: null,
            open: null
        },
        _addDescribedBy: function(e, i) {
            var s = (e.attr("aria-describedby") || "").split(/\s+/);
            s.push(i),
            e.data("ui-tooltip-id", i).attr("aria-describedby", t.trim(s.join(" ")))
        },
        _removeDescribedBy: function(e) {
            var i = e.data("ui-tooltip-id")
              , s = (e.attr("aria-describedby") || "").split(/\s+/)
              , n = t.inArray(i, s);
            -1 !== n && s.splice(n, 1),
            e.removeData("ui-tooltip-id"),
            s = t.trim(s.join(" ")),
            s ? e.attr("aria-describedby", s) : e.removeAttr("aria-describedby")
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            }),
            this.tooltips = {},
            this.parents = {},
            this.liveRegion = t("<div>").attr({
                role: "log",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body),
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
            this.disabledTitles = t([])
        },
        _setOption: function(e, i) {
            var s = this;
            this._super(e, i),
            "content" === e && t.each(this.tooltips, function(t, e) {
                s._updateContent(e.element)
            })
        },
        _setOptionDisabled: function(t) {
            this[t ? "_disable" : "_enable"]()
        },
        _disable: function() {
            var e = this;
            t.each(this.tooltips, function(i, s) {
                var n = t.Event("blur");
                n.target = n.currentTarget = s.element[0],
                e.close(n, !0)
            }),
            this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function() {
                var e = t(this);
                return e.is("[title]") ? e.data("ui-tooltip-title", e.attr("title")).removeAttr("title") : void 0
            }))
        },
        _enable: function() {
            this.disabledTitles.each(function() {
                var e = t(this);
                e.data("ui-tooltip-title") && e.attr("title", e.data("ui-tooltip-title"))
            }),
            this.disabledTitles = t([])
        },
        open: function(e) {
            var i = this
              , s = t(e ? e.target : this.element).closest(this.options.items);
            s.length && !s.data("ui-tooltip-id") && (s.attr("title") && s.data("ui-tooltip-title", s.attr("title")),
            s.data("ui-tooltip-open", !0),
            e && "mouseover" === e.type && s.parents().each(function() {
                var e, s = t(this);
                s.data("ui-tooltip-open") && (e = t.Event("blur"),
                e.target = e.currentTarget = this,
                i.close(e, !0)),
                s.attr("title") && (s.uniqueId(),
                i.parents[this.id] = {
                    element: this,
                    title: s.attr("title")
                },
                s.attr("title", ""))
            }),
            this._registerCloseHandlers(e, s),
            this._updateContent(s, e))
        },
        _updateContent: function(t, e) {
            var i, s = this.options.content, n = this, o = e ? e.type : null;
            return "string" == typeof s || s.nodeType || s.jquery ? this._open(e, t, s) : (i = s.call(t[0], function(i) {
                n._delay(function() {
                    t.data("ui-tooltip-open") && (e && (e.type = o),
                    this._open(e, t, i))
                })
            }),
            i && this._open(e, t, i),
            void 0)
        },
        _open: function(e, i, s) {
            function n(t) {
                l.of = t,
                a.is(":hidden") || a.position(l)
            }
            var o, a, r, h, l = t.extend({}, this.options.position);
            if (s) {
                if (o = this._find(i))
                    return o.tooltip.find(".ui-tooltip-content").html(s),
                    void 0;
                i.is("[title]") && (e && "mouseover" === e.type ? i.attr("title", "") : i.removeAttr("title")),
                o = this._tooltip(i),
                a = o.tooltip,
                this._addDescribedBy(i, a.attr("id")),
                a.find(".ui-tooltip-content").html(s),
                this.liveRegion.children().hide(),
                h = t("<div>").html(a.find(".ui-tooltip-content").html()),
                h.removeAttr("name").find("[name]").removeAttr("name"),
                h.removeAttr("id").find("[id]").removeAttr("id"),
                h.appendTo(this.liveRegion),
                this.options.track && e && /^mouse/.test(e.type) ? (this._on(this.document, {
                    mousemove: n
                }),
                n(e)) : a.position(t.extend({
                    of: i
                }, this.options.position)),
                a.hide(),
                this._show(a, this.options.show),
                this.options.track && this.options.show && this.options.show.delay && (r = this.delayedShow = setInterval(function() {
                    a.is(":visible") && (n(l.of),
                    clearInterval(r))
                }, t.fx.interval)),
                this._trigger("open", e, {
                    tooltip: a
                })
            }
        },
        _registerCloseHandlers: function(e, i) {
            var s = {
                keyup: function(e) {
                    if (e.keyCode === t.ui.keyCode.ESCAPE) {
                        var s = t.Event(e);
                        s.currentTarget = i[0],
                        this.close(s, !0)
                    }
                }
            };
            i[0] !== this.element[0] && (s.remove = function() {
                this._removeTooltip(this._find(i).tooltip)
            }
            ),
            e && "mouseover" !== e.type || (s.mouseleave = "close"),
            e && "focusin" !== e.type || (s.focusout = "close"),
            this._on(!0, i, s)
        },
        close: function(e) {
            var i, s = this, n = t(e ? e.currentTarget : this.element), o = this._find(n);
            return o ? (i = o.tooltip,
            o.closing || (clearInterval(this.delayedShow),
            n.data("ui-tooltip-title") && !n.attr("title") && n.attr("title", n.data("ui-tooltip-title")),
            this._removeDescribedBy(n),
            o.hiding = !0,
            i.stop(!0),
            this._hide(i, this.options.hide, function() {
                s._removeTooltip(t(this))
            }),
            n.removeData("ui-tooltip-open"),
            this._off(n, "mouseleave focusout keyup"),
            n[0] !== this.element[0] && this._off(n, "remove"),
            this._off(this.document, "mousemove"),
            e && "mouseleave" === e.type && t.each(this.parents, function(e, i) {
                t(i.element).attr("title", i.title),
                delete s.parents[e]
            }),
            o.closing = !0,
            this._trigger("close", e, {
                tooltip: i
            }),
            o.hiding || (o.closing = !1)),
            void 0) : (n.removeData("ui-tooltip-open"),
            void 0)
        },
        _tooltip: function(e) {
            var i = t("<div>").attr("role", "tooltip")
              , s = t("<div>").appendTo(i)
              , n = i.uniqueId().attr("id");
            return this._addClass(s, "ui-tooltip-content"),
            this._addClass(i, "ui-tooltip", "ui-widget ui-widget-content"),
            i.appendTo(this._appendTo(e)),
            this.tooltips[n] = {
                element: e,
                tooltip: i
            }
        },
        _find: function(t) {
            var e = t.data("ui-tooltip-id");
            return e ? this.tooltips[e] : null
        },
        _removeTooltip: function(t) {
            t.remove(),
            delete this.tooltips[t.attr("id")]
        },
        _appendTo: function(t) {
            var e = t.closest(".ui-front, dialog");
            return e.length || (e = this.document[0].body),
            e
        },
        _destroy: function() {
            var e = this;
            t.each(this.tooltips, function(i, s) {
                var n = t.Event("blur")
                  , o = s.element;
                n.target = n.currentTarget = o[0],
                e.close(n, !0),
                t("#" + i).remove(),
                o.data("ui-tooltip-title") && (o.attr("title") || o.attr("title", o.data("ui-tooltip-title")),
                o.removeData("ui-tooltip-title"))
            }),
            this.liveRegion.remove()
        }
    }),
    t.uiBackCompat !== !1 && t.widget("ui.tooltip", t.ui.tooltip, {
        options: {
            tooltipClass: null
        },
        _tooltip: function() {
            var t = this._superApply(arguments);
            return this.options.tooltipClass && t.tooltip.addClass(this.options.tooltipClass),
            t
        }
    }),
    t.ui.tooltip
});
/*
 * jquery.qtip. The jQuery tooltip plugin
 *
 * Copyright (c) 2009 Craig Thompson
 * http://craigsworks.com
 *
 * Licensed under MIT
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Launch  : February 2009
 * Version : 1.0.0-rc3
 * Released: Tuesday 12th May, 2009 - 00:00
 * Debug: jquery.qtip.debug.js
 */
(function(f) {
    f.fn.qtip = function(B, u) {
        var y, t, A, s, x, w, v, z;
        if (typeof B == "string") {
            if (typeof f(this).data("qtip") !== "object") {
                f.fn.qtip.log.error.call(self, 1, f.fn.qtip.constants.NO_TOOLTIP_PRESENT, false)
            }
            if (B == "api") {
                return f(this).data("qtip").interfaces[f(this).data("qtip").current]
            } else {
                if (B == "interfaces") {
                    return f(this).data("qtip").interfaces
                }
            }
        } else {
            if (!B) {
                B = {}
            }
            if (typeof B.content !== "object" || (B.content.jquery && B.content.length > 0)) {
                B.content = {
                    text: B.content
                }
            }
            if (typeof B.content.title !== "object") {
                B.content.title = {
                    text: B.content.title
                }
            }
            if (typeof B.position !== "object") {
                B.position = {
                    corner: B.position
                }
            }
            if (typeof B.position.corner !== "object") {
                B.position.corner = {
                    target: B.position.corner,
                    tooltip: B.position.corner
                }
            }
            if (typeof B.show !== "object") {
                B.show = {
                    when: B.show
                }
            }
            if (typeof B.show.when !== "object") {
                B.show.when = {
                    event: B.show.when
                }
            }
            if (typeof B.show.effect !== "object") {
                B.show.effect = {
                    type: B.show.effect
                }
            }
            if (typeof B.hide !== "object") {
                B.hide = {
                    when: B.hide
                }
            }
            if (typeof B.hide.when !== "object") {
                B.hide.when = {
                    event: B.hide.when
                }
            }
            if (typeof B.hide.effect !== "object") {
                B.hide.effect = {
                    type: B.hide.effect
                }
            }
            if (typeof B.style !== "object") {
                B.style = {
                    name: B.style
                }
            }
            B.style = c(B.style);
            s = f.extend(true, {}, f.fn.qtip.defaults, B);
            s.style = a.call({
                options: s
            }, s.style);
            s.user = f.extend(true, {}, B)
        }
        return f(this).each(function() {
            if (typeof B == "string") {
                w = B.toLowerCase();
                A = f(this).qtip("interfaces");
                if (typeof A == "object") {
                    if (u === true && w == "destroy") {
                        while (A.length > 0) {
                            A[A.length - 1].destroy()
                        }
                    } else {
                        if (u !== true) {
                            A = [f(this).qtip("api")]
                        }
                        for (y = 0; y < A.length; y++) {
                            if (w == "destroy") {
                                A[y].destroy()
                            } else {
                                if (A[y].status.rendered === true) {
                                    if (w == "show") {
                                        A[y].show()
                                    } else {
                                        if (w == "hide") {
                                            A[y].hide()
                                        } else {
                                            if (w == "focus") {
                                                A[y].focus()
                                            } else {
                                                if (w == "disable") {
                                                    A[y].disable(true)
                                                } else {
                                                    if (w == "enable") {
                                                        A[y].disable(false)
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                v = f.extend(true, {}, s);
                v.hide.effect.length = s.hide.effect.length;
                v.show.effect.length = s.show.effect.length;
                if (v.position.container === false) {
                    v.position.container = f(document.body)
                }
                if (v.position.target === false) {
                    v.position.target = f(this)
                }
                if (v.show.when.target === false) {
                    v.show.when.target = f(this)
                }
                if (v.hide.when.target === false) {
                    v.hide.when.target = f(this)
                }
                t = f.fn.qtip.interfaces.length;
                for (y = 0; y < t; y++) {
                    if (typeof f.fn.qtip.interfaces[y] == "undefined") {
                        t = y;
                        break
                    }
                }
                x = new d(f(this),v,t);
                f.fn.qtip.interfaces[t] = x;
                if (typeof f(this).data("qtip") == "object") {
                    if (typeof f(this).attr("qtip") === "undefined") {
                        f(this).data("qtip").current = f(this).data("qtip").interfaces.length
                    }
                    f(this).data("qtip").interfaces.push(x)
                } else {
                    f(this).data("qtip", {
                        current: 0,
                        interfaces: [x]
                    })
                }
                if (v.content.prerender === false && v.show.when.event !== false && v.show.ready !== true) {
                    v.show.when.target.bind(v.show.when.event + ".qtip-" + t + "-create", {
                        qtip: t
                    }, function(C) {
                        z = f.fn.qtip.interfaces[C.data.qtip];
                        z.options.show.when.target.unbind(z.options.show.when.event + ".qtip-" + C.data.qtip + "-create");
                        z.cache.mouse = {
                            x: C.pageX,
                            y: C.pageY
                        };
                        p.call(z);
                        z.options.show.when.target.trigger(z.options.show.when.event)
                    })
                } else {
                    x.cache.mouse = {
                        x: v.show.when.target.offset().left,
                        y: v.show.when.target.offset().top
                    };
                    p.call(x)
                }
            }
        })
    }
    ;
    function d(u, t, v) {
        var s = this;
        s.id = v;
        s.options = t;
        s.status = {
            animated: false,
            rendered: false,
            disabled: false,
            focused: false
        };
        s.elements = {
            target: u.addClass(s.options.style.classes.target),
            tooltip: null,
            wrapper: null,
            content: null,
            contentWrapper: null,
            title: null,
            button: null,
            tip: null,
            bgiframe: null
        };
        s.cache = {
            mouse: {},
            position: {},
            toggle: 0
        };
        s.timers = {};
        f.extend(s, s.options.api, {
            show: function(y) {
                var x, z;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "show")
                }
                if (s.elements.tooltip.css("display") !== "none") {
                    return s
                }
                s.elements.tooltip.stop(true, false);
                x = s.beforeShow.call(s, y);
                if (x === false) {
                    return s
                }
                function w() {
                    if (s.options.position.type !== "static") {
                        s.focus()
                    }
                    s.onShow.call(s, y);
                    if (f.browser.msie) {
                        s.elements.tooltip.get(0).style.removeAttribute("filter")
                    }
                }
                s.cache.toggle = 1;
                if (s.options.position.type !== "static") {
                    s.updatePosition(y, (s.options.show.effect.length > 0))
                }
                if (typeof s.options.show.solo == "object") {
                    z = f(s.options.show.solo)
                } else {
                    if (s.options.show.solo === true) {
                        z = f("div.qtip").not(s.elements.tooltip)
                    }
                }
                if (z) {
                    z.each(function() {
                        if (f(this).qtip("api").status.rendered === true) {
                            f(this).qtip("api").hide()
                        }
                    })
                }
                if (typeof s.options.show.effect.type == "function") {
                    s.options.show.effect.type.call(s.elements.tooltip, s.options.show.effect.length);
                    s.elements.tooltip.queue(function() {
                        w();
                        f(this).dequeue()
                    })
                } else {
                    switch (s.options.show.effect.type.toLowerCase()) {
                    case "fade":
                        s.elements.tooltip.fadeIn(s.options.show.effect.length, w);
                        break;
                    case "slide":
                        s.elements.tooltip.slideDown(s.options.show.effect.length, function() {
                            w();
                            if (s.options.position.type !== "static") {
                                s.updatePosition(y, true)
                            }
                        });
                        break;
                    case "grow":
                        s.elements.tooltip.show(s.options.show.effect.length, w);
                        break;
                    default:
                        s.elements.tooltip.show(null, w);
                        break
                    }
                    s.elements.tooltip.addClass(s.options.style.classes.active)
                }
                return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_SHOWN, "show")
            },
            hide: function(y) {
                var x;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "hide")
                } else {
                    if (s.elements.tooltip.css("display") === "none") {
                        return s
                    }
                }
                clearTimeout(s.timers.show);
                s.elements.tooltip.stop(true, false);
                x = s.beforeHide.call(s, y);
                if (x === false) {
                    return s
                }
                function w() {
                    s.onHide.call(s, y)
                }
                s.cache.toggle = 0;
                if (typeof s.options.hide.effect.type == "function") {
                    s.options.hide.effect.type.call(s.elements.tooltip, s.options.hide.effect.length);
                    s.elements.tooltip.queue(function() {
                        w();
                        f(this).dequeue()
                    })
                } else {
                    switch (s.options.hide.effect.type.toLowerCase()) {
                    case "fade":
                        s.elements.tooltip.fadeOut(s.options.hide.effect.length, w);
                        break;
                    case "slide":
                        s.elements.tooltip.slideUp(s.options.hide.effect.length, w);
                        break;
                    case "grow":
                        s.elements.tooltip.hide(s.options.hide.effect.length, w);
                        break;
                    default:
                        s.elements.tooltip.hide(null, w);
                        break
                    }
                    s.elements.tooltip.removeClass(s.options.style.classes.active)
                }
                return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_HIDDEN, "hide")
            },
            updatePosition: function(w, x) {
                var C, G, L, J, H, E, y, I, B, D, K, A, F, z;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updatePosition")
                } else {
                    if (s.options.position.type == "static") {
                        return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.CANNOT_POSITION_STATIC, "updatePosition")
                    }
                }
                G = {
                    position: {
                        left: 0,
                        top: 0
                    },
                    dimensions: {
                        height: 0,
                        width: 0
                    },
                    corner: s.options.position.corner.target
                };
                L = {
                    position: s.getPosition(),
                    dimensions: s.getDimensions(),
                    corner: s.options.position.corner.tooltip
                };
                if (s.options.position.target !== "mouse") {
                    if (s.options.position.target.get(0).nodeName.toLowerCase() == "area") {
                        J = s.options.position.target.attr("coords").split(",");
                        for (C = 0; C < J.length; C++) {
                            J[C] = parseInt(J[C])
                        }
                        H = s.options.position.target.parent("map").attr("name");
                        E = f('img[usemap="#' + H + '"]:first').offset();
                        G.position = {
                            left: Math.floor(E.left + J[0]),
                            top: Math.floor(E.top + J[1])
                        };
                        switch (s.options.position.target.attr("shape").toLowerCase()) {
                        case "rect":
                            G.dimensions = {
                                width: Math.ceil(Math.abs(J[2] - J[0])),
                                height: Math.ceil(Math.abs(J[3] - J[1]))
                            };
                            break;
                        case "circle":
                            G.dimensions = {
                                width: J[2] + 1,
                                height: J[2] + 1
                            };
                            break;
                        case "poly":
                            G.dimensions = {
                                width: J[0],
                                height: J[1]
                            };
                            for (C = 0; C < J.length; C++) {
                                if (C % 2 == 0) {
                                    if (J[C] > G.dimensions.width) {
                                        G.dimensions.width = J[C]
                                    }
                                    if (J[C] < J[0]) {
                                        G.position.left = Math.floor(E.left + J[C])
                                    }
                                } else {
                                    if (J[C] > G.dimensions.height) {
                                        G.dimensions.height = J[C]
                                    }
                                    if (J[C] < J[1]) {
                                        G.position.top = Math.floor(E.top + J[C])
                                    }
                                }
                            }
                            G.dimensions.width = G.dimensions.width - (G.position.left - E.left);
                            G.dimensions.height = G.dimensions.height - (G.position.top - E.top);
                            break;
                        default:
                            return f.fn.qtip.log.error.call(s, 4, f.fn.qtip.constants.INVALID_AREA_SHAPE, "updatePosition");
                            break
                        }
                        G.dimensions.width -= 2;
                        G.dimensions.height -= 2
                    } else {
                        if (s.options.position.target.add(document.body).length === 1) {
                            G.position = {
                                left: f(document).scrollLeft(),
                                top: f(document).scrollTop()
                            };
                            G.dimensions = {
                                height: f(window).height(),
                                width: f(window).width()
                            }
                        } else {
                            if (typeof s.options.position.target.attr("qtip") !== "undefined") {
                                G.position = s.options.position.target.qtip("api").cache.position
                            } else {
                                G.position = s.options.position.target.offset()
                            }
                            G.dimensions = {
                                height: s.options.position.target.outerHeight(true),
                                width: s.options.position.target.outerWidth(true)
                            }
                        }
                    }
                    y = f.extend({}, G.position);
                    if (G.corner.search(/right/i) !== -1) {
                        y.left += G.dimensions.width
                    }
                    if (G.corner.search(/bottom/i) !== -1) {
                        y.top += G.dimensions.height
                    }
                    if (G.corner.search(/((top|bottom)Middle)|center/) !== -1) {
                        y.left += (G.dimensions.width / 2)
                    }
                    if (G.corner.search(/((left|right)Middle)|center/) !== -1) {
                        y.top += (G.dimensions.height / 2)
                    }
                } else {
                    G.position = y = {
                        left: s.cache.mouse.x,
                        top: s.cache.mouse.y
                    };
                    G.dimensions = {
                        height: 1,
                        width: 1
                    }
                }
                if (L.corner.search(/right/i) !== -1) {
                    y.left -= L.dimensions.width
                }
                if (L.corner.search(/bottom/i) !== -1) {
                    y.top -= L.dimensions.height
                }
                if (L.corner.search(/((top|bottom)Middle)|center/) !== -1) {
                    y.left -= (L.dimensions.width / 2)
                }
                if (L.corner.search(/((left|right)Middle)|center/) !== -1) {
                    y.top -= (L.dimensions.height / 2)
                }
                I = (f.browser.msie) ? 1 : 0;
                B = (f.browser.msie && parseInt(f.browser.version.charAt(0)) === 6) ? 1 : 0;
                if (s.options.style.border.radius > 0) {
                    if (L.corner.search(/Left/) !== -1) {
                        y.left -= s.options.style.border.radius
                    } else {
                        if (L.corner.search(/Right/) !== -1) {
                            y.left += s.options.style.border.radius
                        }
                    }
                    if (L.corner.search(/Top/) !== -1) {
                        y.top -= s.options.style.border.radius
                    } else {
                        if (L.corner.search(/Bottom/) !== -1) {
                            y.top += s.options.style.border.radius
                        }
                    }
                }
                if (I) {
                    if (L.corner.search(/top/) !== -1) {
                        y.top -= I
                    } else {
                        if (L.corner.search(/bottom/) !== -1) {
                            y.top += I
                        }
                    }
                    if (L.corner.search(/left/) !== -1) {
                        y.left -= I
                    } else {
                        if (L.corner.search(/right/) !== -1) {
                            y.left += I
                        }
                    }
                    if (L.corner.search(/leftMiddle|rightMiddle/) !== -1) {
                        y.top -= 1
                    }
                }
                if (s.options.position.adjust.screen === true) {
                    y = o.call(s, y, G, L)
                }
                if (s.options.position.target === "mouse" && s.options.position.adjust.mouse === true) {
                    if (s.options.position.adjust.screen === true && s.elements.tip) {
                        K = s.elements.tip.attr("rel")
                    } else {
                        K = s.options.position.corner.tooltip
                    }
                    y.left += (K.search(/right/i) !== -1) ? -6 : 6;
                    y.top += (K.search(/bottom/i) !== -1) ? -6 : 6
                }
                if (!s.elements.bgiframe && f.browser.msie && parseInt(f.browser.version.charAt(0)) == 6) {
                    f("select, object").each(function() {
                        A = f(this).offset();
                        A.bottom = A.top + f(this).height();
                        A.right = A.left + f(this).width();
                        if (y.top + L.dimensions.height >= A.top && y.left + L.dimensions.width >= A.left) {
                            k.call(s)
                        }
                    })
                }
                y.left += s.options.position.adjust.x;
                y.top += s.options.position.adjust.y;
                F = s.getPosition();
                if (y.left != F.left || y.top != F.top) {
                    z = s.beforePositionUpdate.call(s, w);
                    if (z === false) {
                        return s
                    }
                    s.cache.position = y;
                    if (x === true) {
                        s.status.animated = true;
                        s.elements.tooltip.animate(y, 200, "swing", function() {
                            s.status.animated = false
                        })
                    } else {
                        s.elements.tooltip.css(y)
                    }
                    s.onPositionUpdate.call(s, w);
                    if (typeof w !== "undefined" && w.type && w.type !== "mousemove") {
                        f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_POSITION_UPDATED, "updatePosition")
                    }
                }
                return s
            },
            updateWidth: function(w) {
                var x;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateWidth")
                } else {
                    if (w && typeof w !== "number") {
                        return f.fn.qtip.log.error.call(s, 2, "newWidth must be of type number", "updateWidth")
                    }
                }
                x = s.elements.contentWrapper.siblings().add(s.elements.tip).add(s.elements.button);
                if (!w) {
                    if (typeof s.options.style.width.value == "number") {
                        w = s.options.style.width.value
                    } else {
                        s.elements.tooltip.css({
                            width: "auto"
                        });
                        x.hide();
                        if (f.browser.msie) {
                            s.elements.wrapper.add(s.elements.contentWrapper.children()).css({
                                zoom: "normal"
                            })
                        }
                        w = s.getDimensions().width + 1;
                        if (!s.options.style.width.value) {
                            if (w > s.options.style.width.max) {
                                w = s.options.style.width.max
                            }
                            if (w < s.options.style.width.min) {
                                w = s.options.style.width.min
                            }
                        }
                    }
                }
                if (w % 2 !== 0) {
                    w -= 1
                }
                s.elements.tooltip.width(w);
                x.show();
                if (s.options.style.border.radius) {
                    s.elements.tooltip.find(".qtip-betweenCorners").each(function(y) {
                        f(this).width(w - (s.options.style.border.radius * 2))
                    })
                }
                if (f.browser.msie) {
                    s.elements.wrapper.add(s.elements.contentWrapper.children()).css({
                        zoom: "1"
                    });
                    s.elements.wrapper.width(w);
                    if (s.elements.bgiframe) {
                        s.elements.bgiframe.width(w).height(s.getDimensions.height)
                    }
                }
                return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_WIDTH_UPDATED, "updateWidth")
            },
            updateStyle: function(w) {
                var z, A, x, y, B;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateStyle")
                } else {
                    if (typeof w !== "string" || !f.fn.qtip.styles[w]) {
                        return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.STYLE_NOT_DEFINED, "updateStyle")
                    }
                }
                s.options.style = a.call(s, f.fn.qtip.styles[w], s.options.user.style);
                s.elements.content.css(q(s.options.style));
                if (s.options.content.title.text !== false) {
                    s.elements.title.css(q(s.options.style.title, true))
                }
                s.elements.contentWrapper.css({
                    borderColor: s.options.style.border.color
                });
                if (s.options.style.tip.corner !== false) {
                    if (f("<canvas>").get(0).getContext) {
                        z = s.elements.tooltip.find(".qtip-tip canvas:first");
                        x = z.get(0).getContext("2d");
                        x.clearRect(0, 0, 300, 300);
                        y = z.parent("div[rel]:first").attr("rel");
                        B = b(y, s.options.style.tip.size.width, s.options.style.tip.size.height);
                        h.call(s, z, B, s.options.style.tip.color || s.options.style.border.color)
                    } else {
                        if (f.browser.msie) {
                            z = s.elements.tooltip.find('.qtip-tip [nodeName="shape"]');
                            z.attr("fillcolor", s.options.style.tip.color || s.options.style.border.color)
                        }
                    }
                }
                if (s.options.style.border.radius > 0) {
                    s.elements.tooltip.find(".qtip-betweenCorners").css({
                        backgroundColor: s.options.style.border.color
                    });
                    if (f("<canvas>").get(0).getContext) {
                        A = g(s.options.style.border.radius);
                        s.elements.tooltip.find(".qtip-wrapper canvas").each(function() {
                            x = f(this).get(0).getContext("2d");
                            x.clearRect(0, 0, 300, 300);
                            y = f(this).parent("div[rel]:first").attr("rel");
                            r.call(s, f(this), A[y], s.options.style.border.radius, s.options.style.border.color)
                        })
                    } else {
                        if (f.browser.msie) {
                            s.elements.tooltip.find('.qtip-wrapper [nodeName="arc"]').each(function() {
                                f(this).attr("fillcolor", s.options.style.border.color)
                            })
                        }
                    }
                }
                return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_STYLE_UPDATED, "updateStyle")
            },
            updateContent: function(A, y) {
                var z, x, w;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateContent")
                } else {
                    if (!A) {
                        return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateContent")
                    }
                }
                z = s.beforeContentUpdate.call(s, A);
                if (typeof z == "string") {
                    A = z
                } else {
                    if (z === false) {
                        return
                    }
                }
                if (f.browser.msie) {
                    s.elements.contentWrapper.children().css({
                        zoom: "normal"
                    })
                }
                if (A.jquery && A.length > 0) {
                    A.clone(true).appendTo(s.elements.content).show()
                } else {
                    s.elements.content.html(A)
                }
                x = s.elements.content.find("img[complete=false]");
                if (x.length > 0) {
                    w = 0;
                    x.each(function(C) {
                        f('<img src="' + f(this).attr("src") + '" />').load(function() {
                            if (++w == x.length) {
                                B()
                            }
                        })
                    })
                } else {
                    B()
                }
                function B() {
                    s.updateWidth();
                    if (y !== false) {
                        if (s.options.position.type !== "static") {
                            s.updatePosition(s.elements.tooltip.is(":visible"), true)
                        }
                        if (s.options.style.tip.corner !== false) {
                            n.call(s)
                        }
                    }
                }
                s.onContentUpdate.call(s);
                return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_CONTENT_UPDATED, "loadContent")
            },
            loadContent: function(w, z, A) {
                var y;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "loadContent")
                }
                y = s.beforeContentLoad.call(s);
                if (y === false) {
                    return s
                }
                if (A == "post") {
                    f.post(w, z, x)
                } else {
                    f.get(w, z, x)
                }
                function x(B) {
                    s.onContentLoad.call(s);
                    f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_CONTENT_LOADED, "loadContent");
                    s.updateContent(B)
                }
                return s
            },
            updateTitle: function(w) {
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateTitle")
                } else {
                    if (!w) {
                        return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateTitle")
                    }
                }
                returned = s.beforeTitleUpdate.call(s);
                if (returned === false) {
                    return s
                }
                if (s.elements.button) {
                    s.elements.button = s.elements.button.clone(true)
                }
                s.elements.title.html(w);
                if (s.elements.button) {
                    s.elements.title.prepend(s.elements.button)
                }
                s.onTitleUpdate.call(s);
                return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_TITLE_UPDATED, "updateTitle")
            },
            focus: function(A) {
                var y, x, w, z;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "focus")
                } else {
                    if (s.options.position.type == "static") {
                        return f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.CANNOT_FOCUS_STATIC, "focus")
                    }
                }
                y = parseInt(s.elements.tooltip.css("z-index"));
                x = 6000 + f("div.qtip[qtip]").length - 1;
                if (!s.status.focused && y !== x) {
                    z = s.beforeFocus.call(s, A);
                    if (z === false) {
                        return s
                    }
                    f("div.qtip[qtip]").not(s.elements.tooltip).each(function() {
                        if (f(this).qtip("api").status.rendered === true) {
                            w = parseInt(f(this).css("z-index"));
                            if (typeof w == "number" && w > -1) {
                                f(this).css({
                                    zIndex: parseInt(f(this).css("z-index")) - 1
                                })
                            }
                            f(this).qtip("api").status.focused = false
                        }
                    });
                    s.elements.tooltip.css({
                        zIndex: x
                    });
                    s.status.focused = true;
                    s.onFocus.call(s, A);
                    f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_FOCUSED, "focus")
                }
                return s
            },
            disable: function(w) {
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "disable")
                }
                if (w) {
                    if (!s.status.disabled) {
                        s.status.disabled = true;
                        f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_DISABLED, "disable")
                    } else {
                        f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.TOOLTIP_ALREADY_DISABLED, "disable")
                    }
                } else {
                    if (s.status.disabled) {
                        s.status.disabled = false;
                        f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_ENABLED, "disable")
                    } else {
                        f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.TOOLTIP_ALREADY_ENABLED, "disable")
                    }
                }
                return s
            },
            destroy: function() {
                var w, x, y;
                x = s.beforeDestroy.call(s);
                if (x === false) {
                    return s
                }
                if (s.status.rendered) {
                    s.options.show.when.target.unbind("mousemove.qtip", s.updatePosition);
                    s.options.show.when.target.unbind("mouseout.qtip", s.hide);
                    s.options.show.when.target.unbind(s.options.show.when.event + ".qtip");
                    s.options.hide.when.target.unbind(s.options.hide.when.event + ".qtip");
                    s.elements.tooltip.unbind(s.options.hide.when.event + ".qtip");
                    s.elements.tooltip.unbind("mouseover.qtip", s.focus);
                    s.elements.tooltip.remove()
                } else {
                    s.options.show.when.target.unbind(s.options.show.when.event + ".qtip-create")
                }
                if (typeof s.elements.target.data("qtip") == "object") {
                    y = s.elements.target.data("qtip").interfaces;
                    if (typeof y == "object" && y.length > 0) {
                        for (w = 0; w < y.length - 1; w++) {
                            if (y[w].id == s.id) {
                                y.splice(w, 1)
                            }
                        }
                    }
                }
                delete f.fn.qtip.interfaces[s.id];
                if (typeof y == "object" && y.length > 0) {
                    s.elements.target.data("qtip").current = y.length - 1
                } else {
                    s.elements.target.removeData("qtip")
                }
                s.onDestroy.call(s);
                f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_DESTROYED, "destroy");
                return s.elements.target
            },
            getPosition: function() {
                var w, x;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getPosition")
                }
                w = (s.elements.tooltip.css("display") !== "none") ? false : true;
                if (w) {
                    s.elements.tooltip.css({
                        visiblity: "hidden"
                    }).show()
                }
                x = s.elements.tooltip.offset();
                if (w) {
                    s.elements.tooltip.css({
                        visiblity: "visible"
                    }).hide()
                }
                return x
            },
            getDimensions: function() {
                var w, x;
                if (!s.status.rendered) {
                    return f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getDimensions")
                }
                w = (!s.elements.tooltip.is(":visible")) ? true : false;
                if (w) {
                    s.elements.tooltip.css({
                        visiblity: "hidden"
                    }).show()
                }
                x = {
                    height: s.elements.tooltip.outerHeight(true),
                    width: s.elements.tooltip.outerWidth(true)
                };
                if (w) {
                    s.elements.tooltip.css({
                        visiblity: "visible"
                    }).hide()
                }
                return x
            }
        })
    }
    function p() {
        var s, w, u, t, v, y, x;
        s = this;
        s.beforeRender.call(s);
        s.status.rendered = true;
        s.elements.tooltip = '<div qtip="' + s.id + '" class="qtip ' + (s.options.style.classes.tooltip || s.options.style) + '"style="display:none; -moz-border-radius:0; -webkit-border-radius:0; border-radius:0;position:' + s.options.position.type + ';">  <div class="qtip-wrapper" style="position:relative; overflow:hidden; text-align:left;">    <div class="qtip-contentWrapper" style="overflow:hidden;">       <div class="qtip-content ' + s.options.style.classes.content + '"></div></div></div></div>';
        s.elements.tooltip = f(s.elements.tooltip);
        s.elements.tooltip.appendTo(s.options.position.container);
        s.elements.tooltip.data("qtip", {
            current: 0,
            interfaces: [s]
        });
        s.elements.wrapper = s.elements.tooltip.children("div:first");
        s.elements.contentWrapper = s.elements.wrapper.children("div:first").css({
            background: s.options.style.background
        });
        s.elements.content = s.elements.contentWrapper.children("div:first").css(q(s.options.style));
        if (f.browser.msie) {
            s.elements.wrapper.add(s.elements.content).css({
                zoom: 1
            })
        }
        if (s.options.hide.when.event == "unfocus") {
            s.elements.tooltip.attr("unfocus", true)
        }
        if (typeof s.options.style.width.value == "number") {
            s.updateWidth()
        }
        if (f("<canvas>").get(0).getContext || f.browser.msie) {
            if (s.options.style.border.radius > 0) {
                m.call(s)
            } else {
                s.elements.contentWrapper.css({
                    border: s.options.style.border.width + "px solid " + s.options.style.border.color
                })
            }
            if (s.options.style.tip.corner !== false) {
                e.call(s)
            }
        } else {
            s.elements.contentWrapper.css({
                border: s.options.style.border.width + "px solid " + s.options.style.border.color
            });
            s.options.style.border.radius = 0;
            s.options.style.tip.corner = false;
            f.fn.qtip.log.error.call(s, 2, f.fn.qtip.constants.CANVAS_VML_NOT_SUPPORTED, "render")
        }
        if ((typeof s.options.content.text == "string" && s.options.content.text.length > 0) || (s.options.content.text.jquery && s.options.content.text.length > 0)) {
            u = s.options.content.text
        } else {
            if (typeof s.elements.target.attr("title") == "string" && s.elements.target.attr("title").length > 0) {
                u = s.elements.target.attr("title").replace("\\n", "<br />");
                s.elements.target.attr("title", "")
            } else {
                if (typeof s.elements.target.attr("alt") == "string" && s.elements.target.attr("alt").length > 0) {
                    u = s.elements.target.attr("alt").replace("\\n", "<br />");
                    s.elements.target.attr("alt", "")
                } else {
                    u = " ";
                    f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.NO_VALID_CONTENT, "render")
                }
            }
        }
        if (s.options.content.title.text !== false) {
            j.call(s)
        }
        s.updateContent(u);
        l.call(s);
        if (s.options.show.ready === true) {
            s.show()
        }
        if (s.options.content.url !== false) {
            t = s.options.content.url;
            v = s.options.content.data;
            y = s.options.content.method || "get";
            s.loadContent(t, v, y)
        }
        s.onRender.call(s);
        f.fn.qtip.log.error.call(s, 1, f.fn.qtip.constants.EVENT_RENDERED, "render")
    }
    function m() {
        var F, z, t, B, x, E, u, G, D, y, w, C, A, s, v;
        F = this;
        F.elements.wrapper.find(".qtip-borderBottom, .qtip-borderTop").remove();
        t = F.options.style.border.width;
        B = F.options.style.border.radius;
        x = F.options.style.border.color || F.options.style.tip.color;
        E = g(B);
        u = {};
        for (z in E) {
            u[z] = '<div rel="' + z + '" style="' + ((z.search(/Left/) !== -1) ? "left" : "right") + ":0; position:absolute; height:" + B + "px; width:" + B + 'px; overflow:hidden; line-height:0.1px; font-size:1px">';
            if (f("<canvas>").get(0).getContext) {
                u[z] += '<canvas height="' + B + '" width="' + B + '" style="vertical-align: top"></canvas>'
            } else {
                if (f.browser.msie) {
                    G = B * 2 + 3;
                    u[z] += '<v:arc stroked="false" fillcolor="' + x + '" startangle="' + E[z][0] + '" endangle="' + E[z][1] + '" style="width:' + G + "px; height:" + G + "px; margin-top:" + ((z.search(/bottom/) !== -1) ? -2 : -1) + "px; margin-left:" + ((z.search(/Right/) !== -1) ? E[z][2] - 3.5 : -1) + 'px; vertical-align:top; display:inline-block; behavior:url(#default#VML)"></v:arc>'
                }
            }
            u[z] += "</div>"
        }
        D = F.getDimensions().width - (Math.max(t, B) * 2);
        y = '<div class="qtip-betweenCorners" style="height:' + B + "px; width:" + D + "px; overflow:hidden; background-color:" + x + '; line-height:0.1px; font-size:1px;">';
        w = '<div class="qtip-borderTop" dir="ltr" style="height:' + B + "px; margin-left:" + B + 'px; line-height:0.1px; font-size:1px; padding:0;">' + u.topLeft + u.topRight + y;
        F.elements.wrapper.prepend(w);
        C = '<div class="qtip-borderBottom" dir="ltr" style="height:' + B + "px; margin-left:" + B + 'px; line-height:0.1px; font-size:1px; padding:0;">' + u.bottomLeft + u.bottomRight + y;
        F.elements.wrapper.append(C);
        if (f("<canvas>").get(0).getContext) {
            F.elements.wrapper.find("canvas").each(function() {
                A = E[f(this).parent("[rel]:first").attr("rel")];
                r.call(F, f(this), A, B, x)
            })
        } else {
            if (f.browser.msie) {
                F.elements.tooltip.append('<v:image style="behavior:url(#default#VML);"></v:image>')
            }
        }
        s = Math.max(B, (B + (t - B)));
        v = Math.max(t - B, 0);
        F.elements.contentWrapper.css({
            border: "0px solid " + x,
            borderWidth: v + "px " + s + "px"
        })
    }
    function r(u, w, s, t) {
        var v = u.get(0).getContext("2d");
        v.fillStyle = t;
        v.beginPath();
        v.arc(w[0], w[1], s, 0, Math.PI * 2, false);
        v.fill()
    }
    function e(v) {
        var t, s, x, u, w;
        t = this;
        if (t.elements.tip !== null) {
            t.elements.tip.remove()
        }
        s = t.options.style.tip.color || t.options.style.border.color;
        if (t.options.style.tip.corner === false) {
            return
        } else {
            if (!v) {
                v = t.options.style.tip.corner
            }
        }
        x = b(v, t.options.style.tip.size.width, t.options.style.tip.size.height);
        t.elements.tip = '<div class="' + t.options.style.classes.tip + '" dir="ltr" rel="' + v + '" style="position:absolute; height:' + t.options.style.tip.size.height + "px; width:" + t.options.style.tip.size.width + 'px; margin:0 auto; line-height:0.1px; font-size:1px;">';
        if (f("<canvas>").get(0).getContext) {
            t.elements.tip += '<canvas height="' + t.options.style.tip.size.height + '" width="' + t.options.style.tip.size.width + '"></canvas>'
        } else {
            if (f.browser.msie) {
                u = t.options.style.tip.size.width + "," + t.options.style.tip.size.height;
                w = "m" + x[0][0] + "," + x[0][1];
                w += " l" + x[1][0] + "," + x[1][1];
                w += " " + x[2][0] + "," + x[2][1];
                w += " xe";
                t.elements.tip += '<v:shape fillcolor="' + s + '" stroked="false" filled="true" path="' + w + '" coordsize="' + u + '" style="width:' + t.options.style.tip.size.width + "px; height:" + t.options.style.tip.size.height + "px; line-height:0.1px; display:inline-block; behavior:url(#default#VML); vertical-align:" + ((v.search(/top/) !== -1) ? "bottom" : "top") + '"></v:shape>';
                t.elements.tip += '<v:image style="behavior:url(#default#VML);"></v:image>';
                t.elements.contentWrapper.css("position", "relative")
            }
        }
        t.elements.tooltip.prepend(t.elements.tip + "</div>");
        t.elements.tip = t.elements.tooltip.find("." + t.options.style.classes.tip).eq(0);
        if (f("<canvas>").get(0).getContext) {
            h.call(t, t.elements.tip.find("canvas:first"), x, s)
        }
        if (v.search(/top/) !== -1 && f.browser.msie && parseInt(f.browser.version.charAt(0)) === 6) {
            t.elements.tip.css({
                marginTop: -4
            })
        }
        n.call(t, v)
    }
    function h(t, v, s) {
        var u = t.get(0).getContext("2d");
        u.fillStyle = s;
        u.beginPath();
        u.moveTo(v[0][0], v[0][1]);
        u.lineTo(v[1][0], v[1][1]);
        u.lineTo(v[2][0], v[2][1]);
        u.fill()
    }
    function n(u) {
        var t, w, s, x, v;
        t = this;
        if (t.options.style.tip.corner === false || !t.elements.tip) {
            return
        }
        if (!u) {
            u = t.elements.tip.attr("rel")
        }
        w = positionAdjust = (f.browser.msie) ? 1 : 0;
        t.elements.tip.css(u.match(/left|right|top|bottom/)[0], 0);
        if (u.search(/top|bottom/) !== -1) {
            if (f.browser.msie) {
                if (parseInt(f.browser.version.charAt(0)) === 6) {
                    positionAdjust = (u.search(/top/) !== -1) ? -3 : 1
                } else {
                    positionAdjust = (u.search(/top/) !== -1) ? 1 : 2
                }
            }
            if (u.search(/Middle/) !== -1) {
                t.elements.tip.css({
                    left: "50%",
                    marginLeft: -(t.options.style.tip.size.width / 2)
                })
            } else {
                if (u.search(/Left/) !== -1) {
                    t.elements.tip.css({
                        left: t.options.style.border.radius - w
                    })
                } else {
                    if (u.search(/Right/) !== -1) {
                        t.elements.tip.css({
                            right: t.options.style.border.radius + w
                        })
                    }
                }
            }
            if (u.search(/top/) !== -1) {
                t.elements.tip.css({
                    top: -positionAdjust
                })
            } else {
                t.elements.tip.css({
                    bottom: positionAdjust
                })
            }
        } else {
            if (u.search(/left|right/) !== -1) {
                if (f.browser.msie) {
                    positionAdjust = (parseInt(f.browser.version.charAt(0)) === 6) ? 1 : ((u.search(/left/) !== -1) ? 1 : 2)
                }
                if (u.search(/Middle/) !== -1) {
                    t.elements.tip.css({
                        top: "50%",
                        marginTop: -(t.options.style.tip.size.height / 2)
                    })
                } else {
                    if (u.search(/Top/) !== -1) {
                        t.elements.tip.css({
                            top: t.options.style.border.radius - w
                        })
                    } else {
                        if (u.search(/Bottom/) !== -1) {
                            t.elements.tip.css({
                                bottom: t.options.style.border.radius + w
                            })
                        }
                    }
                }
                if (u.search(/left/) !== -1) {
                    t.elements.tip.css({
                        left: -positionAdjust
                    })
                } else {
                    t.elements.tip.css({
                        right: positionAdjust
                    })
                }
            }
        }
        s = "padding-" + u.match(/left|right|top|bottom/)[0];
        x = t.options.style.tip.size[(s.search(/left|right/) !== -1) ? "width" : "height"];
        t.elements.tooltip.css("padding", 0);
        t.elements.tooltip.css(s, x);
        if (f.browser.msie && parseInt(f.browser.version.charAt(0)) == 6) {
            v = parseInt(t.elements.tip.css("margin-top")) || 0;
            v += parseInt(t.elements.content.css("margin-top")) || 0;
            t.elements.tip.css({
                marginTop: v
            })
        }
    }
    function j() {
        var s = this;
        if (s.elements.title !== null) {
            s.elements.title.remove()
        }
        s.elements.title = f('<div class="' + s.options.style.classes.title + '">').css(q(s.options.style.title, true)).css({
            zoom: (f.browser.msie) ? 1 : 0
        }).prependTo(s.elements.contentWrapper);
        if (s.options.content.title.text) {
            s.updateTitle.call(s, s.options.content.title.text)
        }
        if (s.options.content.title.button !== false && typeof s.options.content.title.button == "string") {
            s.elements.button = f('<a class="' + s.options.style.classes.button + '" style="float:right; position: relative"></a>').css(q(s.options.style.button, true)).html(s.options.content.title.button).prependTo(s.elements.title).click(function(t) {
                if (!s.status.disabled) {
                    s.hide(t)
                }
            })
        }
    }
    function l() {
        var t, v, u, s;
        t = this;
        v = t.options.show.when.target;
        u = t.options.hide.when.target;
        if (t.options.hide.fixed) {
            u = u.add(t.elements.tooltip)
        }
        if (t.options.hide.when.event == "inactive") {
            s = ["click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseout", "mouseenter", "mouseleave", "mouseover"];
            function y(z) {
                if (t.status.disabled === true) {
                    return
                }
                clearTimeout(t.timers.inactive);
                t.timers.inactive = setTimeout(function() {
                    f(s).each(function() {
                        u.unbind(this + ".qtip-inactive");
                        t.elements.content.unbind(this + ".qtip-inactive")
                    });
                    t.hide(z)
                }, t.options.hide.delay)
            }
        } else {
            if (t.options.hide.fixed === true) {
                t.elements.tooltip.bind("mouseover.qtip", function() {
                    if (t.status.disabled === true) {
                        return
                    }
                    clearTimeout(t.timers.hide)
                })
            }
        }
        function x(z) {
            if (t.status.disabled === true) {
                return
            }
            if (t.options.hide.when.event == "inactive") {
                f(s).each(function() {
                    u.bind(this + ".qtip-inactive", y);
                    t.elements.content.bind(this + ".qtip-inactive", y)
                });
                y()
            }
            clearTimeout(t.timers.show);
            clearTimeout(t.timers.hide);
            t.timers.show = setTimeout(function() {
                t.show(z)
            }, t.options.show.delay)
        }
        function w(z) {
            if (t.status.disabled === true) {
                return
            }
            if (t.options.hide.fixed === true && t.options.hide.when.event.search(/mouse(out|leave)/i) !== -1 && f(z.relatedTarget).parents("div.qtip[qtip]").length > 0) {
                z.stopPropagation();
                z.preventDefault();
                clearTimeout(t.timers.hide);
                return false
            }
            clearTimeout(t.timers.show);
            clearTimeout(t.timers.hide);
            t.elements.tooltip.stop(true, true);
            t.timers.hide = setTimeout(function() {
                t.hide(z)
            }, t.options.hide.delay)
        }
        if ((t.options.show.when.target.add(t.options.hide.when.target).length === 1 && t.options.show.when.event == t.options.hide.when.event && t.options.hide.when.event !== "inactive") || t.options.hide.when.event == "unfocus") {
            t.cache.toggle = 0;
            v.bind(t.options.show.when.event + ".qtip", function(z) {
                if (t.cache.toggle == 0) {
                    x(z)
                } else {
                    w(z)
                }
            })
        } else {
            v.bind(t.options.show.when.event + ".qtip", x);
            if (t.options.hide.when.event !== "inactive") {
                u.bind(t.options.hide.when.event + ".qtip", w)
            }
        }
        if (t.options.position.type.search(/(fixed|absolute)/) !== -1) {
            t.elements.tooltip.bind("mouseover.qtip", t.focus)
        }
        if (t.options.position.target === "mouse" && t.options.position.type !== "static") {
            v.bind("mousemove.qtip", function(z) {
                t.cache.mouse = {
                    x: z.pageX,
                    y: z.pageY
                };
                if (t.status.disabled === false && t.options.position.adjust.mouse === true && t.options.position.type !== "static" && t.elements.tooltip.css("display") !== "none") {
                    t.updatePosition(z)
                }
            })
        }
    }
    function o(u, v, A) {
        var z, s, x, y, t, w;
        z = this;
        if (A.corner == "center") {
            return v.position
        }
        s = f.extend({}, u);
        y = {
            x: false,
            y: false
        };
        t = {
            left: (s.left < f.fn.qtip.cache.screen.scroll.left),
            right: (s.left + A.dimensions.width + 2 >= f.fn.qtip.cache.screen.width + f.fn.qtip.cache.screen.scroll.left),
            top: (s.top < f.fn.qtip.cache.screen.scroll.top),
            bottom: (s.top + A.dimensions.height + 2 >= f.fn.qtip.cache.screen.height + f.fn.qtip.cache.screen.scroll.top)
        };
        x = {
            left: (t.left && (A.corner.search(/right/i) != -1 || (A.corner.search(/right/i) == -1 && !t.right))),
            right: (t.right && (A.corner.search(/left/i) != -1 || (A.corner.search(/left/i) == -1 && !t.left))),
            top: (t.top && A.corner.search(/top/i) == -1),
            bottom: (t.bottom && A.corner.search(/bottom/i) == -1)
        };
        if (x.left) {
            if (z.options.position.target !== "mouse") {
                s.left = v.position.left + v.dimensions.width
            } else {
                s.left = z.cache.mouse.x
            }
            y.x = "Left"
        } else {
            if (x.right) {
                if (z.options.position.target !== "mouse") {
                    s.left = v.position.left - A.dimensions.width
                } else {
                    s.left = z.cache.mouse.x - A.dimensions.width
                }
                y.x = "Right"
            }
        }
        if (x.top) {
            if (z.options.position.target !== "mouse") {
                s.top = v.position.top + v.dimensions.height
            } else {
                s.top = z.cache.mouse.y
            }
            y.y = "top"
        } else {
            if (x.bottom) {
                if (z.options.position.target !== "mouse") {
                    s.top = v.position.top - A.dimensions.height
                } else {
                    s.top = z.cache.mouse.y - A.dimensions.height
                }
                y.y = "bottom"
            }
        }
        if (s.left < 0) {
            s.left = u.left;
            y.x = false
        }
        if (s.top < 0) {
            s.top = u.top;
            y.y = false
        }
        if (z.options.style.tip.corner !== false) {
            s.corner = new String(A.corner);
            if (y.x !== false) {
                s.corner = s.corner.replace(/Left|Right|Middle/, y.x)
            }
            if (y.y !== false) {
                s.corner = s.corner.replace(/top|bottom/, y.y)
            }
            if (s.corner !== z.elements.tip.attr("rel")) {
                e.call(z, s.corner)
            }
        }
        return s
    }
    function q(u, t) {
        var v, s;
        v = f.extend(true, {}, u);
        for (s in v) {
            if (t === true && s.search(/(tip|classes)/i) !== -1) {
                delete v[s]
            } else {
                if (!t && s.search(/(width|border|tip|title|classes|user)/i) !== -1) {
                    delete v[s]
                }
            }
        }
        return v
    }
    function c(s) {
        if (typeof s.tip !== "object") {
            s.tip = {
                corner: s.tip
            }
        }
        if (typeof s.tip.size !== "object") {
            s.tip.size = {
                width: s.tip.size,
                height: s.tip.size
            }
        }
        if (typeof s.border !== "object") {
            s.border = {
                width: s.border
            }
        }
        if (typeof s.width !== "object") {
            s.width = {
                value: s.width
            }
        }
        if (typeof s.width.max == "string") {
            s.width.max = parseInt(s.width.max.replace(/([0-9]+)/i, "$1"))
        }
        if (typeof s.width.min == "string") {
            s.width.min = parseInt(s.width.min.replace(/([0-9]+)/i, "$1"))
        }
        if (typeof s.tip.size.x == "number") {
            s.tip.size.width = s.tip.size.x;
            delete s.tip.size.x
        }
        if (typeof s.tip.size.y == "number") {
            s.tip.size.height = s.tip.size.y;
            delete s.tip.size.y
        }
        return s
    }
    function a() {
        var s, t, u, x, v, w;
        s = this;
        u = [true, {}];
        for (t = 0; t < arguments.length; t++) {
            u.push(arguments[t])
        }
        x = [f.extend.apply(f, u)];
        while (typeof x[0].name == "string") {
            x.unshift(c(f.fn.qtip.styles[x[0].name]))
        }
        x.unshift(true, {
            classes: {
                tooltip: "qtip-" + (arguments[0].name || "defaults")
            }
        }, f.fn.qtip.styles.defaults);
        v = f.extend.apply(f, x);
        w = (f.browser.msie) ? 1 : 0;
        v.tip.size.width += w;
        v.tip.size.height += w;
        if (v.tip.size.width % 2 > 0) {
            v.tip.size.width += 1
        }
        if (v.tip.size.height % 2 > 0) {
            v.tip.size.height += 1
        }
        if (v.tip.corner === true) {
            v.tip.corner = (s.options.position.corner.tooltip === "center") ? false : s.options.position.corner.tooltip
        }
        return v
    }
    function b(v, u, t) {
        var s = {
            bottomRight: [[0, 0], [u, t], [u, 0]],
            bottomLeft: [[0, 0], [u, 0], [0, t]],
            topRight: [[0, t], [u, 0], [u, t]],
            topLeft: [[0, 0], [0, t], [u, t]],
            topMiddle: [[0, t], [u / 2, 0], [u, t]],
            bottomMiddle: [[0, 0], [u, 0], [u / 2, t]],
            rightMiddle: [[0, 0], [u, t / 2], [0, t]],
            leftMiddle: [[u, 0], [u, t], [0, t / 2]]
        };
        s.leftTop = s.bottomRight;
        s.rightTop = s.bottomLeft;
        s.leftBottom = s.topRight;
        s.rightBottom = s.topLeft;
        return s[v]
    }
    function g(s) {
        var t;
        if (f("<canvas>").get(0).getContext) {
            t = {
                topLeft: [s, s],
                topRight: [0, s],
                bottomLeft: [s, 0],
                bottomRight: [0, 0]
            }
        } else {
            if (f.browser.msie) {
                t = {
                    topLeft: [-90, 90, 0],
                    topRight: [-90, 90, -s],
                    bottomLeft: [90, 270, 0],
                    bottomRight: [90, 270, -s]
                }
            }
        }
        return t
    }
    function k() {
        var s, t, u;
        s = this;
        u = s.getDimensions();
        t = '<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:false" style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=\'0\'); border: 1px solid red; height:' + u.height + "px; width:" + u.width + 'px" />';
        s.elements.bgiframe = s.elements.wrapper.prepend(t).children(".qtip-bgiframe:first")
    }
    f(document).ready(function() {
        f.fn.qtip.cache = {
            screen: {
                scroll: {
                    left: f(window).scrollLeft(),
                    top: f(window).scrollTop()
                },
                width: f(window).width(),
                height: f(window).height()
            }
        };
        var s;
        f(window).bind("resize scroll", function(t) {
            clearTimeout(s);
            s = setTimeout(function() {
                if (t.type === "scroll") {
                    f.fn.qtip.cache.screen.scroll = {
                        left: f(window).scrollLeft(),
                        top: f(window).scrollTop()
                    }
                } else {
                    f.fn.qtip.cache.screen.width = f(window).width();
                    f.fn.qtip.cache.screen.height = f(window).height()
                }
                for (i = 0; i < f.fn.qtip.interfaces.length; i++) {
                    var u = f.fn.qtip.interfaces[i];
                    if (u.status.rendered === true && (u.options.position.type !== "static" || u.options.position.adjust.scroll && t.type === "scroll" || u.options.position.adjust.resize && t.type === "resize")) {
                        u.updatePosition(t, true)
                    }
                }
            }, 100)
        });
        f(document).bind("mousedown.qtip", function(t) {
            if (f(t.target).parents("div.qtip").length === 0) {
                f(".qtip[unfocus]").each(function() {
                    var u = f(this).qtip("api");
                    if (f(this).is(":visible") && !u.status.disabled && f(t.target).add(u.elements.target).length > 1) {
                        u.hide(t)
                    }
                })
            }
        })
    });
    f.fn.qtip.interfaces = [];
    f.fn.qtip.log = {
        error: function() {
            return this
        }
    };
    f.fn.qtip.constants = {};
    f.fn.qtip.defaults = {
        content: {
            prerender: false,
            text: false,
            url: false,
            data: null,
            title: {
                text: false,
                button: false
            }
        },
        position: {
            target: false,
            corner: {
                target: "bottomRight",
                tooltip: "topLeft"
            },
            adjust: {
                x: 0,
                y: 0,
                mouse: true,
                screen: false,
                scroll: true,
                resize: true
            },
            type: "absolute",
            container: false
        },
        show: {
            when: {
                target: false,
                event: "mouseover"
            },
            effect: {
                type: "fade",
                length: 100
            },
            delay: 140,
            solo: false,
            ready: false
        },
        hide: {
            when: {
                target: false,
                event: "mouseout"
            },
            effect: {
                type: "fade",
                length: 100
            },
            delay: 0,
            fixed: false
        },
        api: {
            beforeRender: function() {},
            onRender: function() {},
            beforePositionUpdate: function() {},
            onPositionUpdate: function() {},
            beforeShow: function() {},
            onShow: function() {},
            beforeHide: function() {},
            onHide: function() {},
            beforeContentUpdate: function() {},
            onContentUpdate: function() {},
            beforeContentLoad: function() {},
            onContentLoad: function() {},
            beforeTitleUpdate: function() {},
            onTitleUpdate: function() {},
            beforeDestroy: function() {},
            onDestroy: function() {},
            beforeFocus: function() {},
            onFocus: function() {}
        }
    };
    f.fn.qtip.styles = {
        defaults: {
            background: "white",
            color: "#111",
            overflow: "hidden",
            textAlign: "left",
            width: {
                min: 0,
                max: 250
            },
            padding: "5px 9px",
            border: {
                width: 1,
                radius: 0,
                color: "#d3d3d3"
            },
            tip: {
                corner: false,
                color: false,
                size: {
                    width: 13,
                    height: 13
                },
                opacity: 1
            },
            title: {
                background: "#e1e1e1",
                fontWeight: "bold",
                padding: "7px 12px"
            },
            button: {
                cursor: "pointer"
            },
            classes: {
                target: "",
                tip: "qtip-tip",
                title: "qtip-title",
                button: "qtip-button",
                content: "qtip-content",
                active: "qtip-active"
            }
        },
        cream: {
            border: {
                width: 3,
                radius: 0,
                color: "#F9E98E"
            },
            title: {
                background: "#F0DE7D",
                color: "#A27D35"
            },
            background: "#FBF7AA",
            color: "#A27D35",
            classes: {
                tooltip: "qtip-cream"
            }
        },
        light: {
            border: {
                width: 3,
                radius: 0,
                color: "#E2E2E2"
            },
            title: {
                background: "#f1f1f1",
                color: "#454545"
            },
            background: "white",
            color: "#454545",
            classes: {
                tooltip: "qtip-light"
            }
        },
        dark: {
            border: {
                width: 3,
                radius: 0,
                color: "#303030"
            },
            title: {
                background: "#404040",
                color: "#f3f3f3"
            },
            background: "#505050",
            color: "#f3f3f3",
            classes: {
                tooltip: "qtip-dark"
            }
        },
        red: {
            border: {
                width: 3,
                radius: 0,
                color: "#CE6F6F"
            },
            title: {
                background: "#f28279",
                color: "#9C2F2F"
            },
            background: "#F79992",
            color: "#9C2F2F",
            classes: {
                tooltip: "qtip-red"
            }
        },
        green: {
            border: {
                width: 3,
                radius: 0,
                color: "#A9DB66"
            },
            title: {
                background: "#b9db8c",
                color: "#58792E"
            },
            background: "#CDE6AC",
            color: "#58792E",
            classes: {
                tooltip: "qtip-green"
            }
        },
        blue: {
            border: {
                width: 3,
                radius: 0,
                color: "#ADD9ED"
            },
            title: {
                background: "#D0E9F5",
                color: "#5E99BD"
            },
            background: "#E5F6FE",
            color: "#4D9FBF",
            classes: {
                tooltip: "qtip-blue"
            }
        }
    }
}
)(jQuery);
/*
 Highstock JS v2.0.4 (2014-09-02)

 (c) 2009-2014 Torstein Honsi

 License: www.highcharts.com/license
*/
(function() {
    function s(a, b) {
        var c;
        a || (a = {});
        for (c in b)
            a[c] = b[c];
        return a
    }
    function y() {
        var a, b = arguments, c, d = {}, e = function(a, b) {
            var c, d;
            typeof a !== "object" && (a = {});
            for (d in b)
                b.hasOwnProperty(d) && (c = b[d],
                a[d] = c && typeof c === "object" && Object.prototype.toString.call(c) !== "[object Array]" && d !== "renderTo" && typeof c.nodeType !== "number" ? e(a[d] || {}, c) : b[d]);
            return a
        };
        b[0] === !0 && (d = b[1],
        b = Array.prototype.slice.call(b, 2));
        c = b.length;
        for (a = 0; a < c; a++)
            d = e(d, b[a]);
        return d
    }
    function H(a, b) {
        return parseInt(a, b || 10)
    }
    function Sa(a) {
        return typeof a === "string"
    }
    function ha(a) {
        return a && typeof a === "object"
    }
    function Ja(a) {
        return Object.prototype.toString.call(a) === "[object Array]"
    }
    function pa(a) {
        return typeof a === "number"
    }
    function Ka(a) {
        return X.log(a) / X.LN10
    }
    function sa(a) {
        return X.pow(10, a)
    }
    function ta(a, b) {
        for (var c = a.length; c--; )
            if (a[c] === b) {
                a.splice(c, 1);
                break
            }
    }
    function u(a) {
        return a !== r && a !== null
    }
    function Y(a, b, c) {
        var d, e;
        if (Sa(b))
            u(c) ? a.setAttribute(b, c) : a && a.getAttribute && (e = a.getAttribute(b));
        else if (u(b) && ha(b))
            for (d in b)
                a.setAttribute(d, b[d]);
        return e
    }
    function qa(a) {
        return Ja(a) ? a : [a]
    }
    function q() {
        var a = arguments, b, c, d = a.length;
        for (b = 0; b < d; b++)
            if (c = a[b],
            c !== r && c !== null)
                return c
    }
    function K(a, b) {
        if (La && !ea && b && b.opacity !== r)
            b.filter = "alpha(opacity=" + b.opacity * 100 + ")";
        s(a.style, b)
    }
    function aa(a, b, c, d, e) {
        a = E.createElement(a);
        b && s(a, b);
        e && K(a, {
            padding: 0,
            border: $,
            margin: 0
        });
        c && K(a, c);
        d && d.appendChild(a);
        return a
    }
    function ia(a, b) {
        var c = function() {
            return r
        };
        c.prototype = new a;
        s(c.prototype, b);
        return c
    }
    function Da(a, b, c, d) {
        var e = N.numberFormat
          , f = F.lang
          , g = +a || 0
          , h = b === -1 ? (g.toString().split(".")[1] || "").length : isNaN(b = P(b)) ? 2 : b
          , i = c === void 0 ? f.decimalPoint : c
          , f = d === void 0 ? f.thousandsSep : d
          , j = g < 0 ? "-" : ""
          , k = String(H(g = P(g).toFixed(h)))
          , l = k.length > 3 ? k.length % 3 : 0;
        return e !== Da ? e(a, b, c, d) : j + (l ? k.substr(0, l) + f : "") + k.substr(l).replace(/(\d{3})(?=\d)/g, "$1" + f) + (h ? i + P(g - k).toFixed(h).slice(2) : "")
    }
    function Ta(a, b) {
        return Array((b || 2) + 1 - String(a).length).join(0) + a
    }
    function Q(a, b, c) {
        var d = a[b];
        a[b] = function() {
            var a = Array.prototype.slice.call(arguments);
            a.unshift(d);
            return c.apply(this, a)
        }
    }
    function Ma(a, b) {
        for (var c = "{", d = !1, e, f, g, h, i, j = []; (c = a.indexOf(c)) !== -1; ) {
            e = a.slice(0, c);
            if (d) {
                f = e.split(":");
                g = f.shift().split(".");
                i = g.length;
                e = b;
                for (h = 0; h < i; h++)
                    e = e[g[h]];
                if (f.length)
                    f = f.join(":"),
                    g = /\.([0-9])/,
                    h = F.lang,
                    i = void 0,
                    /f$/.test(f) ? (i = (i = f.match(g)) ? i[1] : -1,
                    e !== null && (e = Da(e, i, h.decimalPoint, f.indexOf(",") > -1 ? h.thousandsSep : ""))) : e = xa(f, e)
            }
            j.push(e);
            a = a.slice(c + 1);
            c = (d = !d) ? "}" : "{"
        }
        j.push(a);
        return j.join("")
    }
    function vb(a) {
        return X.pow(10, V(X.log(a) / X.LN10))
    }
    function wb(a, b, c, d) {
        var e, c = q(c, 1);
        e = a / c;
        b || (b = [1, 2, 2.5, 5, 10],
        d === !1 && (c === 1 ? b = [1, 2, 5, 10] : c <= 0.1 && (b = [1 / c])));
        for (d = 0; d < b.length; d++)
            if (a = b[d],
            e <= (b[d] + (b[d + 1] || b[d])) / 2)
                break;
        a *= c;
        return a
    }
    function xb(a, b) {
        var c = a.length, d, e;
        for (e = 0; e < c; e++)
            a[e].ss_i = e;
        a.sort(function(a, c) {
            d = b(a, c);
            return d === 0 ? a.ss_i - c.ss_i : d
        });
        for (e = 0; e < c; e++)
            delete a[e].ss_i
    }
    function Ua(a) {
        for (var b = a.length, c = a[0]; b--; )
            a[b] < c && (c = a[b]);
        return c
    }
    function Ea(a) {
        for (var b = a.length, c = a[0]; b--; )
            a[b] > c && (c = a[b]);
        return c
    }
    function Na(a, b) {
        for (var c in a)
            a[c] && a[c] !== b && a[c].destroy && a[c].destroy(),
            delete a[c]
    }
    function Va(a) {
        kb || (kb = aa(Wa));
        a && kb.appendChild(a);
        kb.innerHTML = ""
    }
    function ja(a) {
        return parseFloat(a.toPrecision(14))
    }
    function ab(a, b) {
        Fa = q(a, b.animation)
    }
    function Mb() {
        var a = F.global.useUTC
          , b = a ? "getUTC" : "get"
          , c = a ? "setUTC" : "set";
        ca = F.global.Date || window.Date;
        Oa = (a && F.global.timezoneOffset || 0) * 6E4;
        lb = a ? ca.UTC : function(a, b, c, g, h, i) {
            return (new ca(a,b,q(c, 1),q(g, 0),q(h, 0),q(i, 0))).getTime()
        }
        ;
        yb = b + "Minutes";
        zb = b + "Hours";
        Ab = b + "Day";
        Xa = b + "Date";
        mb = b + "Month";
        nb = b + "FullYear";
        Nb = c + "Minutes";
        Ob = c + "Hours";
        Bb = c + "Date";
        Pb = c + "Month";
        Qb = c + "FullYear"
    }
    function Z() {}
    function bb(a, b, c, d) {
        this.axis = a;
        this.pos = b;
        this.type = c || "";
        this.isNew = !0;
        !c && !d && this.addLabel()
    }
    function D() {
        this.init.apply(this, arguments)
    }
    function ya() {
        this.init.apply(this, arguments)
    }
    function Rb(a, b, c, d, e) {
        var f = a.chart.inverted;
        this.axis = a;
        this.isNegative = c;
        this.options = b;
        this.x = d;
        this.total = null;
        this.points = {};
        this.stack = e;
        this.alignOptions = {
            align: b.align || (f ? c ? "left" : "right" : "center"),
            verticalAlign: b.verticalAlign || (f ? "middle" : c ? "bottom" : "top"),
            y: q(b.y, f ? 4 : c ? 14 : -6),
            x: q(b.x, f ? c ? -6 : 6 : 0)
        };
        this.textAlign = b.textAlign || (f ? c ? "right" : "left" : "center")
    }
    function Cb(a) {
        var b = a.options
          , c = b.navigator
          , d = c.enabled
          , b = b.scrollbar
          , e = b.enabled
          , f = d ? c.height : 0
          , g = e ? b.height : 0;
        this.handles = [];
        this.scrollbarButtons = [];
        this.elementsToDestroy = [];
        this.chart = a;
        this.setBaseSeries();
        this.height = f;
        this.scrollbarHeight = g;
        this.scrollbarEnabled = e;
        this.navigatorEnabled = d;
        this.navigatorOptions = c;
        this.scrollbarOptions = b;
        this.outlineHeight = f + g;
        this.init()
    }
    function Db(a) {
        this.init(a)
    }
    var r, E = document, S = window, X = Math, t = X.round, V = X.floor, Ya = X.ceil, v = X.max, A = X.min, P = X.abs, fa = X.cos, ka = X.sin, ua = X.PI, Pa = ua * 2 / 360, Ga = navigator.userAgent, Sb = S.opera, La = /msie/i.test(Ga) && !Sb, ob = E.documentMode === 8, Eb = /AppleWebKit/.test(Ga), cb = /Firefox/.test(Ga), fb = /(Mobile|Android|Windows Phone)/.test(Ga), Ha = "http://www.w3.org/2000/svg", ea = !!E.createElementNS && !!E.createElementNS(Ha, "svg").createSVGRect, Yb = cb && parseInt(Ga.split("Firefox/")[1], 10) < 4, la = !ea && !La && !!E.createElement("canvas").getContext, Za, db, Tb = {}, Fb = 0, kb, F, xa, Fa, Gb, G, ma, ra = function() {
        return r
    }, ba = [], gb = 0, Wa = "div", $ = "none", Zb = /^[0-9]+$/, $b = "stroke-width", ca, lb, Oa, yb, zb, Ab, Xa, mb, nb, Nb, Ob, Bb, Pb, Qb, B = {}, N;
    S.Highcharts ? ma(16, !0) : N = S.Highcharts = {};
    xa = function(a, b, c) {
        if (!u(b) || isNaN(b))
            return "Invalid date";
        var a = q(a, "%Y-%m-%d %H:%M:%S"), d = new ca(b - Oa), e, f = d[zb](), g = d[Ab](), h = d[Xa](), i = d[mb](), j = d[nb](), k = F.lang, l = k.weekdays, d = s({
            a: l[g].substr(0, 3),
            A: l[g],
            d: Ta(h),
            e: h,
            b: k.shortMonths[i],
            B: k.months[i],
            m: Ta(i + 1),
            y: j.toString().substr(2, 2),
            Y: j,
            H: Ta(f),
            I: Ta(f % 12 || 12),
            l: f % 12 || 12,
            M: Ta(d[yb]()),
            p: f < 12 ? "AM" : "PM",
            P: f < 12 ? "am" : "pm",
            S: Ta(d.getSeconds()),
            L: Ta(t(b % 1E3), 3)
        }, N.dateFormats);
        for (e in d)
            for (; a.indexOf("%" + e) !== -1; )
                a = a.replace("%" + e, typeof d[e] === "function" ? d[e](b) : d[e]);
        return c ? a.substr(0, 1).toUpperCase() + a.substr(1) : a
    }
    ;
    ma = function(a, b) {
        var c = "Highcharts error #" + a + ": www.highcharts.com/errors/" + a;
        if (b)
            throw c;
        S.console && console.log(c)
    }
    ;
    G = {
        millisecond: 1,
        second: 1E3,
        minute: 6E4,
        hour: 36E5,
        day: 864E5,
        week: 6048E5,
        month: 26784E5,
        year: 31556952E3
    };
    Gb = {
        init: function(a, b, c) {
            var b = b || "", d = a.shift, e = b.indexOf("C") > -1, f = e ? 7 : 3, g, b = b.split(" "), c = [].concat(c), h, i, j = function(a) {
                for (g = a.length; g--; )
                    a[g] === "M" && a.splice(g + 1, 0, a[g + 1], a[g + 2], a[g + 1], a[g + 2])
            };
            e && (j(b),
            j(c));
            a.isArea && (h = b.splice(b.length - 6, 6),
            i = c.splice(c.length - 6, 6));
            if (d <= c.length / f && b.length === c.length)
                for (; d--; )
                    c = [].concat(c).splice(0, f).concat(c);
            a.shift = 0;
            if (b.length)
                for (a = c.length; b.length < a; )
                    d = [].concat(b).splice(b.length - f, f),
                    e && (d[f - 6] = d[f - 2],
                    d[f - 5] = d[f - 1]),
                    b = b.concat(d);
            h && (b = b.concat(h),
            c = c.concat(i));
            return [b, c]
        },
        step: function(a, b, c, d) {
            var e = []
              , f = a.length;
            if (c === 1)
                e = d;
            else if (f === b.length && c < 1)
                for (; f--; )
                    d = parseFloat(a[f]),
                    e[f] = isNaN(d) ? a[f] : c * parseFloat(b[f] - d) + d;
            else
                e = b;
            return e
        }
    };
    (function(a) {
        S.HighchartsAdapter = S.HighchartsAdapter || a && {
            init: function(b) {
                var c = a.fx;
                a.extend(a.easing, {
                    easeOutQuad: function(a, b, c, g, h) {
                        return -g * (b /= h) * (b - 2) + c
                    }
                });
                a.each(["cur", "_default", "width", "height", "opacity"], function(b, e) {
                    var f = c.step, g;
                    e === "cur" ? f = c.prototype : e === "_default" && a.Tween && (f = a.Tween.propHooks[e],
                    e = "set");
                    (g = f[e]) && (f[e] = function(a) {
                        var c, a = b ? a : this;
                        if (a.prop !== "align")
                            return c = a.elem,
                            c.attr ? c.attr(a.prop, e === "cur" ? r : a.now) : g.apply(this, arguments)
                    }
                    )
                });
                Q(a.cssHooks.opacity, "get", function(a, b, c) {
                    return b.attr ? b.opacity || 0 : a.call(this, b, c)
                });
                this.addAnimSetter("d", function(a) {
                    var c = a.elem, f;
                    if (!a.started)
                        f = b.init(c, c.d, c.toD),
                        a.start = f[0],
                        a.end = f[1],
                        a.started = !0;
                    c.attr("d", b.step(a.start, a.end, a.pos, c.toD))
                });
                this.each = Array.prototype.forEach ? function(a, b) {
                    return Array.prototype.forEach.call(a, b)
                }
                : function(a, b) {
                    var c, g = a.length;
                    for (c = 0; c < g; c++)
                        if (b.call(a[c], a[c], c, a) === !1)
                            return c
                }
                ;
                a.fn.highcharts = function() {
                    var a = "Chart", b = arguments, c, g;
                    if (this[0]) {
                        Sa(b[0]) && (a = b[0],
                        b = Array.prototype.slice.call(b, 1));
                        c = b[0];
                        if (c !== r)
                            c.chart = c.chart || {},
                            c.chart.renderTo = this[0],
                            new N[a](c,b[1]),
                            g = this;
                        c === r && (g = ba[Y(this[0], "data-highcharts-chart")])
                    }
                    return g
                }
            },
            addAnimSetter: function(b, c) {
                a.Tween ? a.Tween.propHooks[b] = {
                    set: c
                } : a.fx.step[b] = c
            },
            getScript: a.getScript,
            inArray: a.inArray,
            adapterRun: function(b, c) {
                return a(b)[c]()
            },
            grep: a.grep,
            map: function(a, c) {
                for (var d = [], e = 0, f = a.length; e < f; e++)
                    d[e] = c.call(a[e], a[e], e, a);
                return d
            },
            offset: function(b) {
                return a(b).offset()
            },
            addEvent: function(b, c, d) {
                a(b).bind(c, d)
            },
            removeEvent: function(b, c, d) {
                var e = E.removeEventListener ? "removeEventListener" : "detachEvent";
                E[e] && b && !b[e] && (b[e] = function() {}
                );
                a(b).unbind(c, d)
            },
            fireEvent: function(b, c, d, e) {
                var f = a.Event(c), g = "detached" + c, h;
                !La && d && (delete d.layerX,
                delete d.layerY,
                delete d.returnValue);
                s(f, d);
                b[c] && (b[g] = b[c],
                b[c] = null);
                a.each(["preventDefault", "stopPropagation"], function(a, b) {
                    var c = f[b];
                    f[b] = function() {
                        try {
                            c.call(f)
                        } catch (a) {
                            b === "preventDefault" && (h = !0)
                        }
                    }
                });
                a(b).trigger(f);
                b[g] && (b[c] = b[g],
                b[g] = null);
                e && !f.isDefaultPrevented() && !h && e(f)
            },
            washMouseEvent: function(a) {
                var c = a.originalEvent || a;
                if (c.pageX === r)
                    c.pageX = a.pageX,
                    c.pageY = a.pageY;
                return c
            },
            animate: function(b, c, d) {
                var e = a(b);
                if (!b.style)
                    b.style = {};
                if (c.d)
                    b.toD = c.d,
                    c.d = 1;
                e.stop();
                c.opacity !== r && b.attr && (c.opacity += "px");
                b.hasAnim = 1;
                e.animate(c, d)
            },
            stop: function(b) {
                b.hasAnim && a(b).stop()
            }
        }
    }
    )(S.jQuery);
    var L = S.HighchartsAdapter
      , T = L || {};
    L && L.init.call(L, Gb);
    var pb = T.adapterRun
      , ac = T.getScript
      , Qa = T.inArray
      , p = T.each
      , qb = T.grep
      , bc = T.offset
      , za = T.map
      , z = T.addEvent
      , U = T.removeEvent
      , J = T.fireEvent
      , cc = T.washMouseEvent
      , rb = T.animate
      , hb = T.stop
      , T = {
        enabled: !0,
        x: 0,
        y: 15,
        style: {
            color: "#606060",
            cursor: "default",
            fontSize: "11px"
        }
    };
    F = {
        colors: "#7cb5ec,#434348,#90ed7d,#f7a35c,#8085e9,#f15c80,#e4d354,#8085e8,#8d4653,#91e8e1".split(","),
        symbols: ["circle", "diamond", "square", "triangle", "triangle-down"],
        lang: {
            loading: "Loading...",
            months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
            shortMonths: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
            weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
            decimalPoint: ".",
            numericSymbols: "k,M,G,T,P,E".split(","),
            resetZoom: "Reset zoom",
            resetZoomTitle: "Reset zoom level 1:1",
            thousandsSep: ","
        },
        global: {
            useUTC: !0,
            canvasToolsURL: "http://code.highcharts.com/stock/2.0.4/modules/canvas-tools.js",
            VMLRadialGradientURL: "http://code.highcharts.com/stock/2.0.4/gfx/vml-radial-gradient.png"
        },
        chart: {
            borderColor: "#4572A7",
            borderRadius: 0,
            defaultSeriesType: "line",
            ignoreHiddenSeries: !0,
            spacing: [10, 10, 15, 10],
            backgroundColor: "#FFFFFF",
            plotBorderColor: "#C0C0C0",
            resetZoomButton: {
                theme: {
                    zIndex: 20
                },
                position: {
                    align: "right",
                    x: -10,
                    y: 10
                }
            }
        },
        title: {
            text: "Chart title",
            align: "center",
            margin: 15,
            style: {
                color: "#333333",
                fontSize: "18px"
            }
        },
        subtitle: {
            text: "",
            align: "center",
            style: {
                color: "#555555"
            }
        },
        plotOptions: {
            line: {
                allowPointSelect: !1,
                showCheckbox: !1,
                animation: {
                    duration: 1E3
                },
                events: {},
                lineWidth: 2,
                marker: {
                    lineWidth: 0,
                    radius: 4,
                    lineColor: "#FFFFFF",
                    states: {
                        hover: {
                            enabled: !0,
                            lineWidthPlus: 1,
                            radiusPlus: 2
                        },
                        select: {
                            fillColor: "#FFFFFF",
                            lineColor: "#000000",
                            lineWidth: 2
                        }
                    }
                },
                point: {
                    events: {}
                },
                dataLabels: y(T, {
                    align: "center",
                    enabled: !1,
                    formatter: function() {
                        return this.y === null ? "" : Da(this.y, -1)
                    },
                    verticalAlign: "bottom",
                    y: 0
                }),
                cropThreshold: 300,
                pointRange: 0,
                states: {
                    hover: {
                        lineWidthPlus: 1,
                        marker: {},
                        halo: {
                            size: 10,
                            opacity: 0.25
                        }
                    },
                    select: {
                        marker: {}
                    }
                },
                stickyTracking: !0,
                turboThreshold: 1E3
            }
        },
        labels: {
            style: {
                position: "absolute",
                color: "#3E576F"
            }
        },
        legend: {
            enabled: !0,
            align: "center",
            layout: "horizontal",
            labelFormatter: function() {
                return this.name
            },
            borderColor: "#909090",
            borderRadius: 0,
            navigation: {
                activeColor: "#274b6d",
                inactiveColor: "#CCC"
            },
            shadow: !1,
            itemStyle: {
                color: "#333333",
                fontSize: "12px",
                fontWeight: "bold"
            },
            itemHoverStyle: {
                color: "#000"
            },
            itemHiddenStyle: {
                color: "#CCC"
            },
            itemCheckboxStyle: {
                position: "absolute",
                width: "13px",
                height: "13px"
            },
            symbolPadding: 5,
            verticalAlign: "bottom",
            x: 0,
            y: 0,
            title: {
                style: {
                    fontWeight: "bold"
                }
            }
        },
        loading: {
            labelStyle: {
                fontWeight: "bold",
                position: "relative",
                top: "45%"
            },
            style: {
                position: "absolute",
                backgroundColor: "white",
                opacity: 0.5,
                textAlign: "center"
            }
        },
        tooltip: {
            enabled: !0,
            animation: ea,
            backgroundColor: "rgba(249, 249, 249, .85)",
            borderWidth: 1,
            borderRadius: 3,
            dateTimeLabelFormats: {
                millisecond: "%A, %b %e, %H:%M:%S.%L",
                second: "%A, %b %e, %H:%M:%S",
                minute: "%A, %b %e, %H:%M",
                hour: "%A, %b %e, %H:%M",
                day: "%A, %b %e, %Y",
                week: "Week from %A, %b %e, %Y",
                month: "%B %Y",
                year: "%Y"
            },
            headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
            pointFormat: '<span style="color:{series.color}">●</span> {series.name}: <b>{point.y}</b><br/>',
            shadow: !0,
            snap: fb ? 25 : 10,
            style: {
                color: "#333333",
                cursor: "default",
                fontSize: "12px",
                padding: "8px",
                whiteSpace: "nowrap"
            }
        },
        credits: {
            enabled: !0,
            text: "Highcharts.com",
            href: "http://www.highcharts.com",
            position: {
                align: "right",
                x: -10,
                verticalAlign: "bottom",
                y: -5
            },
            style: {
                cursor: "pointer",
                color: "#909090",
                fontSize: "9px"
            }
        }
    };
    var W = F.plotOptions
      , L = W.line;
    Mb();
    var dc = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/
      , ec = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/
      , fc = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/
      , Ia = function(a) {
        var b = [], c, d;
        (function(a) {
            a && a.stops ? d = za(a.stops, function(a) {
                return Ia(a[1])
            }) : (c = dc.exec(a)) ? b = [H(c[1]), H(c[2]), H(c[3]), parseFloat(c[4], 10)] : (c = ec.exec(a)) ? b = [H(c[1], 16), H(c[2], 16), H(c[3], 16), 1] : (c = fc.exec(a)) && (b = [H(c[1]), H(c[2]), H(c[3]), 1])
        }
        )(a);
        return {
            get: function(c) {
                var f;
                d ? (f = y(a),
                f.stops = [].concat(f.stops),
                p(d, function(a, b) {
                    f.stops[b] = [f.stops[b][0], a.get(c)]
                })) : f = b && !isNaN(b[0]) ? c === "rgb" ? "rgb(" + b[0] + "," + b[1] + "," + b[2] + ")" : c === "a" ? b[3] : "rgba(" + b.join(",") + ")" : a;
                return f
            },
            brighten: function(a) {
                if (d)
                    p(d, function(b) {
                        b.brighten(a)
                    });
                else if (pa(a) && a !== 0) {
                    var c;
                    for (c = 0; c < 3; c++)
                        b[c] += H(a * 255),
                        b[c] < 0 && (b[c] = 0),
                        b[c] > 255 && (b[c] = 255)
                }
                return this
            },
            rgba: b,
            setOpacity: function(a) {
                b[3] = a;
                return this
            }
        }
    };
    Z.prototype = {
        opacity: 1,
        textProps: "fontSize,fontWeight,fontFamily,color,lineHeight,width,textDecoration,textShadow,HcTextStroke".split(","),
        init: function(a, b) {
            this.element = b === "span" ? aa(b) : E.createElementNS(Ha, b);
            this.renderer = a
        },
        animate: function(a, b, c) {
            b = q(b, Fa, !0);
            hb(this);
            if (b) {
                b = y(b, {});
                if (c)
                    b.complete = c;
                rb(this, a, b)
            } else
                this.attr(a),
                c && c();
            return this
        },
        colorGradient: function(a, b, c) {
            var d = this.renderer, e, f, g, h, i, j, k, l, m, n, o = [];
            a.linearGradient ? f = "linearGradient" : a.radialGradient && (f = "radialGradient");
            if (f) {
                g = a[f];
                h = d.gradients;
                j = a.stops;
                m = c.radialReference;
                Ja(g) && (a[f] = g = {
                    x1: g[0],
                    y1: g[1],
                    x2: g[2],
                    y2: g[3],
                    gradientUnits: "userSpaceOnUse"
                });
                f === "radialGradient" && m && !u(g.gradientUnits) && (g = y(g, {
                    cx: m[0] - m[2] / 2 + g.cx * m[2],
                    cy: m[1] - m[2] / 2 + g.cy * m[2],
                    r: g.r * m[2],
                    gradientUnits: "userSpaceOnUse"
                }));
                for (n in g)
                    n !== "id" && o.push(n, g[n]);
                for (n in j)
                    o.push(j[n]);
                o = o.join(",");
                h[o] ? a = h[o].attr("id") : (g.id = a = "highcharts-" + Fb++,
                h[o] = i = d.createElement(f).attr(g).add(d.defs),
                i.stops = [],
                p(j, function(a) {
                    a[1].indexOf("rgba") === 0 ? (e = Ia(a[1]),
                    k = e.get("rgb"),
                    l = e.get("a")) : (k = a[1],
                    l = 1);
                    a = d.createElement("stop").attr({
                        offset: a[0],
                        "stop-color": k,
                        "stop-opacity": l
                    }).add(i);
                    i.stops.push(a)
                }));
                c.setAttribute(b, "url(" + d.url + "#" + a + ")")
            }
        },
        attr: function(a, b) {
            var c, d, e = this.element, f, g = this, h;
            typeof a === "string" && b !== r && (c = a,
            a = {},
            a[c] = b);
            if (typeof a === "string")
                g = (this[a + "Getter"] || this._defaultGetter).call(this, a, e);
            else {
                for (c in a) {
                    d = a[c];
                    h = !1;
                    this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(c) && (f || (this.symbolAttr(a),
                    f = !0),
                    h = !0);
                    if (this.rotation && (c === "x" || c === "y"))
                        this.doTransform = !0;
                    h || (this[c + "Setter"] || this._defaultSetter).call(this, d, c, e);
                    this.shadows && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(c) && this.updateShadows(c, d)
                }
                if (this.doTransform)
                    this.updateTransform(),
                    this.doTransform = !1
            }
            return g
        },
        updateShadows: function(a, b) {
            for (var c = this.shadows, d = c.length; d--; )
                c[d].setAttribute(a, a === "height" ? v(b - (c[d].cutHeight || 0), 0) : a === "d" ? this.d : b)
        },
        addClass: function(a) {
            var b = this.element
              , c = Y(b, "class") || "";
            c.indexOf(a) === -1 && Y(b, "class", c + " " + a);
            return this
        },
        symbolAttr: function(a) {
            var b = this;
            p("x,y,r,start,end,width,height,innerR,anchorX,anchorY".split(","), function(c) {
                b[c] = q(a[c], b[c])
            });
            b.attr({
                d: b.renderer.symbols[b.symbolName](b.x, b.y, b.width, b.height, b)
            })
        },
        clip: function(a) {
            return this.attr("clip-path", a ? "url(" + this.renderer.url + "#" + a.id + ")" : $)
        },
        crisp: function(a) {
            var b, c = {}, d, e = a.strokeWidth || this.strokeWidth || 0;
            d = t(e) % 2 / 2;
            a.x = V(a.x || this.x || 0) + d;
            a.y = V(a.y || this.y || 0) + d;
            a.width = V((a.width || this.width || 0) - 2 * d);
            a.height = V((a.height || this.height || 0) - 2 * d);
            a.strokeWidth = e;
            for (b in a)
                this[b] !== a[b] && (this[b] = c[b] = a[b]);
            return c
        },
        css: function(a) {
            var b = this.styles, c = {}, d = this.element, e, f, g = "";
            e = !b;
            if (a && a.color)
                a.fill = a.color;
            if (b)
                for (f in a)
                    a[f] !== b[f] && (c[f] = a[f],
                    e = !0);
            if (e) {
                e = this.textWidth = a && a.width && d.nodeName.toLowerCase() === "text" && H(a.width);
                b && (a = s(b, c));
                this.styles = a;
                e && (la || !ea && this.renderer.forExport) && delete a.width;
                if (La && !ea)
                    K(this.element, a);
                else {
                    b = function(a, b) {
                        return "-" + b.toLowerCase()
                    }
                    ;
                    for (f in a)
                        g += f.replace(/([A-Z])/g, b) + ":" + a[f] + ";";
                    Y(d, "style", g)
                }
                e && this.added && this.renderer.buildText(this)
            }
            return this
        },
        on: function(a, b) {
            var c = this
              , d = c.element;
            db && a === "click" ? (d.ontouchstart = function(a) {
                c.touchEventFired = ca.now();
                a.preventDefault();
                b.call(d, a)
            }
            ,
            d.onclick = function(a) {
                (Ga.indexOf("Android") === -1 || ca.now() - (c.touchEventFired || 0) > 1100) && b.call(d, a)
            }
            ) : d["on" + a] = b;
            return this
        },
        setRadialReference: function(a) {
            this.element.radialReference = a;
            return this
        },
        translate: function(a, b) {
            return this.attr({
                translateX: a,
                translateY: b
            })
        },
        invert: function() {
            this.inverted = !0;
            this.updateTransform();
            return this
        },
        updateTransform: function() {
            var a = this.translateX || 0
              , b = this.translateY || 0
              , c = this.scaleX
              , d = this.scaleY
              , e = this.inverted
              , f = this.rotation
              , g = this.element;
            e && (a += this.attr("width"),
            b += this.attr("height"));
            a = ["translate(" + a + "," + b + ")"];
            e ? a.push("rotate(90) scale(-1,1)") : f && a.push("rotate(" + f + " " + (g.getAttribute("x") || 0) + " " + (g.getAttribute("y") || 0) + ")");
            (u(c) || u(d)) && a.push("scale(" + q(c, 1) + " " + q(d, 1) + ")");
            a.length && g.setAttribute("transform", a.join(" "))
        },
        toFront: function() {
            var a = this.element;
            a.parentNode.appendChild(a);
            return this
        },
        align: function(a, b, c) {
            var d, e, f, g, h = {};
            e = this.renderer;
            f = e.alignedObjects;
            if (a) {
                if (this.alignOptions = a,
                this.alignByTranslate = b,
                !c || Sa(c))
                    this.alignTo = d = c || "renderer",
                    ta(f, this),
                    f.push(this),
                    c = null
            } else
                a = this.alignOptions,
                b = this.alignByTranslate,
                d = this.alignTo;
            c = q(c, e[d], e);
            d = a.align;
            e = a.verticalAlign;
            f = (c.x || 0) + (a.x || 0);
            g = (c.y || 0) + (a.y || 0);
            if (d === "right" || d === "center")
                f += (c.width - (a.width || 0)) / {
                    right: 1,
                    center: 2
                }[d];
            h[b ? "translateX" : "x"] = t(f);
            if (e === "bottom" || e === "middle")
                g += (c.height - (a.height || 0)) / ({
                    bottom: 1,
                    middle: 2
                }[e] || 1);
            h[b ? "translateY" : "y"] = t(g);
            this[this.placed ? "animate" : "attr"](h);
            this.placed = !0;
            this.alignAttr = h;
            return this
        },
        getBBox: function() {
            var a = this.bBox, b = this.renderer, c, d, e = this.rotation;
            c = this.element;
            var f = this.styles
              , g = e * Pa;
            d = this.textStr;
            var h;
            if (d === "" || Zb.test(d))
                h = "num." + d.toString().length + (f ? "|" + f.fontSize + "|" + f.fontFamily : "");
            h && (a = b.cache[h]);
            if (!a) {
                if (c.namespaceURI === Ha || b.forExport) {
                    try {
                        a = c.getBBox ? s({}, c.getBBox()) : {
                            width: c.offsetWidth,
                            height: c.offsetHeight
                        }
                    } catch (i) {}
                    if (!a || a.width < 0)
                        a = {
                            width: 0,
                            height: 0
                        }
                } else
                    a = this.htmlGetBBox();
                if (b.isSVG) {
                    c = a.width;
                    d = a.height;
                    if (La && f && f.fontSize === "11px" && d.toPrecision(3) === "16.9")
                        a.height = d = 14;
                    if (e)
                        a.width = P(d * ka(g)) + P(c * fa(g)),
                        a.height = P(d * fa(g)) + P(c * ka(g))
                }
                this.bBox = a;
                h && (b.cache[h] = a)
            }
            return a
        },
        show: function(a) {
            a && this.element.namespaceURI === Ha ? this.element.removeAttribute("visibility") : this.attr({
                visibility: a ? "inherit" : "visible"
            });
            return this
        },
        hide: function() {
            return this.attr({
                visibility: "hidden"
            })
        },
        fadeOut: function(a) {
            var b = this;
            b.animate({
                opacity: 0
            }, {
                duration: a || 150,
                complete: function() {
                    b.attr({
                        y: -9999
                    })
                }
            })
        },
        add: function(a) {
            var b = this.renderer, c = a || b, d = c.element || b.box, e = this.element, f = this.zIndex, g, h;
            if (a)
                this.parentGroup = a;
            this.parentInverted = a && a.inverted;
            this.textStr !== void 0 && b.buildText(this);
            if (f)
                c.handleZ = !0,
                f = H(f);
            if (c.handleZ) {
                a = d.childNodes;
                for (g = 0; g < a.length; g++)
                    if (b = a[g],
                    c = Y(b, "zIndex"),
                    b !== e && (H(c) > f || !u(f) && u(c))) {
                        d.insertBefore(e, b);
                        h = !0;
                        break
                    }
            }
            h || d.appendChild(e);
            this.added = !0;
            if (this.onAdd)
                this.onAdd();
            return this
        },
        safeRemoveChild: function(a) {
            var b = a.parentNode;
            b && b.removeChild(a)
        },
        destroy: function() {
            var a = this, b = a.element || {}, c = a.shadows, d = a.renderer.isSVG && b.nodeName === "SPAN" && a.parentGroup, e, f;
            b.onclick = b.onmouseout = b.onmouseover = b.onmousemove = b.point = null;
            hb(a);
            if (a.clipPath)
                a.clipPath = a.clipPath.destroy();
            if (a.stops) {
                for (f = 0; f < a.stops.length; f++)
                    a.stops[f] = a.stops[f].destroy();
                a.stops = null
            }
            a.safeRemoveChild(b);
            for (c && p(c, function(b) {
                a.safeRemoveChild(b)
            }); d && d.div && d.div.childNodes.length === 0; )
                b = d.parentGroup,
                a.safeRemoveChild(d.div),
                delete d.div,
                d = b;
            a.alignTo && ta(a.renderer.alignedObjects, a);
            for (e in a)
                delete a[e];
            return null
        },
        shadow: function(a, b, c) {
            var d = [], e, f, g = this.element, h, i, j, k;
            if (a) {
                i = q(a.width, 3);
                j = (a.opacity || 0.15) / i;
                k = this.parentInverted ? "(-1,-1)" : "(" + q(a.offsetX, 1) + ", " + q(a.offsetY, 1) + ")";
                for (e = 1; e <= i; e++) {
                    f = g.cloneNode(0);
                    h = i * 2 + 1 - 2 * e;
                    Y(f, {
                        isShadow: "true",
                        stroke: a.color || "black",
                        "stroke-opacity": j * e,
                        "stroke-width": h,
                        transform: "translate" + k,
                        fill: $
                    });
                    if (c)
                        Y(f, "height", v(Y(f, "height") - h, 0)),
                        f.cutHeight = h;
                    b ? b.element.appendChild(f) : g.parentNode.insertBefore(f, g);
                    d.push(f)
                }
                this.shadows = d
            }
            return this
        },
        xGetter: function(a) {
            this.element.nodeName === "circle" && (a = {
                x: "cx",
                y: "cy"
            }[a] || a);
            return this._defaultGetter(a)
        },
        _defaultGetter: function(a) {
            a = q(this[a], this.element ? this.element.getAttribute(a) : null, 0);
            /^[\-0-9\.]+$/.test(a) && (a = parseFloat(a));
            return a
        },
        dSetter: function(a, b, c) {
            a && a.join && (a = a.join(" "));
            /(NaN| {2}|^$)/.test(a) && (a = "M 0 0");
            c.setAttribute(b, a);
            this[b] = a
        },
        dashstyleSetter: function(a) {
            var b;
            if (a = a && a.toLowerCase()) {
                a = a.replace("shortdashdotdot", "3,1,1,1,1,1,").replace("shortdashdot", "3,1,1,1").replace("shortdot", "1,1,").replace("shortdash", "3,1,").replace("longdash", "8,3,").replace(/dot/g, "1,3,").replace("dash", "4,3,").replace(/,$/, "").split(",");
                for (b = a.length; b--; )
                    a[b] = H(a[b]) * this["stroke-width"];
                a = a.join(",").replace("NaN", "none");
                this.element.setAttribute("stroke-dasharray", a)
            }
        },
        alignSetter: function(a) {
            this.element.setAttribute("text-anchor", {
                left: "start",
                center: "middle",
                right: "end"
            }[a])
        },
        opacitySetter: function(a, b, c) {
            this[b] = a;
            c.setAttribute(b, a)
        },
        titleSetter: function(a) {
            var b = this.element.getElementsByTagName("title")[0];
            b || (b = E.createElementNS(Ha, "title"),
            this.element.appendChild(b));
            b.textContent = q(a, "").replace(/<[^>]*>/g, "")
        },
        textSetter: function(a) {
            if (a !== this.textStr)
                delete this.bBox,
                this.textStr = a,
                this.added && this.renderer.buildText(this)
        },
        fillSetter: function(a, b, c) {
            typeof a === "string" ? c.setAttribute(b, a) : a && this.colorGradient(a, b, c)
        },
        zIndexSetter: function(a, b, c) {
            c.setAttribute(b, a);
            this[b] = a
        },
        _defaultSetter: function(a, b, c) {
            c.setAttribute(b, a)
        }
    };
    Z.prototype.yGetter = Z.prototype.xGetter;
    Z.prototype.translateXSetter = Z.prototype.translateYSetter = Z.prototype.rotationSetter = Z.prototype.verticalAlignSetter = Z.prototype.scaleXSetter = Z.prototype.scaleYSetter = function(a, b) {
        this[b] = a;
        this.doTransform = !0
    }
    ;
    Z.prototype["stroke-widthSetter"] = Z.prototype.strokeSetter = function(a, b, c) {
        this[b] = a;
        if (this.stroke && this["stroke-width"])
            this.strokeWidth = this["stroke-width"],
            Z.prototype.fillSetter.call(this, this.stroke, "stroke", c),
            c.setAttribute("stroke-width", this["stroke-width"]),
            this.hasStroke = !0;
        else if (b === "stroke-width" && a === 0 && this.hasStroke)
            c.removeAttribute("stroke"),
            this.hasStroke = !1
    }
    ;
    var na = function() {
        this.init.apply(this, arguments)
    };
    na.prototype = {
        Element: Z,
        init: function(a, b, c, d, e) {
            var f = location, g, d = this.createElement("svg").attr({
                version: "1.1"
            }).css(this.getStyle(d));
            g = d.element;
            a.appendChild(g);
            a.innerHTML.indexOf("xmlns") === -1 && Y(g, "xmlns", Ha);
            this.isSVG = !0;
            this.box = g;
            this.boxWrapper = d;
            this.alignedObjects = [];
            this.url = (cb || Eb) && E.getElementsByTagName("base").length ? f.href.replace(/#.*?$/, "").replace(/([\('\)])/g, "\\$1").replace(/ /g, "%20") : "";
            this.createElement("desc").add().element.appendChild(E.createTextNode("Created with Highstock 2.0.4"));
            this.defs = this.createElement("defs").add();
            this.forExport = e;
            this.gradients = {};
            this.cache = {};
            this.setSize(b, c, !1);
            var h;
            if (cb && a.getBoundingClientRect)
                this.subPixelFix = b = function() {
                    K(a, {
                        left: 0,
                        top: 0
                    });
                    h = a.getBoundingClientRect();
                    K(a, {
                        left: Ya(h.left) - h.left + "px",
                        top: Ya(h.top) - h.top + "px"
                    })
                }
                ,
                b(),
                z(S, "resize", b)
        },
        getStyle: function(a) {
            return this.style = s({
                fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',
                fontSize: "12px"
            }, a)
        },
        isHidden: function() {
            return !this.boxWrapper.getBBox().width
        },
        destroy: function() {
            var a = this.defs;
            this.box = null;
            this.boxWrapper = this.boxWrapper.destroy();
            Na(this.gradients || {});
            this.gradients = null;
            if (a)
                this.defs = a.destroy();
            this.subPixelFix && U(S, "resize", this.subPixelFix);
            return this.alignedObjects = null
        },
        createElement: function(a) {
            var b = new this.Element;
            b.init(this, a);
            return b
        },
        draw: function() {},
        buildText: function(a) {
            for (var b = a.element, c = this, d = c.forExport, e = q(a.textStr, "").toString(), f = e.indexOf("<") !== -1, g = b.childNodes, h, i, j = Y(b, "x"), k = a.styles, l = a.textWidth, m = k && k.lineHeight, n = k && k.HcTextStroke, o = g.length, x = function(a) {
                return m ? H(m) : c.fontMetrics(/(px|em)$/.test(a && a.style.fontSize) ? a.style.fontSize : k && k.fontSize || c.style.fontSize || 12, a).h
            }; o--; )
                b.removeChild(g[o]);
            !f && !n && e.indexOf(" ") === -1 ? b.appendChild(E.createTextNode(e)) : (h = /<.*style="([^"]+)".*>/,
            i = /<.*href="(http[^"]+)".*>/,
            l && !a.added && this.box.appendChild(b),
            e = f ? e.replace(/<(b|strong)>/g, '<span style="font-weight:bold">').replace(/<(i|em)>/g, '<span style="font-style:italic">').replace(/<a/g, "<span").replace(/<\/(b|strong|i|em|a)>/g, "</span>").split(/<br.*?>/g) : [e],
            e[e.length - 1] === "" && e.pop(),
            p(e, function(e, f) {
                var g, m = 0, e = e.replace(/<span/g, "|||<span").replace(/<\/span>/g, "</span>|||");
                g = e.split("|||");
                p(g, function(e) {
                    if (e !== "" || g.length === 1) {
                        var n = {}, o = E.createElementNS(Ha, "tspan"), I;
                        h.test(e) && (I = e.match(h)[1].replace(/(;| |^)color([ :])/, "$1fill$2"),
                        Y(o, "style", I));
                        i.test(e) && !d && (Y(o, "onclick", 'location.href="' + e.match(i)[1] + '"'),
                        K(o, {
                            cursor: "pointer"
                        }));
                        e = (e.replace(/<(.|\n)*?>/g, "") || " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
                        if (e !== " ") {
                            o.appendChild(E.createTextNode(e));
                            if (m)
                                n.dx = 0;
                            else if (f && j !== null)
                                n.x = j;
                            Y(o, n);
                            b.appendChild(o);
                            !m && f && (!ea && d && K(o, {
                                display: "block"
                            }),
                            Y(o, "dy", x(o)));
                            if (l)
                                for (var e = e.replace(/([^\^])-/g, "$1- ").split(" "), n = g.length > 1 || e.length > 1 && k.whiteSpace !== "nowrap", q, p, r = k.HcHeight, t = [], u = x(o), Ub = 1; n && (e.length || t.length); )
                                    delete a.bBox,
                                    q = a.getBBox(),
                                    p = q.width,
                                    !ea && c.forExport && (p = c.measureSpanWidth(o.firstChild.data, a.styles)),
                                    q = p > l,
                                    !q || e.length === 1 ? (e = t,
                                    t = [],
                                    e.length && (Ub++,
                                    r && Ub * u > r ? (e = ["..."],
                                    a.attr("title", a.textStr)) : (o = E.createElementNS(Ha, "tspan"),
                                    Y(o, {
                                        dy: u,
                                        x: j
                                    }),
                                    I && Y(o, "style", I),
                                    b.appendChild(o))),
                                    p > l && (l = p)) : (o.removeChild(o.firstChild),
                                    t.unshift(e.pop())),
                                    e.length && o.appendChild(E.createTextNode(e.join(" ").replace(/- /g, "-")));
                            m++
                        }
                    }
                })
            }))
        },
        button: function(a, b, c, d, e, f, g, h, i) {
            var j = this.label(a, b, c, i, null, null, null, null, "button"), k = 0, l, m, n, o, x, I, a = {
                x1: 0,
                y1: 0,
                x2: 0,
                y2: 1
            }, e = y({
                "stroke-width": 1,
                stroke: "#CCCCCC",
                fill: {
                    linearGradient: a,
                    stops: [[0, "#FEFEFE"], [1, "#F6F6F6"]]
                },
                r: 2,
                padding: 5,
                style: {
                    color: "black"
                }
            }, e);
            n = e.style;
            delete e.style;
            f = y(e, {
                stroke: "#68A",
                fill: {
                    linearGradient: a,
                    stops: [[0, "#FFF"], [1, "#ACF"]]
                }
            }, f);
            o = f.style;
            delete f.style;
            g = y(e, {
                stroke: "#68A",
                fill: {
                    linearGradient: a,
                    stops: [[0, "#9BD"], [1, "#CDF"]]
                }
            }, g);
            x = g.style;
            delete g.style;
            h = y(e, {
                style: {
                    color: "#CCC"
                }
            }, h);
            I = h.style;
            delete h.style;
            z(j.element, La ? "mouseover" : "mouseenter", function() {
                k !== 3 && j.attr(f).css(o)
            });
            z(j.element, La ? "mouseout" : "mouseleave", function() {
                k !== 3 && (l = [e, f, g][k],
                m = [n, o, x][k],
                j.attr(l).css(m))
            });
            j.setState = function(a) {
                (j.state = k = a) ? a === 2 ? j.attr(g).css(x) : a === 3 && j.attr(h).css(I) : j.attr(e).css(n)
            }
            ;
            return j.on("click", function() {
                k !== 3 && d.call(j)
            }).attr(e).css(s({
                cursor: "default"
            }, n))
        },
        crispLine: function(a, b) {
            a[1] === a[4] && (a[1] = a[4] = t(a[1]) - b % 2 / 2);
            a[2] === a[5] && (a[2] = a[5] = t(a[2]) + b % 2 / 2);
            return a
        },
        path: function(a) {
            var b = {
                fill: $
            };
            Ja(a) ? b.d = a : ha(a) && s(b, a);
            return this.createElement("path").attr(b)
        },
        circle: function(a, b, c) {
            a = ha(a) ? a : {
                x: a,
                y: b,
                r: c
            };
            b = this.createElement("circle");
            b.xSetter = function(a) {
                this.element.setAttribute("cx", a)
            }
            ;
            b.ySetter = function(a) {
                this.element.setAttribute("cy", a)
            }
            ;
            return b.attr(a)
        },
        arc: function(a, b, c, d, e, f) {
            if (ha(a))
                b = a.y,
                c = a.r,
                d = a.innerR,
                e = a.start,
                f = a.end,
                a = a.x;
            a = this.symbol("arc", a || 0, b || 0, c || 0, c || 0, {
                innerR: d || 0,
                start: e || 0,
                end: f || 0
            });
            a.r = c;
            return a
        },
        rect: function(a, b, c, d, e, f) {
            var e = ha(a) ? a.r : e
              , g = this.createElement("rect")
              , a = ha(a) ? a : a === r ? {} : {
                x: a,
                y: b,
                width: v(c, 0),
                height: v(d, 0)
            };
            if (f !== r)
                a.strokeWidth = f,
                a = g.crisp(a);
            if (e)
                a.r = e;
            g.rSetter = function(a) {
                Y(this.element, {
                    rx: a,
                    ry: a
                })
            }
            ;
            return g.attr(a)
        },
        setSize: function(a, b, c) {
            var d = this.alignedObjects
              , e = d.length;
            this.width = a;
            this.height = b;
            for (this.boxWrapper[q(c, !0) ? "animate" : "attr"]({
                width: a,
                height: b
            }); e--; )
                d[e].align()
        },
        g: function(a) {
            var b = this.createElement("g");
            return u(a) ? b.attr({
                "class": "highcharts-" + a
            }) : b
        },
        image: function(a, b, c, d, e) {
            var f = {
                preserveAspectRatio: $
            };
            arguments.length > 1 && s(f, {
                x: b,
                y: c,
                width: d,
                height: e
            });
            f = this.createElement("image").attr(f);
            f.element.setAttributeNS ? f.element.setAttributeNS("http://www.w3.org/1999/xlink", "href", a) : f.element.setAttribute("hc-svg-href", a);
            return f
        },
        symbol: function(a, b, c, d, e, f) {
            var g, h = this.symbols[a], h = h && h(t(b), t(c), d, e, f), i = /^url\((.*?)\)$/, j, k;
            if (h)
                g = this.path(h),
                s(g, {
                    symbolName: a,
                    x: b,
                    y: c,
                    width: d,
                    height: e
                }),
                f && s(g, f);
            else if (i.test(a))
                k = function(a, b) {
                    a.element && (a.attr({
                        width: b[0],
                        height: b[1]
                    }),
                    a.alignByTranslate || a.translate(t((d - b[0]) / 2), t((e - b[1]) / 2)))
                }
                ,
                j = a.match(i)[1],
                a = Tb[j] || f && f.width && f.height && [f.width, f.height],
                g = this.image(j).attr({
                    x: b,
                    y: c
                }),
                g.isImg = !0,
                a ? k(g, a) : (g.attr({
                    width: 0,
                    height: 0
                }),
                aa("img", {
                    onload: function() {
                        k(g, Tb[j] = [this.width, this.height])
                    },
                    src: j
                }));
            return g
        },
        symbols: {
            circle: function(a, b, c, d) {
                var e = 0.166 * c;
                return ["M", a + c / 2, b, "C", a + c + e, b, a + c + e, b + d, a + c / 2, b + d, "C", a - e, b + d, a - e, b, a + c / 2, b, "Z"]
            },
            square: function(a, b, c, d) {
                return ["M", a, b, "L", a + c, b, a + c, b + d, a, b + d, "Z"]
            },
            triangle: function(a, b, c, d) {
                return ["M", a + c / 2, b, "L", a + c, b + d, a, b + d, "Z"]
            },
            "triangle-down": function(a, b, c, d) {
                return ["M", a, b, "L", a + c, b, a + c / 2, b + d, "Z"]
            },
            diamond: function(a, b, c, d) {
                return ["M", a + c / 2, b, "L", a + c, b + d / 2, a + c / 2, b + d, a, b + d / 2, "Z"]
            },
            arc: function(a, b, c, d, e) {
                var f = e.start
                  , c = e.r || c || d
                  , g = e.end - 0.001
                  , d = e.innerR
                  , h = e.open
                  , i = fa(f)
                  , j = ka(f)
                  , k = fa(g)
                  , g = ka(g)
                  , e = e.end - f < ua ? 0 : 1;
                return ["M", a + c * i, b + c * j, "A", c, c, 0, e, 1, a + c * k, b + c * g, h ? "M" : "L", a + d * k, b + d * g, "A", d, d, 0, e, 0, a + d * i, b + d * j, h ? "" : "Z"]
            },
            callout: function(a, b, c, d, e) {
                var f = A(e && e.r || 0, c, d)
                  , g = f + 6
                  , h = e && e.anchorX
                  , i = e && e.anchorY
                  , e = t(e.strokeWidth || 0) % 2 / 2;
                a += e;
                b += e;
                e = ["M", a + f, b, "L", a + c - f, b, "C", a + c, b, a + c, b, a + c, b + f, "L", a + c, b + d - f, "C", a + c, b + d, a + c, b + d, a + c - f, b + d, "L", a + f, b + d, "C", a, b + d, a, b + d, a, b + d - f, "L", a, b + f, "C", a, b, a, b, a + f, b];
                h && h > c && i > b + g && i < b + d - g ? e.splice(13, 3, "L", a + c, i - 6, a + c + 6, i, a + c, i + 6, a + c, b + d - f) : h && h < 0 && i > b + g && i < b + d - g ? e.splice(33, 3, "L", a, i + 6, a - 6, i, a, i - 6, a, b + f) : i && i > d && h > a + g && h < a + c - g ? e.splice(23, 3, "L", h + 6, b + d, h, b + d + 6, h - 6, b + d, a + f, b + d) : i && i < 0 && h > a + g && h < a + c - g && e.splice(3, 3, "L", h - 6, b, h, b - 6, h + 6, b, c - f, b);
                return e
            }
        },
        clipRect: function(a, b, c, d) {
            var e = "highcharts-" + Fb++
              , f = this.createElement("clipPath").attr({
                id: e
            }).add(this.defs)
              , a = this.rect(a, b, c, d, 0).add(f);
            a.id = e;
            a.clipPath = f;
            return a
        },
        text: function(a, b, c, d) {
            var e = la || !ea && this.forExport
              , f = {};
            if (d && !this.forExport)
                return this.html(a, b, c);
            f.x = Math.round(b || 0);
            if (c)
                f.y = Math.round(c);
            if (a || a === 0)
                f.text = a;
            a = this.createElement("text").attr(f);
            e && a.css({
                position: "absolute"
            });
            if (!d)
                a.xSetter = function(a, b, c) {
                    var d = c.getElementsByTagName("tspan"), e, f = c.getAttribute(b), m;
                    for (m = 0; m < d.length; m++)
                        e = d[m],
                        e.getAttribute(b) === f && e.setAttribute(b, a);
                    c.setAttribute(b, a)
                }
                ;
            return a
        },
        fontMetrics: function(a, b) {
            a = a || this.style.fontSize;
            if (b && S.getComputedStyle)
                b = b.element || b,
                a = S.getComputedStyle(b, "").fontSize;
            var a = /px/.test(a) ? H(a) : /em/.test(a) ? parseFloat(a) * 12 : 12
              , c = a < 24 ? a + 4 : t(a * 1.2)
              , d = t(c * 0.8);
            return {
                h: c,
                b: d,
                f: a
            }
        },
        label: function(a, b, c, d, e, f, g, h, i) {
            function j() {
                var a, b;
                a = o.element.style;
                I = (v === void 0 || Hb === void 0 || n.styles.textAlign) && o.textStr && o.getBBox();
                n.width = (v || I.width || 0) + 2 * w + eb;
                n.height = (Hb || I.height || 0) + 2 * w;
                R = w + m.fontMetrics(a && a.fontSize, o).b;
                if (z) {
                    if (!x)
                        a = t(-q * w),
                        b = h ? -R : 0,
                        n.box = x = d ? m.symbol(d, a, b, n.width, n.height, C) : m.rect(a, b, n.width, n.height, 0, C[$b]),
                        x.attr("fill", $).add(n);
                    x.isImg || x.attr(s({
                        width: t(n.width),
                        height: t(n.height)
                    }, C));
                    C = null
                }
            }
            function k() {
                var a = n.styles, a = a && a.textAlign, b = eb + w * (1 - q), c;
                c = h ? 0 : R;
                if (u(v) && I && (a === "center" || a === "right"))
                    b += {
                        center: 0.5,
                        right: 1
                    }[a] * (v - I.width);
                if (b !== o.x || c !== o.y)
                    o.attr("x", b),
                    c !== r && o.attr("y", c);
                o.x = b;
                o.y = c
            }
            function l(a, b) {
                x ? x.attr(a, b) : C[a] = b
            }
            var m = this, n = m.g(i), o = m.text("", 0, 0, g).attr({
                zIndex: 1
            }), x, I, q = 0, w = 3, eb = 0, v, Hb, O, Ib, A = 0, C = {}, R, z;
            n.onAdd = function() {
                o.add(n);
                n.attr({
                    text: a || a === 0 ? a : "",
                    x: b,
                    y: c
                });
                x && u(e) && n.attr({
                    anchorX: e,
                    anchorY: f
                })
            }
            ;
            n.widthSetter = function(a) {
                v = a
            }
            ;
            n.heightSetter = function(a) {
                Hb = a
            }
            ;
            n.paddingSetter = function(a) {
                u(a) && a !== w && (w = a,
                k())
            }
            ;
            n.paddingLeftSetter = function(a) {
                u(a) && a !== eb && (eb = a,
                k())
            }
            ;
            n.alignSetter = function(a) {
                q = {
                    left: 0,
                    center: 0.5,
                    right: 1
                }[a]
            }
            ;
            n.textSetter = function(a) {
                a !== r && o.textSetter(a);
                j();
                k()
            }
            ;
            n["stroke-widthSetter"] = function(a, b) {
                a && (z = !0);
                A = a % 2 / 2;
                l(b, a)
            }
            ;
            n.strokeSetter = n.fillSetter = n.rSetter = function(a, b) {
                b === "fill" && a && (z = !0);
                l(b, a)
            }
            ;
            n.anchorXSetter = function(a, b) {
                e = a;
                l(b, a + A - O)
            }
            ;
            n.anchorYSetter = function(a, b) {
                f = a;
                l(b, a - Ib)
            }
            ;
            n.xSetter = function(a) {
                n.x = a;
                q && (a -= q * ((v || I.width) + w));
                O = t(a);
                n.attr("translateX", O)
            }
            ;
            n.ySetter = function(a) {
                Ib = n.y = t(a);
                n.attr("translateY", Ib)
            }
            ;
            var E = n.css;
            return s(n, {
                css: function(a) {
                    if (a) {
                        var b = {}
                          , a = y(a);
                        p(n.textProps, function(c) {
                            a[c] !== r && (b[c] = a[c],
                            delete a[c])
                        });
                        o.css(b)
                    }
                    return E.call(n, a)
                },
                getBBox: function() {
                    return {
                        width: I.width + 2 * w,
                        height: I.height + 2 * w,
                        x: I.x - w,
                        y: I.y - w
                    }
                },
                shadow: function(a) {
                    x && x.shadow(a);
                    return n
                },
                destroy: function() {
                    U(n.element, "mouseenter");
                    U(n.element, "mouseleave");
                    o && (o = o.destroy());
                    x && (x = x.destroy());
                    Z.prototype.destroy.call(n);
                    n = m = j = k = l = null
                }
            })
        }
    };
    Za = na;
    s(Z.prototype, {
        htmlCss: function(a) {
            var b = this.element;
            if (b = a && b.tagName === "SPAN" && a.width)
                delete a.width,
                this.textWidth = b,
                this.updateTransform();
            this.styles = s(this.styles, a);
            K(this.element, a);
            return this
        },
        htmlGetBBox: function() {
            var a = this.element
              , b = this.bBox;
            if (!b) {
                if (a.nodeName === "text")
                    a.style.position = "absolute";
                b = this.bBox = {
                    x: a.offsetLeft,
                    y: a.offsetTop,
                    width: a.offsetWidth,
                    height: a.offsetHeight
                }
            }
            return b
        },
        htmlUpdateTransform: function() {
            if (this.added) {
                var a = this.renderer
                  , b = this.element
                  , c = this.translateX || 0
                  , d = this.translateY || 0
                  , e = this.x || 0
                  , f = this.y || 0
                  , g = this.textAlign || "left"
                  , h = {
                    left: 0,
                    center: 0.5,
                    right: 1
                }[g]
                  , i = this.shadows;
                K(b, {
                    marginLeft: c,
                    marginTop: d
                });
                i && p(i, function(a) {
                    K(a, {
                        marginLeft: c + 1,
                        marginTop: d + 1
                    })
                });
                this.inverted && p(b.childNodes, function(c) {
                    a.invertChild(c, b)
                });
                if (b.tagName === "SPAN") {
                    var j = this.rotation, k, l = H(this.textWidth), m = [j, g, b.innerHTML, this.textWidth].join(",");
                    if (m !== this.cTT) {
                        k = a.fontMetrics(b.style.fontSize).b;
                        u(j) && this.setSpanRotation(j, h, k);
                        i = q(this.elemWidth, b.offsetWidth);
                        if (i > l && /[ \-]/.test(b.textContent || b.innerText))
                            K(b, {
                                width: l + "px",
                                display: "block",
                                whiteSpace: "normal"
                            }),
                            i = l;
                        this.getSpanCorrection(i, k, h, j, g)
                    }
                    K(b, {
                        left: e + (this.xCorr || 0) + "px",
                        top: f + (this.yCorr || 0) + "px"
                    });
                    if (Eb)
                        k = b.offsetHeight;
                    this.cTT = m
                }
            } else
                this.alignOnAdd = !0
        },
        setSpanRotation: function(a, b, c) {
            var d = {}
              , e = La ? "-ms-transform" : Eb ? "-webkit-transform" : cb ? "MozTransform" : Sb ? "-o-transform" : "";
            d[e] = d.transform = "rotate(" + a + "deg)";
            d[e + (cb ? "Origin" : "-origin")] = d.transformOrigin = b * 100 + "% " + c + "px";
            K(this.element, d)
        },
        getSpanCorrection: function(a, b, c) {
            this.xCorr = -a * c;
            this.yCorr = -b
        }
    });
    s(na.prototype, {
        html: function(a, b, c) {
            var d = this.createElement("span")
              , e = d.element
              , f = d.renderer;
            d.textSetter = function(a) {
                a !== e.innerHTML && delete this.bBox;
                e.innerHTML = this.textStr = a
            }
            ;
            d.xSetter = d.ySetter = d.alignSetter = d.rotationSetter = function(a, b) {
                b === "align" && (b = "textAlign");
                d[b] = a;
                d.htmlUpdateTransform()
            }
            ;
            d.attr({
                text: a,
                x: t(b),
                y: t(c)
            }).css({
                position: "absolute",
                whiteSpace: "nowrap",
                fontFamily: this.style.fontFamily,
                fontSize: this.style.fontSize
            });
            d.css = d.htmlCss;
            if (f.isSVG)
                d.add = function(a) {
                    var b, c = f.box.parentNode, j = [];
                    if (this.parentGroup = a) {
                        if (b = a.div,
                        !b) {
                            for (; a; )
                                j.push(a),
                                a = a.parentGroup;
                            p(j.reverse(), function(a) {
                                var d;
                                b = a.div = a.div || aa(Wa, {
                                    className: Y(a.element, "class")
                                }, {
                                    position: "absolute",
                                    left: (a.translateX || 0) + "px",
                                    top: (a.translateY || 0) + "px"
                                }, b || c);
                                d = b.style;
                                s(a, {
                                    translateXSetter: function(b, c) {
                                        d.left = b + "px";
                                        a[c] = b;
                                        a.doTransform = !0
                                    },
                                    translateYSetter: function(b, c) {
                                        d.top = b + "px";
                                        a[c] = b;
                                        a.doTransform = !0
                                    },
                                    visibilitySetter: function(a, b) {
                                        d[b] = a
                                    }
                                })
                            })
                        }
                    } else
                        b = c;
                    b.appendChild(e);
                    d.added = !0;
                    d.alignOnAdd && d.htmlUpdateTransform();
                    return d
                }
                ;
            return d
        }
    });
    var ib, ga;
    if (!ea && !la)
        ga = {
            init: function(a, b) {
                var c = ["<", b, ' filled="f" stroked="f"']
                  , d = ["position: ", "absolute", ";"]
                  , e = b === Wa;
                (b === "shape" || e) && d.push("left:0;top:0;width:1px;height:1px;");
                d.push("visibility: ", e ? "hidden" : "visible");
                c.push(' style="', d.join(""), '"/>');
                if (b)
                    c = e || b === "span" || b === "img" ? c.join("") : a.prepVML(c),
                    this.element = aa(c);
                this.renderer = a
            },
            add: function(a) {
                var b = this.renderer
                  , c = this.element
                  , d = b.box
                  , d = a ? a.element || a : d;
                a && a.inverted && b.invertChild(c, d);
                d.appendChild(c);
                this.added = !0;
                this.alignOnAdd && !this.deferUpdateTransform && this.updateTransform();
                if (this.onAdd)
                    this.onAdd();
                return this
            },
            updateTransform: Z.prototype.htmlUpdateTransform,
            setSpanRotation: function() {
                var a = this.rotation
                  , b = fa(a * Pa)
                  , c = ka(a * Pa);
                K(this.element, {
                    filter: a ? ["progid:DXImageTransform.Microsoft.Matrix(M11=", b, ", M12=", -c, ", M21=", c, ", M22=", b, ", sizingMethod='auto expand')"].join("") : $
                })
            },
            getSpanCorrection: function(a, b, c, d, e) {
                var f = d ? fa(d * Pa) : 1, g = d ? ka(d * Pa) : 0, h = q(this.elemHeight, this.element.offsetHeight), i;
                this.xCorr = f < 0 && -a;
                this.yCorr = g < 0 && -h;
                i = f * g < 0;
                this.xCorr += g * b * (i ? 1 - c : c);
                this.yCorr -= f * b * (d ? i ? c : 1 - c : 1);
                e && e !== "left" && (this.xCorr -= a * c * (f < 0 ? -1 : 1),
                d && (this.yCorr -= h * c * (g < 0 ? -1 : 1)),
                K(this.element, {
                    textAlign: e
                }))
            },
            pathToVML: function(a) {
                for (var b = a.length, c = []; b--; )
                    if (pa(a[b]))
                        c[b] = t(a[b] * 10) - 5;
                    else if (a[b] === "Z")
                        c[b] = "x";
                    else if (c[b] = a[b],
                    a.isArc && (a[b] === "wa" || a[b] === "at"))
                        c[b + 5] === c[b + 7] && (c[b + 7] += a[b + 7] > a[b + 5] ? 1 : -1),
                        c[b + 6] === c[b + 8] && (c[b + 8] += a[b + 8] > a[b + 6] ? 1 : -1);
                return c.join(" ") || "x"
            },
            clip: function(a) {
                var b = this, c;
                a ? (c = a.members,
                ta(c, b),
                c.push(b),
                b.destroyClip = function() {
                    ta(c, b)
                }
                ,
                a = a.getCSS(b)) : (b.destroyClip && b.destroyClip(),
                a = {
                    clip: ob ? "inherit" : "rect(auto)"
                });
                return b.css(a)
            },
            css: Z.prototype.htmlCss,
            safeRemoveChild: function(a) {
                a.parentNode && Va(a)
            },
            destroy: function() {
                this.destroyClip && this.destroyClip();
                return Z.prototype.destroy.apply(this)
            },
            on: function(a, b) {
                this.element["on" + a] = function() {
                    var a = S.event;
                    a.target = a.srcElement;
                    b(a)
                }
                ;
                return this
            },
            cutOffPath: function(a, b) {
                var c, a = a.split(/[ ,]/);
                c = a.length;
                if (c === 9 || c === 11)
                    a[c - 4] = a[c - 2] = H(a[c - 2]) - 10 * b;
                return a.join(" ")
            },
            shadow: function(a, b, c) {
                var d = [], e, f = this.element, g = this.renderer, h, i = f.style, j, k = f.path, l, m, n, o;
                k && typeof k.value !== "string" && (k = "x");
                m = k;
                if (a) {
                    n = q(a.width, 3);
                    o = (a.opacity || 0.15) / n;
                    for (e = 1; e <= 3; e++) {
                        l = n * 2 + 1 - 2 * e;
                        c && (m = this.cutOffPath(k.value, l + 0.5));
                        j = ['<shape isShadow="true" strokeweight="', l, '" filled="false" path="', m, '" coordsize="10 10" style="', f.style.cssText, '" />'];
                        h = aa(g.prepVML(j), null, {
                            left: H(i.left) + q(a.offsetX, 1),
                            top: H(i.top) + q(a.offsetY, 1)
                        });
                        if (c)
                            h.cutOff = l + 1;
                        j = ['<stroke color="', a.color || "black", '" opacity="', o * e, '"/>'];
                        aa(g.prepVML(j), null, null, h);
                        b ? b.element.appendChild(h) : f.parentNode.insertBefore(h, f);
                        d.push(h)
                    }
                    this.shadows = d
                }
                return this
            },
            updateShadows: ra,
            setAttr: function(a, b) {
                ob ? this.element[a] = b : this.element.setAttribute(a, b)
            },
            classSetter: function(a) {
                this.element.className = a
            },
            dashstyleSetter: function(a, b, c) {
                (c.getElementsByTagName("stroke")[0] || aa(this.renderer.prepVML(["<stroke/>"]), null, null, c))[b] = a || "solid";
                this[b] = a
            },
            dSetter: function(a, b, c) {
                var d = this.shadows
                  , a = a || [];
                this.d = a.join && a.join(" ");
                c.path = a = this.pathToVML(a);
                if (d)
                    for (c = d.length; c--; )
                        d[c].path = d[c].cutOff ? this.cutOffPath(a, d[c].cutOff) : a;
                this.setAttr(b, a)
            },
            fillSetter: function(a, b, c) {
                var d = c.nodeName;
                if (d === "SPAN")
                    c.style.color = a;
                else if (d !== "IMG")
                    c.filled = a !== $,
                    this.setAttr("fillcolor", this.renderer.color(a, c, b, this))
            },
            opacitySetter: ra,
            rotationSetter: function(a, b, c) {
                c = c.style;
                this[b] = c[b] = a;
                c.left = -t(ka(a * Pa) + 1) + "px";
                c.top = t(fa(a * Pa)) + "px"
            },
            strokeSetter: function(a, b, c) {
                this.setAttr("strokecolor", this.renderer.color(a, c, b))
            },
            "stroke-widthSetter": function(a, b, c) {
                c.stroked = !!a;
                this[b] = a;
                pa(a) && (a += "px");
                this.setAttr("strokeweight", a)
            },
            titleSetter: function(a, b) {
                this.setAttr(b, a)
            },
            visibilitySetter: function(a, b, c) {
                a === "inherit" && (a = "visible");
                this.shadows && p(this.shadows, function(c) {
                    c.style[b] = a
                });
                c.nodeName === "DIV" && (a = a === "hidden" ? "-999em" : 0,
                ob || (c.style[b] = a ? "visible" : "hidden"),
                b = "top");
                c.style[b] = a
            },
            xSetter: function(a, b, c) {
                this[b] = a;
                b === "x" ? b = "left" : b === "y" && (b = "top");
                this.updateClipping ? (this[b] = a,
                this.updateClipping()) : c.style[b] = a
            },
            zIndexSetter: function(a, b, c) {
                c.style[b] = a
            }
        },
        N.VMLElement = ga = ia(Z, ga),
        ga.prototype.ySetter = ga.prototype.widthSetter = ga.prototype.heightSetter = ga.prototype.xSetter,
        ga = {
            Element: ga,
            isIE8: Ga.indexOf("MSIE 8.0") > -1,
            init: function(a, b, c, d) {
                var e;
                this.alignedObjects = [];
                d = this.createElement(Wa).css(s(this.getStyle(d), {
                    position: "relative"
                }));
                e = d.element;
                a.appendChild(d.element);
                this.isVML = !0;
                this.box = e;
                this.boxWrapper = d;
                this.cache = {};
                this.setSize(b, c, !1);
                if (!E.namespaces.hcv) {
                    E.namespaces.add("hcv", "urn:schemas-microsoft-com:vml");
                    try {
                        E.createStyleSheet().cssText = "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "
                    } catch (f) {
                        E.styleSheets[0].cssText += "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "
                    }
                }
            },
            isHidden: function() {
                return !this.box.offsetWidth
            },
            clipRect: function(a, b, c, d) {
                var e = this.createElement()
                  , f = ha(a);
                return s(e, {
                    members: [],
                    left: (f ? a.x : a) + 1,
                    top: (f ? a.y : b) + 1,
                    width: (f ? a.width : c) - 1,
                    height: (f ? a.height : d) - 1,
                    getCSS: function(a) {
                        var b = a.element
                          , c = b.nodeName
                          , a = a.inverted
                          , d = this.top - (c === "shape" ? b.offsetTop : 0)
                          , e = this.left
                          , b = e + this.width
                          , f = d + this.height
                          , d = {
                            clip: "rect(" + t(a ? e : d) + "px," + t(a ? f : b) + "px," + t(a ? b : f) + "px," + t(a ? d : e) + "px)"
                        };
                        !a && ob && c === "DIV" && s(d, {
                            width: b + "px",
                            height: f + "px"
                        });
                        return d
                    },
                    updateClipping: function() {
                        p(e.members, function(a) {
                            a.element && a.css(e.getCSS(a))
                        })
                    }
                })
            },
            color: function(a, b, c, d) {
                var e = this, f, g = /^rgba/, h, i, j = $;
                a && a.linearGradient ? i = "gradient" : a && a.radialGradient && (i = "pattern");
                if (i) {
                    var k, l, m = a.linearGradient || a.radialGradient, n, o, x, I, q, w = "", a = a.stops, r, t = [], v = function() {
                        h = ['<fill colors="' + t.join(",") + '" opacity="', x, '" o:opacity2="', o, '" type="', i, '" ', w, 'focus="100%" method="any" />'];
                        aa(e.prepVML(h), null, null, b)
                    };
                    n = a[0];
                    r = a[a.length - 1];
                    n[0] > 0 && a.unshift([0, n[1]]);
                    r[0] < 1 && a.push([1, r[1]]);
                    p(a, function(a, b) {
                        g.test(a[1]) ? (f = Ia(a[1]),
                        k = f.get("rgb"),
                        l = f.get("a")) : (k = a[1],
                        l = 1);
                        t.push(a[0] * 100 + "% " + k);
                        b ? (x = l,
                        I = k) : (o = l,
                        q = k)
                    });
                    if (c === "fill")
                        if (i === "gradient")
                            c = m.x1 || m[0] || 0,
                            a = m.y1 || m[1] || 0,
                            n = m.x2 || m[2] || 0,
                            m = m.y2 || m[3] || 0,
                            w = 'angle="' + (90 - X.atan((m - a) / (n - c)) * 180 / ua) + '"',
                            v();
                        else {
                            var j = m.r, u = j * 2, s = j * 2, y = m.cx, C = m.cy, R = b.radialReference, A, j = function() {
                                R && (A = d.getBBox(),
                                y += (R[0] - A.x) / A.width - 0.5,
                                C += (R[1] - A.y) / A.height - 0.5,
                                u *= R[2] / A.width,
                                s *= R[2] / A.height);
                                w = 'src="' + F.global.VMLRadialGradientURL + '" size="' + u + "," + s + '" origin="0.5,0.5" position="' + y + "," + C + '" color2="' + q + '" ';
                                v()
                            };
                            d.added ? j() : d.onAdd = j;
                            j = I
                        }
                    else
                        j = k
                } else if (g.test(a) && b.tagName !== "IMG")
                    f = Ia(a),
                    h = ["<", c, ' opacity="', f.get("a"), '"/>'],
                    aa(this.prepVML(h), null, null, b),
                    j = f.get("rgb");
                else {
                    j = b.getElementsByTagName(c);
                    if (j.length)
                        j[0].opacity = 1,
                        j[0].type = "solid";
                    j = a
                }
                return j
            },
            prepVML: function(a) {
                var b = this.isIE8
                  , a = a.join("");
                b ? (a = a.replace("/>", ' xmlns="urn:schemas-microsoft-com:vml" />'),
                a = a.indexOf('style="') === -1 ? a.replace("/>", ' style="display:inline-block;behavior:url(#default#VML);" />') : a.replace('style="', 'style="display:inline-block;behavior:url(#default#VML);')) : a = a.replace("<", "<hcv:");
                return a
            },
            text: na.prototype.html,
            path: function(a) {
                var b = {
                    coordsize: "10 10"
                };
                Ja(a) ? b.d = a : ha(a) && s(b, a);
                return this.createElement("shape").attr(b)
            },
            circle: function(a, b, c) {
                var d = this.symbol("circle");
                if (ha(a))
                    c = a.r,
                    b = a.y,
                    a = a.x;
                d.isCircle = !0;
                d.r = c;
                return d.attr({
                    x: a,
                    y: b
                })
            },
            g: function(a) {
                var b;
                a && (b = {
                    className: "highcharts-" + a,
                    "class": "highcharts-" + a
                });
                return this.createElement(Wa).attr(b)
            },
            image: function(a, b, c, d, e) {
                var f = this.createElement("img").attr({
                    src: a
                });
                arguments.length > 1 && f.attr({
                    x: b,
                    y: c,
                    width: d,
                    height: e
                });
                return f
            },
            createElement: function(a) {
                return a === "rect" ? this.symbol(a) : na.prototype.createElement.call(this, a)
            },
            invertChild: function(a, b) {
                var c = this
                  , d = b.style
                  , e = a.tagName === "IMG" && a.style;
                K(a, {
                    flip: "x",
                    left: H(d.width) - (e ? H(e.top) : 1),
                    top: H(d.height) - (e ? H(e.left) : 1),
                    rotation: -90
                });
                p(a.childNodes, function(b) {
                    c.invertChild(b, a)
                })
            },
            symbols: {
                arc: function(a, b, c, d, e) {
                    var f = e.start
                      , g = e.end
                      , h = e.r || c || d
                      , c = e.innerR
                      , d = fa(f)
                      , i = ka(f)
                      , j = fa(g)
                      , k = ka(g);
                    if (g - f === 0)
                        return ["x"];
                    f = ["wa", a - h, b - h, a + h, b + h, a + h * d, b + h * i, a + h * j, b + h * k];
                    e.open && !c && f.push("e", "M", a, b);
                    f.push("at", a - c, b - c, a + c, b + c, a + c * j, b + c * k, a + c * d, b + c * i, "x", "e");
                    f.isArc = !0;
                    return f
                },
                circle: function(a, b, c, d, e) {
                    e && (c = d = 2 * e.r);
                    e && e.isCircle && (a -= c / 2,
                    b -= d / 2);
                    return ["wa", a, b, a + c, b + d, a + c, b + d / 2, a + c, b + d / 2, "e"]
                },
                rect: function(a, b, c, d, e) {
                    return na.prototype.symbols[!u(e) || !e.r ? "square" : "callout"].call(0, a, b, c, d, e)
                }
            }
        },
        N.VMLRenderer = ib = function() {
            this.init.apply(this, arguments)
        }
        ,
        ib.prototype = y(na.prototype, ga),
        Za = ib;
    na.prototype.measureSpanWidth = function(a, b) {
        var c = E.createElement("span"), d;
        d = E.createTextNode(a);
        c.appendChild(d);
        K(c, b);
        this.box.appendChild(c);
        d = c.offsetWidth;
        Va(c);
        return d
    }
    ;
    var Vb;
    if (la)
        N.CanVGRenderer = ga = function() {
            Ha = "http://www.w3.org/1999/xhtml"
        }
        ,
        ga.prototype.symbols = {},
        Vb = function() {
            function a() {
                var a = b.length, d;
                for (d = 0; d < a; d++)
                    b[d]();
                b = []
            }
            var b = [];
            return {
                push: function(c, d) {
                    b.length === 0 && ac(d, a);
                    b.push(c)
                }
            }
        }(),
        Za = ga;
    bb.prototype = {
        addLabel: function() {
            var a = this.axis, b = a.options, c = a.chart, d = a.horiz, e = a.categories, f = a.names, g = this.pos, h = b.labels, i = h.rotation, j = a.tickPositions, d = d && e && !h.step && !h.staggerLines && !h.rotation && c.plotWidth / j.length || !d && (c.margin[3] || c.chartWidth * 0.33), k = g === j[0], l = g === j[j.length - 1], m, f = e ? q(e[g], f[g], g) : g, e = this.label, n = j.info;
            a.isDatetimeAxis && n && (m = b.dateTimeLabelFormats[n.higherRanks[g] || n.unitName]);
            this.isFirst = k;
            this.isLast = l;
            b = a.labelFormatter.call({
                axis: a,
                chart: c,
                isFirst: k,
                isLast: l,
                dateTimeLabelFormat: m,
                value: a.isLog ? ja(sa(f)) : f
            });
            g = d && {
                width: v(1, t(d - 2 * (h.padding || 10))) + "px"
            };
            if (u(e))
                e && e.attr({
                    text: b
                }).css(g);
            else {
                m = {
                    align: a.labelAlign
                };
                if (pa(i))
                    m.rotation = i;
                if (d && h.ellipsis)
                    g.HcHeight = a.len / j.length;
                this.label = e = u(b) && h.enabled ? c.renderer.text(b, 0, 0, h.useHTML).attr(m).css(s(g, h.style)).add(a.labelGroup) : null;
                a.tickBaseline = c.renderer.fontMetrics(h.style.fontSize, e).b;
                i && a.side === 2 && (a.tickBaseline *= fa(i * Pa))
            }
            this.yOffset = e ? q(h.y, a.tickBaseline + (a.side === 2 ? 8 : -(e.getBBox().height / 2))) : 0
        },
        getLabelSize: function() {
            var a = this.label
              , b = this.axis;
            return a ? a.getBBox()[b.horiz ? "height" : "width"] : 0
        },
        getLabelSides: function() {
            var a = this.label.getBBox()
              , b = this.axis
              , c = b.horiz
              , d = b.options.labels
              , a = c ? a.width : a.height
              , b = c ? d.x - a * {
                left: 0,
                center: 0.5,
                right: 1
            }[b.labelAlign] : 0;
            return [b, c ? a + b : a]
        },
        handleOverflow: function(a, b) {
            var c = !0, d = this.axis, e = this.isFirst, f = this.isLast, g = d.horiz ? b.x : b.y, h = d.reversed, i = d.tickPositions, j = this.getLabelSides(), k = j[0], j = j[1], l, m, n, o = this.label.line;
            l = o || 0;
            m = d.labelEdge;
            n = d.justifyLabels && (e || f);
            m[l] === r || g + k > m[l] ? m[l] = g + j : n || (c = !1);
            if (n) {
                l = (m = d.justifyToPlot) ? d.pos : 0;
                m = m ? l + d.len : d.chart.chartWidth;
                do
                    a += e ? 1 : -1,
                    n = d.ticks[i[a]];
                while (i[a] && (!n || !n.label || n.label.line !== o));d = n && n.label.xy && n.label.xy.x + n.getLabelSides()[e ? 0 : 1];
                e && !h || f && h ? g + k < l && (g = l - k,
                n && g + j > d && (c = !1)) : g + j > m && (g = m - j,
                n && g + k < d && (c = !1));
                b.x = g
            }
            return c
        },
        getPosition: function(a, b, c, d) {
            var e = this.axis
              , f = e.chart
              , g = d && f.oldChartHeight || f.chartHeight;
            return {
                x: a ? e.translate(b + c, null, null, d) + e.transB : e.left + e.offset + (e.opposite ? (d && f.oldChartWidth || f.chartWidth) - e.right - e.left : 0),
                y: a ? g - e.bottom + e.offset - (e.opposite ? e.height : 0) : g - e.translate(b + c, null, null, d) - e.transB
            }
        },
        getLabelPosition: function(a, b, c, d, e, f, g, h) {
            var i = this.axis
              , j = i.transA
              , k = i.reversed
              , l = i.staggerLines
              , a = a + e.x - (f && d ? f * j * (k ? -1 : 1) : 0)
              , b = b + this.yOffset - (f && !d ? f * j * (k ? 1 : -1) : 0);
            if (l)
                c.line = g / (h || 1) % l,
                b += c.line * (i.labelOffset / l);
            return {
                x: a,
                y: b
            }
        },
        getMarkPath: function(a, b, c, d, e, f) {
            return f.crispLine(["M", a, b, "L", a + (e ? 0 : -c), b + (e ? c : 0)], d)
        },
        render: function(a, b, c) {
            var d = this.axis
              , e = d.options
              , f = d.chart.renderer
              , g = d.horiz
              , h = this.type
              , i = this.label
              , j = this.pos
              , k = e.labels
              , l = this.gridLine
              , m = h ? h + "Grid" : "grid"
              , n = h ? h + "Tick" : "tick"
              , o = e[m + "LineWidth"]
              , x = e[m + "LineColor"]
              , I = e[m + "LineDashStyle"]
              , p = e[n + "Length"]
              , m = e[n + "Width"] || 0
              , w = e[n + "Color"]
              , eb = e[n + "Position"]
              , n = this.mark
              , t = k.step
              , v = !0
              , u = d.tickmarkOffset
              , s = this.getPosition(g, j, u, b)
              , y = s.x
              , s = s.y
              , C = g && y === d.pos + d.len || !g && s === d.pos ? -1 : 1
              , c = q(c, 1);
            this.isActive = !0;
            if (o) {
                j = d.getPlotLinePath(j + u, o * C, b, !0);
                if (l === r) {
                    l = {
                        stroke: x,
                        "stroke-width": o
                    };
                    if (I)
                        l.dashstyle = I;
                    if (!h)
                        l.zIndex = 1;
                    if (b)
                        l.opacity = 0;
                    this.gridLine = l = o ? f.path(j).attr(l).add(d.gridGroup) : null
                }
                if (!b && l && j)
                    l[this.isNew ? "attr" : "animate"]({
                        d: j,
                        opacity: c
                    })
            }
            if (m && p)
                eb === "inside" && (p = -p),
                d.opposite && (p = -p),
                h = this.getMarkPath(y, s, p, m * C, g, f),
                n ? n.animate({
                    d: h,
                    opacity: c
                }) : this.mark = f.path(h).attr({
                    stroke: w,
                    "stroke-width": m,
                    opacity: c
                }).add(d.axisGroup);
            if (i && !isNaN(y))
                i.xy = s = this.getLabelPosition(y, s, i, g, k, u, a, t),
                this.isFirst && !this.isLast && !q(e.showFirstLabel, 1) || this.isLast && !this.isFirst && !q(e.showLastLabel, 1) ? v = !1 : !d.isRadial && !k.step && !k.rotation && !b && c !== 0 && (v = this.handleOverflow(a, s)),
                t && a % t && (v = !1),
                v && !isNaN(s.y) ? (s.opacity = c,
                i[this.isNew ? "attr" : "animate"](s),
                this.isNew = !1) : i.attr("y", -9999)
        },
        destroy: function() {
            Na(this, this.axis)
        }
    };
    N.PlotLineOrBand = function(a, b) {
        this.axis = a;
        if (b)
            this.options = b,
            this.id = b.id
    }
    ;
    N.PlotLineOrBand.prototype = {
        render: function() {
            var a = this, b = a.axis, c = b.horiz, d = (b.pointRange || 0) / 2, e = a.options, f = e.label, g = a.label, h = e.width, i = e.to, j = e.from, k = u(j) && u(i), l = e.value, m = e.dashStyle, n = a.svgElem, o = [], x, I = e.color, q = e.zIndex, p = e.events, r = {}, t = b.chart.renderer;
            b.isLog && (j = Ka(j),
            i = Ka(i),
            l = Ka(l));
            if (h) {
                if (o = b.getPlotLinePath(l, h),
                r = {
                    stroke: I,
                    "stroke-width": h
                },
                m)
                    r.dashstyle = m
            } else if (k) {
                j = v(j, b.min - d);
                i = A(i, b.max + d);
                o = b.getPlotBandPath(j, i, e);
                if (I)
                    r.fill = I;
                if (e.borderWidth)
                    r.stroke = e.borderColor,
                    r["stroke-width"] = e.borderWidth
            } else
                return;
            if (u(q))
                r.zIndex = q;
            if (n)
                if (o)
                    n.animate({
                        d: o
                    }, null, n.onGetPath);
                else {
                    if (n.hide(),
                    n.onGetPath = function() {
                        n.show()
                    }
                    ,
                    g)
                        a.label = g = g.destroy()
                }
            else if (o && o.length && (a.svgElem = n = t.path(o).attr(r).add(),
            p))
                for (x in d = function(b) {
                    n.on(b, function(c) {
                        p[b].apply(a, [c])
                    })
                }
                ,
                p)
                    d(x);
            if (f && u(f.text) && o && o.length && b.width > 0 && b.height > 0) {
                f = y({
                    align: c && k && "center",
                    x: c ? !k && 4 : 10,
                    verticalAlign: !c && k && "middle",
                    y: c ? k ? 16 : 10 : k ? 6 : -4,
                    rotation: c && !k && 90
                }, f);
                if (!g) {
                    r = {
                        align: f.textAlign || f.align,
                        rotation: f.rotation
                    };
                    if (u(q))
                        r.zIndex = q;
                    a.label = g = t.text(f.text, 0, 0, f.useHTML).attr(r).css(f.style).add()
                }
                b = [o[1], o[4], k ? o[6] : o[1]];
                k = [o[2], o[5], k ? o[7] : o[2]];
                o = Ua(b);
                c = Ua(k);
                g.align(f, !1, {
                    x: o,
                    y: c,
                    width: Ea(b) - o,
                    height: Ea(k) - c
                });
                g.show()
            } else
                g && g.hide();
            return a
        },
        destroy: function() {
            ta(this.axis.plotLinesAndBands, this);
            delete this.axis;
            Na(this)
        }
    };
    D.prototype = {
        defaultOptions: {
            dateTimeLabelFormats: {
                millisecond: "%H:%M:%S.%L",
                second: "%H:%M:%S",
                minute: "%H:%M",
                hour: "%H:%M",
                day: "%e. %b",
                week: "%e. %b",
                month: "%b '%y",
                year: "%Y"
            },
            endOnTick: !1,
            gridLineColor: "#C0C0C0",
            labels: T,
            lineColor: "#C0D0E0",
            lineWidth: 1,
            minPadding: 0.01,
            maxPadding: 0.01,
            minorGridLineColor: "#E0E0E0",
            minorGridLineWidth: 1,
            minorTickColor: "#A0A0A0",
            minorTickLength: 2,
            minorTickPosition: "outside",
            startOfWeek: 1,
            startOnTick: !1,
            tickColor: "#C0D0E0",
            tickLength: 10,
            tickmarkPlacement: "between",
            tickPixelInterval: 100,
            tickPosition: "outside",
            tickWidth: 1,
            title: {
                align: "middle",
                style: {
                    color: "#707070"
                }
            },
            type: "linear"
        },
        defaultYAxisOptions: {
            endOnTick: !0,
            gridLineWidth: 1,
            tickPixelInterval: 72,
            showLastLabel: !0,
            labels: {
                x: -8,
                y: 3
            },
            lineWidth: 0,
            maxPadding: 0.05,
            minPadding: 0.05,
            startOnTick: !0,
            tickWidth: 0,
            title: {
                rotation: 270,
                text: "Values"
            },
            stackLabels: {
                enabled: !1,
                formatter: function() {
                    return Da(this.total, -1)
                },
                style: T.style
            }
        },
        defaultLeftAxisOptions: {
            labels: {
                x: -15,
                y: null
            },
            title: {
                rotation: 270
            }
        },
        defaultRightAxisOptions: {
            labels: {
                x: 15,
                y: null
            },
            title: {
                rotation: 90
            }
        },
        defaultBottomAxisOptions: {
            labels: {
                x: 0,
                y: null
            },
            title: {
                rotation: 0
            }
        },
        defaultTopAxisOptions: {
            labels: {
                x: 0,
                y: -15
            },
            title: {
                rotation: 0
            }
        },
        init: function(a, b) {
            var c = b.isX;
            this.horiz = a.inverted ? !c : c;
            this.coll = (this.isXAxis = c) ? "xAxis" : "yAxis";
            this.opposite = b.opposite;
            this.side = b.side || (this.horiz ? this.opposite ? 0 : 2 : this.opposite ? 1 : 3);
            this.setOptions(b);
            var d = this.options
              , e = d.type;
            this.labelFormatter = d.labels.formatter || this.defaultLabelFormatter;
            this.userOptions = b;
            this.minPixelPadding = 0;
            this.chart = a;
            this.reversed = d.reversed;
            this.zoomEnabled = d.zoomEnabled !== !1;
            this.categories = d.categories || e === "category";
            this.names = [];
            this.isLog = e === "logarithmic";
            this.isDatetimeAxis = e === "datetime";
            this.isLinked = u(d.linkedTo);
            this.tickmarkOffset = this.categories && d.tickmarkPlacement === "between" && q(d.tickInterval, 1) === 1 ? 0.5 : 0;
            this.ticks = {};
            this.labelEdge = [];
            this.minorTicks = {};
            this.plotLinesAndBands = [];
            this.alternateBands = {};
            this.len = 0;
            this.minRange = this.userMinRange = d.minRange || d.maxZoom;
            this.range = d.range;
            this.offset = d.offset || 0;
            this.stacks = {};
            this.oldStacks = {};
            this.min = this.max = null;
            this.crosshair = q(d.crosshair, qa(a.options.tooltip.crosshairs)[c ? 0 : 1], !1);
            var f, d = this.options.events;
            Qa(this, a.axes) === -1 && (c && !this.isColorAxis ? a.axes.splice(a.xAxis.length, 0, this) : a.axes.push(this),
            a[this.coll].push(this));
            this.series = this.series || [];
            if (a.inverted && c && this.reversed === r)
                this.reversed = !0;
            this.removePlotLine = this.removePlotBand = this.removePlotBandOrLine;
            for (f in d)
                z(this, f, d[f]);
            if (this.isLog)
                this.val2lin = Ka,
                this.lin2val = sa
        },
        setOptions: function(a) {
            this.options = y(this.defaultOptions, this.isXAxis ? {} : this.defaultYAxisOptions, [this.defaultTopAxisOptions, this.defaultRightAxisOptions, this.defaultBottomAxisOptions, this.defaultLeftAxisOptions][this.side], y(F[this.coll], a))
        },
        defaultLabelFormatter: function() {
            var a = this.axis, b = this.value, c = a.categories, d = this.dateTimeLabelFormat, e = F.lang.numericSymbols, f = e && e.length, g, h = a.options.labels.format, a = a.isLog ? b : a.tickInterval;
            if (h)
                g = Ma(h, this);
            else if (c)
                g = b;
            else if (d)
                g = xa(d, b);
            else if (f && a >= 1E3)
                for (; f-- && g === r; )
                    c = Math.pow(1E3, f + 1),
                    a >= c && e[f] !== null && (g = Da(b / c, -1) + e[f]);
            g === r && (g = P(b) >= 1E4 ? Da(b, 0) : Da(b, -1, r, ""));
            return g
        },
        getSeriesExtremes: function() {
            var a = this
              , b = a.chart;
            a.hasVisibleSeries = !1;
            a.dataMin = a.dataMax = a.ignoreMinPadding = a.ignoreMaxPadding = null;
            a.buildStacks && a.buildStacks();
            p(a.series, function(c) {
                if (c.visible || !b.options.chart.ignoreHiddenSeries) {
                    var d;
                    d = c.options.threshold;
                    var e;
                    a.hasVisibleSeries = !0;
                    a.isLog && d <= 0 && (d = null);
                    if (a.isXAxis) {
                        if (d = c.xData,
                        d.length)
                            a.dataMin = A(q(a.dataMin, d[0]), Ua(d)),
                            a.dataMax = v(q(a.dataMax, d[0]), Ea(d))
                    } else {
                        c.getExtremes();
                        e = c.dataMax;
                        c = c.dataMin;
                        if (u(c) && u(e))
                            a.dataMin = A(q(a.dataMin, c), c),
                            a.dataMax = v(q(a.dataMax, e), e);
                        if (u(d))
                            if (a.dataMin >= d)
                                a.dataMin = d,
                                a.ignoreMinPadding = !0;
                            else if (a.dataMax < d)
                                a.dataMax = d,
                                a.ignoreMaxPadding = !0
                    }
                }
            })
        },
        translate: function(a, b, c, d, e, f) {
            var g = 1
              , h = 0
              , i = d ? this.oldTransA : this.transA
              , d = d ? this.oldMin : this.min
              , j = this.minPixelPadding
              , e = (this.options.ordinal || this.isLog && e) && this.lin2val;
            if (!i)
                i = this.transA;
            if (c)
                g *= -1,
                h = this.len;
            this.reversed && (g *= -1,
            h -= g * (this.sector || this.len));
            b ? (a = a * g + h,
            a -= j,
            a = a / i + d,
            e && (a = this.lin2val(a))) : (e && (a = this.val2lin(a)),
            f === "between" && (f = 0.5),
            a = g * (a - d) * i + h + g * j + (pa(f) ? i * f * this.pointRange : 0));
            return a
        },
        toPixels: function(a, b) {
            return this.translate(a, !1, !this.horiz, null, !0) + (b ? 0 : this.pos)
        },
        toValue: function(a, b) {
            return this.translate(a - (b ? 0 : this.pos), !0, !this.horiz, null, !0)
        },
        getPlotLinePath: function(a, b, c, d, e) {
            var f = this.chart, g = this.left, h = this.top, i, j, k = c && f.oldChartHeight || f.chartHeight, l = c && f.oldChartWidth || f.chartWidth, m;
            i = this.transB;
            e = q(e, this.translate(a, null, null, c));
            a = c = t(e + i);
            i = j = t(k - e - i);
            if (isNaN(e))
                m = !0;
            else if (this.horiz) {
                if (i = h,
                j = k - this.bottom,
                a < g || a > g + this.width)
                    m = !0
            } else if (a = g,
            c = l - this.right,
            i < h || i > h + this.height)
                m = !0;
            return m && !d ? null : f.renderer.crispLine(["M", a, i, "L", c, j], b || 1)
        },
        getLinearTickPositions: function(a, b, c) {
            var d, e = ja(V(b / a) * a), f = ja(Ya(c / a) * a), g = [];
            if (b === c && pa(b))
                return [b];
            for (b = e; b <= f; ) {
                g.push(b);
                b = ja(b + a);
                if (b === d)
                    break;
                d = b
            }
            return g
        },
        getMinorTickPositions: function() {
            var a = this.options, b = this.tickPositions, c = this.minorTickInterval, d = [], e;
            if (this.isLog) {
                e = b.length;
                for (a = 1; a < e; a++)
                    d = d.concat(this.getLogTickPositions(c, b[a - 1], b[a], !0))
            } else if (this.isDatetimeAxis && a.minorTickInterval === "auto")
                d = d.concat(this.getTimeTicks(this.normalizeTimeTickInterval(c), this.min, this.max, a.startOfWeek)),
                d[0] < this.min && d.shift();
            else
                for (b = this.min + (b[0] - this.min) % c; b <= this.max; b += c)
                    d.push(b);
            return d
        },
        adjustForMinRange: function() {
            var a = this.options, b = this.min, c = this.max, d, e = this.dataMax - this.dataMin >= this.minRange, f, g, h, i, j;
            if (this.isXAxis && this.minRange === r && !this.isLog)
                u(a.min) || u(a.max) ? this.minRange = null : (p(this.series, function(a) {
                    i = a.xData;
                    for (g = j = a.xIncrement ? 1 : i.length - 1; g > 0; g--)
                        if (h = i[g] - i[g - 1],
                        f === r || h < f)
                            f = h
                }),
                this.minRange = A(f * 5, this.dataMax - this.dataMin));
            if (c - b < this.minRange) {
                var k = this.minRange;
                d = (k - c + b) / 2;
                d = [b - d, q(a.min, b - d)];
                if (e)
                    d[2] = this.dataMin;
                b = Ea(d);
                c = [b + k, q(a.max, b + k)];
                if (e)
                    c[2] = this.dataMax;
                c = Ua(c);
                c - b < k && (d[0] = c - k,
                d[1] = q(a.min, c - k),
                b = Ea(d))
            }
            this.min = b;
            this.max = c
        },
        setAxisTranslation: function(a) {
            var b = this, c = b.max - b.min, d = b.axisPointRange || 0, e, f = 0, g = 0, h = b.linkedParent, i = !!b.categories, j = b.transA;
            if (b.isXAxis || i || d)
                h ? (f = h.minPointOffset,
                g = h.pointRangePadding) : p(b.series, function(a) {
                    var h = i ? 1 : b.isXAxis ? a.pointRange : b.axisPointRange || 0
                      , j = a.options.pointPlacement
                      , n = a.closestPointRange;
                    h > c && (h = 0);
                    d = v(d, h);
                    f = v(f, Sa(j) ? 0 : h / 2);
                    g = v(g, j === "on" ? 0 : h);
                    !a.noSharedTooltip && u(n) && (e = u(e) ? A(e, n) : n)
                }),
                h = b.ordinalSlope && e ? b.ordinalSlope / e : 1,
                b.minPointOffset = f *= h,
                b.pointRangePadding = g *= h,
                b.pointRange = A(d, c),
                b.closestPointRange = e;
            if (a)
                b.oldTransA = j;
            b.translationSlope = b.transA = j = b.len / (c + g || 1);
            b.transB = b.horiz ? b.left : b.bottom;
            b.minPixelPadding = j * f
        },
        setTickPositions: function(a) {
            var b = this, c = b.chart, d = b.options, e = d.startOnTick, f = d.endOnTick, g = b.isLog, h = b.isDatetimeAxis, i = b.isXAxis, j = b.isLinked, k = b.options.tickPositioner, l = d.maxPadding, m = d.minPadding, n = d.tickInterval, o = d.minTickInterval, x = d.tickPixelInterval, I, oa = b.categories;
            j ? (b.linkedParent = c[b.coll][d.linkedTo],
            c = b.linkedParent.getExtremes(),
            b.min = q(c.min, c.dataMin),
            b.max = q(c.max, c.dataMax),
            d.type !== b.linkedParent.options.type && ma(11, 1)) : (b.min = q(b.userMin, d.min, b.dataMin),
            b.max = q(b.userMax, d.max, b.dataMax));
            if (g)
                !a && A(b.min, q(b.dataMin, b.min)) <= 0 && ma(10, 1),
                b.min = ja(Ka(b.min)),
                b.max = ja(Ka(b.max));
            if (b.range && u(b.max))
                b.userMin = b.min = v(b.min, b.max - b.range),
                b.userMax = b.max,
                b.range = null;
            b.beforePadding && b.beforePadding();
            b.adjustForMinRange();
            if (!oa && !b.axisPointRange && !b.usePercentage && !j && u(b.min) && u(b.max) && (c = b.max - b.min)) {
                if (!u(d.min) && !u(b.userMin) && m && (b.dataMin < 0 || !b.ignoreMinPadding))
                    b.min -= c * m;
                if (!u(d.max) && !u(b.userMax) && l && (b.dataMax > 0 || !b.ignoreMaxPadding))
                    b.max += c * l
            }
            if (pa(d.floor))
                b.min = v(b.min, d.floor);
            if (pa(d.ceiling))
                b.max = A(b.max, d.ceiling);
            b.min === b.max || b.min === void 0 || b.max === void 0 ? b.tickInterval = 1 : j && !n && x === b.linkedParent.options.tickPixelInterval ? b.tickInterval = b.linkedParent.tickInterval : (b.tickInterval = q(n, oa ? 1 : (b.max - b.min) * x / v(b.len, x)),
            !u(n) && b.len < x && !this.isRadial && !this.isLog && !oa && e && f && (I = !0,
            b.tickInterval /= 4));
            i && !a && p(b.series, function(a) {
                a.processData(b.min !== b.oldMin || b.max !== b.oldMax)
            });
            b.setAxisTranslation(!0);
            b.beforeSetTickPositions && b.beforeSetTickPositions();
            if (b.postProcessTickInterval)
                b.tickInterval = b.postProcessTickInterval(b.tickInterval);
            if (b.pointRange)
                b.tickInterval = v(b.pointRange, b.tickInterval);
            if (!n && b.tickInterval < o)
                b.tickInterval = o;
            if (!h && !g && !n)
                b.tickInterval = wb(b.tickInterval, null, vb(b.tickInterval), q(d.allowDecimals, !(b.tickInterval > 1 && b.tickInterval < 5 && b.max > 1E3 && b.max < 9999)));
            b.minorTickInterval = d.minorTickInterval === "auto" && b.tickInterval ? b.tickInterval / 5 : d.minorTickInterval;
            b.tickPositions = a = d.tickPositions ? [].concat(d.tickPositions) : k && k.apply(b, [b.min, b.max]);
            if (!a)
                !b.ordinalPositions && (b.max - b.min) / b.tickInterval > v(2 * b.len, 200) && ma(19, !0),
                a = h ? b.getTimeTicks(b.normalizeTimeTickInterval(b.tickInterval, d.units), b.min, b.max, d.startOfWeek, b.ordinalPositions, b.closestPointRange, !0) : g ? b.getLogTickPositions(b.tickInterval, b.min, b.max) : b.getLinearTickPositions(b.tickInterval, b.min, b.max),
                I && a.splice(1, a.length - 2),
                b.tickPositions = a;
            if (!j)
                d = a[0],
                g = a[a.length - 1],
                h = b.minPointOffset || 0,
                e ? b.min = d : b.min - h > d && a.shift(),
                f ? b.max = g : b.max + h < g && a.pop(),
                a.length === 0 && u(d) && a.push((g + d) / 2),
                a.length === 1 && (e = P(b.max) > 1E13 ? 1 : 0.001,
                b.min -= e,
                b.max += e)
        },
        setMaxTicks: function() {
            var a = this.chart
              , b = a.maxTicks || {}
              , c = this.tickPositions
              , d = this._maxTicksKey = [this.coll, this.pos, this.len].join("-");
            if (!this.isLinked && !this.isDatetimeAxis && c && c.length > (b[d] || 0) && this.options.alignTicks !== !1)
                b[d] = c.length;
            a.maxTicks = b
        },
        adjustTickAmount: function() {
            var a = this._maxTicksKey
              , b = this.tickPositions
              , c = this.chart.maxTicks;
            if (c && c[a] && !this.isDatetimeAxis && !this.categories && !this.isLinked && this.options.alignTicks !== !1 && this.min !== r) {
                var d = this.tickAmount
                  , e = b.length;
                this.tickAmount = a = c[a];
                if (e < a) {
                    for (; b.length < a; )
                        b.push(ja(b[b.length - 1] + this.tickInterval));
                    this.transA *= (e - 1) / (a - 1);
                    this.max = b[b.length - 1]
                }
                if (u(d) && a !== d)
                    this.isDirty = !0
            }
        },
        setScale: function() {
            var a = this.stacks, b, c, d, e;
            this.oldMin = this.min;
            this.oldMax = this.max;
            this.oldAxisLength = this.len;
            this.setAxisSize();
            e = this.len !== this.oldAxisLength;
            p(this.series, function(a) {
                if (a.isDirtyData || a.isDirty || a.xAxis.isDirty)
                    d = !0
            });
            if (e || d || this.isLinked || this.forceRedraw || this.userMin !== this.oldUserMin || this.userMax !== this.oldUserMax) {
                if (!this.isXAxis)
                    for (b in a)
                        for (c in a[b])
                            a[b][c].total = null,
                            a[b][c].cum = 0;
                this.forceRedraw = !1;
                this.getSeriesExtremes();
                this.setTickPositions();
                this.oldUserMin = this.userMin;
                this.oldUserMax = this.userMax;
                if (!this.isDirty)
                    this.isDirty = e || this.min !== this.oldMin || this.max !== this.oldMax
            } else if (!this.isXAxis) {
                if (this.oldStacks)
                    a = this.stacks = this.oldStacks;
                for (b in a)
                    for (c in a[b])
                        a[b][c].cum = a[b][c].total
            }
            this.setMaxTicks()
        },
        setExtremes: function(a, b, c, d, e) {
            var f = this
              , g = f.chart
              , c = q(c, !0)
              , e = s(e, {
                min: a,
                max: b
            });
            J(f, "setExtremes", e, function() {
                f.userMin = a;
                f.userMax = b;
                f.eventArgs = e;
                f.isDirtyExtremes = !0;
                c && g.redraw(d)
            })
        },
        zoom: function(a, b) {
            var c = this.dataMin
              , d = this.dataMax
              , e = this.options;
            this.allowZoomOutside || (u(c) && a <= A(c, q(e.min, c)) && (a = r),
            u(d) && b >= v(d, q(e.max, d)) && (b = r));
            this.displayBtn = a !== r || b !== r;
            this.setExtremes(a, b, !1, r, {
                trigger: "zoom"
            });
            return !0
        },
        setAxisSize: function() {
            var a = this.chart
              , b = this.options
              , c = b.offsetLeft || 0
              , d = this.horiz
              , e = q(b.width, a.plotWidth - c + (b.offsetRight || 0))
              , f = q(b.height, a.plotHeight)
              , g = q(b.top, a.plotTop)
              , b = q(b.left, a.plotLeft + c)
              , c = /%$/;
            c.test(f) && (f = parseInt(f, 10) / 100 * a.plotHeight);
            c.test(g) && (g = parseInt(g, 10) / 100 * a.plotHeight + a.plotTop);
            this.left = b;
            this.top = g;
            this.width = e;
            this.height = f;
            this.bottom = a.chartHeight - f - g;
            this.right = a.chartWidth - e - b;
            this.len = v(d ? e : f, 0);
            this.pos = d ? b : g
        },
        getExtremes: function() {
            var a = this.isLog;
            return {
                min: a ? ja(sa(this.min)) : this.min,
                max: a ? ja(sa(this.max)) : this.max,
                dataMin: this.dataMin,
                dataMax: this.dataMax,
                userMin: this.userMin,
                userMax: this.userMax
            }
        },
        getThreshold: function(a) {
            var b = this.isLog
              , c = b ? sa(this.min) : this.min
              , b = b ? sa(this.max) : this.max;
            c > a || a === null ? a = c : b < a && (a = b);
            return this.translate(a, 0, 1, 0, 1)
        },
        autoLabelAlign: function(a) {
            a = (q(a, 0) - this.side * 90 + 720) % 360;
            return a > 15 && a < 165 ? "right" : a > 195 && a < 345 ? "left" : "center"
        },
        getOffset: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.options, e = a.tickPositions, f = a.ticks, g = a.horiz, h = a.side, i = b.inverted ? [1, 0, 3, 2][h] : h, j, k, l = 0, m, n = 0, o = d.title, x = d.labels, I = 0, oa = b.axisOffset, b = b.clipOffset, w = [-1, 1, 1, -1][h], t, s = 1, y = q(x.maxStaggerLines, 5), O, A, z, C, R;
            a.hasData = j = a.hasVisibleSeries || u(a.min) && u(a.max) && !!e;
            a.showAxis = k = j || q(d.showEmpty, !0);
            a.staggerLines = a.horiz && x.staggerLines;
            if (!a.axisGroup)
                a.gridGroup = c.g("grid").attr({
                    zIndex: d.gridZIndex || 1
                }).add(),
                a.axisGroup = c.g("axis").attr({
                    zIndex: d.zIndex || 2
                }).add(),
                a.labelGroup = c.g("axis-labels").attr({
                    zIndex: x.zIndex || 7
                }).addClass("highcharts-" + a.coll.toLowerCase() + "-labels").add();
            if (j || a.isLinked) {
                a.labelAlign = q(x.align || a.autoLabelAlign(x.rotation));
                p(e, function(b) {
                    f[b] ? f[b].addLabel() : f[b] = new bb(a,b)
                });
                if (a.horiz && !a.staggerLines && y && !x.rotation) {
                    for (j = a.reversed ? [].concat(e).reverse() : e; s < y; ) {
                        O = [];
                        A = !1;
                        for (t = 0; t < j.length; t++)
                            z = j[t],
                            C = (C = f[z].label && f[z].label.getBBox()) ? C.width : 0,
                            R = t % s,
                            C && (z = a.translate(z),
                            O[R] !== r && z < O[R] && (A = !0),
                            O[R] = z + C);
                        if (A)
                            s++;
                        else
                            break
                    }
                    if (s > 1)
                        a.staggerLines = s
                }
                p(e, function(b) {
                    if (h === 0 || h === 2 || {
                        1: "left",
                        3: "right"
                    }[h] === a.labelAlign)
                        I = v(f[b].getLabelSize(), I)
                });
                if (a.staggerLines)
                    I *= a.staggerLines,
                    a.labelOffset = I
            } else
                for (t in f)
                    f[t].destroy(),
                    delete f[t];
            if (o && o.text && o.enabled !== !1) {
                if (!a.axisTitle)
                    a.axisTitle = c.text(o.text, 0, 0, o.useHTML).attr({
                        zIndex: 7,
                        rotation: o.rotation || 0,
                        align: o.textAlign || {
                            low: "left",
                            middle: "center",
                            high: "right"
                        }[o.align]
                    }).addClass("highcharts-" + this.coll.toLowerCase() + "-title").css(o.style).add(a.axisGroup),
                    a.axisTitle.isNew = !0;
                if (k)
                    l = a.axisTitle.getBBox()[g ? "height" : "width"],
                    m = o.offset,
                    n = u(m) ? 0 : q(o.margin, g ? 5 : 10);
                a.axisTitle[k ? "show" : "hide"]()
            }
            a.offset = w * q(d.offset, oa[h]);
            c = h === 2 ? a.tickBaseline : 0;
            g = I + n + (I && w * (g ? q(x.y, a.tickBaseline + 8) : x.x) - c);
            a.axisTitleMargin = q(m, g);
            oa[h] = v(oa[h], a.axisTitleMargin + l + w * a.offset, g);
            b[i] = v(b[i], V(d.lineWidth / 2) * 2)
        },
        getLinePath: function(a) {
            var b = this.chart
              , c = this.opposite
              , d = this.offset
              , e = this.horiz
              , f = this.left + (c ? this.width : 0) + d
              , d = b.chartHeight - this.bottom - (c ? this.height : 0) + d;
            c && (a *= -1);
            return b.renderer.crispLine(["M", e ? this.left : f, e ? d : this.top, "L", e ? b.chartWidth - this.right : f, e ? d : b.chartHeight - this.bottom], a)
        },
        getTitlePosition: function() {
            var a = this.horiz
              , b = this.left
              , c = this.top
              , d = this.len
              , e = this.options.title
              , f = a ? b : c
              , g = this.opposite
              , h = this.offset
              , i = H(e.style.fontSize || 12)
              , d = {
                low: f + (a ? 0 : d),
                middle: f + d / 2,
                high: f + (a ? d : 0)
            }[e.align]
              , b = (a ? c + this.height : b) + (a ? 1 : -1) * (g ? -1 : 1) * this.axisTitleMargin + (this.side === 2 ? i : 0);
            return {
                x: a ? d : b + (g ? this.width : 0) + h + (e.x || 0),
                y: a ? b - (g ? this.height : 0) + h : d + (e.y || 0)
            }
        },
        render: function() {
            var a = this, b = a.horiz, c = a.reversed, d = a.chart, e = d.renderer, f = a.options, g = a.isLog, h = a.isLinked, i = a.tickPositions, j, k = a.axisTitle, l = a.ticks, m = a.minorTicks, n = a.alternateBands, o = f.stackLabels, x = f.alternateGridColor, q = a.tickmarkOffset, oa = f.lineWidth, w = d.hasRendered && u(a.oldMin) && !isNaN(a.oldMin), t = a.hasData, v = a.showAxis, s, y = f.labels.overflow, A = a.justifyLabels = b && y !== !1, z;
            a.labelEdge.length = 0;
            a.justifyToPlot = y === "justify";
            p([l, m, n], function(a) {
                for (var b in a)
                    a[b].isActive = !1
            });
            if (t || h)
                if (a.minorTickInterval && !a.categories && p(a.getMinorTickPositions(), function(b) {
                    m[b] || (m[b] = new bb(a,b,"minor"));
                    w && m[b].isNew && m[b].render(null, !0);
                    m[b].render(null, !1, 1)
                }),
                i.length && (j = i.slice(),
                (b && c || !b && !c) && j.reverse(),
                A && (j = j.slice(1).concat([j[0]])),
                p(j, function(b, c) {
                    A && (c = c === j.length - 1 ? 0 : c + 1);
                    if (!h || b >= a.min && b <= a.max)
                        l[b] || (l[b] = new bb(a,b)),
                        w && l[b].isNew && l[b].render(c, !0, 0.1),
                        l[b].render(c)
                }),
                q && a.min === 0 && (l[-1] || (l[-1] = new bb(a,-1,null,!0)),
                l[-1].render(-1))),
                x && p(i, function(b, c) {
                    if (c % 2 === 0 && b < a.max)
                        n[b] || (n[b] = new N.PlotLineOrBand(a)),
                        s = b + q,
                        z = i[c + 1] !== r ? i[c + 1] + q : a.max,
                        n[b].options = {
                            from: g ? sa(s) : s,
                            to: g ? sa(z) : z,
                            color: x
                        },
                        n[b].render(),
                        n[b].isActive = !0
                }),
                !a._addedPlotLB)
                    p((f.plotLines || []).concat(f.plotBands || []), function(b) {
                        a.addPlotBandOrLine(b)
                    }),
                    a._addedPlotLB = !0;
            p([l, m, n], function(a) {
                var b, c, e = [], f = Fa ? Fa.duration || 500 : 0, g = function() {
                    for (c = e.length; c--; )
                        a[e[c]] && !a[e[c]].isActive && (a[e[c]].destroy(),
                        delete a[e[c]])
                };
                for (b in a)
                    if (!a[b].isActive)
                        a[b].render(b, !1, 0),
                        a[b].isActive = !1,
                        e.push(b);
                a === n || !d.hasRendered || !f ? g() : f && setTimeout(g, f)
            });
            if (oa)
                b = a.getLinePath(oa),
                a.axisLine ? a.axisLine.animate({
                    d: b
                }) : a.axisLine = e.path(b).attr({
                    stroke: f.lineColor,
                    "stroke-width": oa,
                    zIndex: 7
                }).add(a.axisGroup),
                a.axisLine[v ? "show" : "hide"]();
            if (k && v)
                k[k.isNew ? "attr" : "animate"](a.getTitlePosition()),
                k.isNew = !1;
            o && o.enabled && a.renderStackTotals();
            a.isDirty = !1
        },
        redraw: function() {
            this.render();
            p(this.plotLinesAndBands, function(a) {
                a.render()
            });
            p(this.series, function(a) {
                a.isDirty = !0
            })
        },
        destroy: function(a) {
            var b = this, c = b.stacks, d, e = b.plotLinesAndBands;
            a || U(b);
            for (d in c)
                Na(c[d]),
                c[d] = null;
            p([b.ticks, b.minorTicks, b.alternateBands], function(a) {
                Na(a)
            });
            for (a = e.length; a--; )
                e[a].destroy();
            p("stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup".split(","), function(a) {
                b[a] && (b[a] = b[a].destroy())
            });
            this.cross && this.cross.destroy()
        },
        drawCrosshair: function(a, b) {
            if (this.crosshair)
                if ((u(b) || !q(this.crosshair.snap, !0)) === !1)
                    this.hideCrosshair();
                else {
                    var c, d = this.crosshair, e = d.animation;
                    q(d.snap, !0) ? u(b) && (c = this.chart.inverted != this.horiz ? b.plotX : this.len - b.plotY) : c = this.horiz ? a.chartX - this.pos : this.len - a.chartY + this.pos;
                    c = this.isRadial ? this.getPlotLinePath(this.isXAxis ? b.x : q(b.stackY, b.y)) : this.getPlotLinePath(null, null, null, null, c);
                    if (c === null)
                        this.hideCrosshair();
                    else if (this.cross)
                        this.cross.attr({
                            visibility: "visible"
                        })[e ? "animate" : "attr"]({
                            d: c
                        }, e);
                    else {
                        e = {
                            "stroke-width": d.width || 1,
                            stroke: d.color || "#C0C0C0",
                            zIndex: d.zIndex || 2
                        };
                        if (d.dashStyle)
                            e.dashstyle = d.dashStyle;
                        this.cross = this.chart.renderer.path(c).attr(e).add()
                    }
                }
        },
        hideCrosshair: function() {
            this.cross && this.cross.hide()
        }
    };
    s(D.prototype, {
        getPlotBandPath: function(a, b) {
            var c = this.getPlotLinePath(b)
              , d = this.getPlotLinePath(a);
            d && c ? d.push(c[4], c[5], c[1], c[2]) : d = null;
            return d
        },
        addPlotBand: function(a) {
            return this.addPlotBandOrLine(a, "plotBands")
        },
        addPlotLine: function(a) {
            return this.addPlotBandOrLine(a, "plotLines")
        },
        addPlotBandOrLine: function(a, b) {
            var c = (new N.PlotLineOrBand(this,a)).render()
              , d = this.userOptions;
            c && (b && (d[b] = d[b] || [],
            d[b].push(a)),
            this.plotLinesAndBands.push(c));
            return c
        },
        removePlotBandOrLine: function(a) {
            for (var b = this.plotLinesAndBands, c = this.options, d = this.userOptions, e = b.length; e--; )
                b[e].id === a && b[e].destroy();
            p([c.plotLines || [], d.plotLines || [], c.plotBands || [], d.plotBands || []], function(b) {
                for (e = b.length; e--; )
                    b[e].id === a && ta(b, b[e])
            })
        }
    });
    D.prototype.getTimeTicks = function(a, b, c, d) {
        var e = [], f = {}, g = F.global.useUTC, h, i = new ca(b - Oa), j = a.unitRange, k = a.count;
        if (u(b)) {
            j >= G.second && (i.setMilliseconds(0),
            i.setSeconds(j >= G.minute ? 0 : k * V(i.getSeconds() / k)));
            if (j >= G.minute)
                i[Nb](j >= G.hour ? 0 : k * V(i[yb]() / k));
            if (j >= G.hour)
                i[Ob](j >= G.day ? 0 : k * V(i[zb]() / k));
            if (j >= G.day)
                i[Bb](j >= G.month ? 1 : k * V(i[Xa]() / k));
            j >= G.month && (i[Pb](j >= G.year ? 0 : k * V(i[mb]() / k)),
            h = i[nb]());
            j >= G.year && (h -= h % k,
            i[Qb](h));
            if (j === G.week)
                i[Bb](i[Xa]() - i[Ab]() + q(d, 1));
            b = 1;
            Oa && (i = new ca(i.getTime() + Oa));
            h = i[nb]();
            for (var d = i.getTime(), l = i[mb](), m = i[Xa](), n = (G.day + (g ? Oa : i.getTimezoneOffset() * 6E4)) % G.day; d < c; )
                e.push(d),
                j === G.year ? d = lb(h + b * k, 0) : j === G.month ? d = lb(h, l + b * k) : !g && (j === G.day || j === G.week) ? d = lb(h, l, m + b * k * (j === G.day ? 1 : 7)) : d += j * k,
                b++;
            e.push(d);
            p(qb(e, function(a) {
                return j <= G.hour && a % G.day === n
            }), function(a) {
                f[a] = "day"
            })
        }
        e.info = s(a, {
            higherRanks: f,
            totalRange: j * k
        });
        return e
    }
    ;
    D.prototype.normalizeTimeTickInterval = function(a, b) {
        var c = b || [["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]], ["second", [1, 2, 5, 10, 15, 30]], ["minute", [1, 2, 5, 10, 15, 30]], ["hour", [1, 2, 3, 4, 6, 8, 12]], ["day", [1, 2]], ["week", [1, 2]], ["month", [1, 2, 3, 4, 6]], ["year", null]], d = c[c.length - 1], e = G[d[0]], f = d[1], g;
        for (g = 0; g < c.length; g++)
            if (d = c[g],
            e = G[d[0]],
            f = d[1],
            c[g + 1] && a <= (e * f[f.length - 1] + G[c[g + 1][0]]) / 2)
                break;
        e === G.year && a < 5 * e && (f = [1, 2, 5]);
        c = wb(a / e, f, d[0] === "year" ? v(vb(a / e), 1) : 1);
        return {
            unitRange: e,
            count: c,
            unitName: d[0]
        }
    }
    ;
    D.prototype.getLogTickPositions = function(a, b, c, d) {
        var e = this.options
          , f = this.len
          , g = [];
        if (!d)
            this._minorAutoInterval = null;
        if (a >= 0.5)
            a = t(a),
            g = this.getLinearTickPositions(a, b, c);
        else if (a >= 0.08)
            for (var f = V(b), h, i, j, k, l, e = a > 0.3 ? [1, 2, 4] : a > 0.15 ? [1, 2, 4, 6, 8] : [1, 2, 3, 4, 5, 6, 7, 8, 9]; f < c + 1 && !l; f++) {
                i = e.length;
                for (h = 0; h < i && !l; h++)
                    j = Ka(sa(f) * e[h]),
                    j > b && (!d || k <= c) && k !== r && g.push(k),
                    k > c && (l = !0),
                    k = j
            }
        else if (b = sa(b),
        c = sa(c),
        a = e[d ? "minorTickInterval" : "tickInterval"],
        a = q(a === "auto" ? null : a, this._minorAutoInterval, (c - b) * (e.tickPixelInterval / (d ? 5 : 1)) / ((d ? f / this.tickPositions.length : f) || 1)),
        a = wb(a, null, vb(a)),
        g = za(this.getLinearTickPositions(a, b, c), Ka),
        !d)
            this._minorAutoInterval = a / 5;
        if (!d)
            this.tickInterval = a;
        return g
    }
    ;
    var Jb = N.Tooltip = function() {
        this.init.apply(this, arguments)
    }
    ;
    Jb.prototype = {
        init: function(a, b) {
            var c = b.borderWidth
              , d = b.style
              , e = H(d.padding);
            this.chart = a;
            this.options = b;
            this.crosshairs = [];
            this.now = {
                x: 0,
                y: 0
            };
            this.isHidden = !0;
            this.label = a.renderer.label("", 0, 0, b.shape || "callout", null, null, b.useHTML, null, "tooltip").attr({
                padding: e,
                fill: b.backgroundColor,
                "stroke-width": c,
                r: b.borderRadius,
                zIndex: 8
            }).css(d).css({
                padding: 0
            }).add().attr({
                y: -9999
            });
            la || this.label.shadow(b.shadow);
            this.shared = b.shared
        },
        destroy: function() {
            if (this.label)
                this.label = this.label.destroy();
            clearTimeout(this.hideTimer);
            clearTimeout(this.tooltipTimeout)
        },
        move: function(a, b, c, d) {
            var e = this
              , f = e.now
              , g = e.options.animation !== !1 && !e.isHidden && (P(a - f.x) > 1 || P(b - f.y) > 1)
              , h = e.followPointer || e.len > 1;
            s(f, {
                x: g ? (2 * f.x + a) / 3 : a,
                y: g ? (f.y + b) / 2 : b,
                anchorX: h ? r : g ? (2 * f.anchorX + c) / 3 : c,
                anchorY: h ? r : g ? (f.anchorY + d) / 2 : d
            });
            e.label.attr(f);
            if (g)
                clearTimeout(this.tooltipTimeout),
                this.tooltipTimeout = setTimeout(function() {
                    e && e.move(a, b, c, d)
                }, 32)
        },
        hide: function(a) {
            var b = this, c;
            clearTimeout(this.hideTimer);
            if (!this.isHidden)
                c = this.chart.hoverPoints,
                this.hideTimer = setTimeout(function() {
                    b.label.fadeOut();
                    b.isHidden = !0
                }, q(a, this.options.hideDelay, 500)),
                c && p(c, function(a) {
                    a.setState()
                }),
                this.chart.hoverPoints = null
        },
        getAnchor: function(a, b) {
            var c, d = this.chart, e = d.inverted, f = d.plotTop, g = 0, h = 0, i, a = qa(a);
            c = a[0].tooltipPos;
            this.followPointer && b && (b.chartX === r && (b = d.pointer.normalize(b)),
            c = [b.chartX - d.plotLeft, b.chartY - f]);
            c || (p(a, function(a) {
                i = a.series.yAxis;
                g += a.plotX;
                h += (a.plotLow ? (a.plotLow + a.plotHigh) / 2 : a.plotY) + (!e && i ? i.top - f : 0)
            }),
            g /= a.length,
            h /= a.length,
            c = [e ? d.plotWidth - h : g, this.shared && !e && a.length > 1 && b ? b.chartY - f : e ? d.plotHeight - g : h]);
            return za(c, t)
        },
        getPosition: function(a, b, c) {
            var d = this.chart, e = this.distance, f = {}, g, h = ["y", d.chartHeight, b, c.plotY + d.plotTop], i = ["x", d.chartWidth, a, c.plotX + d.plotLeft], j = c.ttBelow || d.inverted && !c.negative || !d.inverted && c.negative, k = function(a, b, c, d) {
                var g = c < d - e
                  , b = d + e + c < b
                  , c = d - e - c;
                d += e;
                if (j && b)
                    f[a] = d;
                else if (!j && g)
                    f[a] = c;
                else if (g)
                    f[a] = c;
                else if (b)
                    f[a] = d;
                else
                    return !1
            }, l = function(a, b, c, d) {
                if (d < e || d > b - e)
                    return !1;
                else
                    f[a] = d < c / 2 ? 1 : d > b - c / 2 ? b - c - 2 : d - c / 2
            }, m = function(a) {
                var b = h;
                h = i;
                i = b;
                g = a
            }, n = function() {
                k.apply(0, h) !== !1 ? l.apply(0, i) === !1 && !g && (m(!0),
                n()) : g ? f.x = f.y = 0 : (m(!0),
                n())
            };
            (d.inverted || this.len > 1) && m();
            n();
            return f
        },
        defaultFormatter: function(a) {
            var b = this.points || qa(this), c = b[0].series, d;
            d = [a.tooltipHeaderFormatter(b[0])];
            p(b, function(a) {
                c = a.series;
                d.push(c.tooltipFormatter && c.tooltipFormatter(a) || a.point.tooltipFormatter(c.tooltipOptions.pointFormat))
            });
            d.push(a.options.footerFormat || "");
            return d.join("")
        },
        refresh: function(a, b) {
            var c = this.chart, d = this.label, e = this.options, f, g, h = {}, i, j = [];
            i = e.formatter || this.defaultFormatter;
            var h = c.hoverPoints, k, l = this.shared;
            clearTimeout(this.hideTimer);
            this.followPointer = qa(a)[0].series.tooltipOptions.followPointer;
            g = this.getAnchor(a, b);
            f = g[0];
            g = g[1];
            l && (!a.series || !a.series.noSharedTooltip) ? (c.hoverPoints = a,
            h && p(h, function(a) {
                a.setState()
            }),
            p(a, function(a) {
                a.setState("hover");
                j.push(a.getLabelConfig())
            }),
            h = {
                x: a[0].category,
                y: a[0].y
            },
            h.points = j,
            this.len = j.length,
            a = a[0]) : h = a.getLabelConfig();
            i = i.call(h, this);
            h = a.series;
            this.distance = q(h.tooltipOptions.distance, 16);
            i === !1 ? this.hide() : (this.isHidden && (hb(d),
            d.attr("opacity", 1).show()),
            d.attr({
                text: i
            }),
            k = e.borderColor || a.color || h.color || "#606060",
            d.attr({
                stroke: k
            }),
            this.updatePosition({
                plotX: f,
                plotY: g,
                negative: a.negative,
                ttBelow: a.ttBelow
            }),
            this.isHidden = !1);
            J(c, "tooltipRefresh", {
                text: i,
                x: f + c.plotLeft,
                y: g + c.plotTop,
                borderColor: k
            })
        },
        updatePosition: function(a) {
            var b = this.chart
              , c = this.label
              , c = (this.options.positioner || this.getPosition).call(this, c.width, c.height, a);
            this.move(t(c.x), t(c.y), a.plotX + b.plotLeft, a.plotY + b.plotTop)
        },
        tooltipHeaderFormatter: function(a) {
            var b = a.series, c = b.tooltipOptions, d = c.dateTimeLabelFormats, e = c.xDateFormat, f = b.xAxis, g = f && f.options.type === "datetime" && pa(a.key), c = c.headerFormat, f = f && f.closestPointRange, h;
            if (g && !e) {
                if (f)
                    for (h in G) {
                        if (G[h] >= f || G[h] <= G.day && a.key % G[h] > 0) {
                            e = d[h];
                            break
                        }
                    }
                else
                    e = d.day;
                e = e || d.year
            }
            g && e && (c = c.replace("{point.key}", "{point.key:" + e + "}"));
            return Ma(c, {
                point: a,
                series: b
            })
        }
    };
    var va;
    db = E.documentElement.ontouchstart !== r;
    var $a = N.Pointer = function(a, b) {
        this.init(a, b)
    }
    ;
    $a.prototype = {
        init: function(a, b) {
            var c = b.chart, d = c.events, e = la ? "" : c.zoomType, c = a.inverted, f;
            this.options = b;
            this.chart = a;
            this.zoomX = f = /x/.test(e);
            this.zoomY = e = /y/.test(e);
            this.zoomHor = f && !c || e && c;
            this.zoomVert = e && !c || f && c;
            this.hasZoom = f || e;
            this.runChartClick = d && !!d.click;
            this.pinchDown = [];
            this.lastValidTouch = {};
            if (N.Tooltip && b.tooltip.enabled)
                a.tooltip = new Jb(a,b.tooltip),
                this.followTouchMove = b.tooltip.followTouchMove;
            this.setDOMEvents()
        },
        normalize: function(a, b) {
            var c, d, a = a || window.event, a = cc(a);
            if (!a.target)
                a.target = a.srcElement;
            d = a.touches ? a.touches.length ? a.touches.item(0) : a.changedTouches[0] : a;
            if (!b)
                this.chartPosition = b = bc(this.chart.container);
            d.pageX === r ? (c = v(a.x, a.clientX - b.left),
            d = a.y) : (c = d.pageX - b.left,
            d = d.pageY - b.top);
            return s(a, {
                chartX: t(c),
                chartY: t(d)
            })
        },
        getCoordinates: function(a) {
            var b = {
                xAxis: [],
                yAxis: []
            };
            p(this.chart.axes, function(c) {
                b[c.isXAxis ? "xAxis" : "yAxis"].push({
                    axis: c,
                    value: c.toValue(a[c.horiz ? "chartX" : "chartY"])
                })
            });
            return b
        },
        getIndex: function(a) {
            var b = this.chart;
            return b.inverted ? b.plotHeight + b.plotTop - a.chartY : a.chartX - b.plotLeft
        },
        runPointActions: function(a) {
            var b = this.chart, c = b.series, d = b.tooltip, e, f, g = b.hoverPoint, h = b.hoverSeries, i, j, k = b.chartWidth, l = this.getIndex(a);
            if (d && this.options.tooltip.shared && (!h || !h.noSharedTooltip)) {
                f = [];
                i = c.length;
                for (j = 0; j < i; j++)
                    if (c[j].visible && c[j].options.enableMouseTracking !== !1 && !c[j].noSharedTooltip && c[j].singularTooltips !== !0 && c[j].tooltipPoints.length && (e = c[j].tooltipPoints[l]) && e.series)
                        e._dist = P(l - e.clientX),
                        k = A(k, e._dist),
                        f.push(e);
                for (i = f.length; i--; )
                    f[i]._dist > k && f.splice(i, 1);
                if (f.length && f[0].clientX !== this.hoverX)
                    d.refresh(f, a),
                    this.hoverX = f[0].clientX
            }
            c = h && h.tooltipOptions.followPointer;
            if (h && h.tracker && !c) {
                if ((e = h.tooltipPoints[l]) && e !== g)
                    e.onMouseOver(a)
            } else
                d && c && !d.isHidden && (h = d.getAnchor([{}], a),
                d.updatePosition({
                    plotX: h[0],
                    plotY: h[1]
                }));
            if (d && !this._onDocumentMouseMove)
                this._onDocumentMouseMove = function(a) {
                    if (ba[va])
                        ba[va].pointer.onDocumentMouseMove(a)
                }
                ,
                z(E, "mousemove", this._onDocumentMouseMove);
            p(b.axes, function(b) {
                b.drawCrosshair(a, q(e, g))
            })
        },
        reset: function(a, b) {
            var c = this.chart
              , d = c.hoverSeries
              , e = c.hoverPoint
              , f = c.tooltip
              , g = f && f.shared ? c.hoverPoints : e;
            (a = a && f && g) && qa(g)[0].plotX === r && (a = !1);
            if (a)
                f.refresh(g),
                e && e.setState(e.state, !0);
            else {
                if (e)
                    e.onMouseOut();
                if (d)
                    d.onMouseOut();
                f && f.hide(b);
                if (this._onDocumentMouseMove)
                    U(E, "mousemove", this._onDocumentMouseMove),
                    this._onDocumentMouseMove = null;
                p(c.axes, function(a) {
                    a.hideCrosshair()
                });
                this.hoverX = null
            }
        },
        scaleGroups: function(a, b) {
            var c = this.chart, d;
            p(c.series, function(e) {
                d = a || e.getPlotBox();
                e.xAxis && e.xAxis.zoomEnabled && (e.group.attr(d),
                e.markerGroup && (e.markerGroup.attr(d),
                e.markerGroup.clip(b ? c.clipRect : null)),
                e.dataLabelsGroup && e.dataLabelsGroup.attr(d))
            });
            c.clipRect.attr(b || c.clipBox)
        },
        dragStart: function(a) {
            var b = this.chart;
            b.mouseIsDown = a.type;
            b.cancelClick = !1;
            b.mouseDownX = this.mouseDownX = a.chartX;
            b.mouseDownY = this.mouseDownY = a.chartY
        },
        drag: function(a) {
            var b = this.chart, c = b.options.chart, d = a.chartX, e = a.chartY, f = this.zoomHor, g = this.zoomVert, h = b.plotLeft, i = b.plotTop, j = b.plotWidth, k = b.plotHeight, l, m = this.mouseDownX, n = this.mouseDownY, o = c.panKey && a[c.panKey + "Key"];
            d < h ? d = h : d > h + j && (d = h + j);
            e < i ? e = i : e > i + k && (e = i + k);
            this.hasDragged = Math.sqrt(Math.pow(m - d, 2) + Math.pow(n - e, 2));
            if (this.hasDragged > 10) {
                l = b.isInsidePlot(m - h, n - i);
                if (b.hasCartesianSeries && (this.zoomX || this.zoomY) && l && !o && !this.selectionMarker)
                    this.selectionMarker = b.renderer.rect(h, i, f ? 1 : j, g ? 1 : k, 0).attr({
                        fill: c.selectionMarkerFill || "rgba(69,114,167,0.25)",
                        zIndex: 7
                    }).add();
                this.selectionMarker && f && (d -= m,
                this.selectionMarker.attr({
                    width: P(d),
                    x: (d > 0 ? 0 : d) + m
                }));
                this.selectionMarker && g && (d = e - n,
                this.selectionMarker.attr({
                    height: P(d),
                    y: (d > 0 ? 0 : d) + n
                }));
                l && !this.selectionMarker && c.panning && b.pan(a, c.panning)
            }
        },
        drop: function(a) {
            var b = this.chart
              , c = this.hasPinched;
            if (this.selectionMarker) {
                var d = {
                    xAxis: [],
                    yAxis: [],
                    originalEvent: a.originalEvent || a
                }, e = this.selectionMarker, f = e.attr ? e.attr("x") : e.x, g = e.attr ? e.attr("y") : e.y, h = e.attr ? e.attr("width") : e.width, i = e.attr ? e.attr("height") : e.height, j;
                if (this.hasDragged || c)
                    p(b.axes, function(b) {
                        if (b.zoomEnabled) {
                            var c = b.horiz
                              , e = a.type === "touchend" ? b.minPixelPadding : 0
                              , n = b.toValue((c ? f : g) + e)
                              , c = b.toValue((c ? f + h : g + i) - e);
                            !isNaN(n) && !isNaN(c) && (d[b.coll].push({
                                axis: b,
                                min: A(n, c),
                                max: v(n, c)
                            }),
                            j = !0)
                        }
                    }),
                    j && J(b, "selection", d, function(a) {
                        b.zoom(s(a, c ? {
                            animation: !1
                        } : null))
                    });
                this.selectionMarker = this.selectionMarker.destroy();
                c && this.scaleGroups()
            }
            if (b)
                K(b.container, {
                    cursor: b._cursor
                }),
                b.cancelClick = this.hasDragged > 10,
                b.mouseIsDown = this.hasDragged = this.hasPinched = !1,
                this.pinchDown = []
        },
        onContainerMouseDown: function(a) {
            a = this.normalize(a);
            a.preventDefault && a.preventDefault();
            this.dragStart(a)
        },
        onDocumentMouseUp: function(a) {
            ba[va] && ba[va].pointer.drop(a)
        },
        onDocumentMouseMove: function(a) {
            var b = this.chart
              , c = this.chartPosition
              , d = b.hoverSeries
              , a = this.normalize(a, c);
            c && d && !this.inClass(a.target, "highcharts-tracker") && !b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop) && this.reset()
        },
        onContainerMouseLeave: function() {
            var a = ba[va];
            if (a)
                a.pointer.reset(),
                a.pointer.chartPosition = null
        },
        onContainerMouseMove: function(a) {
            var b = this.chart;
            va = b.index;
            a = this.normalize(a);
            a.returnValue = !1;
            b.mouseIsDown === "mousedown" && this.drag(a);
            (this.inClass(a.target, "highcharts-tracker") || b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop)) && !b.openMenu && this.runPointActions(a)
        },
        inClass: function(a, b) {
            for (var c; a; ) {
                if (c = Y(a, "class"))
                    if (c.indexOf(b) !== -1)
                        return !0;
                    else if (c.indexOf("highcharts-container") !== -1)
                        return !1;
                a = a.parentNode
            }
        },
        onTrackerMouseOut: function(a) {
            var b = this.chart.hoverSeries
              , c = (a = a.relatedTarget || a.toElement) && a.point && a.point.series;
            if (b && !b.options.stickyTracking && !this.inClass(a, "highcharts-tooltip") && c !== b)
                b.onMouseOut()
        },
        onContainerClick: function(a) {
            var b = this.chart
              , c = b.hoverPoint
              , d = b.plotLeft
              , e = b.plotTop
              , a = this.normalize(a);
            a.cancelBubble = !0;
            b.cancelClick || (c && this.inClass(a.target, "highcharts-tracker") ? (J(c.series, "click", s(a, {
                point: c
            })),
            b.hoverPoint && c.firePointEvent("click", a)) : (s(a, this.getCoordinates(a)),
            b.isInsidePlot(a.chartX - d, a.chartY - e) && J(b, "click", a)))
        },
        setDOMEvents: function() {
            var a = this
              , b = a.chart.container;
            b.onmousedown = function(b) {
                a.onContainerMouseDown(b)
            }
            ;
            b.onmousemove = function(b) {
                a.onContainerMouseMove(b)
            }
            ;
            b.onclick = function(b) {
                a.onContainerClick(b)
            }
            ;
            z(b, "mouseleave", a.onContainerMouseLeave);
            gb === 1 && z(E, "mouseup", a.onDocumentMouseUp);
            if (db)
                b.ontouchstart = function(b) {
                    a.onContainerTouchStart(b)
                }
                ,
                b.ontouchmove = function(b) {
                    a.onContainerTouchMove(b)
                }
                ,
                gb === 1 && z(E, "touchend", a.onDocumentTouchEnd)
        },
        destroy: function() {
            var a;
            U(this.chart.container, "mouseleave", this.onContainerMouseLeave);
            gb || (U(E, "mouseup", this.onDocumentMouseUp),
            U(E, "touchend", this.onDocumentTouchEnd));
            clearInterval(this.tooltipTimeout);
            for (a in this)
                this[a] = null
        }
    };
    s(N.Pointer.prototype, {
        pinchTranslate: function(a, b, c, d, e, f) {
            (this.zoomHor || this.pinchHor) && this.pinchTranslateDirection(!0, a, b, c, d, e, f);
            (this.zoomVert || this.pinchVert) && this.pinchTranslateDirection(!1, a, b, c, d, e, f)
        },
        pinchTranslateDirection: function(a, b, c, d, e, f, g, h) {
            var i = this.chart, j = a ? "x" : "y", k = a ? "X" : "Y", l = "chart" + k, m = a ? "width" : "height", n = i["plot" + (a ? "Left" : "Top")], o, x, q = h || 1, p = i.inverted, w = i.bounds[a ? "h" : "v"], r = b.length === 1, t = b[0][l], v = c[0][l], s = !r && b[1][l], u = !r && c[1][l], y, c = function() {
                !r && P(t - s) > 20 && (q = h || P(v - u) / P(t - s));
                x = (n - v) / q + t;
                o = i["plot" + (a ? "Width" : "Height")] / q
            };
            c();
            b = x;
            b < w.min ? (b = w.min,
            y = !0) : b + o > w.max && (b = w.max - o,
            y = !0);
            y ? (v -= 0.8 * (v - g[j][0]),
            r || (u -= 0.8 * (u - g[j][1])),
            c()) : g[j] = [v, u];
            p || (f[j] = x - n,
            f[m] = o);
            f = p ? 1 / q : q;
            e[m] = o;
            e[j] = b;
            d[p ? a ? "scaleY" : "scaleX" : "scale" + k] = q;
            d["translate" + k] = f * n + (v - f * t)
        },
        pinch: function(a) {
            var b = this
              , c = b.chart
              , d = b.pinchDown
              , e = b.followTouchMove
              , f = a.touches
              , g = f.length
              , h = b.lastValidTouch
              , i = b.hasZoom
              , j = b.selectionMarker
              , k = {}
              , l = g === 1 && (b.inClass(a.target, "highcharts-tracker") && c.runTrackerClick || b.runChartClick)
              , m = {};
            (i || e) && !l && a.preventDefault();
            za(f, function(a) {
                return b.normalize(a)
            });
            if (a.type === "touchstart")
                p(f, function(a, b) {
                    d[b] = {
                        chartX: a.chartX,
                        chartY: a.chartY
                    }
                }),
                h.x = [d[0].chartX, d[1] && d[1].chartX],
                h.y = [d[0].chartY, d[1] && d[1].chartY],
                p(c.axes, function(a) {
                    if (a.zoomEnabled) {
                        var b = c.bounds[a.horiz ? "h" : "v"]
                          , d = a.minPixelPadding
                          , e = a.toPixels(q(a.options.min, a.dataMin))
                          , f = a.toPixels(q(a.options.max, a.dataMax))
                          , g = A(e, f)
                          , e = v(e, f);
                        b.min = A(a.pos, g - d);
                        b.max = v(a.pos + a.len, e + d)
                    }
                }),
                b.res = !0;
            else if (d.length) {
                if (!j)
                    b.selectionMarker = j = s({
                        destroy: ra
                    }, c.plotBox);
                b.pinchTranslate(d, f, k, j, m, h);
                b.hasPinched = i;
                b.scaleGroups(k, m);
                if (!i && e && g === 1)
                    this.runPointActions(b.normalize(a));
                else if (b.res)
                    b.res = !1,
                    this.reset(!1, 0)
            }
        },
        onContainerTouchStart: function(a) {
            var b = this.chart;
            va = b.index;
            a.touches.length === 1 ? (a = this.normalize(a),
            b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop) ? (this.runPointActions(a),
            this.pinch(a)) : this.reset()) : a.touches.length === 2 && this.pinch(a)
        },
        onContainerTouchMove: function(a) {
            (a.touches.length === 1 || a.touches.length === 2) && this.pinch(a)
        },
        onDocumentTouchEnd: function(a) {
            ba[va] && ba[va].pointer.drop(a)
        }
    });
    if (S.PointerEvent || S.MSPointerEvent) {
        var Aa = {}
          , Kb = !!S.PointerEvent
          , gc = function() {
            var a, b = [];
            b.item = function(a) {
                return this[a]
            }
            ;
            for (a in Aa)
                Aa.hasOwnProperty(a) && b.push({
                    pageX: Aa[a].pageX,
                    pageY: Aa[a].pageY,
                    target: Aa[a].target
                });
            return b
        }
          , Lb = function(a, b, c, d) {
            a = a.originalEvent || a;
            if ((a.pointerType === "touch" || a.pointerType === a.MSPOINTER_TYPE_TOUCH) && ba[va])
                d(a),
                d = ba[va].pointer,
                d[b]({
                    type: c,
                    target: a.currentTarget,
                    preventDefault: ra,
                    touches: gc()
                })
        };
        s($a.prototype, {
            onContainerPointerDown: function(a) {
                Lb(a, "onContainerTouchStart", "touchstart", function(a) {
                    Aa[a.pointerId] = {
                        pageX: a.pageX,
                        pageY: a.pageY,
                        target: a.currentTarget
                    }
                })
            },
            onContainerPointerMove: function(a) {
                Lb(a, "onContainerTouchMove", "touchmove", function(a) {
                    Aa[a.pointerId] = {
                        pageX: a.pageX,
                        pageY: a.pageY
                    };
                    if (!Aa[a.pointerId].target)
                        Aa[a.pointerId].target = a.currentTarget
                })
            },
            onDocumentPointerUp: function(a) {
                Lb(a, "onContainerTouchEnd", "touchend", function(a) {
                    delete Aa[a.pointerId]
                })
            },
            batchMSEvents: function(a) {
                a(this.chart.container, Kb ? "pointerdown" : "MSPointerDown", this.onContainerPointerDown);
                a(this.chart.container, Kb ? "pointermove" : "MSPointerMove", this.onContainerPointerMove);
                a(E, Kb ? "pointerup" : "MSPointerUp", this.onDocumentPointerUp)
            }
        });
        Q($a.prototype, "init", function(a, b, c) {
            a.call(this, b, c);
            (this.hasZoom || this.followTouchMove) && K(b.container, {
                "-ms-touch-action": $,
                "touch-action": $
            })
        });
        Q($a.prototype, "setDOMEvents", function(a) {
            a.apply(this);
            (this.hasZoom || this.followTouchMove) && this.batchMSEvents(z)
        });
        Q($a.prototype, "destroy", function(a) {
            this.batchMSEvents(U);
            a.call(this)
        })
    }
    var sb = N.Legend = function(a, b) {
        this.init(a, b)
    }
    ;
    sb.prototype = {
        init: function(a, b) {
            var c = this
              , d = b.itemStyle
              , e = q(b.padding, 8)
              , f = b.itemMarginTop || 0;
            this.options = b;
            if (b.enabled)
                c.itemStyle = d,
                c.itemHiddenStyle = y(d, b.itemHiddenStyle),
                c.itemMarginTop = f,
                c.padding = e,
                c.initialItemX = e,
                c.initialItemY = e - 5,
                c.maxItemWidth = 0,
                c.chart = a,
                c.itemHeight = 0,
                c.lastLineHeight = 0,
                c.symbolWidth = q(b.symbolWidth, 16),
                c.pages = [],
                c.render(),
                z(c.chart, "endResize", function() {
                    c.positionCheckboxes()
                })
        },
        colorizeItem: function(a, b) {
            var c = this.options, d = a.legendItem, e = a.legendLine, f = a.legendSymbol, g = this.itemHiddenStyle.color, c = b ? c.itemStyle.color : g, h = b ? a.legendColor || a.color || "#CCC" : g, g = a.options && a.options.marker, i = {
                fill: h
            }, j;
            d && d.css({
                fill: c,
                color: c
            });
            e && e.attr({
                stroke: h
            });
            if (f) {
                if (g && f.isMarker)
                    for (j in i.stroke = h,
                    g = a.convertAttribs(g),
                    g)
                        d = g[j],
                        d !== r && (i[j] = d);
                f.attr(i)
            }
        },
        positionItem: function(a) {
            var b = this.options
              , c = b.symbolPadding
              , b = !b.rtl
              , d = a._legendItemPos
              , e = d[0]
              , d = d[1]
              , f = a.checkbox;
            a.legendGroup && a.legendGroup.translate(b ? e : this.legendWidth - e - 2 * c - 4, d);
            if (f)
                f.x = e,
                f.y = d
        },
        destroyItem: function(a) {
            var b = a.checkbox;
            p(["legendItem", "legendLine", "legendSymbol", "legendGroup"], function(b) {
                a[b] && (a[b] = a[b].destroy())
            });
            b && Va(a.checkbox)
        },
        destroy: function() {
            var a = this.group
              , b = this.box;
            if (b)
                this.box = b.destroy();
            if (a)
                this.group = a.destroy()
        },
        positionCheckboxes: function(a) {
            var b = this.group.alignAttr, c, d = this.clipHeight || this.legendHeight;
            if (b)
                c = b.translateY,
                p(this.allItems, function(e) {
                    var f = e.checkbox, g;
                    f && (g = c + f.y + (a || 0) + 3,
                    K(f, {
                        left: b.translateX + e.checkboxOffset + f.x - 20 + "px",
                        top: g + "px",
                        display: g > c - 6 && g < c + d - 6 ? "" : $
                    }))
                })
        },
        renderTitle: function() {
            var a = this.padding
              , b = this.options.title
              , c = 0;
            if (b.text) {
                if (!this.title)
                    this.title = this.chart.renderer.label(b.text, a - 3, a - 4, null, null, null, null, null, "legend-title").attr({
                        zIndex: 1
                    }).css(b.style).add(this.group);
                a = this.title.getBBox();
                c = a.height;
                this.offsetWidth = a.width;
                this.contentGroup.attr({
                    translateY: c
                })
            }
            this.titleHeight = c
        },
        renderItem: function(a) {
            var b = this.chart
              , c = b.renderer
              , d = this.options
              , e = d.layout === "horizontal"
              , f = this.symbolWidth
              , g = d.symbolPadding
              , h = this.itemStyle
              , i = this.itemHiddenStyle
              , j = this.padding
              , k = e ? q(d.itemDistance, 20) : 0
              , l = !d.rtl
              , m = d.width
              , n = d.itemMarginBottom || 0
              , o = this.itemMarginTop
              , x = this.initialItemX
              , p = a.legendItem
              , r = a.series && a.series.drawLegendSymbol ? a.series : a
              , w = r.options
              , w = this.createCheckboxForItem && w && w.showCheckbox
              , s = d.useHTML;
            if (!p) {
                a.legendGroup = c.g("legend-item").attr({
                    zIndex: 1
                }).add(this.scrollGroup);
                a.legendItem = p = c.text(d.labelFormat ? Ma(d.labelFormat, a) : d.labelFormatter.call(a), l ? f + g : -g, this.baseline || 0, s).css(y(a.visible ? h : i)).attr({
                    align: l ? "left" : "right",
                    zIndex: 2
                }).add(a.legendGroup);
                if (!this.baseline)
                    this.baseline = c.fontMetrics(h.fontSize, p).f + 3 + o,
                    p.attr("y", this.baseline);
                r.drawLegendSymbol(this, a);
                this.setItemEvents && this.setItemEvents(a, p, s, h, i);
                this.colorizeItem(a, a.visible);
                w && this.createCheckboxForItem(a)
            }
            c = p.getBBox();
            f = a.checkboxOffset = d.itemWidth || a.legendItemWidth || f + g + c.width + k + (w ? 20 : 0);
            this.itemHeight = g = t(a.legendItemHeight || c.height);
            if (e && this.itemX - x + f > (m || b.chartWidth - 2 * j - x - d.x))
                this.itemX = x,
                this.itemY += o + this.lastLineHeight + n,
                this.lastLineHeight = 0;
            this.maxItemWidth = v(this.maxItemWidth, f);
            this.lastItemY = o + this.itemY + n;
            this.lastLineHeight = v(g, this.lastLineHeight);
            a._legendItemPos = [this.itemX, this.itemY];
            e ? this.itemX += f : (this.itemY += o + g + n,
            this.lastLineHeight = g);
            this.offsetWidth = m || v((e ? this.itemX - x - k : f) + j, this.offsetWidth)
        },
        getAllItems: function() {
            var a = [];
            p(this.chart.series, function(b) {
                var c = b.options;
                if (q(c.showInLegend, !u(c.linkedTo) ? r : !1, !0))
                    a = a.concat(b.legendItems || (c.legendType === "point" ? b.data : b))
            });
            return a
        },
        render: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.group, e, f, g, h, i = a.box, j = a.options, k = a.padding, l = j.borderWidth, m = j.backgroundColor;
            a.itemX = a.initialItemX;
            a.itemY = a.initialItemY;
            a.offsetWidth = 0;
            a.lastItemY = 0;
            if (!d)
                a.group = d = c.g("legend").attr({
                    zIndex: 7
                }).add(),
                a.contentGroup = c.g().attr({
                    zIndex: 1
                }).add(d),
                a.scrollGroup = c.g().add(a.contentGroup);
            a.renderTitle();
            e = a.getAllItems();
            xb(e, function(a, b) {
                return (a.options && a.options.legendIndex || 0) - (b.options && b.options.legendIndex || 0)
            });
            j.reversed && e.reverse();
            a.allItems = e;
            a.display = f = !!e.length;
            p(e, function(b) {
                a.renderItem(b)
            });
            g = j.width || a.offsetWidth;
            h = a.lastItemY + a.lastLineHeight + a.titleHeight;
            h = a.handleOverflow(h);
            if (l || m) {
                g += k;
                h += k;
                if (i) {
                    if (g > 0 && h > 0)
                        i[i.isNew ? "attr" : "animate"](i.crisp({
                            width: g,
                            height: h
                        })),
                        i.isNew = !1
                } else
                    a.box = i = c.rect(0, 0, g, h, j.borderRadius, l || 0).attr({
                        stroke: j.borderColor,
                        "stroke-width": l || 0,
                        fill: m || $
                    }).add(d).shadow(j.shadow),
                    i.isNew = !0;
                i[f ? "show" : "hide"]()
            }
            a.legendWidth = g;
            a.legendHeight = h;
            p(e, function(b) {
                a.positionItem(b)
            });
            f && d.align(s({
                width: g,
                height: h
            }, j), !0, "spacingBox");
            b.isResizing || this.positionCheckboxes()
        },
        handleOverflow: function(a) {
            var b = this, c = this.chart, d = c.renderer, e = this.options, f = e.y, f = c.spacingBox.height + (e.verticalAlign === "top" ? -f : f) - this.padding, g = e.maxHeight, h, i = this.clipRect, j = e.navigation, k = q(j.animation, !0), l = j.arrowSize || 12, m = this.nav, n = this.pages, o, x = this.allItems;
            e.layout === "horizontal" && (f /= 2);
            g && (f = A(f, g));
            n.length = 0;
            if (a > f && !e.useHTML) {
                this.clipHeight = h = v(f - 20 - this.titleHeight - this.padding, 0);
                this.currentPage = q(this.currentPage, 1);
                this.fullHeight = a;
                p(x, function(a, b) {
                    var c = a._legendItemPos[1]
                      , d = t(a.legendItem.getBBox().height)
                      , e = n.length;
                    if (!e || c - n[e - 1] > h && (o || c) !== n[e - 1])
                        n.push(o || c),
                        e++;
                    b === x.length - 1 && c + d - n[e - 1] > h && n.push(c);
                    c !== o && (o = c)
                });
                if (!i)
                    i = b.clipRect = d.clipRect(0, this.padding, 9999, 0),
                    b.contentGroup.clip(i);
                i.attr({
                    height: h
                });
                if (!m)
                    this.nav = m = d.g().attr({
                        zIndex: 1
                    }).add(this.group),
                    this.up = d.symbol("triangle", 0, 0, l, l).on("click", function() {
                        b.scroll(-1, k)
                    }).add(m),
                    this.pager = d.text("", 15, 10).css(j.style).add(m),
                    this.down = d.symbol("triangle-down", 0, 0, l, l).on("click", function() {
                        b.scroll(1, k)
                    }).add(m);
                b.scroll(0);
                a = f
            } else if (m)
                i.attr({
                    height: c.chartHeight
                }),
                m.hide(),
                this.scrollGroup.attr({
                    translateY: 1
                }),
                this.clipHeight = 0;
            return a
        },
        scroll: function(a, b) {
            var c = this.pages
              , d = c.length
              , e = this.currentPage + a
              , f = this.clipHeight
              , g = this.options.navigation
              , h = g.activeColor
              , g = g.inactiveColor
              , i = this.pager
              , j = this.padding;
            e > d && (e = d);
            if (e > 0)
                b !== r && ab(b, this.chart),
                this.nav.attr({
                    translateX: j,
                    translateY: f + this.padding + 7 + this.titleHeight,
                    visibility: "visible"
                }),
                this.up.attr({
                    fill: e === 1 ? g : h
                }).css({
                    cursor: e === 1 ? "default" : "pointer"
                }),
                i.attr({
                    text: e + "/" + d
                }),
                this.down.attr({
                    x: 18 + this.pager.getBBox().width,
                    fill: e === d ? g : h
                }).css({
                    cursor: e === d ? "default" : "pointer"
                }),
                c = -c[e - 1] + this.initialItemY,
                this.scrollGroup.animate({
                    translateY: c
                }),
                this.currentPage = e,
                this.positionCheckboxes(c)
        }
    };
    T = N.LegendSymbolMixin = {
        drawRectangle: function(a, b) {
            var c = a.options.symbolHeight || 12;
            b.legendSymbol = this.chart.renderer.rect(0, a.baseline - 5 - c / 2, a.symbolWidth, c, a.options.symbolRadius || 0).attr({
                zIndex: 3
            }).add(b.legendGroup)
        },
        drawLineMarker: function(a) {
            var b = this.options, c = b.marker, d;
            d = a.symbolWidth;
            var e = this.chart.renderer, f = this.legendGroup, a = a.baseline - t(e.fontMetrics(a.options.itemStyle.fontSize, this.legendItem).b * 0.3), g;
            if (b.lineWidth) {
                g = {
                    "stroke-width": b.lineWidth
                };
                if (b.dashStyle)
                    g.dashstyle = b.dashStyle;
                this.legendLine = e.path(["M", 0, a, "L", d, a]).attr(g).add(f)
            }
            if (c && c.enabled !== !1)
                b = c.radius,
                this.legendSymbol = d = e.symbol(this.symbol, d / 2 - b, a - b, 2 * b, 2 * b).add(f),
                d.isMarker = !0
        }
    };
    (/Trident\/7\.0/.test(Ga) || cb) && Q(sb.prototype, "positionItem", function(a, b) {
        var c = this
          , d = function() {
            b._legendItemPos && a.call(c, b)
        };
        d();
        setTimeout(d)
    });
    ya.prototype = {
        init: function(a, b) {
            var c, d = a.series;
            a.series = null;
            c = y(F, a);
            c.series = a.series = d;
            this.userOptions = a;
            d = c.chart;
            this.margin = this.splashArray("margin", d);
            this.spacing = this.splashArray("spacing", d);
            var e = d.events;
            this.bounds = {
                h: {},
                v: {}
            };
            this.callback = b;
            this.isResizing = 0;
            this.options = c;
            this.axes = [];
            this.series = [];
            this.hasCartesianSeries = d.showAxes;
            var f = this, g;
            f.index = ba.length;
            ba.push(f);
            gb++;
            d.reflow !== !1 && z(f, "load", function() {
                f.initReflow()
            });
            if (e)
                for (g in e)
                    z(f, g, e[g]);
            f.xAxis = [];
            f.yAxis = [];
            f.animation = la ? !1 : q(d.animation, !0);
            f.pointCount = f.colorCounter = f.symbolCounter = 0;
            f.firstRender()
        },
        initSeries: function(a) {
            var b = this.options.chart;
            (b = B[a.type || b.type || b.defaultSeriesType]) || ma(17, !0);
            b = new b;
            b.init(this, a);
            return b
        },
        isInsidePlot: function(a, b, c) {
            var d = c ? b : a
              , a = c ? a : b;
            return d >= 0 && d <= this.plotWidth && a >= 0 && a <= this.plotHeight
        },
        adjustTickAmounts: function() {
            this.options.chart.alignTicks !== !1 && p(this.axes, function(a) {
                a.adjustTickAmount()
            });
            this.maxTicks = null
        },
        redraw: function(a) {
            var b = this.axes, c = this.series, d = this.pointer, e = this.legend, f = this.isDirtyLegend, g, h, i = this.hasCartesianSeries, j = this.isDirtyBox, k = c.length, l = k, m = this.renderer, n = m.isHidden(), o = [];
            ab(a, this);
            n && this.cloneRenderTo();
            for (this.layOutTitles(); l--; )
                if (a = c[l],
                a.options.stacking && (g = !0,
                a.isDirty)) {
                    h = !0;
                    break
                }
            if (h)
                for (l = k; l--; )
                    if (a = c[l],
                    a.options.stacking)
                        a.isDirty = !0;
            p(c, function(a) {
                a.isDirty && a.options.legendType === "point" && (f = !0)
            });
            if (f && e.options.enabled)
                e.render(),
                this.isDirtyLegend = !1;
            g && this.getStacks();
            if (i) {
                if (!this.isResizing)
                    this.maxTicks = null,
                    p(b, function(a) {
                        a.setScale()
                    });
                this.adjustTickAmounts()
            }
            this.getMargins();
            i && (p(b, function(a) {
                a.isDirty && (j = !0)
            }),
            p(b, function(a) {
                if (a.isDirtyExtremes)
                    a.isDirtyExtremes = !1,
                    o.push(function() {
                        J(a, "afterSetExtremes", s(a.eventArgs, a.getExtremes()));
                        delete a.eventArgs
                    });
                (j || g) && a.redraw()
            }));
            j && this.drawChartBox();
            p(c, function(a) {
                a.isDirty && a.visible && (!a.isCartesian || a.xAxis) && a.redraw()
            });
            d && d.reset(!0);
            m.draw();
            J(this, "redraw");
            n && this.cloneRenderTo(!0);
            p(o, function(a) {
                a.call()
            })
        },
        get: function(a) {
            var b = this.axes, c = this.series, d, e;
            for (d = 0; d < b.length; d++)
                if (b[d].options.id === a)
                    return b[d];
            for (d = 0; d < c.length; d++)
                if (c[d].options.id === a)
                    return c[d];
            for (d = 0; d < c.length; d++) {
                e = c[d].points || [];
                for (b = 0; b < e.length; b++)
                    if (e[b].id === a)
                        return e[b]
            }
            return null
        },
        getAxes: function() {
            var a = this
              , b = this.options
              , c = b.xAxis = qa(b.xAxis || {})
              , b = b.yAxis = qa(b.yAxis || {});
            p(c, function(a, b) {
                a.index = b;
                a.isX = !0
            });
            p(b, function(a, b) {
                a.index = b
            });
            c = c.concat(b);
            p(c, function(b) {
                new D(a,b)
            });
            a.adjustTickAmounts()
        },
        getSelectedPoints: function() {
            var a = [];
            p(this.series, function(b) {
                a = a.concat(qb(b.points || [], function(a) {
                    return a.selected
                }))
            });
            return a
        },
        getSelectedSeries: function() {
            return qb(this.series, function(a) {
                return a.selected
            })
        },
        getStacks: function() {
            var a = this;
            p(a.yAxis, function(a) {
                if (a.stacks && a.hasVisibleSeries)
                    a.oldStacks = a.stacks
            });
            p(a.series, function(b) {
                if (b.options.stacking && (b.visible === !0 || a.options.chart.ignoreHiddenSeries === !1))
                    b.stackKey = b.type + q(b.options.stack, "")
            })
        },
        setTitle: function(a, b, c) {
            var g;
            var d = this, e = d.options, f;
            f = e.title = y(e.title, a);
            g = e.subtitle = y(e.subtitle, b),
            e = g;
            p([["title", a, f], ["subtitle", b, e]], function(a) {
                var b = a[0]
                  , c = d[b]
                  , e = a[1]
                  , a = a[2];
                c && e && (d[b] = c = c.destroy());
                a && a.text && !c && (d[b] = d.renderer.text(a.text, 0, 0, a.useHTML).attr({
                    align: a.align,
                    "class": "highcharts-" + b,
                    zIndex: a.zIndex || 4
                }).css(a.style).add())
            });
            d.layOutTitles(c)
        },
        layOutTitles: function(a) {
            var b = 0
              , c = this.title
              , d = this.subtitle
              , e = this.options
              , f = e.title
              , e = e.subtitle
              , g = this.renderer
              , h = this.spacingBox.width - 44;
            if (c && (c.css({
                width: (f.width || h) + "px"
            }).align(s({
                y: g.fontMetrics(f.style.fontSize, c).b - 3
            }, f), !1, "spacingBox"),
            !f.floating && !f.verticalAlign))
                b = c.getBBox().height;
            d && (d.css({
                width: (e.width || h) + "px"
            }).align(s({
                y: b + (f.margin - 13) + g.fontMetrics(f.style.fontSize, d).b
            }, e), !1, "spacingBox"),
            !e.floating && !e.verticalAlign && (b = Ya(b + d.getBBox().height)));
            c = this.titleOffset !== b;
            this.titleOffset = b;
            if (!this.isDirtyBox && c)
                this.isDirtyBox = c,
                this.hasRendered && q(a, !0) && this.isDirtyBox && this.redraw()
        },
        getChartSize: function() {
            var a = this.options.chart
              , b = a.width
              , a = a.height
              , c = this.renderToClone || this.renderTo;
            if (!u(b))
                this.containerWidth = pb(c, "width");
            if (!u(a))
                this.containerHeight = pb(c, "height");
            this.chartWidth = v(0, b || this.containerWidth || 600);
            this.chartHeight = v(0, q(a, this.containerHeight > 19 ? this.containerHeight : 400))
        },
        cloneRenderTo: function(a) {
            var b = this.renderToClone
              , c = this.container;
            a ? b && (this.renderTo.appendChild(c),
            Va(b),
            delete this.renderToClone) : (c && c.parentNode === this.renderTo && this.renderTo.removeChild(c),
            this.renderToClone = b = this.renderTo.cloneNode(0),
            K(b, {
                position: "absolute",
                top: "-9999px",
                display: "block"
            }),
            b.style.setProperty && b.style.setProperty("display", "block", "important"),
            E.body.appendChild(b),
            c && b.appendChild(c))
        },
        getContainer: function() {
            var a, b = this.options.chart, c, d, e;
            this.renderTo = a = b.renderTo;
            e = "highcharts-" + Fb++;
            if (Sa(a))
                this.renderTo = a = E.getElementById(a);
            a || ma(13, !0);
            c = H(Y(a, "data-highcharts-chart"));
            !isNaN(c) && ba[c] && ba[c].hasRendered && ba[c].destroy();
            Y(a, "data-highcharts-chart", this.index);
            a.innerHTML = "";
            !b.skipClone && !a.offsetWidth && this.cloneRenderTo();
            this.getChartSize();
            c = this.chartWidth;
            d = this.chartHeight;
            this.container = a = aa(Wa, {
                className: "highcharts-container" + (b.className ? " " + b.className : ""),
                id: e
            }, s({
                position: "relative",
                overflow: "hidden",
                width: c + "px",
                height: d + "px",
                textAlign: "left",
                lineHeight: "normal",
                zIndex: 0,
                "-webkit-tap-highlight-color": "rgba(0,0,0,0)"
            }, b.style), this.renderToClone || a);
            this._cursor = a.style.cursor;
            this.renderer = b.forExport ? new na(a,c,d,b.style,!0) : new Za(a,c,d,b.style);
            la && this.renderer.create(this, a, c, d)
        },
        getMargins: function() {
            var a = this.spacing, b, c = this.legend, d = this.margin, e = this.options.legend, f = q(e.margin, 20), g = e.x, h = e.y, i = e.align, j = e.verticalAlign, k = this.titleOffset;
            this.resetMargins();
            b = this.axisOffset;
            if (k && !u(d[0]))
                this.plotTop = v(this.plotTop, k + this.options.title.margin + a[0]);
            if (c.display && !e.floating)
                if (i === "right") {
                    if (!u(d[1]))
                        this.marginRight = v(this.marginRight, c.legendWidth - g + f + a[1])
                } else if (i === "left") {
                    if (!u(d[3]))
                        this.plotLeft = v(this.plotLeft, c.legendWidth + g + f + a[3])
                } else if (j === "top") {
                    if (!u(d[0]))
                        this.plotTop = v(this.plotTop, c.legendHeight + h + f + a[0])
                } else if (j === "bottom" && !u(d[2]))
                    this.marginBottom = v(this.marginBottom, c.legendHeight - h + f + a[2]);
            this.extraBottomMargin && (this.marginBottom += this.extraBottomMargin);
            this.extraTopMargin && (this.plotTop += this.extraTopMargin);
            this.hasCartesianSeries && p(this.axes, function(a) {
                a.getOffset()
            });
            u(d[3]) || (this.plotLeft += b[3]);
            u(d[0]) || (this.plotTop += b[0]);
            u(d[2]) || (this.marginBottom += b[2]);
            u(d[1]) || (this.marginRight += b[1]);
            this.setChartSize()
        },
        reflow: function(a) {
            var b = this
              , c = b.options.chart
              , d = b.renderTo
              , e = c.width || pb(d, "width")
              , f = c.height || pb(d, "height")
              , c = a ? a.target : S
              , d = function() {
                if (b.container)
                    b.setSize(e, f, !1),
                    b.hasUserSize = null
            };
            if (!b.hasUserSize && e && f && (c === S || c === E)) {
                if (e !== b.containerWidth || f !== b.containerHeight)
                    clearTimeout(b.reflowTimeout),
                    a ? b.reflowTimeout = setTimeout(d, 100) : d();
                b.containerWidth = e;
                b.containerHeight = f
            }
        },
        initReflow: function() {
            var a = this
              , b = function(b) {
                a.reflow(b)
            };
            z(S, "resize", b);
            z(a, "destroy", function() {
                U(S, "resize", b)
            })
        },
        setSize: function(a, b, c) {
            var d = this, e, f, g;
            d.isResizing += 1;
            g = function() {
                d && J(d, "endResize", null, function() {
                    d.isResizing -= 1
                })
            }
            ;
            ab(c, d);
            d.oldChartHeight = d.chartHeight;
            d.oldChartWidth = d.chartWidth;
            if (u(a))
                d.chartWidth = e = v(0, t(a)),
                d.hasUserSize = !!e;
            if (u(b))
                d.chartHeight = f = v(0, t(b));
            (Fa ? rb : K)(d.container, {
                width: e + "px",
                height: f + "px"
            }, Fa);
            d.setChartSize(!0);
            d.renderer.setSize(e, f, c);
            d.maxTicks = null;
            p(d.axes, function(a) {
                a.isDirty = !0;
                a.setScale()
            });
            p(d.series, function(a) {
                a.isDirty = !0
            });
            d.isDirtyLegend = !0;
            d.isDirtyBox = !0;
            d.layOutTitles();
            d.getMargins();
            d.redraw(c);
            d.oldChartHeight = null;
            J(d, "resize");
            Fa === !1 ? g() : setTimeout(g, Fa && Fa.duration || 500)
        },
        setChartSize: function(a) {
            var b = this.inverted, c = this.renderer, d = this.chartWidth, e = this.chartHeight, f = this.options.chart, g = this.spacing, h = this.clipOffset, i, j, k, l;
            this.plotLeft = i = t(this.plotLeft);
            this.plotTop = j = t(this.plotTop);
            this.plotWidth = k = v(0, t(d - i - this.marginRight));
            this.plotHeight = l = v(0, t(e - j - this.marginBottom));
            this.plotSizeX = b ? l : k;
            this.plotSizeY = b ? k : l;
            this.plotBorderWidth = f.plotBorderWidth || 0;
            this.spacingBox = c.spacingBox = {
                x: g[3],
                y: g[0],
                width: d - g[3] - g[1],
                height: e - g[0] - g[2]
            };
            this.plotBox = c.plotBox = {
                x: i,
                y: j,
                width: k,
                height: l
            };
            d = 2 * V(this.plotBorderWidth / 2);
            b = Ya(v(d, h[3]) / 2);
            c = Ya(v(d, h[0]) / 2);
            this.clipBox = {
                x: b,
                y: c,
                width: V(this.plotSizeX - v(d, h[1]) / 2 - b),
                height: v(0, V(this.plotSizeY - v(d, h[2]) / 2 - c))
            };
            a || p(this.axes, function(a) {
                a.setAxisSize();
                a.setAxisTranslation()
            })
        },
        resetMargins: function() {
            var a = this.spacing
              , b = this.margin;
            this.plotTop = q(b[0], a[0]);
            this.marginRight = q(b[1], a[1]);
            this.marginBottom = q(b[2], a[2]);
            this.plotLeft = q(b[3], a[3]);
            this.axisOffset = [0, 0, 0, 0];
            this.clipOffset = [0, 0, 0, 0]
        },
        drawChartBox: function() {
            var a = this.options.chart, b = this.renderer, c = this.chartWidth, d = this.chartHeight, e = this.chartBackground, f = this.plotBackground, g = this.plotBorder, h = this.plotBGImage, i = a.borderWidth || 0, j = a.backgroundColor, k = a.plotBackgroundColor, l = a.plotBackgroundImage, m = a.plotBorderWidth || 0, n, o = this.plotLeft, x = this.plotTop, q = this.plotWidth, p = this.plotHeight, w = this.plotBox, r = this.clipRect, t = this.clipBox;
            n = i + (a.shadow ? 8 : 0);
            if (i || j)
                if (e)
                    e.animate(e.crisp({
                        width: c - n,
                        height: d - n
                    }));
                else {
                    e = {
                        fill: j || $
                    };
                    if (i)
                        e.stroke = a.borderColor,
                        e["stroke-width"] = i;
                    this.chartBackground = b.rect(n / 2, n / 2, c - n, d - n, a.borderRadius, i).attr(e).addClass("highcharts-background").add().shadow(a.shadow)
                }
            if (k)
                f ? f.animate(w) : this.plotBackground = b.rect(o, x, q, p, 0).attr({
                    fill: k
                }).add().shadow(a.plotShadow);
            if (l)
                h ? h.animate(w) : this.plotBGImage = b.image(l, o, x, q, p).add();
            r ? r.animate({
                width: t.width,
                height: t.height
            }) : this.clipRect = b.clipRect(t);
            if (m)
                g ? g.animate(g.crisp({
                    x: o,
                    y: x,
                    width: q,
                    height: p,
                    strokeWidth: -m
                })) : this.plotBorder = b.rect(o, x, q, p, 0, -m).attr({
                    stroke: a.plotBorderColor,
                    "stroke-width": m,
                    fill: $,
                    zIndex: 1
                }).add();
            this.isDirtyBox = !1
        },
        propFromSeries: function() {
            var a = this, b = a.options.chart, c, d = a.options.series, e, f;
            p(["inverted", "angular", "polar"], function(g) {
                c = B[b.type || b.defaultSeriesType];
                f = a[g] || b[g] || c && c.prototype[g];
                for (e = d && d.length; !f && e--; )
                    (c = B[d[e].type]) && c.prototype[g] && (f = !0);
                a[g] = f
            })
        },
        linkSeries: function() {
            var a = this
              , b = a.series;
            p(b, function(a) {
                a.linkedSeries.length = 0
            });
            p(b, function(b) {
                var d = b.options.linkedTo;
                if (Sa(d) && (d = d === ":previous" ? a.series[b.index - 1] : a.get(d)))
                    d.linkedSeries.push(b),
                    b.linkedParent = d
            })
        },
        renderSeries: function() {
            p(this.series, function(a) {
                a.translate();
                a.setTooltipPoints && a.setTooltipPoints();
                a.render()
            })
        },
        renderLabels: function() {
            var a = this
              , b = a.options.labels;
            b.items && p(b.items, function(c) {
                var d = s(b.style, c.style)
                  , e = H(d.left) + a.plotLeft
                  , f = H(d.top) + a.plotTop + 12;
                delete d.left;
                delete d.top;
                a.renderer.text(c.html, e, f).attr({
                    zIndex: 2
                }).css(d).add()
            })
        },
        render: function() {
            var a = this.axes
              , b = this.renderer
              , c = this.options;
            this.setTitle();
            this.legend = new sb(this,c.legend);
            this.getStacks();
            p(a, function(a) {
                a.setScale()
            });
            this.getMargins();
            this.maxTicks = null;
            p(a, function(a) {
                a.setTickPositions(!0);
                a.setMaxTicks()
            });
            this.adjustTickAmounts();
            this.getMargins();
            this.drawChartBox();
            this.hasCartesianSeries && p(a, function(a) {
                a.render()
            });
            if (!this.seriesGroup)
                this.seriesGroup = b.g("series-group").attr({
                    zIndex: 3
                }).add();
            this.renderSeries();
            this.renderLabels();
            this.showCredits(c.credits);
            this.hasRendered = !0
        },
        showCredits: function(a) {
            if (a.enabled && !this.credits)
                this.credits = this.renderer.text(a.text, 0, 0).on("click", function() {
                    if (a.href)
                        location.href = a.href
                }).attr({
                    align: a.position.align,
                    zIndex: 8
                }).css(a.style).add().align(a.position)
        },
        destroy: function() {
            var a = this, b = a.axes, c = a.series, d = a.container, e, f = d && d.parentNode;
            J(a, "destroy");
            ba[a.index] = r;
            gb--;
            a.renderTo.removeAttribute("data-highcharts-chart");
            U(a);
            for (e = b.length; e--; )
                b[e] = b[e].destroy();
            for (e = c.length; e--; )
                c[e] = c[e].destroy();
            p("title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer".split(","), function(b) {
                var c = a[b];
                c && c.destroy && (a[b] = c.destroy())
            });
            if (d)
                d.innerHTML = "",
                U(d),
                f && Va(d);
            for (e in a)
                delete a[e]
        },
        isReadyToRender: function() {
            var a = this;
            return !ea && S == S.top && E.readyState !== "complete" || la && !S.canvg ? (la ? Vb.push(function() {
                a.firstRender()
            }, a.options.global.canvasToolsURL) : E.attachEvent("onreadystatechange", function() {
                E.detachEvent("onreadystatechange", a.firstRender);
                E.readyState === "complete" && a.firstRender()
            }),
            !1) : !0
        },
        firstRender: function() {
            var a = this
              , b = a.options
              , c = a.callback;
            if (a.isReadyToRender()) {
                a.getContainer();
                J(a, "init");
                a.resetMargins();
                a.setChartSize();
                a.propFromSeries();
                a.getAxes();
                p(b.series || [], function(b) {
                    a.initSeries(b)
                });
                a.linkSeries();
                J(a, "beforeRender");
                if (N.Pointer)
                    a.pointer = new $a(a,b);
                a.render();
                a.renderer.draw();
                c && c.apply(a, [a]);
                p(a.callbacks, function(b) {
                    b.apply(a, [a])
                });
                a.cloneRenderTo(!0);
                J(a, "load")
            }
        },
        splashArray: function(a, b) {
            var c = b[a]
              , c = ha(c) ? c : [c, c, c, c];
            return [q(b[a + "Top"], c[0]), q(b[a + "Right"], c[1]), q(b[a + "Bottom"], c[2]), q(b[a + "Left"], c[3])]
        }
    };
    ya.prototype.callbacks = [];
    ga = N.CenteredSeriesMixin = {
        getCenter: function() {
            var a = this.options, b = this.chart, c = 2 * (a.slicedOffset || 0), d, e = b.plotWidth - 2 * c, f = b.plotHeight - 2 * c, b = a.center, a = [q(b[0], "50%"), q(b[1], "50%"), a.size || "100%", a.innerSize || 0], g = A(e, f), h;
            return za(a, function(a, b) {
                h = /%$/.test(a);
                d = b < 2 || b === 2 && h;
                return (h ? [e, f, g, g][b] * H(a) / 100 : a) + (d ? c : 0)
            })
        }
    };
    var Ba = function() {};
    Ba.prototype = {
        init: function(a, b, c) {
            this.series = a;
            this.applyOptions(b, c);
            this.pointAttr = {};
            if (a.options.colorByPoint && (b = a.options.colors || a.chart.options.colors,
            this.color = this.color || b[a.colorCounter++],
            a.colorCounter === b.length))
                a.colorCounter = 0;
            a.chart.pointCount++;
            return this
        },
        applyOptions: function(a, b) {
            var c = this.series
              , d = c.options.pointValKey || c.pointValKey
              , a = Ba.prototype.optionsToObject.call(this, a);
            s(this, a);
            this.options = this.options ? s(this.options, a) : a;
            if (d)
                this.y = this[d];
            if (this.x === r && c)
                this.x = b === r ? c.autoIncrement() : b;
            return this
        },
        optionsToObject: function(a) {
            var b = {}
              , c = this.series
              , d = c.pointArrayMap || ["y"]
              , e = d.length
              , f = 0
              , g = 0;
            if (typeof a === "number" || a === null)
                b[d[0]] = a;
            else if (Ja(a)) {
                if (a.length > e) {
                    c = typeof a[0];
                    if (c === "string")
                        b.name = a[0];
                    else if (c === "number")
                        b.x = a[0];
                    f++
                }
                for (; g < e; )
                    b[d[g++]] = a[f++]
            } else if (typeof a === "object") {
                b = a;
                if (a.dataLabels)
                    c._hasPointLabels = !0;
                if (a.marker)
                    c._hasPointMarkers = !0
            }
            return b
        },
        destroy: function() {
            var a = this.series.chart, b = a.hoverPoints, c;
            a.pointCount--;
            if (b && (this.setState(),
            ta(b, this),
            !b.length))
                a.hoverPoints = null;
            if (this === a.hoverPoint)
                this.onMouseOut();
            if (this.graphic || this.dataLabel)
                U(this),
                this.destroyElements();
            this.legendItem && a.legend.destroyItem(this);
            for (c in this)
                this[c] = null
        },
        destroyElements: function() {
            for (var a = "graphic,dataLabel,dataLabelUpper,group,connector,shadowGroup".split(","), b, c = 6; c--; )
                b = a[c],
                this[b] && (this[b] = this[b].destroy())
        },
        getLabelConfig: function() {
            return {
                x: this.category,
                y: this.y,
                key: this.name || this.category,
                series: this.series,
                point: this,
                percentage: this.percentage,
                total: this.total || this.stackTotal
            }
        },
        tooltipFormatter: function(a) {
            var b = this.series
              , c = b.tooltipOptions
              , d = q(c.valueDecimals, "")
              , e = c.valuePrefix || ""
              , f = c.valueSuffix || "";
            p(b.pointArrayMap || ["y"], function(b) {
                b = "{point." + b;
                if (e || f)
                    a = a.replace(b + "}", e + b + "}" + f);
                a = a.replace(b + "}", b + ":,." + d + "f}")
            });
            return Ma(a, {
                point: this,
                series: this.series
            })
        },
        firePointEvent: function(a, b, c) {
            var d = this
              , e = this.series.options;
            (e.point.events[a] || d.options && d.options.events && d.options.events[a]) && this.importEvents();
            a === "click" && e.allowPointSelect && (c = function(a) {
                d.select(null, a.ctrlKey || a.metaKey || a.shiftKey)
            }
            );
            J(this, a, b, c)
        }
    };
    var M = function() {};
    M.prototype = {
        isCartesian: !0,
        type: "line",
        pointClass: Ba,
        sorted: !0,
        requireSorting: !0,
        pointAttrToOptions: {
            stroke: "lineColor",
            "stroke-width": "lineWidth",
            fill: "fillColor",
            r: "radius"
        },
        axisTypes: ["xAxis", "yAxis"],
        colorCounter: 0,
        parallelArrays: ["x", "y"],
        init: function(a, b) {
            var c = this, d, e, f = a.series, g = function(a, b) {
                return q(a.options.index, a._i) - q(b.options.index, b._i)
            };
            c.chart = a;
            c.options = b = c.setOptions(b);
            c.linkedSeries = [];
            c.bindAxes();
            s(c, {
                name: b.name,
                state: "",
                pointAttr: {},
                visible: b.visible !== !1,
                selected: b.selected === !0
            });
            if (la)
                b.animation = !1;
            e = b.events;
            for (d in e)
                z(c, d, e[d]);
            if (e && e.click || b.point && b.point.events && b.point.events.click || b.allowPointSelect)
                a.runTrackerClick = !0;
            c.getColor();
            c.getSymbol();
            p(c.parallelArrays, function(a) {
                c[a + "Data"] = []
            });
            c.setData(b.data, !1);
            if (c.isCartesian)
                a.hasCartesianSeries = !0;
            f.push(c);
            c._i = f.length - 1;
            xb(f, g);
            this.yAxis && xb(this.yAxis.series, g);
            p(f, function(a, b) {
                a.index = b;
                a.name = a.name || "Series " + (b + 1)
            })
        },
        bindAxes: function() {
            var a = this, b = a.options, c = a.chart, d;
            p(a.axisTypes || [], function(e) {
                p(c[e], function(c) {
                    d = c.options;
                    if (b[e] === d.index || b[e] !== r && b[e] === d.id || b[e] === r && d.index === 0)
                        c.series.push(a),
                        a[e] = c,
                        c.isDirty = !0
                });
                !a[e] && a.optionalAxis !== e && ma(18, !0)
            })
        },
        updateParallelArrays: function(a, b) {
            var c = a.series
              , d = arguments;
            p(c.parallelArrays, typeof b === "number" ? function(d) {
                var f = d === "y" && c.toYData ? c.toYData(a) : a[d];
                c[d + "Data"][b] = f
            }
            : function(a) {
                Array.prototype[b].apply(c[a + "Data"], Array.prototype.slice.call(d, 2))
            }
            )
        },
        autoIncrement: function() {
            var a = this.options
              , b = this.xIncrement
              , b = q(b, a.pointStart, 0);
            this.pointInterval = q(this.pointInterval, a.pointInterval, 1);
            this.xIncrement = b + this.pointInterval;
            return b
        },
        getSegments: function() {
            var a = -1, b = [], c, d = this.points, e = d.length;
            if (e)
                if (this.options.connectNulls) {
                    for (c = e; c--; )
                        d[c].y === null && d.splice(c, 1);
                    d.length && (b = [d])
                } else
                    p(d, function(c, g) {
                        c.y === null ? (g > a + 1 && b.push(d.slice(a + 1, g)),
                        a = g) : g === e - 1 && b.push(d.slice(a + 1, g + 1))
                    });
            this.segments = b
        },
        setOptions: function(a) {
            var b = this.chart
              , c = b.options.plotOptions
              , b = b.userOptions || {}
              , d = b.plotOptions || {}
              , e = c[this.type];
            this.userOptions = a;
            c = y(e, c.series, a);
            this.tooltipOptions = y(F.tooltip, F.plotOptions[this.type].tooltip, b.tooltip, d.series && d.series.tooltip, d[this.type] && d[this.type].tooltip, a.tooltip);
            e.marker === null && delete c.marker;
            return c
        },
        getCyclic: function(a, b, c) {
            var d = this.userOptions
              , e = "_" + a + "Index"
              , f = a + "Counter";
            b || (u(d[e]) ? b = d[e] : (d[e] = b = this.chart[f] % c.length,
            this.chart[f] += 1),
            b = c[b]);
            this[a] = b
        },
        getColor: function() {
            this.options.colorByPoint || this.getCyclic("color", this.options.color || W[this.type].color, this.chart.options.colors)
        },
        getSymbol: function() {
            var a = this.options.marker;
            this.getCyclic("symbol", a.symbol, this.chart.options.symbols);
            if (/^url/.test(this.symbol))
                a.radius = 0
        },
        drawLegendSymbol: T.drawLineMarker,
        setData: function(a, b, c, d) {
            var e = this, f = e.points, g = f && f.length || 0, h, i = e.options, j = e.chart, k = null, l = e.xAxis, m = l && !!l.categories, n = e.tooltipPoints, o = i.turboThreshold, x = this.xData, I = this.yData, t = (h = e.pointArrayMap) && h.length, a = a || [];
            h = a.length;
            b = q(b, !0);
            if (d !== !1 && h && g === h && !e.cropped && !e.hasGroupedData)
                p(a, function(a, b) {
                    f[b].update(a, !1, null, !1)
                });
            else {
                e.xIncrement = null;
                e.pointRange = m ? 1 : i.pointRange;
                e.colorCounter = 0;
                p(this.parallelArrays, function(a) {
                    e[a + "Data"].length = 0
                });
                if (o && h > o) {
                    for (c = 0; k === null && c < h; )
                        k = a[c],
                        c++;
                    if (pa(k)) {
                        m = q(i.pointStart, 0);
                        i = q(i.pointInterval, 1);
                        for (c = 0; c < h; c++)
                            x[c] = m,
                            I[c] = a[c],
                            m += i;
                        e.xIncrement = m
                    } else if (Ja(k))
                        if (t)
                            for (c = 0; c < h; c++)
                                i = a[c],
                                x[c] = i[0],
                                I[c] = i.slice(1, t + 1);
                        else
                            for (c = 0; c < h; c++)
                                i = a[c],
                                x[c] = i[0],
                                I[c] = i[1];
                    else
                        ma(12)
                } else
                    for (c = 0; c < h; c++)
                        if (a[c] !== r && (i = {
                            series: e
                        },
                        e.pointClass.prototype.applyOptions.apply(i, [a[c]]),
                        e.updateParallelArrays(i, c),
                        m && i.name))
                            l.names[i.x] = i.name;
                Sa(I[0]) && ma(14, !0);
                e.data = [];
                e.options.data = a;
                for (c = g; c--; )
                    f[c] && f[c].destroy && f[c].destroy();
                if (n)
                    n.length = 0;
                if (l)
                    l.minRange = l.userMinRange;
                e.isDirty = e.isDirtyData = j.isDirtyBox = !0;
                c = !1
            }
            b && j.redraw(c)
        },
        processData: function(a) {
            var b = this.xData, c = this.yData, d = b.length, e;
            e = 0;
            var f, g, h = this.xAxis, i, j = this.options;
            i = j.cropThreshold;
            var k = 0, l = this.isCartesian, m, n;
            if (l && !this.isDirty && !h.isDirty && !this.yAxis.isDirty && !a)
                return !1;
            if (h)
                m = h.getExtremes(),
                n = m.min,
                m = m.max;
            if (l && this.sorted && (!i || d > i || this.forceCrop))
                if (b[d - 1] < n || b[0] > m)
                    b = [],
                    c = [];
                else if (b[0] < n || b[d - 1] > m)
                    e = this.cropData(this.xData, this.yData, n, m),
                    b = e.xData,
                    c = e.yData,
                    e = e.start,
                    f = !0,
                    k = b.length;
            for (i = b.length - 1; i >= 0; i--)
                d = b[i] - b[i - 1],
                !f && b[i] > n && b[i] < m && k++,
                d > 0 && (g === r || d < g) ? g = d : d < 0 && this.requireSorting && ma(15);
            this.cropped = f;
            this.cropStart = e;
            this.processedXData = b;
            this.processedYData = c;
            this.activePointCount = k;
            if (j.pointRange === null)
                this.pointRange = g || 1;
            this.closestPointRange = g
        },
        cropData: function(a, b, c, d) {
            var e = a.length, f = 0, g = e, h = q(this.cropShoulder, 1), i;
            for (i = 0; i < e; i++)
                if (a[i] >= c) {
                    f = v(0, i - h);
                    break
                }
            for (; i < e; i++)
                if (a[i] > d) {
                    g = i + h;
                    break
                }
            return {
                xData: a.slice(f, g),
                yData: b.slice(f, g),
                start: f,
                end: g
            }
        },
        generatePoints: function() {
            var a = this.options.data, b = this.data, c, d = this.processedXData, e = this.processedYData, f = this.pointClass, g = d.length, h = this.cropStart || 0, i, j = this.hasGroupedData, k, l = [], m;
            if (!b && !j)
                b = [],
                b.length = a.length,
                b = this.data = b;
            for (m = 0; m < g; m++)
                i = h + m,
                j ? l[m] = (new f).init(this, [d[m]].concat(qa(e[m]))) : (b[i] ? k = b[i] : a[i] !== r && (b[i] = k = (new f).init(this, a[i], d[m])),
                l[m] = k),
                l[m].index = i;
            if (b && (g !== (c = b.length) || j))
                for (m = 0; m < c; m++)
                    if (m === h && !j && (m += g),
                    b[m])
                        b[m].destroyElements(),
                        b[m].plotX = r;
            this.data = b;
            this.points = l
        },
        getExtremes: function(a) {
            var b = this.yAxis, c = this.processedXData, d, e = [], f = 0;
            d = this.xAxis.getExtremes();
            var g = d.min, h = d.max, i, j, k, l, a = a || this.stackedYData || this.processedYData;
            d = a.length;
            for (l = 0; l < d; l++)
                if (j = c[l],
                k = a[l],
                i = k !== null && k !== r && (!b.isLog || k.length || k > 0),
                j = this.getExtremesFromAll || this.cropped || (c[l + 1] || j) >= g && (c[l - 1] || j) <= h,
                i && j)
                    if (i = k.length)
                        for (; i--; )
                            k[i] !== null && (e[f++] = k[i]);
                    else
                        e[f++] = k;
            this.dataMin = q(void 0, Ua(e));
            this.dataMax = q(void 0, Ea(e))
        },
        translate: function() {
            this.processedXData || this.processData();
            this.generatePoints();
            for (var a = this.options, b = a.stacking, c = this.xAxis, d = c.categories, e = this.yAxis, f = this.points, g = f.length, h = !!this.modifyValue, i = a.pointPlacement, j = i === "between" || pa(i), k = a.threshold, a = 0; a < g; a++) {
                var l = f[a]
                  , m = l.x
                  , n = l.y
                  , o = l.low
                  , x = b && e.stacks[(this.negStacks && n < k ? "-" : "") + this.stackKey];
                if (e.isLog && n <= 0)
                    l.y = n = null,
                    ma(10);
                l.plotX = c.translate(m, 0, 0, 0, 1, i, this.type === "flags");
                if (b && this.visible && x && x[m])
                    x = x[m],
                    n = x.points[this.index + "," + a],
                    o = n[0],
                    n = n[1],
                    o === 0 && (o = q(k, e.min)),
                    e.isLog && o <= 0 && (o = null),
                    l.total = l.stackTotal = x.total,
                    l.percentage = x.total && l.y / x.total * 100,
                    l.stackY = n,
                    x.setOffset(this.pointXOffset || 0, this.barW || 0);
                l.yBottom = u(o) ? e.translate(o, 0, 1, 0, 1) : null;
                h && (n = this.modifyValue(n, l));
                l.plotY = typeof n === "number" && n !== Infinity ? e.translate(n, 0, 1, 0, 1) : r;
                l.clientX = j ? c.translate(m, 0, 0, 0, 1) : l.plotX;
                l.negative = l.y < (k || 0);
                l.category = d && d[l.x] !== r ? d[l.x] : l.x
            }
            this.getSegments()
        },
        animate: function(a) {
            var b = this.chart, c = b.renderer, d;
            d = this.options.animation;
            var e = this.clipBox || b.clipBox, f = b.inverted, g;
            if (d && !ha(d))
                d = W[this.type].animation;
            g = ["_sharedClip", d.duration, d.easing, e.height].join(",");
            a ? (a = b[g],
            d = b[g + "m"],
            a || (b[g] = a = c.clipRect(s(e, {
                width: 0
            })),
            b[g + "m"] = d = c.clipRect(-99, f ? -b.plotLeft : -b.plotTop, 99, f ? b.chartWidth : b.chartHeight)),
            this.group.clip(a),
            this.markerGroup.clip(d),
            this.sharedClipKey = g) : ((a = b[g]) && a.animate({
                width: b.plotSizeX
            }, d),
            b[g + "m"] && b[g + "m"].animate({
                width: b.plotSizeX + 99
            }, d),
            this.animate = null)
        },
        afterAnimate: function() {
            var a = this.chart
              , b = this.sharedClipKey
              , c = this.group
              , d = this.clipBox;
            if (c && this.options.clip !== !1) {
                if (!b || !d)
                    c.clip(d ? a.renderer.clipRect(d) : a.clipRect);
                this.markerGroup.clip()
            }
            J(this, "afterAnimate");
            setTimeout(function() {
                b && a[b] && (d || (a[b] = a[b].destroy()),
                a[b + "m"] && (a[b + "m"] = a[b + "m"].destroy()))
            }, 100)
        },
        drawPoints: function() {
            var a, b = this.points, c = this.chart, d, e, f, g, h, i, j, k, l = this.options.marker, m = this.pointAttr[""], n, o, x, p = this.markerGroup, oa = q(l.enabled, !this.requireSorting || this.activePointCount < 0.5 * this.xAxis.len / l.radius);
            if (l.enabled !== !1 || this._hasPointMarkers)
                for (f = b.length; f--; )
                    if (g = b[f],
                    d = V(g.plotX),
                    e = g.plotY,
                    k = g.graphic,
                    n = g.marker || {},
                    o = !!g.marker,
                    a = oa && n.enabled === r || n.enabled,
                    x = c.isInsidePlot(t(d), e, c.inverted),
                    a && e !== r && !isNaN(e) && g.y !== null)
                        if (a = g.pointAttr[g.selected ? "select" : ""] || m,
                        h = a.r,
                        i = q(n.symbol, this.symbol),
                        j = i.indexOf("url") === 0,
                        k)
                            k[x ? "show" : "hide"](!0).animate(s({
                                x: d - h,
                                y: e - h
                            }, k.symbolName ? {
                                width: 2 * h,
                                height: 2 * h
                            } : {}));
                        else {
                            if (x && (h > 0 || j))
                                g.graphic = c.renderer.symbol(i, d - h, e - h, 2 * h, 2 * h, o ? n : l).attr(a).add(p)
                        }
                    else if (k)
                        g.graphic = k.destroy()
        },
        convertAttribs: function(a, b, c, d) {
            var e = this.pointAttrToOptions, f, g, h = {}, a = a || {}, b = b || {}, c = c || {}, d = d || {};
            for (f in e)
                g = e[f],
                h[f] = q(a[g], b[f], c[f], d[f]);
            return h
        },
        getAttribs: function() {
            var a = this, b = a.options, c = W[a.type].marker ? b.marker : b, d = c.states, e = d.hover, f, g = a.color;
            f = {
                stroke: g,
                fill: g
            };
            var h = a.points || [], i, j = [], k, l = a.pointAttrToOptions;
            k = a.hasPointSpecificOptions;
            var m = b.negativeColor
              , n = c.lineColor
              , o = c.fillColor;
            i = b.turboThreshold;
            var q;
            b.marker ? (e.radius = e.radius || c.radius + e.radiusPlus,
            e.lineWidth = e.lineWidth || c.lineWidth + e.lineWidthPlus) : e.color = e.color || Ia(e.color || g).brighten(e.brightness).get();
            j[""] = a.convertAttribs(c, f);
            p(["hover", "select"], function(b) {
                j[b] = a.convertAttribs(d[b], j[""])
            });
            a.pointAttr = j;
            g = h.length;
            if (!i || g < i || k)
                for (; g--; ) {
                    i = h[g];
                    if ((c = i.options && i.options.marker || i.options) && c.enabled === !1)
                        c.radius = 0;
                    if (i.negative && m)
                        i.color = i.fillColor = m;
                    k = b.colorByPoint || i.color;
                    if (i.options)
                        for (q in l)
                            u(c[l[q]]) && (k = !0);
                    if (k) {
                        c = c || {};
                        k = [];
                        d = c.states || {};
                        f = d.hover = d.hover || {};
                        if (!b.marker)
                            f.color = f.color || !i.options.color && e.color || Ia(i.color).brighten(f.brightness || e.brightness).get();
                        f = {
                            color: i.color
                        };
                        if (!o)
                            f.fillColor = i.color;
                        if (!n)
                            f.lineColor = i.color;
                        k[""] = a.convertAttribs(s(f, c), j[""]);
                        k.hover = a.convertAttribs(d.hover, j.hover, k[""]);
                        k.select = a.convertAttribs(d.select, j.select, k[""])
                    } else
                        k = j;
                    i.pointAttr = k
                }
        },
        destroy: function() {
            var a = this, b = a.chart, c = /AppleWebKit\/533/.test(Ga), d, e, f = a.data || [], g, h, i;
            J(a, "destroy");
            U(a);
            p(a.axisTypes || [], function(b) {
                if (i = a[b])
                    ta(i.series, a),
                    i.isDirty = i.forceRedraw = !0
            });
            a.legendItem && a.chart.legend.destroyItem(a);
            for (e = f.length; e--; )
                (g = f[e]) && g.destroy && g.destroy();
            a.points = null;
            clearTimeout(a.animationTimeout);
            p("area,graph,dataLabelsGroup,group,markerGroup,tracker,graphNeg,areaNeg,posClip,negClip".split(","), function(b) {
                a[b] && (d = c && b === "group" ? "hide" : "destroy",
                a[b][d]())
            });
            if (b.hoverSeries === a)
                b.hoverSeries = null;
            ta(b.series, a);
            for (h in a)
                delete a[h]
        },
        getSegmentPath: function(a) {
            var b = this
              , c = []
              , d = b.options.step;
            p(a, function(e, f) {
                var g = e.plotX, h = e.plotY, i;
                b.getPointSpline ? c.push.apply(c, b.getPointSpline(a, e, f)) : (c.push(f ? "L" : "M"),
                d && f && (i = a[f - 1],
                d === "right" ? c.push(i.plotX, h) : d === "center" ? c.push((i.plotX + g) / 2, i.plotY, (i.plotX + g) / 2, h) : c.push(g, i.plotY)),
                c.push(e.plotX, e.plotY))
            });
            return c
        },
        getGraphPath: function() {
            var a = this, b = [], c, d = [];
            p(a.segments, function(e) {
                c = a.getSegmentPath(e);
                e.length > 1 ? b = b.concat(c) : d.push(e[0])
            });
            a.singlePoints = d;
            return a.graphPath = b
        },
        drawGraph: function() {
            var a = this
              , b = this.options
              , c = [["graph", b.lineColor || this.color]]
              , d = b.lineWidth
              , e = b.dashStyle
              , f = b.linecap !== "square"
              , g = this.getGraphPath()
              , h = b.negativeColor;
            h && c.push(["graphNeg", h]);
            p(c, function(c, h) {
                var k = c[0]
                  , l = a[k];
                if (l)
                    hb(l),
                    l.animate({
                        d: g
                    });
                else if (d && g.length)
                    l = {
                        stroke: c[1],
                        "stroke-width": d,
                        fill: $,
                        zIndex: 1
                    },
                    e ? l.dashstyle = e : f && (l["stroke-linecap"] = l["stroke-linejoin"] = "round"),
                    a[k] = a.chart.renderer.path(g).attr(l).add(a.group).shadow(!h && b.shadow)
            })
        },
        clipNeg: function() {
            var a = this.options, b = this.chart, c = b.renderer, d = a.negativeColor || a.negativeFillColor, e, f = this.graph, g = this.area, h = this.posClip, i = this.negClip;
            e = b.chartWidth;
            var j = b.chartHeight
              , k = v(e, j)
              , l = this.yAxis;
            if (d && (f || g)) {
                d = t(l.toPixels(a.threshold || 0, !0));
                d < 0 && (k -= d);
                a = {
                    x: 0,
                    y: 0,
                    width: k,
                    height: d
                };
                k = {
                    x: 0,
                    y: d,
                    width: k,
                    height: k
                };
                if (b.inverted)
                    a.height = k.y = b.plotWidth - d,
                    c.isVML && (a = {
                        x: b.plotWidth - d - b.plotLeft,
                        y: 0,
                        width: e,
                        height: j
                    },
                    k = {
                        x: d + b.plotLeft - e,
                        y: 0,
                        width: b.plotLeft + d,
                        height: e
                    });
                l.reversed ? (b = k,
                e = a) : (b = a,
                e = k);
                h ? (h.animate(b),
                i.animate(e)) : (this.posClip = h = c.clipRect(b),
                this.negClip = i = c.clipRect(e),
                f && this.graphNeg && (f.clip(h),
                this.graphNeg.clip(i)),
                g && (g.clip(h),
                this.areaNeg.clip(i)))
            }
        },
        invertGroups: function() {
            function a() {
                var a = {
                    width: b.yAxis.len,
                    height: b.xAxis.len
                };
                p(["group", "markerGroup"], function(c) {
                    b[c] && b[c].attr(a).invert()
                })
            }
            var b = this
              , c = b.chart;
            if (b.xAxis)
                z(c, "resize", a),
                z(b, "destroy", function() {
                    U(c, "resize", a)
                }),
                a(),
                b.invertGroups = a
        },
        plotGroup: function(a, b, c, d, e) {
            var f = this[a]
              , g = !f;
            g && (this[a] = f = this.chart.renderer.g(b).attr({
                visibility: c,
                zIndex: d || 0.1
            }).add(e));
            f[g ? "attr" : "animate"](this.getPlotBox());
            return f
        },
        getPlotBox: function() {
            var a = this.chart
              , b = this.xAxis
              , c = this.yAxis;
            if (a.inverted)
                b = c,
                c = this.xAxis;
            return {
                translateX: b ? b.left : a.plotLeft,
                translateY: c ? c.top : a.plotTop,
                scaleX: 1,
                scaleY: 1
            }
        },
        render: function() {
            var a = this, b = a.chart, c, d = a.options, e = (c = d.animation) && !!a.animate && b.renderer.isSVG && q(c.duration, 500) || 0, f = a.visible ? "visible" : "hidden", g = d.zIndex, h = a.hasRendered, i = b.seriesGroup;
            c = a.plotGroup("group", "series", f, g, i);
            a.markerGroup = a.plotGroup("markerGroup", "markers", f, g, i);
            e && a.animate(!0);
            a.getAttribs();
            c.inverted = a.isCartesian ? b.inverted : !1;
            a.drawGraph && (a.drawGraph(),
            a.clipNeg());
            p(a.points, function(a) {
                a.redraw && a.redraw()
            });
            a.drawDataLabels && a.drawDataLabels();
            a.visible && a.drawPoints();
            a.drawTracker && a.options.enableMouseTracking !== !1 && a.drawTracker();
            b.inverted && a.invertGroups();
            d.clip !== !1 && !a.sharedClipKey && !h && c.clip(b.clipRect);
            e && a.animate();
            if (!h)
                e ? a.animationTimeout = setTimeout(function() {
                    a.afterAnimate()
                }, e) : a.afterAnimate();
            a.isDirty = a.isDirtyData = !1;
            a.hasRendered = !0
        },
        redraw: function() {
            var a = this.chart
              , b = this.isDirtyData
              , c = this.group
              , d = this.xAxis
              , e = this.yAxis;
            c && (a.inverted && c.attr({
                width: a.plotWidth,
                height: a.plotHeight
            }),
            c.animate({
                translateX: q(d && d.left, a.plotLeft),
                translateY: q(e && e.top, a.plotTop)
            }));
            this.translate();
            this.setTooltipPoints && this.setTooltipPoints(!0);
            this.render();
            b && J(this, "updatedData")
        }
    };
    Rb.prototype = {
        destroy: function() {
            Na(this, this.axis)
        },
        render: function(a) {
            var b = this.options
              , c = b.format
              , c = c ? Ma(c, this) : b.formatter.call(this);
            this.label ? this.label.attr({
                text: c,
                visibility: "hidden"
            }) : this.label = this.axis.chart.renderer.text(c, null, null, b.useHTML).css(b.style).attr({
                align: this.textAlign,
                rotation: b.rotation,
                visibility: "hidden"
            }).add(a)
        },
        setOffset: function(a, b) {
            var c = this.axis
              , d = c.chart
              , e = d.inverted
              , f = this.isNegative
              , g = c.translate(c.usePercentage ? 100 : this.total, 0, 0, 0, 1)
              , c = c.translate(0)
              , c = P(g - c)
              , h = d.xAxis[0].translate(this.x) + a
              , i = d.plotHeight
              , f = {
                x: e ? f ? g : g - c : h,
                y: e ? i - h - b : f ? i - g - c : i - g,
                width: e ? c : b,
                height: e ? b : c
            };
            if (e = this.label)
                e.align(this.alignOptions, null, f),
                f = e.alignAttr,
                e[this.options.crop === !1 || d.isInsidePlot(f.x, f.y) ? "show" : "hide"](!0)
        }
    };
    D.prototype.buildStacks = function() {
        var a = this.series
          , b = q(this.options.reversedStacks, !0)
          , c = a.length;
        if (!this.isXAxis) {
            for (this.usePercentage = !1; c--; )
                a[b ? c : a.length - c - 1].setStackedPoints();
            if (this.usePercentage)
                for (c = 0; c < a.length; c++)
                    a[c].setPercentStacks()
        }
    }
    ;
    D.prototype.renderStackTotals = function() {
        var a = this.chart, b = a.renderer, c = this.stacks, d, e, f = this.stackTotalGroup;
        if (!f)
            this.stackTotalGroup = f = b.g("stack-labels").attr({
                visibility: "visible",
                zIndex: 6
            }).add();
        f.translate(a.plotLeft, a.plotTop);
        for (d in c)
            for (e in a = c[d],
            a)
                a[e].render(f)
    }
    ;
    M.prototype.setStackedPoints = function() {
        if (this.options.stacking && !(this.visible !== !0 && this.chart.options.chart.ignoreHiddenSeries !== !1)) {
            var a = this.processedXData, b = this.processedYData, c = [], d = b.length, e = this.options, f = e.threshold, g = e.stack, e = e.stacking, h = this.stackKey, i = "-" + h, j = this.negStacks, k = this.yAxis, l = k.stacks, m = k.oldStacks, n, o, q, p, r, w;
            for (p = 0; p < d; p++) {
                r = a[p];
                w = b[p];
                q = this.index + "," + p;
                o = (n = j && w < f) ? i : h;
                l[o] || (l[o] = {});
                if (!l[o][r])
                    m[o] && m[o][r] ? (l[o][r] = m[o][r],
                    l[o][r].total = null) : l[o][r] = new Rb(k,k.options.stackLabels,n,r,g);
                o = l[o][r];
                o.points[q] = [o.cum || 0];
                e === "percent" ? (n = n ? h : i,
                j && l[n] && l[n][r] ? (n = l[n][r],
                o.total = n.total = v(n.total, o.total) + P(w) || 0) : o.total = ja(o.total + (P(w) || 0))) : o.total = ja(o.total + (w || 0));
                o.cum = (o.cum || 0) + (w || 0);
                o.points[q].push(o.cum);
                c[p] = o.cum
            }
            if (e === "percent")
                k.usePercentage = !0;
            this.stackedYData = c;
            k.oldStacks = {}
        }
    }
    ;
    M.prototype.setPercentStacks = function() {
        var a = this
          , b = a.stackKey
          , c = a.yAxis.stacks
          , d = a.processedXData;
        p([b, "-" + b], function(b) {
            var e;
            for (var f = d.length, g, h; f--; )
                if (g = d[f],
                e = (h = c[b] && c[b][g]) && h.points[a.index + "," + f],
                g = e)
                    h = h.total ? 100 / h.total : 0,
                    g[0] = ja(g[0] * h),
                    g[1] = ja(g[1] * h),
                    a.stackedYData[f] = g[1]
        })
    }
    ;
    s(ya.prototype, {
        addSeries: function(a, b, c) {
            var d, e = this;
            a && (b = q(b, !0),
            J(e, "addSeries", {
                options: a
            }, function() {
                d = e.initSeries(a);
                e.isDirtyLegend = !0;
                e.linkSeries();
                b && e.redraw(c)
            }));
            return d
        },
        addAxis: function(a, b, c, d) {
            var e = b ? "xAxis" : "yAxis"
              , f = this.options;
            new D(this,y(a, {
                index: this[e].length,
                isX: b
            }));
            f[e] = qa(f[e] || {});
            f[e].push(a);
            q(c, !0) && this.redraw(d)
        },
        showLoading: function(a) {
            var b = this
              , c = b.options
              , d = b.loadingDiv
              , e = c.loading
              , f = function() {
                d && K(d, {
                    left: b.plotLeft + "px",
                    top: b.plotTop + "px",
                    width: b.plotWidth + "px",
                    height: b.plotHeight + "px"
                })
            };
            if (!d)
                b.loadingDiv = d = aa(Wa, {
                    className: "highcharts-loading"
                }, s(e.style, {
                    zIndex: 10,
                    display: $
                }), b.container),
                b.loadingSpan = aa("span", null, e.labelStyle, d),
                z(b, "redraw", f);
            b.loadingSpan.innerHTML = a || c.lang.loading;
            if (!b.loadingShown)
                K(d, {
                    opacity: 0,
                    display: ""
                }),
                rb(d, {
                    opacity: e.style.opacity
                }, {
                    duration: e.showDuration || 0
                }),
                b.loadingShown = !0;
            f()
        },
        hideLoading: function() {
            var a = this.options
              , b = this.loadingDiv;
            b && rb(b, {
                opacity: 0
            }, {
                duration: a.loading.hideDuration || 100,
                complete: function() {
                    K(b, {
                        display: $
                    })
                }
            });
            this.loadingShown = !1
        }
    });
    s(Ba.prototype, {
        update: function(a, b, c, d) {
            function e() {
                f.applyOptions(a);
                if (ha(a) && !Ja(a))
                    f.redraw = function() {
                        if (h)
                            a && a.marker && a.marker.symbol ? f.graphic = h.destroy() : h.attr(f.pointAttr[f.state || ""]);
                        if (a && a.dataLabels && f.dataLabel)
                            f.dataLabel = f.dataLabel.destroy();
                        f.redraw = null
                    }
                    ;
                i = f.index;
                g.updateParallelArrays(f, i);
                k.data[i] = f.options;
                g.isDirty = g.isDirtyData = !0;
                if (!g.fixedBox && g.hasCartesianSeries)
                    j.isDirtyBox = !0;
                k.legendType === "point" && j.legend.destroyItem(f);
                b && j.redraw(c)
            }
            var f = this, g = f.series, h = f.graphic, i, j = g.chart, k = g.options, b = q(b, !0);
            d === !1 ? e() : f.firePointEvent("update", {
                options: a
            }, e)
        },
        remove: function(a, b) {
            var c = this, d = c.series, e = d.points, f = d.chart, g, h = d.data;
            ab(b, f);
            a = q(a, !0);
            c.firePointEvent("remove", null, function() {
                g = Qa(c, h);
                h.length === e.length && e.splice(g, 1);
                h.splice(g, 1);
                d.options.data.splice(g, 1);
                d.updateParallelArrays(c, "splice", g, 1);
                c.destroy();
                d.isDirty = !0;
                d.isDirtyData = !0;
                a && f.redraw()
            })
        }
    });
    s(M.prototype, {
        addPoint: function(a, b, c, d) {
            var e = this.options, f = this.data, g = this.graph, h = this.area, i = this.chart, j = this.xAxis && this.xAxis.names, k = g && g.shift || 0, l = e.data, m, n = this.xData;
            ab(d, i);
            c && p([g, h, this.graphNeg, this.areaNeg], function(a) {
                if (a)
                    a.shift = k + 1
            });
            if (h)
                h.isArea = !0;
            b = q(b, !0);
            d = {
                series: this
            };
            this.pointClass.prototype.applyOptions.apply(d, [a]);
            g = d.x;
            h = n.length;
            if (this.requireSorting && g < n[h - 1])
                for (m = !0; h && n[h - 1] > g; )
                    h--;
            this.updateParallelArrays(d, "splice", h, 0, 0);
            this.updateParallelArrays(d, h);
            if (j && d.name)
                j[g] = d.name;
            l.splice(h, 0, a);
            m && (this.data.splice(h, 0, null),
            this.processData());
            e.legendType === "point" && this.generatePoints();
            c && (f[0] && f[0].remove ? f[0].remove(!1) : (f.shift(),
            this.updateParallelArrays(d, "shift"),
            l.shift()));
            this.isDirtyData = this.isDirty = !0;
            b && (this.getAttribs(),
            i.redraw())
        },
        remove: function(a, b) {
            var c = this
              , d = c.chart
              , a = q(a, !0);
            if (!c.isRemoving)
                c.isRemoving = !0,
                J(c, "remove", null, function() {
                    c.destroy();
                    d.isDirtyLegend = d.isDirtyBox = !0;
                    d.linkSeries();
                    a && d.redraw(b)
                });
            c.isRemoving = !1
        },
        update: function(a, b) {
            var c = this, d = this.chart, e = this.userOptions, f = this.type, g = B[f].prototype, h = ["group", "markerGroup", "dataLabelsGroup"], i;
            p(h, function(a) {
                h[a] = c[a];
                delete c[a]
            });
            a = y(e, {
                animation: !1,
                index: this.index,
                pointStart: this.xData[0]
            }, {
                data: this.options.data
            }, a);
            this.remove(!1);
            for (i in g)
                g.hasOwnProperty(i) && (this[i] = r);
            s(this, B[a.type || f].prototype);
            p(h, function(a) {
                c[a] = h[a]
            });
            this.init(d, a);
            d.linkSeries();
            q(b, !0) && d.redraw(!1)
        }
    });
    s(D.prototype, {
        update: function(a, b) {
            var c = this.chart
              , a = c.options[this.coll][this.options.index] = y(this.userOptions, a);
            this.destroy(!0);
            this._addedPlotLB = r;
            this.init(c, s(a, {
                events: r
            }));
            c.isDirtyBox = !0;
            q(b, !0) && c.redraw()
        },
        remove: function(a) {
            for (var b = this.chart, c = this.coll, d = this.series, e = d.length; e--; )
                d[e] && d[e].remove(!1);
            ta(b.axes, this);
            ta(b[c], this);
            b.options[c].splice(this.options.index, 1);
            p(b[c], function(a, b) {
                a.options.index = b
            });
            this.destroy();
            b.isDirtyBox = !0;
            q(a, !0) && b.redraw()
        },
        setTitle: function(a, b) {
            this.update({
                title: a
            }, b)
        },
        setCategories: function(a, b) {
            this.update({
                categories: a
            }, b)
        }
    });
    var Ca = ia(M);
    B.line = Ca;
    W.area = y(L, {
        threshold: 0
    });
    var wa = ia(M, {
        type: "area",
        getSegments: function() {
            var a = this, b = [], c = [], d = [], e = this.xAxis, f = this.yAxis, g = f.stacks[this.stackKey], h = {}, i, j, k = this.points, l = this.options.connectNulls, m, n;
            if (this.options.stacking && !this.cropped) {
                for (m = 0; m < k.length; m++)
                    h[k[m].x] = k[m];
                for (n in g)
                    g[n].total !== null && d.push(+n);
                d.sort(function(a, b) {
                    return a - b
                });
                p(d, function(b) {
                    var d = 0, k;
                    if (!l || h[b] && h[b].y !== null)
                        if (h[b])
                            c.push(h[b]);
                        else {
                            for (m = a.index; m <= f.series.length; m++)
                                if (k = g[b].points[m + "," + b]) {
                                    d = k[1];
                                    break
                                }
                            i = e.translate(b);
                            j = f.toPixels(d, !0);
                            c.push({
                                y: null,
                                plotX: i,
                                clientX: i,
                                plotY: j,
                                yBottom: j,
                                onMouseOver: ra
                            })
                        }
                });
                c.length && b.push(c)
            } else
                M.prototype.getSegments.call(this),
                b = this.segments;
            this.segments = b
        },
        getSegmentPath: function(a) {
            var b = M.prototype.getSegmentPath.call(this, a), c = [].concat(b), d, e = this.options;
            d = b.length;
            var f = this.yAxis.getThreshold(e.threshold), g;
            d === 3 && c.push("L", b[1], b[2]);
            if (e.stacking && !this.closedStacks)
                for (d = a.length - 1; d >= 0; d--)
                    g = q(a[d].yBottom, f),
                    d < a.length - 1 && e.step && c.push(a[d + 1].plotX, g),
                    c.push(a[d].plotX, g);
            else
                this.closeSegment(c, a, f);
            this.areaPath = this.areaPath.concat(c);
            return b
        },
        closeSegment: function(a, b, c) {
            a.push("L", b[b.length - 1].plotX, c, "L", b[0].plotX, c)
        },
        drawGraph: function() {
            this.areaPath = [];
            M.prototype.drawGraph.apply(this);
            var a = this
              , b = this.areaPath
              , c = this.options
              , d = c.negativeColor
              , e = c.negativeFillColor
              , f = [["area", this.color, c.fillColor]];
            (d || e) && f.push(["areaNeg", d, e]);
            p(f, function(d) {
                var e = d[0]
                  , f = a[e];
                f ? f.animate({
                    d: b
                }) : a[e] = a.chart.renderer.path(b).attr({
                    fill: q(d[2], Ia(d[1]).setOpacity(q(c.fillOpacity, 0.75)).get()),
                    zIndex: 0
                }).add(a.group)
            })
        },
        drawLegendSymbol: T.drawRectangle
    });
    B.area = wa;
    W.spline = y(L);
    Ca = ia(M, {
        type: "spline",
        getPointSpline: function(a, b, c) {
            var d = b.plotX, e = b.plotY, f = a[c - 1], g = a[c + 1], h, i, j, k;
            if (f && g) {
                a = f.plotY;
                j = g.plotX;
                var g = g.plotY, l;
                h = (1.5 * d + f.plotX) / 2.5;
                i = (1.5 * e + a) / 2.5;
                j = (1.5 * d + j) / 2.5;
                k = (1.5 * e + g) / 2.5;
                l = (k - i) * (j - d) / (j - h) + e - k;
                i += l;
                k += l;
                i > a && i > e ? (i = v(a, e),
                k = 2 * e - i) : i < a && i < e && (i = A(a, e),
                k = 2 * e - i);
                k > g && k > e ? (k = v(g, e),
                i = 2 * e - k) : k < g && k < e && (k = A(g, e),
                i = 2 * e - k);
                b.rightContX = j;
                b.rightContY = k
            }
            c ? (b = ["C", f.rightContX || f.plotX, f.rightContY || f.plotY, h || d, i || e, d, e],
            f.rightContX = f.rightContY = null) : b = ["M", d, e];
            return b
        }
    });
    B.spline = Ca;
    W.areaspline = y(W.area);
    wa = wa.prototype;
    Ca = ia(Ca, {
        type: "areaspline",
        closedStacks: !0,
        getSegmentPath: wa.getSegmentPath,
        closeSegment: wa.closeSegment,
        drawGraph: wa.drawGraph,
        drawLegendSymbol: T.drawRectangle
    });
    B.areaspline = Ca;
    W.column = y(L, {
        borderColor: "#FFFFFF",
        borderRadius: 0,
        groupPadding: 0.2,
        marker: null,
        pointPadding: 0.1,
        minPointLength: 0,
        cropThreshold: 50,
        pointRange: null,
        states: {
            hover: {
                brightness: 0.1,
                shadow: !1,
                halo: !1
            },
            select: {
                color: "#C0C0C0",
                borderColor: "#000000",
                shadow: !1
            }
        },
        dataLabels: {
            align: null,
            verticalAlign: null,
            y: null
        },
        stickyTracking: !1,
        tooltip: {
            distance: 6
        },
        threshold: 0
    });
    Ca = ia(M, {
        type: "column",
        pointAttrToOptions: {
            stroke: "borderColor",
            fill: "color",
            r: "borderRadius"
        },
        cropShoulder: 0,
        trackerGroups: ["group", "dataLabelsGroup"],
        negStacks: !0,
        init: function() {
            M.prototype.init.apply(this, arguments);
            var a = this
              , b = a.chart;
            b.hasRendered && p(b.series, function(b) {
                if (b.type === a.type)
                    b.isDirty = !0
            })
        },
        getColumnMetrics: function() {
            var a = this, b = a.options, c = a.xAxis, d = a.yAxis, e = c.reversed, f, g = {}, h, i = 0;
            b.grouping === !1 ? i = 1 : p(a.chart.series, function(b) {
                var c = b.options
                  , e = b.yAxis;
                if (b.type === a.type && b.visible && d.len === e.len && d.pos === e.pos)
                    c.stacking ? (f = b.stackKey,
                    g[f] === r && (g[f] = i++),
                    h = g[f]) : c.grouping !== !1 && (h = i++),
                    b.columnIndex = h
            });
            var c = A(P(c.transA) * (c.ordinalSlope || b.pointRange || c.closestPointRange || c.tickInterval || 1), c.len)
              , j = c * b.groupPadding
              , k = (c - 2 * j) / i
              , l = b.pointWidth
              , b = u(l) ? (k - l) / 2 : k * b.pointPadding
              , l = q(l, k - 2 * b);
            return a.columnMetrics = {
                width: l,
                offset: b + (j + ((e ? i - (a.columnIndex || 0) : a.columnIndex) || 0) * k - c / 2) * (e ? -1 : 1)
            }
        },
        translate: function() {
            var a = this
              , b = a.chart
              , c = a.options
              , d = a.borderWidth = q(c.borderWidth, a.activePointCount > 0.5 * a.xAxis.len ? 0 : 1)
              , e = a.yAxis
              , f = a.translatedThreshold = e.getThreshold(c.threshold)
              , g = q(c.minPointLength, 5)
              , h = a.getColumnMetrics()
              , i = h.width
              , j = a.barW = v(i, 1 + 2 * d)
              , k = a.pointXOffset = h.offset
              , l = -(d % 2 ? 0.5 : 0)
              , m = d % 2 ? 0.5 : 1;
            b.renderer.isVML && b.inverted && (m += 1);
            c.pointPadding && (j = Ya(j));
            M.prototype.translate.apply(a);
            p(a.points, function(c) {
                var d = q(c.yBottom, f), h = A(v(-999 - d, c.plotY), e.len + 999 + d), p = c.plotX + k, r = j, w = A(h, d), s;
                s = v(h, d) - w;
                P(s) < g && g && (s = g,
                w = t(P(w - f) > g ? d - g : f - (e.translate(c.y, 0, 1, 0, 1) <= f ? g : 0)));
                c.barX = p;
                c.pointWidth = i;
                c.tooltipPos = b.inverted ? [e.len - h, a.xAxis.len - p - r / 2] : [p + r / 2, h + e.pos - b.plotTop];
                r = t(p + r) + l;
                p = t(p) + l;
                r -= p;
                d = P(w) < 0.5;
                s = t(w + s) + m;
                w = t(w) + m;
                s -= w;
                d && (w -= 1,
                s += 1);
                c.shapeType = "rect";
                c.shapeArgs = {
                    x: p,
                    y: w,
                    width: r,
                    height: s
                }
            })
        },
        getSymbol: ra,
        drawLegendSymbol: T.drawRectangle,
        drawGraph: ra,
        drawPoints: function() {
            var a = this, b = this.chart, c = a.options, d = b.renderer, e = c.animationLimit || 250, f, g;
            p(a.points, function(h) {
                var i = h.plotY
                  , j = h.graphic;
                if (i !== r && !isNaN(i) && h.y !== null)
                    f = h.shapeArgs,
                    i = u(a.borderWidth) ? {
                        "stroke-width": a.borderWidth
                    } : {},
                    g = h.pointAttr[h.selected ? "select" : ""] || a.pointAttr[""],
                    j ? (hb(j),
                    j.attr(i)[b.pointCount < e ? "animate" : "attr"](y(f))) : h.graphic = d[h.shapeType](f).attr(g).attr(i).add(a.group).shadow(c.shadow, null, c.stacking && !c.borderRadius);
                else if (j)
                    h.graphic = j.destroy()
            })
        },
        animate: function(a) {
            var b = this.yAxis
              , c = this.options
              , d = this.chart.inverted
              , e = {};
            if (ea)
                a ? (e.scaleY = 0.001,
                a = A(b.pos + b.len, v(b.pos, b.toPixels(c.threshold))),
                d ? e.translateX = a - b.len : e.translateY = a,
                this.group.attr(e)) : (e.scaleY = 1,
                e[d ? "translateX" : "translateY"] = b.pos,
                this.group.animate(e, this.options.animation),
                this.animate = null)
        },
        remove: function() {
            var a = this
              , b = a.chart;
            b.hasRendered && p(b.series, function(b) {
                if (b.type === a.type)
                    b.isDirty = !0
            });
            M.prototype.remove.apply(a, arguments)
        }
    });
    B.column = Ca;
    W.bar = y(W.column);
    wa = ia(Ca, {
        type: "bar",
        inverted: !0
    });
    B.bar = wa;
    W.scatter = y(L, {
        lineWidth: 0,
        tooltip: {
            headerFormat: '<span style="color:{series.color}">●</span> <span style="font-size: 10px;"> {series.name}</span><br/>',
            pointFormat: "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"
        },
        stickyTracking: !1
    });
    wa = ia(M, {
        type: "scatter",
        sorted: !1,
        requireSorting: !1,
        noSharedTooltip: !0,
        trackerGroups: ["markerGroup", "dataLabelsGroup"],
        takeOrdinalPosition: !1,
        singularTooltips: !0,
        drawGraph: function() {
            this.options.lineWidth && M.prototype.drawGraph.call(this)
        }
    });
    B.scatter = wa;
    W.pie = y(L, {
        borderColor: "#FFFFFF",
        borderWidth: 1,
        center: [null, null],
        clip: !1,
        colorByPoint: !0,
        dataLabels: {
            distance: 30,
            enabled: !0,
            formatter: function() {
                return this.point.name
            }
        },
        ignoreHiddenPoint: !0,
        legendType: "point",
        marker: null,
        size: null,
        showInLegend: !1,
        slicedOffset: 10,
        states: {
            hover: {
                brightness: 0.1,
                shadow: !1
            }
        },
        stickyTracking: !1,
        tooltip: {
            followPointer: !0
        }
    });
    L = {
        type: "pie",
        isCartesian: !1,
        pointClass: ia(Ba, {
            init: function() {
                Ba.prototype.init.apply(this, arguments);
                var a = this, b;
                if (a.y < 0)
                    a.y = null;
                s(a, {
                    visible: a.visible !== !1,
                    name: q(a.name, "Slice")
                });
                b = function(b) {
                    a.slice(b.type === "select")
                }
                ;
                z(a, "select", b);
                z(a, "unselect", b);
                return a
            },
            setVisible: function(a) {
                var b = this
                  , c = b.series
                  , d = c.chart;
                b.visible = b.options.visible = a = a === r ? !b.visible : a;
                c.options.data[Qa(b, c.data)] = b.options;
                p(["graphic", "dataLabel", "connector", "shadowGroup"], function(c) {
                    if (b[c])
                        b[c][a ? "show" : "hide"](!0)
                });
                b.legendItem && d.legend.colorizeItem(b, a);
                if (!c.isDirty && c.options.ignoreHiddenPoint)
                    c.isDirty = !0,
                    d.redraw()
            },
            slice: function(a, b, c) {
                var d = this.series;
                ab(c, d.chart);
                q(b, !0);
                this.sliced = this.options.sliced = a = u(a) ? a : !this.sliced;
                d.options.data[Qa(this, d.data)] = this.options;
                a = a ? this.slicedTranslation : {
                    translateX: 0,
                    translateY: 0
                };
                this.graphic.animate(a);
                this.shadowGroup && this.shadowGroup.animate(a)
            },
            haloPath: function(a) {
                var b = this.shapeArgs
                  , c = this.series.chart;
                return this.sliced || !this.visible ? [] : this.series.chart.renderer.symbols.arc(c.plotLeft + b.x, c.plotTop + b.y, b.r + a, b.r + a, {
                    innerR: this.shapeArgs.r,
                    start: b.start,
                    end: b.end
                })
            }
        }),
        requireSorting: !1,
        noSharedTooltip: !0,
        trackerGroups: ["group", "dataLabelsGroup"],
        axisTypes: [],
        pointAttrToOptions: {
            stroke: "borderColor",
            "stroke-width": "borderWidth",
            fill: "color"
        },
        singularTooltips: !0,
        getColor: ra,
        animate: function(a) {
            var b = this
              , c = b.points
              , d = b.startAngleRad;
            if (!a)
                p(c, function(a) {
                    var c = a.graphic
                      , a = a.shapeArgs;
                    c && (c.attr({
                        r: b.center[3] / 2,
                        start: d,
                        end: d
                    }),
                    c.animate({
                        r: a.r,
                        start: a.start,
                        end: a.end
                    }, b.options.animation))
                }),
                b.animate = null
        },
        setData: function(a, b, c, d) {
            M.prototype.setData.call(this, a, !1, c, d);
            this.processData();
            this.generatePoints();
            q(b, !0) && this.chart.redraw(c)
        },
        generatePoints: function() {
            var a, b = 0, c, d, e, f = this.options.ignoreHiddenPoint;
            M.prototype.generatePoints.call(this);
            c = this.points;
            d = c.length;
            for (a = 0; a < d; a++)
                e = c[a],
                b += f && !e.visible ? 0 : e.y;
            this.total = b;
            for (a = 0; a < d; a++)
                e = c[a],
                e.percentage = b > 0 ? e.y / b * 100 : 0,
                e.total = b
        },
        translate: function(a) {
            this.generatePoints();
            var b = 0, c = this.options, d = c.slicedOffset, e = d + c.borderWidth, f, g, h, i = c.startAngle || 0, j = this.startAngleRad = ua / 180 * (i - 90), i = (this.endAngleRad = ua / 180 * (q(c.endAngle, i + 360) - 90)) - j, k = this.points, l = c.dataLabels.distance, c = c.ignoreHiddenPoint, m, n = k.length, o;
            if (!a)
                this.center = a = this.getCenter();
            this.getX = function(b, c) {
                h = X.asin(A((b - a[1]) / (a[2] / 2 + l), 1));
                return a[0] + (c ? -1 : 1) * fa(h) * (a[2] / 2 + l)
            }
            ;
            for (m = 0; m < n; m++) {
                o = k[m];
                f = j + b * i;
                if (!c || o.visible)
                    b += o.percentage / 100;
                g = j + b * i;
                o.shapeType = "arc";
                o.shapeArgs = {
                    x: a[0],
                    y: a[1],
                    r: a[2] / 2,
                    innerR: a[3] / 2,
                    start: t(f * 1E3) / 1E3,
                    end: t(g * 1E3) / 1E3
                };
                h = (g + f) / 2;
                h > 1.5 * ua ? h -= 2 * ua : h < -ua / 2 && (h += 2 * ua);
                o.slicedTranslation = {
                    translateX: t(fa(h) * d),
                    translateY: t(ka(h) * d)
                };
                f = fa(h) * a[2] / 2;
                g = ka(h) * a[2] / 2;
                o.tooltipPos = [a[0] + f * 0.7, a[1] + g * 0.7];
                o.half = h < -ua / 2 || h > ua / 2 ? 1 : 0;
                o.angle = h;
                e = A(e, l / 2);
                o.labelPos = [a[0] + f + fa(h) * l, a[1] + g + ka(h) * l, a[0] + f + fa(h) * e, a[1] + g + ka(h) * e, a[0] + f, a[1] + g, l < 0 ? "center" : o.half ? "right" : "left", h]
            }
        },
        drawGraph: null,
        drawPoints: function() {
            var a = this, b = a.chart.renderer, c, d, e = a.options.shadow, f, g;
            if (e && !a.shadowGroup)
                a.shadowGroup = b.g("shadow").add(a.group);
            p(a.points, function(h) {
                d = h.graphic;
                g = h.shapeArgs;
                f = h.shadowGroup;
                if (e && !f)
                    f = h.shadowGroup = b.g("shadow").add(a.shadowGroup);
                c = h.sliced ? h.slicedTranslation : {
                    translateX: 0,
                    translateY: 0
                };
                f && f.attr(c);
                d ? d.animate(s(g, c)) : h.graphic = d = b[h.shapeType](g).setRadialReference(a.center).attr(h.pointAttr[h.selected ? "select" : ""]).attr({
                    "stroke-linejoin": "round"
                }).attr(c).add(a.group).shadow(e, f);
                h.visible !== void 0 && h.setVisible(h.visible)
            })
        },
        sortByAngle: function(a, b) {
            a.sort(function(a, d) {
                return a.angle !== void 0 && (d.angle - a.angle) * b
            })
        },
        drawLegendSymbol: T.drawRectangle,
        getCenter: ga.getCenter,
        getSymbol: ra
    };
    L = ia(M, L);
    B.pie = L;
    M.prototype.drawDataLabels = function() {
        var a = this, b = a.options, c = b.cursor, d = b.dataLabels, e = a.points, f, g, h = a.hasRendered || 0, i, j;
        if (d.enabled || a._hasPointLabels)
            a.dlProcessOptions && a.dlProcessOptions(d),
            j = a.plotGroup("dataLabelsGroup", "data-labels", d.defer ? "hidden" : "visible", d.zIndex || 6),
            q(d.defer, !0) && (j.attr({
                opacity: +h
            }),
            h || z(a, "afterAnimate", function() {
                a.visible && j.show();
                j[b.animation ? "animate" : "attr"]({
                    opacity: 1
                }, {
                    duration: 200
                })
            })),
            g = d,
            p(e, function(b) {
                var e, h = b.dataLabel, n, o, p = b.connector, t = !0;
                f = b.options && b.options.dataLabels;
                e = q(f && f.enabled, g.enabled);
                if (h && !e)
                    b.dataLabel = h.destroy();
                else if (e) {
                    d = y(g, f);
                    e = d.rotation;
                    n = b.getLabelConfig();
                    i = d.format ? Ma(d.format, n) : d.formatter.call(n, d);
                    d.style.color = q(d.color, d.style.color, a.color, "black");
                    if (h)
                        if (u(i))
                            h.attr({
                                text: i
                            }),
                            t = !1;
                        else {
                            if (b.dataLabel = h = h.destroy(),
                            p)
                                b.connector = p.destroy()
                        }
                    else if (u(i)) {
                        h = {
                            fill: d.backgroundColor,
                            stroke: d.borderColor,
                            "stroke-width": d.borderWidth,
                            r: d.borderRadius || 0,
                            rotation: e,
                            padding: d.padding,
                            zIndex: 1
                        };
                        for (o in h)
                            h[o] === r && delete h[o];
                        h = b.dataLabel = a.chart.renderer[e ? "text" : "label"](i, 0, -999, null, null, null, d.useHTML).attr(h).css(s(d.style, c && {
                            cursor: c
                        })).add(j).shadow(d.shadow)
                    }
                    h && a.alignDataLabel(b, h, d, null, t)
                }
            })
    }
    ;
    M.prototype.alignDataLabel = function(a, b, c, d, e) {
        var f = this.chart
          , g = f.inverted
          , h = q(a.plotX, -999)
          , i = q(a.plotY, -999)
          , j = b.getBBox();
        if (a = this.visible && (a.series.forceDL || f.isInsidePlot(h, t(i), g) || d && f.isInsidePlot(h, g ? d.x + 1 : d.y + d.height - 1, g)))
            d = s({
                x: g ? f.plotWidth - i : h,
                y: t(g ? f.plotHeight - h : i),
                width: 0,
                height: 0
            }, d),
            s(c, {
                width: j.width,
                height: j.height
            }),
            c.rotation ? b[e ? "attr" : "animate"]({
                x: d.x + c.x + d.width / 2,
                y: d.y + c.y + d.height / 2
            }).attr({
                align: c.align
            }) : (b.align(c, null, d),
            g = b.alignAttr,
            q(c.overflow, "justify") === "justify" ? this.justifyDataLabel(b, c, g, j, d, e) : q(c.crop, !0) && (a = f.isInsidePlot(g.x, g.y) && f.isInsidePlot(g.x + j.width, g.y + j.height)));
        if (!a)
            b.attr({
                y: -999
            }),
            b.placed = !1
    }
    ;
    M.prototype.justifyDataLabel = function(a, b, c, d, e, f) {
        var g = this.chart, h = b.align, i = b.verticalAlign, j, k;
        j = c.x;
        if (j < 0)
            h === "right" ? b.align = "left" : b.x = -j,
            k = !0;
        j = c.x + d.width;
        if (j > g.plotWidth)
            h === "left" ? b.align = "right" : b.x = g.plotWidth - j,
            k = !0;
        j = c.y;
        if (j < 0)
            i === "bottom" ? b.verticalAlign = "top" : b.y = -j,
            k = !0;
        j = c.y + d.height;
        if (j > g.plotHeight)
            i === "top" ? b.verticalAlign = "bottom" : b.y = g.plotHeight - j,
            k = !0;
        if (k)
            a.placed = !f,
            a.align(b, null, e)
    }
    ;
    if (B.pie)
        B.pie.prototype.drawDataLabels = function() {
            var a = this, b = a.data, c, d = a.chart, e = a.options.dataLabels, f = q(e.connectorPadding, 10), g = q(e.connectorWidth, 1), h = d.plotWidth, i = d.plotHeight, j, k, l = q(e.softConnector, !0), m = e.distance, n = a.center, o = n[2] / 2, x = n[1], r = m > 0, s, w, u, y = [[], []], z, O, E, G, C, R = [0, 0, 0, 0], H = function(a, b) {
                return b.y - a.y
            };
            if (a.visible && (e.enabled || a._hasPointLabels)) {
                M.prototype.drawDataLabels.apply(a);
                p(b, function(a) {
                    a.dataLabel && a.visible && y[a.half].push(a)
                });
                for (G = 2; G--; ) {
                    var B = [], K = [], F = y[G], J = F.length, D;
                    if (J) {
                        a.sortByAngle(F, G - 0.5);
                        for (C = b = 0; !b && F[C]; )
                            b = F[C] && F[C].dataLabel && (F[C].dataLabel.getBBox().height || 21),
                            C++;
                        if (m > 0) {
                            w = A(x + o + m, d.plotHeight);
                            for (C = v(0, x - o - m); C <= w; C += b)
                                B.push(C);
                            w = B.length;
                            if (J > w) {
                                c = [].concat(F);
                                c.sort(H);
                                for (C = J; C--; )
                                    c[C].rank = C;
                                for (C = J; C--; )
                                    F[C].rank >= w && F.splice(C, 1);
                                J = F.length
                            }
                            for (C = 0; C < J; C++) {
                                c = F[C];
                                u = c.labelPos;
                                c = 9999;
                                var N, L;
                                for (L = 0; L < w; L++)
                                    N = P(B[L] - u[1]),
                                    N < c && (c = N,
                                    D = L);
                                if (D < C && B[C] !== null)
                                    D = C;
                                else
                                    for (w < J - C + D && B[C] !== null && (D = w - J + C); B[D] === null; )
                                        D++;
                                K.push({
                                    i: D,
                                    y: B[D]
                                });
                                B[D] = null
                            }
                            K.sort(H)
                        }
                        for (C = 0; C < J; C++) {
                            c = F[C];
                            u = c.labelPos;
                            s = c.dataLabel;
                            E = c.visible === !1 ? "hidden" : "visible";
                            c = u[1];
                            if (m > 0) {
                                if (w = K.pop(),
                                D = w.i,
                                O = w.y,
                                c > O && B[D + 1] !== null || c < O && B[D - 1] !== null)
                                    O = A(v(0, c), d.plotHeight)
                            } else
                                O = c;
                            z = e.justify ? n[0] + (G ? -1 : 1) * (o + m) : a.getX(O === x - o - m || O === x + o + m ? c : O, G);
                            s._attr = {
                                visibility: E,
                                align: u[6]
                            };
                            s._pos = {
                                x: z + e.x + ({
                                    left: f,
                                    right: -f
                                }[u[6]] || 0),
                                y: O + e.y - 10
                            };
                            s.connX = z;
                            s.connY = O;
                            if (this.options.size === null)
                                w = s.width,
                                z - w < f ? R[3] = v(t(w - z + f), R[3]) : z + w > h - f && (R[1] = v(t(z + w - h + f), R[1])),
                                O - b / 2 < 0 ? R[0] = v(t(-O + b / 2), R[0]) : O + b / 2 > i && (R[2] = v(t(O + b / 2 - i), R[2]))
                        }
                    }
                }
                if (Ea(R) === 0 || this.verifyDataLabelOverflow(R))
                    this.placeDataLabels(),
                    r && g && p(this.points, function(b) {
                        j = b.connector;
                        u = b.labelPos;
                        if ((s = b.dataLabel) && s._pos)
                            E = s._attr.visibility,
                            z = s.connX,
                            O = s.connY,
                            k = l ? ["M", z + (u[6] === "left" ? 5 : -5), O, "C", z, O, 2 * u[2] - u[4], 2 * u[3] - u[5], u[2], u[3], "L", u[4], u[5]] : ["M", z + (u[6] === "left" ? 5 : -5), O, "L", u[2], u[3], "L", u[4], u[5]],
                            j ? (j.animate({
                                d: k
                            }),
                            j.attr("visibility", E)) : b.connector = j = a.chart.renderer.path(k).attr({
                                "stroke-width": g,
                                stroke: e.connectorColor || b.color || "#606060",
                                visibility: E
                            }).add(a.dataLabelsGroup);
                        else if (j)
                            b.connector = j.destroy()
                    })
            }
        }
        ,
        B.pie.prototype.placeDataLabels = function() {
            p(this.points, function(a) {
                var a = a.dataLabel, b;
                if (a)
                    (b = a._pos) ? (a.attr(a._attr),
                    a[a.moved ? "animate" : "attr"](b),
                    a.moved = !0) : a && a.attr({
                        y: -999
                    })
            })
        }
        ,
        B.pie.prototype.alignDataLabel = ra,
        B.pie.prototype.verifyDataLabelOverflow = function(a) {
            var b = this.center, c = this.options, d = c.center, e = c = c.minSize || 80, f;
            d[0] !== null ? e = v(b[2] - v(a[1], a[3]), c) : (e = v(b[2] - a[1] - a[3], c),
            b[0] += (a[3] - a[1]) / 2);
            d[1] !== null ? e = v(A(e, b[2] - v(a[0], a[2])), c) : (e = v(A(e, b[2] - a[0] - a[2]), c),
            b[1] += (a[0] - a[2]) / 2);
            e < b[2] ? (b[2] = e,
            this.translate(b),
            p(this.points, function(a) {
                if (a.dataLabel)
                    a.dataLabel._pos = null
            }),
            this.drawDataLabels && this.drawDataLabels()) : f = !0;
            return f
        }
        ;
    if (B.column)
        B.column.prototype.alignDataLabel = function(a, b, c, d, e) {
            var f = this.chart
              , g = f.inverted
              , h = a.dlBox || a.shapeArgs
              , i = a.below || a.plotY > q(this.translatedThreshold, f.plotSizeY)
              , j = q(c.inside, !!this.options.stacking);
            if (h && (d = y(h),
            g && (d = {
                x: f.plotWidth - d.y - d.height,
                y: f.plotHeight - d.x - d.width,
                width: d.height,
                height: d.width
            }),
            !j))
                g ? (d.x += i ? 0 : d.width,
                d.width = 0) : (d.y += i ? d.height : 0,
                d.height = 0);
            c.align = q(c.align, !g || j ? "center" : i ? "right" : "left");
            c.verticalAlign = q(c.verticalAlign, g || j ? "middle" : i ? "top" : "bottom");
            M.prototype.alignDataLabel.call(this, a, b, c, d, e)
        }
        ;
    var jb = N.TrackerMixin = {
        drawTrackerPoint: function() {
            var a = this
              , b = a.chart
              , c = b.pointer
              , d = a.options.cursor
              , e = d && {
                cursor: d
            }
              , f = function(c) {
                var d = c.target, e;
                if (b.hoverSeries !== a)
                    a.onMouseOver();
                for (; d && !e; )
                    e = d.point,
                    d = d.parentNode;
                if (e !== r && e !== b.hoverPoint)
                    e.onMouseOver(c)
            };
            p(a.points, function(a) {
                if (a.graphic)
                    a.graphic.element.point = a;
                if (a.dataLabel)
                    a.dataLabel.element.point = a
            });
            if (!a._hasTracking)
                p(a.trackerGroups, function(b) {
                    if (a[b] && (a[b].addClass("highcharts-tracker").on("mouseover", f).on("mouseout", function(a) {
                        c.onTrackerMouseOut(a)
                    }).css(e),
                    db))
                        a[b].on("touchstart", f)
                }),
                a._hasTracking = !0
        },
        drawTrackerGraph: function() {
            var a = this, b = a.options, c = b.trackByArea, d = [].concat(c ? a.areaPath : a.graphPath), e = d.length, f = a.chart, g = f.pointer, h = f.renderer, i = f.options.tooltip.snap, j = a.tracker, k = b.cursor, l = k && {
                cursor: k
            }, k = a.singlePoints, m, n = function() {
                if (f.hoverSeries !== a)
                    a.onMouseOver()
            }, o = "rgba(192,192,192," + (ea ? 1.0E-4 : 0.002) + ")";
            if (e && !c)
                for (m = e + 1; m--; )
                    d[m] === "M" && d.splice(m + 1, 0, d[m + 1] - i, d[m + 2], "L"),
                    (m && d[m] === "M" || m === e) && d.splice(m, 0, "L", d[m - 2] + i, d[m - 1]);
            for (m = 0; m < k.length; m++)
                e = k[m],
                d.push("M", e.plotX - i, e.plotY, "L", e.plotX + i, e.plotY);
            j ? j.attr({
                d: d
            }) : (a.tracker = h.path(d).attr({
                "stroke-linejoin": "round",
                visibility: a.visible ? "visible" : "hidden",
                stroke: o,
                fill: c ? o : $,
                "stroke-width": b.lineWidth + (c ? 0 : 2 * i),
                zIndex: 2
            }).add(a.group),
            p([a.tracker, a.markerGroup], function(a) {
                a.addClass("highcharts-tracker").on("mouseover", n).on("mouseout", function(a) {
                    g.onTrackerMouseOut(a)
                }).css(l);
                if (db)
                    a.on("touchstart", n)
            }))
        }
    };
    if (B.column)
        Ca.prototype.drawTracker = jb.drawTrackerPoint;
    if (B.pie)
        B.pie.prototype.drawTracker = jb.drawTrackerPoint;
    if (B.scatter)
        wa.prototype.drawTracker = jb.drawTrackerPoint;
    s(sb.prototype, {
        setItemEvents: function(a, b, c, d, e) {
            var f = this;
            (c ? b : a.legendGroup).on("mouseover", function() {
                a.setState("hover");
                b.css(f.options.itemHoverStyle)
            }).on("mouseout", function() {
                b.css(a.visible ? d : e);
                a.setState()
            }).on("click", function(b) {
                var c = function() {
                    a.setVisible()
                }
                  , b = {
                    browserEvent: b
                };
                a.firePointEvent ? a.firePointEvent("legendItemClick", b, c) : J(a, "legendItemClick", b, c)
            })
        },
        createCheckboxForItem: function(a) {
            a.checkbox = aa("input", {
                type: "checkbox",
                checked: a.selected,
                defaultChecked: a.selected
            }, this.options.itemCheckboxStyle, this.chart.container);
            z(a.checkbox, "click", function(b) {
                J(a, "checkboxClick", {
                    checked: b.target.checked
                }, function() {
                    a.select()
                })
            })
        }
    });
    F.legend.itemStyle.cursor = "pointer";
    s(ya.prototype, {
        showResetZoom: function() {
            var a = this
              , b = F.lang
              , c = a.options.chart.resetZoomButton
              , d = c.theme
              , e = d.states
              , f = c.relativeTo === "chart" ? null : "plotBox";
            this.resetZoomButton = a.renderer.button(b.resetZoom, null, null, function() {
                a.zoomOut()
            }, d, e && e.hover).attr({
                align: c.position.align,
                title: b.resetZoomTitle
            }).add().align(c.position, !1, f)
        },
        zoomOut: function() {
            var a = this;
            J(a, "selection", {
                resetSelection: !0
            }, function() {
                a.zoom()
            })
        },
        zoom: function(a) {
            var b, c = this.pointer, d = !1, e;
            !a || a.resetSelection ? p(this.axes, function(a) {
                b = a.zoom()
            }) : p(a.xAxis.concat(a.yAxis), function(a) {
                var e = a.axis
                  , h = e.isXAxis;
                if (c[h ? "zoomX" : "zoomY"] || c[h ? "pinchX" : "pinchY"])
                    b = e.zoom(a.min, a.max),
                    e.displayBtn && (d = !0)
            });
            e = this.resetZoomButton;
            if (d && !e)
                this.showResetZoom();
            else if (!d && ha(e))
                this.resetZoomButton = e.destroy();
            b && this.redraw(q(this.options.chart.animation, a && a.animation, this.pointCount < 100))
        },
        pan: function(a, b) {
            var c = this, d = c.hoverPoints, e;
            d && p(d, function(a) {
                a.setState()
            });
            p(b === "xy" ? [1, 0] : [1], function(b) {
                var d = a[b ? "chartX" : "chartY"]
                  , h = c[b ? "xAxis" : "yAxis"][0]
                  , i = c[b ? "mouseDownX" : "mouseDownY"]
                  , j = (h.pointRange || 0) / 2
                  , k = h.getExtremes()
                  , l = h.toValue(i - d, !0) + j
                  , i = h.toValue(i + c[b ? "plotWidth" : "plotHeight"] - d, !0) - j;
                h.series.length && l > A(k.dataMin, k.min) && i < v(k.dataMax, k.max) && (h.setExtremes(l, i, !1, !1, {
                    trigger: "pan"
                }),
                e = !0);
                c[b ? "mouseDownX" : "mouseDownY"] = d
            });
            e && c.redraw(!1);
            K(c.container, {
                cursor: "move"
            })
        }
    });
    s(Ba.prototype, {
        select: function(a, b) {
            var c = this
              , d = c.series
              , e = d.chart
              , a = q(a, !c.selected);
            c.firePointEvent(a ? "select" : "unselect", {
                accumulate: b
            }, function() {
                c.selected = c.options.selected = a;
                d.options.data[Qa(c, d.data)] = c.options;
                c.setState(a && "select");
                b || p(e.getSelectedPoints(), function(a) {
                    if (a.selected && a !== c)
                        a.selected = a.options.selected = !1,
                        d.options.data[Qa(a, d.data)] = a.options,
                        a.setState(""),
                        a.firePointEvent("unselect")
                })
            })
        },
        onMouseOver: function(a) {
            var b = this.series
              , c = b.chart
              , d = c.tooltip
              , e = c.hoverPoint;
            if (e && e !== this)
                e.onMouseOut();
            this.firePointEvent("mouseOver");
            d && (!d.shared || b.noSharedTooltip) && d.refresh(this, a);
            this.setState("hover");
            c.hoverPoint = this
        },
        onMouseOut: function() {
            var a = this.series.chart
              , b = a.hoverPoints;
            this.firePointEvent("mouseOut");
            if (!b || Qa(this, b) === -1)
                this.setState(),
                a.hoverPoint = null
        },
        importEvents: function() {
            if (!this.hasImportedEvents) {
                var a = y(this.series.options.point, this.options).events, b;
                this.events = a;
                for (b in a)
                    z(this, b, a[b]);
                this.hasImportedEvents = !0
            }
        },
        setState: function(a, b) {
            var c = this.plotX, d = this.plotY, e = this.series, f = e.options.states, g = W[e.type].marker && e.options.marker, h = g && !g.enabled, i = g && g.states[a], j = i && i.enabled === !1, k = e.stateMarkerGraphic, l = this.marker || {}, m = e.chart, n = e.halo, o, a = a || "";
            o = this.pointAttr[a] || e.pointAttr[a];
            if (!(a === this.state && !b || this.selected && a !== "select" || f[a] && f[a].enabled === !1 || a && (j || h && i.enabled === !1) || a && l.states && l.states[a] && l.states[a].enabled === !1)) {
                if (this.graphic)
                    g = g && this.graphic.symbolName && o.r,
                    this.graphic.attr(y(o, g ? {
                        x: c - g,
                        y: d - g,
                        width: 2 * g,
                        height: 2 * g
                    } : {})),
                    k && k.hide();
                else {
                    if (a && i)
                        if (g = i.radius,
                        l = l.symbol || e.symbol,
                        k && k.currentSymbol !== l && (k = k.destroy()),
                        k)
                            k[b ? "animate" : "attr"]({
                                x: c - g,
                                y: d - g
                            });
                        else if (l)
                            e.stateMarkerGraphic = k = m.renderer.symbol(l, c - g, d - g, 2 * g, 2 * g).attr(o).add(e.markerGroup),
                            k.currentSymbol = l;
                    if (k)
                        k[a && m.isInsidePlot(c, d, m.inverted) ? "show" : "hide"]()
                }
                if ((c = f[a] && f[a].halo) && c.size) {
                    if (!n)
                        e.halo = n = m.renderer.path().add(e.seriesGroup);
                    n.attr(s({
                        fill: Ia(this.color || e.color).setOpacity(c.opacity).get()
                    }, c.attributes))[b ? "animate" : "attr"]({
                        d: this.haloPath(c.size)
                    })
                } else
                    n && n.attr({
                        d: []
                    });
                this.state = a
            }
        },
        haloPath: function(a) {
            var b = this.series
              , c = b.chart
              , d = b.getPlotBox()
              , e = c.inverted;
            return c.renderer.symbols.circle(d.translateX + (e ? b.yAxis.len - this.plotY : this.plotX) - a, d.translateY + (e ? b.xAxis.len - this.plotX : this.plotY) - a, a * 2, a * 2)
        }
    });
    s(M.prototype, {
        onMouseOver: function() {
            var a = this.chart
              , b = a.hoverSeries;
            if (b && b !== this)
                b.onMouseOut();
            this.options.events.mouseOver && J(this, "mouseOver");
            this.setState("hover");
            a.hoverSeries = this
        },
        onMouseOut: function() {
            var a = this.options
              , b = this.chart
              , c = b.tooltip
              , d = b.hoverPoint;
            if (d)
                d.onMouseOut();
            this && a.events.mouseOut && J(this, "mouseOut");
            c && !a.stickyTracking && (!c.shared || this.noSharedTooltip) && c.hide();
            this.setState();
            b.hoverSeries = null
        },
        setState: function(a) {
            var b = this.options
              , c = this.graph
              , d = this.graphNeg
              , e = b.states
              , b = b.lineWidth
              , a = a || "";
            if (this.state !== a)
                this.state = a,
                e[a] && e[a].enabled === !1 || (a && (b = e[a].lineWidth || b + (e[a].lineWidthPlus || 0)),
                c && !c.dashstyle && (a = {
                    "stroke-width": b
                },
                c.attr(a),
                d && d.attr(a)))
        },
        setVisible: function(a, b) {
            var c = this, d = c.chart, e = c.legendItem, f, g = d.options.chart.ignoreHiddenSeries, h = c.visible;
            f = (c.visible = a = c.userOptions.visible = a === r ? !h : a) ? "show" : "hide";
            p(["group", "dataLabelsGroup", "markerGroup", "tracker"], function(a) {
                if (c[a])
                    c[a][f]()
            });
            if (d.hoverSeries === c)
                c.onMouseOut();
            e && d.legend.colorizeItem(c, a);
            c.isDirty = !0;
            c.options.stacking && p(d.series, function(a) {
                if (a.options.stacking && a.visible)
                    a.isDirty = !0
            });
            p(c.linkedSeries, function(b) {
                b.setVisible(a, !1)
            });
            if (g)
                d.isDirtyBox = !0;
            b !== !1 && d.redraw();
            J(c, f)
        },
        setTooltipPoints: function(a) {
            var b = [], c, d, e = this.xAxis, f = e && e.getExtremes(), g = e ? e.tooltipLen || e.len : this.chart.plotSizeX, h, i, j = [];
            if (!(this.options.enableMouseTracking === !1 || this.singularTooltips)) {
                if (a)
                    this.tooltipPoints = null;
                p(this.segments || this.points, function(a) {
                    b = b.concat(a)
                });
                e && e.reversed && (b = b.reverse());
                this.orderTooltipPoints && this.orderTooltipPoints(b);
                a = b.length;
                for (i = 0; i < a; i++)
                    if (e = b[i],
                    c = e.x,
                    c >= f.min && c <= f.max) {
                        h = b[i + 1];
                        c = d === r ? 0 : d + 1;
                        for (d = b[i + 1] ? A(v(0, V((e.clientX + (h ? h.wrappedClientX || h.clientX : g)) / 2)), g) : g; c >= 0 && c <= d; )
                            j[c++] = e
                    }
                this.tooltipPoints = j
            }
        },
        show: function() {
            this.setVisible(!0)
        },
        hide: function() {
            this.setVisible(!1)
        },
        select: function(a) {
            this.selected = a = a === r ? !this.selected : a;
            if (this.checkbox)
                this.checkbox.checked = a;
            J(this, a ? "select" : "unselect")
        },
        drawTracker: jb.drawTrackerGraph
    });
    Q(M.prototype, "init", function(a) {
        var b;
        a.apply(this, Array.prototype.slice.call(arguments, 1));
        (b = this.xAxis) && b.options.ordinal && z(this, "updatedData", function() {
            delete b.ordinalIndex
        })
    });
    Q(D.prototype, "getTimeTicks", function(a, b, c, d, e, f, g, h) {
        var i = 0, j = 0, k, l = {}, m, n, o, p = [], q = -Number.MAX_VALUE, t = this.options.tickPixelInterval;
        if (!this.options.ordinal || !f || f.length < 3 || c === r)
            return a.call(this, b, c, d, e);
        for (n = f.length; j < n; j++) {
            o = j && f[j - 1] > d;
            f[j] < c && (i = j);
            if (j === n - 1 || f[j + 1] - f[j] > g * 5 || o) {
                if (f[j] > q) {
                    for (k = a.call(this, b, f[i], f[j], e); k.length && k[0] <= q; )
                        k.shift();
                    k.length && (q = k[k.length - 1]);
                    p = p.concat(k)
                }
                i = j + 1
            }
            if (o)
                break
        }
        a = k.info;
        if (h && a.unitRange <= G.hour) {
            j = p.length - 1;
            for (i = 1; i < j; i++)
                (new ca(p[i] - Oa))[Xa]() !== (new ca(p[i - 1] - Oa))[Xa]() && (l[p[i]] = "day",
                m = !0);
            m && (l[p[0]] = "day");
            a.higherRanks = l
        }
        p.info = a;
        if (h && u(t)) {
            var h = a = p.length, j = [], w;
            for (m = []; h--; )
                i = this.translate(p[h]),
                w && (m[h] = w - i),
                j[h] = w = i;
            m.sort();
            m = m[V(m.length / 2)];
            m < t * 0.6 && (m = null);
            h = p[a - 1] > d ? a - 1 : a;
            for (w = void 0; h--; )
                i = j[h],
                d = w - i,
                w && d < t * 0.8 && (m === null || d < m * 0.8) ? (l[p[h]] && !l[p[h + 1]] ? (d = h + 1,
                w = i) : d = h,
                p.splice(d, 1)) : w = i
        }
        return p
    });
    s(D.prototype, {
        beforeSetTickPositions: function() {
            var a, b = [], c = !1, d, e = this.getExtremes(), f = e.min, e = e.max, g;
            if (this.options.ordinal) {
                p(this.series, function(c, d) {
                    if (c.visible !== !1 && c.takeOrdinalPosition !== !1 && (b = b.concat(c.processedXData),
                    a = b.length,
                    b.sort(function(a, b) {
                        return a - b
                    }),
                    a))
                        for (d = a - 1; d--; )
                            b[d] === b[d + 1] && b.splice(d, 1)
                });
                a = b.length;
                if (a > 2) {
                    d = b[1] - b[0];
                    for (g = a - 1; g-- && !c; )
                        b[g + 1] - b[g] !== d && (c = !0);
                    if (!this.options.keepOrdinalPadding && (b[0] - f > d || e - b[b.length - 1] > d))
                        c = !0
                }
                c ? (this.ordinalPositions = b,
                c = this.val2lin(v(f, b[0]), !0),
                d = v(this.val2lin(A(e, b[b.length - 1]), !0), 1),
                this.ordinalSlope = e = (e - f) / (d - c),
                this.ordinalOffset = f - c * e) : this.ordinalPositions = this.ordinalSlope = this.ordinalOffset = r
            }
            this.groupIntervalFactor = null
        },
        val2lin: function(a, b) {
            var c = this.ordinalPositions;
            if (c) {
                var d = c.length, e, f;
                for (e = d; e--; )
                    if (c[e] === a) {
                        f = e;
                        break
                    }
                for (e = d - 1; e--; )
                    if (a > c[e] || e === 0) {
                        c = (a - c[e]) / (c[e + 1] - c[e]);
                        f = e + c;
                        break
                    }
                return b ? f : this.ordinalSlope * (f || 0) + this.ordinalOffset
            } else
                return a
        },
        lin2val: function(a, b) {
            var c = this.ordinalPositions;
            if (c) {
                var d = this.ordinalSlope, e = this.ordinalOffset, f = c.length - 1, g, h;
                if (b)
                    a < 0 ? a = c[0] : a > f ? a = c[f] : (f = V(a),
                    h = a - f);
                else
                    for (; f--; )
                        if (g = d * f + e,
                        a >= g) {
                            d = d * (f + 1) + e;
                            h = (a - g) / (d - g);
                            break
                        }
                return h !== r && c[f] !== r ? c[f] + (h ? h * (c[f + 1] - c[f]) : 0) : a
            } else
                return a
        },
        getExtendedPositions: function() {
            var a = this.chart, b = this.series[0].currentDataGrouping, c = this.ordinalIndex, d = b ? b.count + b.unitName : "raw", e = this.getExtremes(), f, g;
            if (!c)
                c = this.ordinalIndex = {};
            if (!c[d])
                f = {
                    series: [],
                    getExtremes: function() {
                        return {
                            min: e.dataMin,
                            max: e.dataMax
                        }
                    },
                    options: {
                        ordinal: !0
                    },
                    val2lin: D.prototype.val2lin
                },
                p(this.series, function(c) {
                    g = {
                        xAxis: f,
                        xData: c.xData,
                        chart: a,
                        destroyGroupedData: ra
                    };
                    g.options = {
                        dataGrouping: b ? {
                            enabled: !0,
                            forced: !0,
                            approximation: "open",
                            units: [[b.unitName, [b.count]]]
                        } : {
                            enabled: !1
                        }
                    };
                    c.processData.apply(g);
                    f.series.push(g)
                }),
                this.beforeSetTickPositions.apply(f),
                c[d] = f.ordinalPositions;
            return c[d]
        },
        getGroupIntervalFactor: function(a, b, c) {
            var d = 0
              , c = c.processedXData
              , e = c.length
              , f = []
              , g = this.groupIntervalFactor;
            if (!g) {
                for (; d < e - 1; d++)
                    f[d] = c[d + 1] - c[d];
                f.sort(function(a, b) {
                    return a - b
                });
                d = f[V(e / 2)];
                a = v(a, c[0]);
                b = A(b, c[e - 1]);
                this.groupIntervalFactor = g = e * d / (b - a)
            }
            return g
        },
        postProcessTickInterval: function(a) {
            var b = this.ordinalSlope;
            return b ? a / (b / this.closestPointRange) : a
        }
    });
    Q(ya.prototype, "pan", function(a, b) {
        var c = this.xAxis[0]
          , d = b.chartX
          , e = !1;
        if (c.options.ordinal && c.series.length) {
            var f = this.mouseDownX, g = c.getExtremes(), h = g.dataMax, i = g.min, j = g.max, k = this.hoverPoints, l = c.closestPointRange, f = (f - d) / (c.translationSlope * (c.ordinalSlope || l)), m = {
                ordinalPositions: c.getExtendedPositions()
            }, l = c.lin2val, n = c.val2lin, o;
            if (m.ordinalPositions) {
                if (P(f) > 1)
                    k && p(k, function(a) {
                        a.setState()
                    }),
                    f < 0 ? (k = m,
                    o = c.ordinalPositions ? c : m) : (k = c.ordinalPositions ? c : m,
                    o = m),
                    m = o.ordinalPositions,
                    h > m[m.length - 1] && m.push(h),
                    this.fixedRange = j - i,
                    f = c.toFixedRange(null, null, l.apply(k, [n.apply(k, [i, !0]) + f, !0]), l.apply(o, [n.apply(o, [j, !0]) + f, !0])),
                    f.min >= A(g.dataMin, i) && f.max <= v(h, j) && c.setExtremes(f.min, f.max, !0, !1, {
                        trigger: "pan"
                    }),
                    this.mouseDownX = d,
                    K(this.container, {
                        cursor: "move"
                    })
            } else
                e = !0
        } else
            e = !0;
        e && a.apply(this, Array.prototype.slice.call(arguments, 1))
    });
    Q(M.prototype, "getSegments", function(a) {
        var b, c = this.options.gapSize, d = this.xAxis;
        a.apply(this, Array.prototype.slice.call(arguments, 1));
        if (c)
            b = this.segments,
            p(b, function(a, f) {
                for (var g = a.length - 1; g--; )
                    a[g + 1].x - a[g].x > d.closestPointRange * c && b.splice(f + 1, 0, a.splice(g + 1, a.length - g))
            })
    });
    var da = M.prototype
      , L = Jb.prototype
      , hc = da.processData
      , ic = da.generatePoints
      , jc = da.destroy
      , kc = L.tooltipHeaderFormatter
      , lc = {
        approximation: "average",
        groupPixelWidth: 2,
        dateTimeLabelFormats: {
            millisecond: ["%A, %b %e, %H:%M:%S.%L", "%A, %b %e, %H:%M:%S.%L", "-%H:%M:%S.%L"],
            second: ["%A, %b %e, %H:%M:%S", "%A, %b %e, %H:%M:%S", "-%H:%M:%S"],
            minute: ["%A, %b %e, %H:%M", "%A, %b %e, %H:%M", "-%H:%M"],
            hour: ["%A, %b %e, %H:%M", "%A, %b %e, %H:%M", "-%H:%M"],
            day: ["%A, %b %e, %Y", "%A, %b %e", "-%A, %b %e, %Y"],
            week: ["Week from %A, %b %e, %Y", "%A, %b %e", "-%A, %b %e, %Y"],
            month: ["%B %Y", "%B", "-%B %Y"],
            year: ["%Y", "%Y", "-%Y"]
        }
    }
      , Wb = {
        line: {},
        spline: {},
        area: {},
        areaspline: {},
        column: {
            approximation: "sum",
            groupPixelWidth: 10
        },
        arearange: {
            approximation: "range"
        },
        areasplinerange: {
            approximation: "range"
        },
        columnrange: {
            approximation: "range",
            groupPixelWidth: 10
        },
        candlestick: {
            approximation: "ohlc",
            groupPixelWidth: 10
        },
        ohlc: {
            approximation: "ohlc",
            groupPixelWidth: 5
        }
    }
      , Xb = [["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]], ["second", [1, 2, 5, 10, 15, 30]], ["minute", [1, 2, 5, 10, 15, 30]], ["hour", [1, 2, 3, 4, 6, 8, 12]], ["day", [1]], ["week", [1]], ["month", [1, 3, 6]], ["year", null]]
      , Ra = {
        sum: function(a) {
            var b = a.length, c;
            if (!b && a.hasNulls)
                c = null;
            else if (b)
                for (c = 0; b--; )
                    c += a[b];
            return c
        },
        average: function(a) {
            var b = a.length
              , a = Ra.sum(a);
            typeof a === "number" && b && (a /= b);
            return a
        },
        open: function(a) {
            return a.length ? a[0] : a.hasNulls ? null : r
        },
        high: function(a) {
            return a.length ? Ea(a) : a.hasNulls ? null : r
        },
        low: function(a) {
            return a.length ? Ua(a) : a.hasNulls ? null : r
        },
        close: function(a) {
            return a.length ? a[a.length - 1] : a.hasNulls ? null : r
        },
        ohlc: function(a, b, c, d) {
            a = Ra.open(a);
            b = Ra.high(b);
            c = Ra.low(c);
            d = Ra.close(d);
            if (typeof a === "number" || typeof b === "number" || typeof c === "number" || typeof d === "number")
                return [a, b, c, d]
        },
        range: function(a, b) {
            a = Ra.low(a);
            b = Ra.high(b);
            if (typeof a === "number" || typeof b === "number")
                return [a, b]
        }
    };
    da.groupData = function(a, b, c, d) {
        var e = this.data, f = this.options.data, g = [], h = [], i = a.length, j, k, l = !!b, m = [[], [], [], []], d = typeof d === "function" ? d : Ra[d], n = this.pointArrayMap, o = n && n.length, p;
        for (p = 0; p <= i; p++)
            if (a[p] >= c[0])
                break;
        for (; p <= i; p++) {
            for (; c[1] !== r && a[p] >= c[1] || p === i; )
                if (j = c.shift(),
                k = d.apply(0, m),
                k !== r && (g.push(j),
                h.push(k)),
                m[0] = [],
                m[1] = [],
                m[2] = [],
                m[3] = [],
                p === i)
                    break;
            if (p === i)
                break;
            if (n) {
                j = this.cropStart + p;
                j = e && e[j] || this.pointClass.prototype.applyOptions.apply({
                    series: this
                }, [f[j]]);
                var q;
                for (k = 0; k < o; k++)
                    if (q = j[n[k]],
                    typeof q === "number")
                        m[k].push(q);
                    else if (q === null)
                        m[k].hasNulls = !0
            } else if (j = l ? b[p] : null,
            typeof j === "number")
                m[0].push(j);
            else if (j === null)
                m[0].hasNulls = !0
        }
        return [g, h]
    }
    ;
    da.processData = function() {
        var a = this.chart, b = this.options, c = b.dataGrouping, d = this.allowDG !== !1 && c && q(c.enabled, a.options._stock), e;
        this.forceCrop = d;
        this.groupPixelWidth = null;
        this.hasProcessed = !0;
        if (hc.apply(this, arguments) !== !1 && d) {
            this.destroyGroupedData();
            var f = this.processedXData
              , g = this.processedYData
              , h = a.plotSizeX
              , a = this.xAxis
              , i = a.options.ordinal
              , j = this.groupPixelWidth = a.getGroupPixelWidth && a.getGroupPixelWidth()
              , d = this.pointRange;
            if (j) {
                e = !0;
                this.points = null;
                var k = a.getExtremes()
                  , d = k.min
                  , k = k.max
                  , i = i && a.getGroupIntervalFactor(d, k, this) || 1
                  , h = j * (k - d) / h * i
                  , j = a.getTimeTicks(a.normalizeTimeTickInterval(h, c.units || Xb), d, k, a.options.startOfWeek, f, this.closestPointRange)
                  , g = da.groupData.apply(this, [f, g, j, c.approximation])
                  , f = g[0]
                  , g = g[1];
                if (c.smoothed) {
                    c = f.length - 1;
                    for (f[c] = k; c-- && c > 0; )
                        f[c] += h / 2;
                    f[0] = d
                }
                this.currentDataGrouping = j.info;
                if (b.pointRange === null)
                    this.pointRange = j.info.totalRange;
                this.closestPointRange = j.info.totalRange;
                if (u(f[0]) && f[0] < a.dataMin)
                    a.dataMin = f[0];
                this.processedXData = f;
                this.processedYData = g
            } else
                this.currentDataGrouping = null,
                this.pointRange = d;
            this.hasGroupedData = e
        }
    }
    ;
    da.destroyGroupedData = function() {
        var a = this.groupedData;
        p(a || [], function(b, c) {
            b && (a[c] = b.destroy ? b.destroy() : null)
        });
        this.groupedData = null
    }
    ;
    da.generatePoints = function() {
        ic.apply(this);
        this.destroyGroupedData();
        this.groupedData = this.hasGroupedData ? this.points : null
    }
    ;
    L.tooltipHeaderFormatter = function(a) {
        var b = a.series, c = b.tooltipOptions, d = b.options.dataGrouping, e = c.xDateFormat, f, g = b.xAxis, h;
        if (g && g.options.type === "datetime" && d && pa(a.key)) {
            b = b.currentDataGrouping;
            d = d.dateTimeLabelFormats;
            if (b)
                g = d[b.unitName],
                b.count === 1 ? e = g[0] : (e = g[1],
                f = g[2]);
            else if (!e && d)
                for (h in G)
                    if (G[h] >= g.closestPointRange || G[h] <= G.day && a.key % G[h] > 0) {
                        e = d[h][0];
                        break
                    }
            e = xa(e, a.key);
            f && (e += xa(f, a.key + b.totalRange - 1));
            a = c.headerFormat.replace("{point.key}", e)
        } else
            a = kc.call(this, a);
        return a
    }
    ;
    da.destroy = function() {
        for (var a = this.groupedData || [], b = a.length; b--; )
            a[b] && a[b].destroy();
        jc.apply(this)
    }
    ;
    Q(da, "setOptions", function(a, b) {
        var c = a.call(this, b)
          , d = this.type
          , e = this.chart.options.plotOptions
          , f = W[d].dataGrouping;
        if (Wb[d])
            f || (f = y(lc, Wb[d])),
            c.dataGrouping = y(f, e.series && e.series.dataGrouping, e[d].dataGrouping, b.dataGrouping);
        if (this.chart.options._stock)
            this.requireSorting = !0;
        return c
    });
    Q(D.prototype, "setScale", function(a) {
        a.call(this);
        p(this.series, function(a) {
            a.hasProcessed = !1
        })
    });
    D.prototype.getGroupPixelWidth = function() {
        var a = this.series, b = a.length, c, d = 0, e = !1, f;
        for (c = b; c--; )
            (f = a[c].options.dataGrouping) && (d = v(d, f.groupPixelWidth));
        for (c = b; c--; )
            if ((f = a[c].options.dataGrouping) && a[c].hasProcessed)
                if (b = (a[c].processedXData || a[c].data).length,
                a[c].groupPixelWidth || b > this.chart.plotSizeX / d || b && f.forced)
                    e = !0;
        return e ? d : 0
    }
    ;
    W.ohlc = y(W.column, {
        lineWidth: 1,
        tooltip: {
            pointFormat: '<span style="color:{series.color}">●</span> <b> {series.name}</b><br/>Open: {point.open}<br/>High: {point.high}<br/>Low: {point.low}<br/>Close: {point.close}<br/>'
        },
        states: {
            hover: {
                lineWidth: 3
            }
        },
        threshold: null
    });
    L = ia(B.column, {
        type: "ohlc",
        pointArrayMap: ["open", "high", "low", "close"],
        toYData: function(a) {
            return [a.open, a.high, a.low, a.close]
        },
        pointValKey: "high",
        pointAttrToOptions: {
            stroke: "color",
            "stroke-width": "lineWidth"
        },
        upColorProp: "stroke",
        getAttribs: function() {
            B.column.prototype.getAttribs.apply(this, arguments);
            var a = this.options
              , b = a.states
              , a = a.upColor || this.color
              , c = y(this.pointAttr)
              , d = this.upColorProp;
            c[""][d] = a;
            c.hover[d] = b.hover.upColor || a;
            c.select[d] = b.select.upColor || a;
            p(this.points, function(a) {
                if (a.open < a.close)
                    a.pointAttr = c
            })
        },
        translate: function() {
            var a = this.yAxis;
            B.column.prototype.translate.apply(this);
            p(this.points, function(b) {
                if (b.open !== null)
                    b.plotOpen = a.translate(b.open, 0, 1, 0, 1);
                if (b.close !== null)
                    b.plotClose = a.translate(b.close, 0, 1, 0, 1)
            })
        },
        drawPoints: function() {
            var a = this, b = a.chart, c, d, e, f, g, h, i, j;
            p(a.points, function(k) {
                if (k.plotY !== r)
                    i = k.graphic,
                    c = k.pointAttr[k.selected ? "selected" : ""] || a.pointAttr[""],
                    f = c["stroke-width"] % 2 / 2,
                    j = t(k.plotX) - f,
                    g = t(k.shapeArgs.width / 2),
                    h = ["M", j, t(k.yBottom), "L", j, t(k.plotY)],
                    k.open !== null && (d = t(k.plotOpen) + f,
                    h.push("M", j, d, "L", j - g, d)),
                    k.close !== null && (e = t(k.plotClose) + f,
                    h.push("M", j, e, "L", j + g, e)),
                    i ? i.animate({
                        d: h
                    }) : k.graphic = b.renderer.path(h).attr(c).add(a.group)
            })
        },
        animate: null
    });
    B.ohlc = L;
    W.candlestick = y(W.column, {
        lineColor: "black",
        lineWidth: 1,
        states: {
            hover: {
                lineWidth: 2
            }
        },
        tooltip: W.ohlc.tooltip,
        threshold: null,
        upColor: "white"
    });
    L = ia(L, {
        type: "candlestick",
        pointAttrToOptions: {
            fill: "color",
            stroke: "lineColor",
            "stroke-width": "lineWidth"
        },
        upColorProp: "fill",
        getAttribs: function() {
            B.ohlc.prototype.getAttribs.apply(this, arguments);
            var a = this.options
              , b = a.states
              , c = a.upLineColor || a.lineColor
              , d = b.hover.upLineColor || c
              , e = b.select.upLineColor || c;
            p(this.points, function(a) {
                if (a.open < a.close)
                    a.pointAttr[""].stroke = c,
                    a.pointAttr.hover.stroke = d,
                    a.pointAttr.select.stroke = e
            })
        },
        drawPoints: function() {
            var a = this, b = a.chart, c, d = a.pointAttr[""], e, f, g, h, i, j, k, l, m, n, o;
            p(a.points, function(p) {
                m = p.graphic;
                if (p.plotY !== r)
                    c = p.pointAttr[p.selected ? "selected" : ""] || d,
                    k = c["stroke-width"] % 2 / 2,
                    l = t(p.plotX) - k,
                    e = p.plotOpen,
                    f = p.plotClose,
                    g = X.min(e, f),
                    h = X.max(e, f),
                    o = t(p.shapeArgs.width / 2),
                    i = t(g) !== t(p.plotY),
                    j = h !== p.yBottom,
                    g = t(g) + k,
                    h = t(h) + k,
                    n = ["M", l - o, h, "L", l - o, g, "L", l + o, g, "L", l + o, h, "Z", "M", l, g, "L", l, i ? t(p.plotY) : g, "M", l, h, "L", l, j ? t(p.yBottom) : h],
                    m ? m.animate({
                        d: n
                    }) : p.graphic = b.renderer.path(n).attr(c).add(a.group).shadow(a.options.shadow)
            })
        }
    });
    B.candlestick = L;
    var tb = na.prototype.symbols;
    W.flags = y(W.column, {
        fillColor: "white",
        lineWidth: 1,
        pointRange: 0,
        shape: "flag",
        stackDistance: 12,
        states: {
            hover: {
                lineColor: "black",
                fillColor: "#FCFFC5"
            }
        },
        style: {
            fontSize: "11px",
            fontWeight: "bold",
            textAlign: "center"
        },
        tooltip: {
            pointFormat: "{point.text}<br/>"
        },
        threshold: null,
        y: -30
    });
    B.flags = ia(B.column, {
        type: "flags",
        sorted: !1,
        noSharedTooltip: !0,
        allowDG: !1,
        takeOrdinalPosition: !1,
        trackerGroups: ["markerGroup"],
        forceCrop: !0,
        init: M.prototype.init,
        pointAttrToOptions: {
            fill: "fillColor",
            stroke: "color",
            "stroke-width": "lineWidth",
            r: "radius"
        },
        translate: function() {
            B.column.prototype.translate.apply(this);
            var a = this.chart, b = this.points, c = b.length - 1, d, e, f = this.options.onSeries, f = (d = f && a.get(f)) && d.options.step, g = d && d.points, h = g && g.length, i = this.xAxis, j = i.getExtremes(), k, l, m;
            if (d && d.visible && h) {
                d = d.currentDataGrouping;
                l = g[h - 1].x + (d ? d.totalRange : 0);
                for (b.sort(function(a, b) {
                    return a.x - b.x
                }); h-- && b[c]; )
                    if (d = b[c],
                    k = g[h],
                    k.x <= d.x && k.plotY !== r) {
                        if (d.x <= l)
                            d.plotY = k.plotY,
                            k.x < d.x && !f && (m = g[h + 1]) && m.plotY !== r && (d.plotY += (d.x - k.x) / (m.x - k.x) * (m.plotY - k.plotY));
                        c--;
                        h++;
                        if (c < 0)
                            break
                    }
            }
            p(b, function(c, d) {
                if (c.plotY === r)
                    c.x >= j.min && c.x <= j.max ? c.plotY = a.chartHeight - i.bottom - (i.opposite ? i.height : 0) + i.offset - a.plotTop : c.shapeArgs = {};
                if ((e = b[d - 1]) && e.plotX === c.plotX) {
                    if (e.stackIndex === r)
                        e.stackIndex = 0;
                    c.stackIndex = e.stackIndex + 1
                }
            })
        },
        drawPoints: function() {
            var a, b = this.pointAttr[""], c = this.points, d = this.chart.renderer, e, f, g = this.options, h = g.y, i, j, k, l, m = g.lineWidth % 2 / 2, n, o;
            for (j = c.length; j--; )
                if (k = c[j],
                a = k.plotX > this.xAxis.len,
                e = k.plotX + (a ? m : -m),
                l = k.stackIndex,
                i = k.options.shape || g.shape,
                f = k.plotY,
                f !== r && (f = k.plotY + h + m - (l !== r && l * g.stackDistance)),
                n = l ? r : k.plotX + m,
                o = l ? r : k.plotY,
                l = k.graphic,
                f !== r && e >= 0 && !a)
                    a = k.pointAttr[k.selected ? "select" : ""] || b,
                    l ? l.attr({
                        x: e,
                        y: f,
                        r: a.r,
                        anchorX: n,
                        anchorY: o
                    }) : k.graphic = d.label(k.options.title || g.title || "A", e, f, i, n, o, g.useHTML).css(y(g.style, k.style)).attr(a).attr({
                        align: i === "flag" ? "left" : "center",
                        width: g.width,
                        height: g.height
                    }).add(this.markerGroup).shadow(g.shadow),
                    k.tooltipPos = [e, f];
                else if (l)
                    k.graphic = l.destroy()
        },
        drawTracker: function() {
            var a = this.points;
            jb.drawTrackerPoint.apply(this);
            p(a, function(b) {
                var c = b.graphic;
                c && z(c.element, "mouseover", function() {
                    if (b.stackIndex > 0 && !b.raised)
                        b._y = c.y,
                        c.attr({
                            y: b._y - 8
                        }),
                        b.raised = !0;
                    p(a, function(a) {
                        if (a !== b && a.raised && a.graphic)
                            a.graphic.attr({
                                y: a._y
                            }),
                            a.raised = !1
                    })
                })
            })
        },
        animate: ra
    });
    tb.flag = function(a, b, c, d, e) {
        var f = e && e.anchorX || a
          , e = e && e.anchorY || b;
        return ["M", f, e, "L", a, b + d, a, b, a + c, b, a + c, b + d, a, b + d, "M", f, e, "Z"]
    }
    ;
    p(["circle", "square"], function(a) {
        tb[a + "pin"] = function(b, c, d, e, f) {
            var g = f && f.anchorX
              , f = f && f.anchorY
              , b = tb[a](b, c, d, e);
            g && f && b.push("M", g, c > f ? c : c + e, "L", g, f);
            return b
        }
    });
    Za === N.VMLRenderer && p(["flag", "circlepin", "squarepin"], function(a) {
        ib.prototype.symbols[a] = tb[a]
    });
    var L = [].concat(Xb)
      , ub = function(a) {
        return Math[a].apply(0, qb(arguments, function(a) {
            return typeof a === "number"
        }))
    };
    L[4] = ["day", [1, 2, 3, 4]];
    L[5] = ["week", [1, 2, 3]];
    s(F, {
        navigator: {
            handles: {
                backgroundColor: "#ebe7e8",
                borderColor: "#b2b1b6"
            },
            height: 40,
            margin: 25,
            maskFill: "rgba(128,179,236,0.3)",
            maskInside: !0,
            outlineColor: "#b2b1b6",
            outlineWidth: 1,
            series: {
                type: B.areaspline === r ? "line" : "areaspline",
                color: "#4572A7",
                compare: null,
                fillOpacity: 0.05,
                dataGrouping: {
                    approximation: "average",
                    enabled: !0,
                    groupPixelWidth: 2,
                    smoothed: !0,
                    units: L
                },
                dataLabels: {
                    enabled: !1,
                    zIndex: 2
                },
                id: "highcharts-navigator-series",
                lineColor: "#4572A7",
                lineWidth: 1,
                marker: {
                    enabled: !1
                },
                pointRange: 0,
                shadow: !1,
                threshold: null
            },
            xAxis: {
                tickWidth: 0,
                lineWidth: 0,
                gridLineColor: "#EEE",
                gridLineWidth: 1,
                tickPixelInterval: 200,
                labels: {
                    align: "left",
                    style: {
                        color: "#888"
                    },
                    x: 3,
                    y: -4
                },
                crosshair: !1
            },
            yAxis: {
                gridLineWidth: 0,
                startOnTick: !1,
                endOnTick: !1,
                minPadding: 0.1,
                maxPadding: 0.1,
                labels: {
                    enabled: !1
                },
                crosshair: !1,
                title: {
                    text: null
                },
                tickWidth: 0
            }
        },
        scrollbar: {
            height: fb ? 20 : 14,
            barBackgroundColor: "#bfc8d1",
            barBorderRadius: 0,
            barBorderWidth: 1,
            barBorderColor: "#bfc8d1",
            buttonArrowColor: "#666",
            buttonBackgroundColor: "#ebe7e8",
            buttonBorderColor: "#bbb",
            buttonBorderRadius: 0,
            buttonBorderWidth: 1,
            minWidth: 6,
            rifleColor: "#666",
            trackBackgroundColor: "#eeeeee",
            trackBorderColor: "#eeeeee",
            trackBorderWidth: 1,
            liveRedraw: ea && !fb
        }
    });
    Cb.prototype = {
        drawHandle: function(a, b) {
            var c = this.chart, d = c.renderer, e = this.elementsToDestroy, f = this.handles, g = this.navigatorOptions.handles, g = {
                fill: g.backgroundColor,
                stroke: g.borderColor,
                "stroke-width": 1
            }, h;
            this.rendered || (f[b] = d.g("navigator-handle-" + ["left", "right"][b]).css({
                cursor: "e-resize"
            }).attr({
                zIndex: 4 - b
            }).add(),
            h = d.rect(-4.5, 0, 9, 16, 0, 1).attr(g).add(f[b]),
            e.push(h),
            h = d.path(["M", -1.5, 4, "L", -1.5, 12, "M", 0.5, 4, "L", 0.5, 12]).attr(g).add(f[b]),
            e.push(h));
            f[b][c.isResizing ? "animate" : "attr"]({
                translateX: this.scrollerLeft + this.scrollbarHeight + parseInt(a, 10),
                translateY: this.top + this.height / 2 - 8
            })
        },
        drawScrollbarButton: function(a) {
            var b = this.chart.renderer, c = this.elementsToDestroy, d = this.scrollbarButtons, e = this.scrollbarHeight, f = this.scrollbarOptions, g;
            this.rendered || (d[a] = b.g().add(this.scrollbarGroup),
            g = b.rect(-0.5, -0.5, e + 1, e + 1, f.buttonBorderRadius, f.buttonBorderWidth).attr({
                stroke: f.buttonBorderColor,
                "stroke-width": f.buttonBorderWidth,
                fill: f.buttonBackgroundColor
            }).add(d[a]),
            c.push(g),
            g = b.path(["M", e / 2 + (a ? -1 : 1), e / 2 - 3, "L", e / 2 + (a ? -1 : 1), e / 2 + 3, e / 2 + (a ? 2 : -2), e / 2]).attr({
                fill: f.buttonArrowColor
            }).add(d[a]),
            c.push(g));
            a && d[a].attr({
                translateX: this.scrollerWidth - e
            })
        },
        render: function(a, b, c, d) {
            var e = this.chart, f = e.renderer, g, h, i, j, k = this.scrollbarGroup, l = this.navigatorGroup, m = this.scrollbar, l = this.xAxis, n = this.scrollbarTrack, o = this.scrollbarHeight, p = this.scrollbarEnabled, r = this.navigatorOptions, s = this.scrollbarOptions, w = s.minWidth, u = this.height, y = this.top, z = this.navigatorEnabled, O = r.outlineWidth, B = O / 2, E = 0, C = this.outlineHeight, G = s.barBorderRadius, F = s.barBorderWidth, D = y + B, H;
            if (!isNaN(a)) {
                this.navigatorLeft = g = q(l.left, e.plotLeft + o);
                this.navigatorWidth = h = q(l.len, e.plotWidth - 2 * o);
                this.scrollerLeft = i = g - o;
                this.scrollerWidth = j = j = h + 2 * o;
                l.getExtremes && (H = this.getUnionExtremes(!0)) && (H.dataMin !== l.min || H.dataMax !== l.max) && l.setExtremes(H.dataMin, H.dataMax, !0, !1);
                c = q(c, l.translate(a));
                d = q(d, l.translate(b));
                if (isNaN(c) || P(c) === Infinity)
                    c = 0,
                    d = j;
                if (!(l.translate(d, !0) - l.translate(c, !0) < e.xAxis[0].minRange)) {
                    this.zoomedMax = A(v(c, d), h);
                    this.zoomedMin = v(this.fixedWidth ? this.zoomedMax - this.fixedWidth : A(c, d), 0);
                    this.range = this.zoomedMax - this.zoomedMin;
                    c = t(this.zoomedMax);
                    b = t(this.zoomedMin);
                    a = c - b;
                    if (!this.rendered) {
                        if (z) {
                            this.navigatorGroup = l = f.g("navigator").attr({
                                zIndex: 3
                            }).add();
                            this.leftShade = f.rect().attr({
                                fill: r.maskFill
                            }).add(l);
                            if (!r.maskInside)
                                this.rightShade = f.rect().attr({
                                    fill: r.maskFill
                                }).add(l);
                            this.outline = f.path().attr({
                                "stroke-width": O,
                                stroke: r.outlineColor
                            }).add(l)
                        }
                        if (p)
                            this.scrollbarGroup = k = f.g("scrollbar").add(),
                            m = s.trackBorderWidth,
                            this.scrollbarTrack = n = f.rect().attr({
                                x: 0,
                                y: -m % 2 / 2,
                                fill: s.trackBackgroundColor,
                                stroke: s.trackBorderColor,
                                "stroke-width": m,
                                r: s.trackBorderRadius || 0,
                                height: o
                            }).add(k),
                            this.scrollbar = m = f.rect().attr({
                                y: -F % 2 / 2,
                                height: o,
                                fill: s.barBackgroundColor,
                                stroke: s.barBorderColor,
                                "stroke-width": F,
                                r: G
                            }).add(k),
                            this.scrollbarRifles = f.path().attr({
                                stroke: s.rifleColor,
                                "stroke-width": 1
                            }).add(k)
                    }
                    e = e.isResizing ? "animate" : "attr";
                    if (z) {
                        this.leftShade[e](r.maskInside ? {
                            x: g + b,
                            y: y,
                            width: c - b,
                            height: u
                        } : {
                            x: g,
                            y: y,
                            width: b,
                            height: u
                        });
                        if (this.rightShade)
                            this.rightShade[e]({
                                x: g + c,
                                y: y,
                                width: h - c,
                                height: u
                            });
                        this.outline[e]({
                            d: ["M", i, D, "L", g + b + B, D, g + b + B, D + C, "L", g + c - B, D + C, "L", g + c - B, D, i + j, D].concat(r.maskInside ? ["M", g + b + B, D, "L", g + c - B, D] : [])
                        });
                        this.drawHandle(b + B, 0);
                        this.drawHandle(c + B, 1)
                    }
                    if (p && k)
                        this.drawScrollbarButton(0),
                        this.drawScrollbarButton(1),
                        k[e]({
                            translateX: i,
                            translateY: t(D + u)
                        }),
                        n[e]({
                            width: j
                        }),
                        g = o + b,
                        h = a - F,
                        h < w && (E = (w - h) / 2,
                        h = w,
                        g -= E),
                        this.scrollbarPad = E,
                        m[e]({
                            x: V(g) + F % 2 / 2,
                            width: h
                        }),
                        w = o + b + a / 2 - 0.5,
                        this.scrollbarRifles.attr({
                            visibility: a > 12 ? "visible" : "hidden"
                        })[e]({
                            d: ["M", w - 3, o / 4, "L", w - 3, 2 * o / 3, "M", w, o / 4, "L", w, 2 * o / 3, "M", w + 3, o / 4, "L", w + 3, 2 * o / 3]
                        });
                    this.scrollbarPad = E;
                    this.rendered = !0
                }
            }
        },
        addEvents: function() {
            var a = this.chart.container, b = this.mouseDownHandler, c = this.mouseMoveHandler, d = this.mouseUpHandler, e;
            e = [[a, "mousedown", b], [a, "mousemove", c], [document, "mouseup", d]];
            db && e.push([a, "touchstart", b], [a, "touchmove", c], [document, "touchend", d]);
            p(e, function(a) {
                z.apply(null, a)
            });
            this._events = e
        },
        removeEvents: function() {
            p(this._events, function(a) {
                U.apply(null, a)
            });
            this._events = r;
            this.navigatorEnabled && this.baseSeries && U(this.baseSeries, "updatedData", this.updatedDataHandler)
        },
        init: function() {
            var a = this, b = a.chart, c, d, e = a.scrollbarHeight, f = a.navigatorOptions, g = a.height, h = a.top, i, j, k = document.body.style, l, m = a.baseSeries;
            a.mouseDownHandler = function(d) {
                var d = b.pointer.normalize(d), e = a.zoomedMin, f = a.zoomedMax, h = a.top, j = a.scrollbarHeight, m = a.scrollerLeft, n = a.scrollerWidth, o = a.navigatorLeft, p = a.navigatorWidth, q = a.scrollbarPad, r = a.range, s = d.chartX, t = d.chartY, d = b.xAxis[0], u, v = fb ? 10 : 7;
                if (t > h && t < h + g + j)
                    if ((h = !a.scrollbarEnabled || t < h + g) && X.abs(s - e - o) < v)
                        a.grabbedLeft = !0,
                        a.otherHandlePos = f,
                        a.fixedExtreme = d.max,
                        b.fixedRange = null;
                    else if (h && X.abs(s - f - o) < v)
                        a.grabbedRight = !0,
                        a.otherHandlePos = e,
                        a.fixedExtreme = d.min,
                        b.fixedRange = null;
                    else if (s > o + e - q && s < o + f + q) {
                        a.grabbedCenter = s;
                        a.fixedWidth = r;
                        if (b.renderer.isSVG)
                            l = k.cursor,
                            k.cursor = "ew-resize";
                        i = s - e
                    } else if (s > m && s < m + n) {
                        f = h ? s - o - r / 2 : s < o ? e - r * 0.2 : s > m + n - j ? e + r * 0.2 : s < o + e ? e - r : f;
                        if (f < 0)
                            f = 0;
                        else if (f + r >= p)
                            f = p - r,
                            u = c.dataMax;
                        if (f !== e)
                            a.fixedWidth = r,
                            e = c.toFixedRange(f, f + r, null, u),
                            d.setExtremes(e.min, e.max, !0, !1, {
                                trigger: "navigator"
                            })
                    }
            }
            ;
            a.mouseMoveHandler = function(c) {
                var d = a.scrollbarHeight, e = a.navigatorLeft, f = a.navigatorWidth, g = a.scrollerLeft, h = a.scrollerWidth, k = a.range, l;
                if (c.pageX !== 0)
                    c = b.pointer.normalize(c),
                    l = c.chartX,
                    l < e ? l = e : l > g + h - d && (l = g + h - d),
                    a.grabbedLeft ? (j = !0,
                    a.render(0, 0, l - e, a.otherHandlePos)) : a.grabbedRight ? (j = !0,
                    a.render(0, 0, a.otherHandlePos, l - e)) : a.grabbedCenter && (j = !0,
                    l < i ? l = i : l > f + i - k && (l = f + i - k),
                    a.render(0, 0, l - i, l - i + k)),
                    j && a.scrollbarOptions.liveRedraw && setTimeout(function() {
                        a.mouseUpHandler(c)
                    }, 0)
            }
            ;
            a.mouseUpHandler = function(d) {
                var e, f;
                if (j) {
                    if (a.zoomedMin === a.otherHandlePos)
                        e = a.fixedExtreme;
                    else if (a.zoomedMax === a.otherHandlePos)
                        f = a.fixedExtreme;
                    e = c.toFixedRange(a.zoomedMin, a.zoomedMax, e, f);
                    b.xAxis[0].setExtremes(e.min, e.max, !0, !1, {
                        trigger: "navigator",
                        triggerOp: "navigator-drag",
                        DOMEvent: d
                    })
                }
                if (d.type !== "mousemove")
                    a.grabbedLeft = a.grabbedRight = a.grabbedCenter = a.fixedWidth = a.fixedExtreme = a.otherHandlePos = j = i = null,
                    k.cursor = l || ""
            }
            ;
            var n = b.xAxis.length
              , o = b.yAxis.length;
            b.extraBottomMargin = a.outlineHeight + f.margin;
            a.navigatorEnabled ? (a.xAxis = c = new D(b,y({
                ordinal: m && m.xAxis.options.ordinal
            }, f.xAxis, {
                id: "navigator-x-axis",
                isX: !0,
                type: "datetime",
                index: n,
                height: g,
                offset: 0,
                offsetLeft: e,
                offsetRight: -e,
                keepOrdinalPadding: !0,
                startOnTick: !1,
                endOnTick: !1,
                minPadding: 0,
                maxPadding: 0,
                zoomEnabled: !1
            })),
            a.yAxis = d = new D(b,y(f.yAxis, {
                id: "navigator-y-axis",
                alignTicks: !1,
                height: g,
                offset: 0,
                index: o,
                zoomEnabled: !1
            })),
            m || f.series.data ? a.addBaseSeries() : b.series.length === 0 && Q(b, "redraw", function(c, d) {
                if (b.series.length > 0 && !a.series)
                    a.setBaseSeries(),
                    b.redraw = c;
                c.call(b, d)
            })) : a.xAxis = c = {
                translate: function(a, c) {
                    var d = b.xAxis[0]
                      , f = d.getExtremes()
                      , g = b.plotWidth - 2 * e
                      , h = ub("min", d.options.min, f.dataMin)
                      , d = ub("max", d.options.max, f.dataMax) - h;
                    return c ? a * d / g + h : g * (a - h) / d
                },
                toFixedRange: D.prototype.toFixedRange
            };
            Q(b, "getMargins", function(b) {
                var e = this.legend
                  , f = e.options;
                b.call(this);
                a.top = h = a.navigatorOptions.top || this.chartHeight - a.height - a.scrollbarHeight - this.spacing[2] - (f.verticalAlign === "bottom" && f.enabled && !f.floating ? e.legendHeight + q(f.margin, 10) : 0);
                if (c && d)
                    c.options.top = d.options.top = h,
                    c.setAxisSize(),
                    d.setAxisSize()
            });
            a.addEvents()
        },
        getUnionExtremes: function(a) {
            var b = this.chart.xAxis[0]
              , c = this.xAxis
              , d = c.options
              , e = b.options;
            if (!a || b.dataMin !== null)
                return {
                    dataMin: ub("min", d && d.min, e.min, b.dataMin, c.dataMin),
                    dataMax: ub("max", d && d.max, e.max, b.dataMax, c.dataMax)
                }
        },
        setBaseSeries: function(a) {
            var b = this.chart
              , a = a || b.options.navigator.baseSeries;
            this.series && this.series.remove();
            this.baseSeries = b.series[a] || typeof a === "string" && b.get(a) || b.series[0];
            this.xAxis && this.addBaseSeries()
        },
        addBaseSeries: function() {
            var a = this.baseSeries, b = a ? a.options : {}, c = b.data, d = this.navigatorOptions.series, e;
            e = d.data;
            this.hasNavigatorData = !!e;
            b = y(b, d, {
                enableMouseTracking: !1,
                group: "nav",
                padXAxis: !1,
                xAxis: "navigator-x-axis",
                yAxis: "navigator-y-axis",
                name: "Navigator",
                showInLegend: !1,
                isInternal: !0,
                visible: !0
            });
            b.data = e || c;
            this.series = this.chart.initSeries(b);
            if (a && this.navigatorOptions.adaptToUpdatedData !== !1)
                z(a, "updatedData", this.updatedDataHandler),
                a.userOptions.events = s(a.userOptions.event, {
                    updatedData: this.updatedDataHandler
                })
        },
        updatedDataHandler: function() {
            var a = this.chart.scroller, b = a.baseSeries, c = b.xAxis, d = c.getExtremes(), e = d.min, f = d.max, g = d.dataMin, d = d.dataMax, h = f - e, i, j, k, l, m, n = a.series;
            i = n.xData;
            var o = !!c.setExtremes;
            j = f >= i[i.length - 1] - (this.closestPointRange || 0);
            i = e <= g;
            if (!a.hasNavigatorData)
                n.options.pointStart = b.xData[0],
                n.setData(b.options.data, !1),
                m = !0;
            i && (l = g,
            k = l + h);
            j && (k = d,
            i || (l = v(k - h, n.xData[0])));
            o && (i || j) ? isNaN(l) || c.setExtremes(l, k, !0, !1, {
                trigger: "updatedData"
            }) : (m && this.chart.redraw(!1),
            a.render(v(e, g), A(f, d)))
        },
        destroy: function() {
            this.removeEvents();
            p([this.xAxis, this.yAxis, this.leftShade, this.rightShade, this.outline, this.scrollbarTrack, this.scrollbarRifles, this.scrollbarGroup, this.scrollbar], function(a) {
                a && a.destroy && a.destroy()
            });
            this.xAxis = this.yAxis = this.leftShade = this.rightShade = this.outline = this.scrollbarTrack = this.scrollbarRifles = this.scrollbarGroup = this.scrollbar = null;
            p([this.scrollbarButtons, this.handles, this.elementsToDestroy], function(a) {
                Na(a)
            })
        }
    };
    N.Scroller = Cb;
    Q(D.prototype, "zoom", function(a, b, c) {
        var d = this.chart, e = d.options, f = e.chart.zoomType, g = e.navigator, e = e.rangeSelector, h;
        if (this.isXAxis && (g && g.enabled || e && e.enabled))
            if (f === "x")
                d.resetZoomButton = "blocked";
            else if (f === "y")
                h = !1;
            else if (f === "xy")
                d = this.previousZoom,
                u(b) ? this.previousZoom = [this.min, this.max] : d && (b = d[0],
                c = d[1],
                delete this.previousZoom);
        return h !== r ? h : a.call(this, b, c)
    });
    Q(ya.prototype, "init", function(a, b, c) {
        z(this, "beforeRender", function() {
            var a = this.options;
            if (a.navigator.enabled || a.scrollbar.enabled)
                this.scroller = new Cb(this)
        });
        a.call(this, b, c)
    });
    Q(M.prototype, "addPoint", function(a, b, c, d, e) {
        var f = this.options.turboThreshold;
        f && this.xData.length > f && ha(b) && !Ja(b) && this.chart.scroller && ma(20, !0);
        a.call(this, b, c, d, e)
    });
    s(F, {
        rangeSelector: {
            buttonTheme: {
                width: 28,
                height: 18,
                fill: "#f7f7f7",
                padding: 2,
                r: 0,
                "stroke-width": 0,
                style: {
                    color: "#444",
                    cursor: "pointer",
                    fontWeight: "normal"
                },
                zIndex: 7,
                states: {
                    hover: {
                        fill: "#e7e7e7"
                    },
                    select: {
                        fill: "#e7f0f9",
                        style: {
                            color: "black",
                            fontWeight: "bold"
                        }
                    }
                }
            },
            inputPosition: {
                align: "right"
            },
            labelStyle: {
                color: "#666"
            }
        }
    });
    F.lang = y(F.lang, {
        rangeSelectorZoom: "Zoom",
        rangeSelectorFrom: "From",
        rangeSelectorTo: "To"
    });
    Db.prototype = {
        clickButton: function(a, b) {
            var c = this, d = c.selected, e = c.chart, f = c.buttons, g = c.buttonOptions[a], h = e.xAxis[0], i = e.scroller && e.scroller.getUnionExtremes() || h || {}, j = i.dataMin, k = i.dataMax, l, m = h && t(A(h.max, q(k, h.max))), n = new ca(m), o = g.type, s = g.count, i = g._range, u;
            if (!(j === null || k === null || a === c.selected)) {
                if (o === "month" || o === "year")
                    l = {
                        month: "Month",
                        year: "FullYear"
                    }[o],
                    n["set" + l](n["get" + l]() - s),
                    l = n.getTime(),
                    j = q(j, Number.MIN_VALUE),
                    isNaN(l) || l < j ? (l = j,
                    m = A(l + i, k)) : i = m - l;
                else if (i)
                    l = v(m - i, j),
                    m = A(l + i, k);
                else if (o === "ytd")
                    if (h) {
                        if (k === r)
                            j = Number.MAX_VALUE,
                            k = Number.MIN_VALUE,
                            p(e.series, function(a) {
                                a = a.xData;
                                j = A(a[0], j);
                                k = v(a[a.length - 1], k)
                            }),
                            b = !1;
                        m = new ca(k);
                        u = m.getFullYear();
                        l = u = v(j || 0, ca.UTC(u, 0, 1));
                        m = m.getTime();
                        m = A(k || m, m)
                    } else {
                        z(e, "beforeRender", function() {
                            c.clickButton(a)
                        });
                        return
                    }
                else
                    o === "all" && h && (l = j,
                    m = k);
                f[d] && f[d].setState(0);
                f[a] && f[a].setState(2);
                e.fixedRange = i;
                h ? h.setExtremes(l, m, q(b, 1), 0, {
                    trigger: "rangeSelectorButton",
                    rangeSelectorButton: g
                }) : (d = e.options.xAxis,
                d[0] = y(d[0], {
                    range: i,
                    min: u
                }));
                c.setSelected(a)
            }
        },
        setSelected: function(a) {
            this.selected = this.options.selected = a
        },
        defaultButtons: [{
            type: "month",
            count: 1,
            text: "1m"
        }, {
            type: "month",
            count: 3,
            text: "3m"
        }, {
            type: "month",
            count: 6,
            text: "6m"
        }, {
            type: "ytd",
            text: "YTD"
        }, {
            type: "year",
            count: 1,
            text: "1y"
        }, {
            type: "all",
            text: "All"
        }],
        init: function(a) {
            var b = this
              , c = a.options.rangeSelector
              , d = c.buttons || [].concat(b.defaultButtons)
              , e = c.selected
              , f = b.blurInputs = function() {
                var a = b.minInput
                  , c = b.maxInput;
                a && a.blur && J(a, "blur");
                c && c.blur && J(c, "blur")
            }
            ;
            b.chart = a;
            b.options = c;
            b.buttons = [];
            a.extraTopMargin = 35;
            b.buttonOptions = d;
            z(a.container, "mousedown", f);
            z(a, "resize", f);
            p(d, b.computeButtonRange);
            e !== r && d[e] && this.clickButton(e, !1);
            z(a, "load", function() {
                z(a.xAxis[0], "afterSetExtremes", function() {
                    b.updateButtonStates(!0)
                })
            })
        },
        updateButtonStates: function(a) {
            var b = this
              , c = this.chart
              , d = c.xAxis[0]
              , e = c.scroller && c.scroller.getUnionExtremes() || d
              , f = e.dataMin
              , g = e.dataMax
              , h = b.selected
              , i = b.options.allButtonsEnabled
              , j = b.buttons;
            a && c.fixedRange !== t(d.max - d.min) && (j[h] && j[h].setState(0),
            b.setSelected(null));
            p(b.buttonOptions, function(a, c) {
                var e = a._range
                  , n = e > g - f
                  , o = e < d.minRange
                  , p = a.type === "all" && d.max - d.min >= g - f && j[c].state !== 2
                  , q = a.type === "ytd" && xa("%Y", f) === xa("%Y", g);
                e === t(d.max - d.min) && c !== h ? (b.setSelected(c),
                j[c].setState(2)) : !i && (n || o || p || q) ? j[c].setState(3) : j[c].state === 3 && j[c].setState(0)
            })
        },
        computeButtonRange: function(a) {
            var b = a.type
              , c = a.count || 1
              , d = {
                millisecond: 1,
                second: 1E3,
                minute: 6E4,
                hour: 36E5,
                day: 864E5,
                week: 6048E5
            };
            if (d[b])
                a._range = d[b] * c;
            else if (b === "month" || b === "year")
                a._range = {
                    month: 30,
                    year: 365
                }[b] * 864E5 * c
        },
        setInputValue: function(a, b) {
            var c = this.chart.options.rangeSelector;
            if (u(b))
                this[a + "Input"].HCTime = b;
            this[a + "Input"].value = xa(c.inputEditDateFormat || "%Y-%m-%d", this[a + "Input"].HCTime);
            this[a + "DateBox"].attr({
                text: xa(c.inputDateFormat || "%b %e, %Y", this[a + "Input"].HCTime)
            })
        },
        drawInput: function(a) {
            var b = this, c = b.chart, d = c.renderer.style, e = c.renderer, f = c.options.rangeSelector, g = b.div, h = a === "min", i, j, k, l = this.inputGroup;
            this[a + "Label"] = j = e.label(F.lang[h ? "rangeSelectorFrom" : "rangeSelectorTo"], this.inputGroup.offset).attr({
                padding: 2
            }).css(y(d, f.labelStyle)).add(l);
            l.offset += j.width + 5;
            this[a + "DateBox"] = k = e.label("", l.offset).attr({
                padding: 2,
                width: f.inputBoxWidth || 90,
                height: f.inputBoxHeight || 17,
                stroke: f.inputBoxBorderColor || "silver",
                "stroke-width": 1
            }).css(y({
                textAlign: "center",
                color: "#444"
            }, d, f.inputStyle)).on("click", function() {
                b[a + "Input"].focus()
            }).add(l);
            l.offset += k.width + (h ? 10 : 0);
            this[a + "Input"] = i = aa("input", {
                name: a,
                className: "highcharts-range-selector",
                type: "text"
            }, s({
                position: "absolute",
                border: 0,
                width: "1px",
                height: "1px",
                padding: 0,
                textAlign: "center",
                fontSize: d.fontSize,
                fontFamily: d.fontFamily,
                top: c.plotTop + "px"
            }, f.inputStyle), g);
            i.onfocus = function() {
                K(this, {
                    left: l.translateX + k.x + "px",
                    top: l.translateY + "px",
                    width: k.width - 2 + "px",
                    height: k.height - 2 + "px",
                    border: "2px solid silver"
                })
            }
            ;
            i.onblur = function() {
                K(this, {
                    border: 0,
                    width: "1px",
                    height: "1px"
                });
                b.setInputValue(a)
            }
            ;
            i.onchange = function() {
                var a = i.value
                  , d = (f.inputDateParser || ca.parse)(a)
                  , e = c.xAxis[0]
                  , g = e.dataMin
                  , j = e.dataMax;
                isNaN(d) && (d = a.split("-"),
                d = ca.UTC(H(d[0]), H(d[1]) - 1, H(d[2])));
                isNaN(d) || (F.global.useUTC || (d += (new ca).getTimezoneOffset() * 6E4),
                h ? d > b.maxInput.HCTime ? d = r : d < g && (d = g) : d < b.minInput.HCTime ? d = r : d > j && (d = j),
                d !== r && c.xAxis[0].setExtremes(h ? d : e.min, h ? e.max : d, r, r, {
                    trigger: "rangeSelectorInput"
                }))
            }
        },
        render: function(a, b) {
            var c = this, d = c.chart, e = d.renderer, f = d.container, g = d.options, h = g.exporting && g.navigation && g.navigation.buttonOptions, i = g.rangeSelector, j = c.buttons, g = F.lang, k = c.div, k = c.inputGroup, l = i.buttonTheme, m = i.inputEnabled !== !1, n = l && l.states, o = d.plotLeft, r;
            if (!c.rendered && (c.zoomText = e.text(g.rangeSelectorZoom, o, d.plotTop - 20).css(i.labelStyle).add(),
            r = o + c.zoomText.getBBox().width + 5,
            p(c.buttonOptions, function(a, b) {
                j[b] = e.button(a.text, r, d.plotTop - 35, function() {
                    c.clickButton(b);
                    c.isActive = !0
                }, l, n && n.hover, n && n.select).css({
                    textAlign: "center"
                }).add();
                r += j[b].width + q(i.buttonSpacing, 5);
                c.selected === b && j[b].setState(2)
            }),
            c.updateButtonStates(),
            m))
                c.div = k = aa("div", null, {
                    position: "relative",
                    height: 0,
                    zIndex: 1
                }),
                f.parentNode.insertBefore(k, f),
                c.inputGroup = k = e.g("input-group").add(),
                k.offset = 0,
                c.drawInput("min"),
                c.drawInput("max");
            m && (f = d.plotTop - 45,
            k.align(s({
                y: f,
                width: k.offset,
                x: h && f < (h.y || 0) + h.height - d.spacing[0] ? -40 : 0
            }, i.inputPosition), !0, d.spacingBox),
            c.setInputValue("min", a),
            c.setInputValue("max", b));
            c.rendered = !0
        },
        destroy: function() {
            var a = this.minInput, b = this.maxInput, c = this.chart, d = this.blurInputs, e;
            U(c.container, "mousedown", d);
            U(c, "resize", d);
            Na(this.buttons);
            if (a)
                a.onfocus = a.onblur = a.onchange = null;
            if (b)
                b.onfocus = b.onblur = b.onchange = null;
            for (e in this)
                this[e] && e !== "chart" && (this[e].destroy ? this[e].destroy() : this[e].nodeType && Va(this[e])),
                this[e] = null
        }
    };
    D.prototype.toFixedRange = function(a, b, c, d) {
        var e = this.chart && this.chart.fixedRange
          , a = q(c, this.translate(a, !0))
          , b = q(d, this.translate(b, !0))
          , c = e && (b - a) / e;
        c > 0.7 && c < 1.3 && (d ? a = b - e : b = a + e);
        return {
            min: a,
            max: b
        }
    }
    ;
    Q(ya.prototype, "init", function(a, b, c) {
        z(this, "init", function() {
            if (this.options.rangeSelector.enabled)
                this.rangeSelector = new Db(this)
        });
        a.call(this, b, c)
    });
    N.RangeSelector = Db;
    ya.prototype.callbacks.push(function(a) {
        function b() {
            f = a.xAxis[0].getExtremes();
            g.render(f.min, f.max)
        }
        function c() {
            f = a.xAxis[0].getExtremes();
            isNaN(f.min) || h.render(f.min, f.max)
        }
        function d(a) {
            a.triggerOp !== "navigator-drag" && g.render(a.min, a.max)
        }
        function e(a) {
            h.render(a.min, a.max)
        }
        var f, g = a.scroller, h = a.rangeSelector;
        g && (z(a.xAxis[0], "afterSetExtremes", d),
        Q(a, "drawChartBox", function(a) {
            var c = this.isDirtyBox;
            a.call(this);
            c && b()
        }),
        b());
        h && (z(a.xAxis[0], "afterSetExtremes", e),
        z(a, "resize", c),
        c());
        z(a, "destroy", function() {
            g && U(a.xAxis[0], "afterSetExtremes", d);
            h && (U(a, "resize", c),
            U(a.xAxis[0], "afterSetExtremes", e))
        })
    });
    N.StockChart = function(a, b) {
        var c = a.series, d, e = q(a.navigator && a.navigator.enabled, !0) ? {
            startOnTick: !1,
            endOnTick: !1
        } : null, f = {
            marker: {
                enabled: !1,
                radius: 2
            },
            states: {
                hover: {
                    lineWidth: 2
                }
            }
        }, g = {
            shadow: !1,
            borderWidth: 0
        };
        a.xAxis = za(qa(a.xAxis || {}), function(a) {
            return y({
                minPadding: 0,
                maxPadding: 0,
                ordinal: !0,
                title: {
                    text: null
                },
                labels: {
                    overflow: "justify"
                },
                showLastLabel: !0
            }, a, {
                type: "datetime",
                categories: null
            }, e)
        });
        a.yAxis = za(qa(a.yAxis || {}), function(a) {
            d = q(a.opposite, !0);
            return y({
                labels: {
                    y: -2
                },
                opposite: d,
                showLastLabel: !1,
                title: {
                    text: null
                }
            }, a)
        });
        a.series = null;
        a = y({
            chart: {
                panning: !0,
                pinchType: "x"
            },
            navigator: {
                enabled: !0
            },
            scrollbar: {
                enabled: !0
            },
            rangeSelector: {
                enabled: !0
            },
            title: {
                text: null,
                style: {
                    fontSize: "16px"
                }
            },
            tooltip: {
                shared: !0,
                crosshairs: !0
            },
            legend: {
                enabled: !1
            },
            plotOptions: {
                line: f,
                spline: f,
                area: f,
                areaspline: f,
                arearange: f,
                areasplinerange: f,
                column: g,
                columnrange: g,
                candlestick: g,
                ohlc: g
            }
        }, a, {
            _stock: !0,
            chart: {
                inverted: !1
            }
        });
        a.series = c;
        return new ya(a,b)
    }
    ;
    Q($a.prototype, "init", function(a, b, c) {
        var d = c.chart.pinchType || "";
        a.call(this, b, c);
        this.pinchX = this.pinchHor = d.indexOf("x") !== -1;
        this.pinchY = this.pinchVert = d.indexOf("y") !== -1;
        this.hasZoom = this.hasZoom || this.pinchHor || this.pinchVert
    });
    Q(D.prototype, "autoLabelAlign", function(a) {
        var b = this.chart
          , c = this.options
          , b = b._labelPanes = b._labelPanes || {}
          , d = this.options.labels;
        if (this.chart.options._stock && this.coll === "yAxis" && (c = c.top + "," + c.height,
        !b[c] && d.enabled)) {
            if (d.x === 15)
                d.x = 0;
            if (d.align === void 0)
                d.align = "right";
            b[c] = 1;
            return "right"
        }
        return a.call(this, [].slice.call(arguments, 1))
    });
    D.prototype.getPlotLinePath = function(a, b, c, d, e) {
        var f = this, g = this.isLinked && !this.series ? this.linkedParent.series : this.series, h = f.chart, i = h.renderer, j = f.left, k = f.top, l, m, n, o, r = [], s, v;
        if (f.coll === "xAxis" || f.coll === "yAxis")
            s = f.isXAxis ? u(f.options.yAxis) ? [h.yAxis[f.options.yAxis]] : za(g, function(a) {
                return a.yAxis
            }) : u(f.options.xAxis) ? [h.xAxis[f.options.xAxis]] : za(g, function(a) {
                return a.xAxis
            });
        p(f.isXAxis ? h.yAxis : h.xAxis, function(a) {
            if (u(a.options.id) ? a.options.id.indexOf("navigator") === -1 : 1) {
                var b = a.isXAxis ? "yAxis" : "xAxis"
                  , b = u(a.options[b]) ? h[b][a.options[b]] : h[b][0];
                f === b && s.push(a)
            }
        });
        v = s.length ? [] : [f];
        p(s, function(a) {
            Qa(a, v) === -1 && v.push(a)
        });
        e = q(e, f.translate(a, null, null, c));
        isNaN(e) || (f.horiz ? p(v, function(a) {
            m = a.top;
            o = m + a.len;
            l = n = t(e + f.transB);
            (l >= j && l <= j + f.width || d) && r.push("M", l, m, "L", n, o)
        }) : p(v, function(a) {
            l = a.left;
            n = l + a.width;
            m = o = t(k + f.height - e);
            (m >= k && m <= k + f.height || d) && r.push("M", l, m, "L", n, o)
        }));
        if (r.length > 0)
            return i.crispPolyLine(r, b || 1)
    }
    ;
    D.prototype.getPlotBandPath = function(a, b) {
        var c = this.getPlotLinePath(b), d = this.getPlotLinePath(a), e = [], f;
        if (d && c)
            for (f = 0; f < d.length; f += 6)
                e.push("M", d[f + 1], d[f + 2], "L", d[f + 4], d[f + 5], c[f + 4], c[f + 5], c[f + 1], c[f + 2]);
        else
            e = null;
        return e
    }
    ;
    na.prototype.crispPolyLine = function(a, b) {
        var c;
        for (c = 0; c < a.length; c += 6)
            a[c + 1] === a[c + 4] && (a[c + 1] = a[c + 4] = t(a[c + 1]) - b % 2 / 2),
            a[c + 2] === a[c + 5] && (a[c + 2] = a[c + 5] = t(a[c + 2]) + b % 2 / 2);
        return a
    }
    ;
    if (Za === N.VMLRenderer)
        ib.prototype.crispPolyLine = na.prototype.crispPolyLine;
    Q(D.prototype, "hideCrosshair", function(a, b) {
        a.call(this, b);
        u(this.crossLabelArray) && (u(b) ? this.crossLabelArray[b] && this.crossLabelArray[b].hide() : p(this.crossLabelArray, function(a) {
            a.hide()
        }))
    });
    Q(D.prototype, "drawCrosshair", function(a, b, c) {
        var d, e;
        a.call(this, b, c);
        if (u(this.crosshair.label) && this.crosshair.label.enabled && u(c)) {
            var a = this.chart, f = this.options.crosshair.label, g = this.isXAxis ? "x" : "y", b = this.horiz, h = this.opposite, i = this.left, j = this.top, k = this.crossLabel, l, m, n = f.format, o = "";
            if (!k)
                k = this.crossLabel = a.renderer.label().attr({
                    align: f.align || (b ? "center" : h ? this.labelAlign === "right" ? "right" : "left" : this.labelAlign === "left" ? "left" : "center"),
                    zIndex: 12,
                    height: b ? 16 : r,
                    fill: f.backgroundColor || this.series[0] && this.series[0].color || "gray",
                    padding: q(f.padding, 2),
                    stroke: f.borderColor || null,
                    "stroke-width": f.borderWidth || 0
                }).css(s({
                    color: "white",
                    fontWeight: "normal",
                    fontSize: "11px",
                    textAlign: "center"
                }, f.style)).add();
            b ? (l = c.plotX + i,
            m = j + (h ? 0 : this.height)) : (l = h ? this.width + i : 0,
            m = c.plotY + j);
            if (m < j || m > j + this.height)
                this.hideCrosshair();
            else {
                !n && !f.formatter && (this.isDatetimeAxis && (o = "%b %d, %Y"),
                n = "{value" + (o ? ":" + o : "") + "}");
                k.attr({
                    text: n ? Ma(n, {
                        value: c[g]
                    }) : f.formatter.call(this, c[g]),
                    x: l,
                    y: m,
                    visibility: "visible"
                });
                c = k.getBBox();
                if (b) {
                    if (this.options.tickPosition === "inside" && !h || this.options.tickPosition !== "inside" && h)
                        m = k.y - c.height
                } else
                    m = k.y - c.height / 2;
                b ? (d = i - c.x,
                e = i + this.width - c.x) : (d = this.labelAlign === "left" ? i : 0,
                e = this.labelAlign === "right" ? i + this.width : a.chartWidth);
                k.translateX < d && (l += d - k.translateX);
                k.translateX + c.width >= e && (l -= k.translateX + c.width - e);
                k.attr({
                    x: l,
                    y: m,
                    visibility: "visible"
                })
            }
        }
    });
    var mc = da.init
      , nc = da.processData
      , oc = Ba.prototype.tooltipFormatter;
    da.init = function() {
        mc.apply(this, arguments);
        this.setCompare(this.options.compare)
    }
    ;
    da.setCompare = function(a) {
        this.modifyValue = a === "value" || a === "percent" ? function(b, c) {
            var d = this.compareValue;
            if (b !== r && (b = a === "value" ? b - d : b = 100 * (b / d) - 100,
            c))
                c.change = b;
            return b
        }
        : null;
        if (this.chart.hasRendered)
            this.isDirty = !0
    }
    ;
    da.processData = function() {
        var a = 0, b, c, d;
        nc.apply(this, arguments);
        if (this.xAxis && this.processedYData) {
            b = this.processedXData;
            c = this.processedYData;
            for (d = c.length; a < d; a++)
                if (typeof c[a] === "number" && b[a] >= this.xAxis.min) {
                    this.compareValue = c[a];
                    break
                }
        }
    }
    ;
    Q(da, "getExtremes", function(a) {
        a.apply(this, [].slice.call(arguments, 1));
        if (this.modifyValue)
            this.dataMax = this.modifyValue(this.dataMax),
            this.dataMin = this.modifyValue(this.dataMin)
    });
    D.prototype.setCompare = function(a, b) {
        this.isXAxis || (p(this.series, function(b) {
            b.setCompare(a)
        }),
        q(b, !0) && this.chart.redraw())
    }
    ;
    Ba.prototype.tooltipFormatter = function(a) {
        a = a.replace("{point.change}", (this.change > 0 ? "+" : "") + Da(this.change, q(this.series.tooltipOptions.changeDecimals, 2)));
        return oc.apply(this, [a])
    }
    ;
    Q(M.prototype, "render", function(a) {
        if (this.chart.options._stock)
            !this.clipBox && this.animate && this.animate.toString().indexOf("sharedClip") !== -1 ? (this.clipBox = y(this.chart.clipBox),
            this.clipBox.width = this.xAxis.len,
            this.clipBox.height = this.yAxis.len) : this.chart[this.sharedClipKey] && this.chart[this.sharedClipKey].attr({
                width: this.xAxis.len,
                height: this.yAxis.len
            });
        a.call(this)
    });
    s(N, {
        Axis: D,
        Chart: ya,
        Color: Ia,
        Point: Ba,
        Tick: bb,
        Renderer: Za,
        Series: M,
        SVGElement: Z,
        SVGRenderer: na,
        arrayMin: Ua,
        arrayMax: Ea,
        charts: ba,
        dateFormat: xa,
        format: Ma,
        pathAnim: Gb,
        getOptions: function() {
            return F
        },
        hasBidiBug: Yb,
        isTouchDevice: fb,
        numberFormat: Da,
        seriesTypes: B,
        setOptions: function(a) {
            F = y(!0, F, a);
            Mb();
            return F
        },
        addEvent: z,
        removeEvent: U,
        createElement: aa,
        discardElement: Va,
        css: K,
        each: p,
        extend: s,
        map: za,
        merge: y,
        pick: q,
        splat: qa,
        extendClass: ia,
        pInt: H,
        wrap: Q,
        svg: ea,
        canvas: la,
        vml: !ea && !la,
        product: "Highstock",
        version: "2.0.4"
    })
}
)();

/*
 Highcharts JS v4.0.4 (2014-09-02)

 (c) 2009-2014 Torstein Honsi

 License: www.highcharts.com/license
*/
(function(l, C) {
    function K(a, b, c) {
        this.init.call(this, a, b, c)
    }
    var P = l.arrayMin
      , Q = l.arrayMax
      , s = l.each
      , F = l.extend
      , q = l.merge
      , R = l.map
      , o = l.pick
      , x = l.pInt
      , p = l.getOptions().plotOptions
      , g = l.seriesTypes
      , v = l.extendClass
      , L = l.splat
      , r = l.wrap
      , M = l.Axis
      , y = l.Tick
      , H = l.Point
      , S = l.Pointer
      , T = l.CenteredSeriesMixin
      , z = l.TrackerMixin
      , t = l.Series
      , w = Math
      , D = w.round
      , A = w.floor
      , N = w.max
      , U = l.Color
      , u = function() {};
    F(K.prototype, {
        init: function(a, b, c) {
            var d = this
              , e = d.defaultOptions;
            d.chart = b;
            if (b.angular)
                e.background = {};
            d.options = a = q(e, a);
            (a = a.background) && s([].concat(L(a)).reverse(), function(a) {
                var b = a.backgroundColor
                  , a = q(d.defaultBackgroundOptions, a);
                if (b)
                    a.backgroundColor = b;
                a.color = a.backgroundColor;
                c.options.plotBands.unshift(a)
            })
        },
        defaultOptions: {
            center: ["50%", "50%"],
            size: "85%",
            startAngle: 0
        },
        defaultBackgroundOptions: {
            shape: "circle",
            borderWidth: 1,
            borderColor: "silver",
            backgroundColor: {
                linearGradient: {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 1
                },
                stops: [[0, "#FFF"], [1, "#DDD"]]
            },
            from: -Number.MAX_VALUE,
            innerRadius: 0,
            to: Number.MAX_VALUE,
            outerRadius: "105%"
        }
    });
    var G = M.prototype
      , y = y.prototype
      , V = {
        getOffset: u,
        redraw: function() {
            this.isDirty = !1
        },
        render: function() {
            this.isDirty = !1
        },
        setScale: u,
        setCategories: u,
        setTitle: u
    }
      , O = {
        isRadial: !0,
        defaultRadialGaugeOptions: {
            labels: {
                align: "center",
                x: 0,
                y: null
            },
            minorGridLineWidth: 0,
            minorTickInterval: "auto",
            minorTickLength: 10,
            minorTickPosition: "inside",
            minorTickWidth: 1,
            tickLength: 10,
            tickPosition: "inside",
            tickWidth: 2,
            title: {
                rotation: 0
            },
            zIndex: 2
        },
        defaultRadialXOptions: {
            gridLineWidth: 1,
            labels: {
                align: null,
                distance: 15,
                x: 0,
                y: null
            },
            maxPadding: 0,
            minPadding: 0,
            showLastLabel: !1,
            tickLength: 0
        },
        defaultRadialYOptions: {
            gridLineInterpolation: "circle",
            labels: {
                align: "right",
                x: -3,
                y: -2
            },
            showLastLabel: !1,
            title: {
                x: 4,
                text: null,
                rotation: 90
            }
        },
        setOptions: function(a) {
            a = this.options = q(this.defaultOptions, this.defaultRadialOptions, a);
            if (!a.plotBands)
                a.plotBands = []
        },
        getOffset: function() {
            G.getOffset.call(this);
            this.chart.axisOffset[this.side] = 0;
            this.center = this.pane.center = T.getCenter.call(this.pane)
        },
        getLinePath: function(a, b) {
            var c = this.center
              , b = o(b, c[2] / 2 - this.offset);
            return this.chart.renderer.symbols.arc(this.left + c[0], this.top + c[1], b, b, {
                start: this.startAngleRad,
                end: this.endAngleRad,
                open: !0,
                innerR: 0
            })
        },
        setAxisTranslation: function() {
            G.setAxisTranslation.call(this);
            if (this.center)
                this.transA = this.isCircular ? (this.endAngleRad - this.startAngleRad) / (this.max - this.min || 1) : this.center[2] / 2 / (this.max - this.min || 1),
                this.minPixelPadding = this.isXAxis ? this.transA * this.minPointOffset : 0
        },
        beforeSetTickPositions: function() {
            this.autoConnect && (this.max += this.categories && 1 || this.pointRange || this.closestPointRange || 0)
        },
        setAxisSize: function() {
            G.setAxisSize.call(this);
            if (this.isRadial) {
                this.center = this.pane.center = l.CenteredSeriesMixin.getCenter.call(this.pane);
                if (this.isCircular)
                    this.sector = this.endAngleRad - this.startAngleRad;
                this.len = this.width = this.height = this.center[2] * o(this.sector, 1) / 2
            }
        },
        getPosition: function(a, b) {
            return this.postTranslate(this.isCircular ? this.translate(a) : 0, o(this.isCircular ? b : this.translate(a), this.center[2] / 2) - this.offset)
        },
        postTranslate: function(a, b) {
            var c = this.chart
              , d = this.center
              , a = this.startAngleRad + a;
            return {
                x: c.plotLeft + d[0] + Math.cos(a) * b,
                y: c.plotTop + d[1] + Math.sin(a) * b
            }
        },
        getPlotBandPath: function(a, b, c) {
            var d = this.center, e = this.startAngleRad, f = d[2] / 2, h = [o(c.outerRadius, "100%"), c.innerRadius, o(c.thickness, 10)], j = /%$/, k, m = this.isCircular;
            this.options.gridLineInterpolation === "polygon" ? d = this.getPlotLinePath(a).concat(this.getPlotLinePath(b, !0)) : (m || (h[0] = this.translate(a),
            h[1] = this.translate(b)),
            h = R(h, function(a) {
                j.test(a) && (a = x(a, 10) * f / 100);
                return a
            }),
            c.shape === "circle" || !m ? (a = -Math.PI / 2,
            b = Math.PI * 1.5,
            k = !0) : (a = e + this.translate(a),
            b = e + this.translate(b)),
            d = this.chart.renderer.symbols.arc(this.left + d[0], this.top + d[1], h[0], h[0], {
                start: a,
                end: b,
                innerR: o(h[1], h[0] - h[2]),
                open: k
            }));
            return d
        },
        getPlotLinePath: function(a, b) {
            var c = this, d = c.center, e = c.chart, f = c.getPosition(a), h, j, k;
            c.isCircular ? k = ["M", d[0] + e.plotLeft, d[1] + e.plotTop, "L", f.x, f.y] : c.options.gridLineInterpolation === "circle" ? (a = c.translate(a)) && (k = c.getLinePath(0, a)) : (s(e.xAxis, function(a) {
                a.pane === c.pane && (h = a)
            }),
            k = [],
            a = c.translate(a),
            d = h.tickPositions,
            h.autoConnect && (d = d.concat([d[0]])),
            b && (d = [].concat(d).reverse()),
            s(d, function(f, c) {
                j = h.getPosition(f, a);
                k.push(c ? "L" : "M", j.x, j.y)
            }));
            return k
        },
        getTitlePosition: function() {
            var a = this.center
              , b = this.chart
              , c = this.options.title;
            return {
                x: b.plotLeft + a[0] + (c.x || 0),
                y: b.plotTop + a[1] - {
                    high: 0.5,
                    middle: 0.25,
                    low: 0
                }[c.align] * a[2] + (c.y || 0)
            }
        }
    };
    r(G, "init", function(a, b, c) {
        var i;
        var d = b.angular, e = b.polar, f = c.isX, h = d && f, j, k;
        k = b.options;
        var m = c.pane || 0;
        if (d) {
            if (F(this, h ? V : O),
            j = !f)
                this.defaultRadialOptions = this.defaultRadialGaugeOptions
        } else if (e)
            F(this, O),
            this.defaultRadialOptions = (j = f) ? this.defaultRadialXOptions : q(this.defaultYAxisOptions, this.defaultRadialYOptions);
        a.call(this, b, c);
        if (!h && (d || e)) {
            a = this.options;
            if (!b.panes)
                b.panes = [];
            this.pane = (i = b.panes[m] = b.panes[m] || new K(L(k.pane)[m],b,this),
            m = i);
            m = m.options;
            b.inverted = !1;
            k.chart.zoomType = null;
            this.startAngleRad = b = (m.startAngle - 90) * Math.PI / 180;
            this.endAngleRad = k = (o(m.endAngle, m.startAngle + 360) - 90) * Math.PI / 180;
            this.offset = a.offset || 0;
            if ((this.isCircular = j) && c.max === C && k - b === 2 * Math.PI)
                this.autoConnect = !0
        }
    });
    r(y, "getPosition", function(a, b, c, d, e) {
        var f = this.axis;
        return f.getPosition ? f.getPosition(c) : a.call(this, b, c, d, e)
    });
    r(y, "getLabelPosition", function(a, b, c, d, e, f, h, j, k) {
        var m = this.axis
          , i = f.y
          , n = f.align
          , g = (m.translate(this.pos) + m.startAngleRad + Math.PI / 2) / Math.PI * 180 % 360;
        m.isRadial ? (a = m.getPosition(this.pos, m.center[2] / 2 + o(f.distance, -25)),
        f.rotation === "auto" ? d.attr({
            rotation: g
        }) : i === null && (i = m.chart.renderer.fontMetrics(d.styles.fontSize).b - d.getBBox().height / 2),
        n === null && (n = m.isCircular ? g > 20 && g < 160 ? "left" : g > 200 && g < 340 ? "right" : "center" : "center",
        d.attr({
            align: n
        })),
        a.x += f.x,
        a.y += i) : a = a.call(this, b, c, d, e, f, h, j, k);
        return a
    });
    r(y, "getMarkPath", function(a, b, c, d, e, f, h) {
        var j = this.axis;
        j.isRadial ? (a = j.getPosition(this.pos, j.center[2] / 2 + d),
        b = ["M", b, c, "L", a.x, a.y]) : b = a.call(this, b, c, d, e, f, h);
        return b
    });
    p.arearange = q(p.area, {
        lineWidth: 1,
        marker: null,
        threshold: null,
        tooltip: {
            pointFormat: '<span style="color:{series.color}">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'
        },
        trackByArea: !0,
        dataLabels: {
            align: null,
            verticalAlign: null,
            xLow: 0,
            xHigh: 0,
            yLow: 0,
            yHigh: 0
        },
        states: {
            hover: {
                halo: !1
            }
        }
    });
    g.arearange = v(g.area, {
        type: "arearange",
        pointArrayMap: ["low", "high"],
        toYData: function(a) {
            return [a.low, a.high]
        },
        pointValKey: "low",
        getSegments: function() {
            var a = this;
            s(a.points, function(b) {
                if (!a.options.connectNulls && (b.low === null || b.high === null))
                    b.y = null;
                else if (b.low === null && b.high !== null)
                    b.y = b.high
            });
            t.prototype.getSegments.call(this)
        },
        translate: function() {
            var a = this.yAxis;
            g.area.prototype.translate.apply(this);
            s(this.points, function(b) {
                var c = b.low
                  , d = b.high
                  , e = b.plotY;
                d === null && c === null ? b.y = null : c === null ? (b.plotLow = b.plotY = null,
                b.plotHigh = a.translate(d, 0, 1, 0, 1)) : d === null ? (b.plotLow = e,
                b.plotHigh = null) : (b.plotLow = e,
                b.plotHigh = a.translate(d, 0, 1, 0, 1))
            })
        },
        getSegmentPath: function(a) {
            var b, c = [], d = a.length, e = t.prototype.getSegmentPath, f, h;
            h = this.options;
            var j = h.step;
            for (b = HighchartsAdapter.grep(a, function(a) {
                return a.plotLow !== null
            }); d--; )
                f = a[d],
                f.plotHigh !== null && c.push({
                    plotX: f.plotX,
                    plotY: f.plotHigh
                });
            a = e.call(this, b);
            if (j)
                j === !0 && (j = "left"),
                h.step = {
                    left: "right",
                    center: "center",
                    right: "left"
                }[j];
            c = e.call(this, c);
            h.step = j;
            h = [].concat(a, c);
            c[0] = "L";
            this.areaPath = this.areaPath.concat(a, c);
            return h
        },
        drawDataLabels: function() {
            var a = this.data, b = a.length, c, d = [], e = t.prototype, f = this.options.dataLabels, h = f.align, j, k = this.chart.inverted;
            if (f.enabled || this._hasPointLabels) {
                for (c = b; c--; )
                    if (j = a[c],
                    j.y = j.high,
                    j._plotY = j.plotY,
                    j.plotY = j.plotHigh,
                    d[c] = j.dataLabel,
                    j.dataLabel = j.dataLabelUpper,
                    j.below = !1,
                    k) {
                        if (!h)
                            f.align = "left";
                        f.x = f.xHigh
                    } else
                        f.y = f.yHigh;
                e.drawDataLabels && e.drawDataLabels.apply(this, arguments);
                for (c = b; c--; )
                    if (j = a[c],
                    j.dataLabelUpper = j.dataLabel,
                    j.dataLabel = d[c],
                    j.y = j.low,
                    j.plotY = j._plotY,
                    j.below = !0,
                    k) {
                        if (!h)
                            f.align = "right";
                        f.x = f.xLow
                    } else
                        f.y = f.yLow;
                e.drawDataLabels && e.drawDataLabels.apply(this, arguments)
            }
            f.align = h
        },
        alignDataLabel: function() {
            g.column.prototype.alignDataLabel.apply(this, arguments)
        },
        getSymbol: u,
        drawPoints: u
    });
    p.areasplinerange = q(p.arearange);
    g.areasplinerange = v(g.arearange, {
        type: "areasplinerange",
        getPointSpline: g.spline.prototype.getPointSpline
    });
    (function() {
        var a = g.column.prototype;
        p.columnrange = q(p.column, p.arearange, {
            lineWidth: 1,
            pointRange: null
        });
        g.columnrange = v(g.arearange, {
            type: "columnrange",
            translate: function() {
                var b = this, c = b.yAxis, d;
                a.translate.apply(b);
                s(b.points, function(a) {
                    var f = a.shapeArgs, h = b.options.minPointLength, j;
                    a.tooltipPos = null;
                    a.plotHigh = d = c.translate(a.high, 0, 1, 0, 1);
                    a.plotLow = a.plotY;
                    j = d;
                    a = a.plotY - d;
                    a < h && (h -= a,
                    a += h,
                    j -= h / 2);
                    f.height = a;
                    f.y = j
                })
            },
            trackerGroups: ["group", "dataLabelsGroup"],
            drawGraph: u,
            pointAttrToOptions: a.pointAttrToOptions,
            drawPoints: a.drawPoints,
            drawTracker: a.drawTracker,
            animate: a.animate,
            getColumnMetrics: a.getColumnMetrics
        })
    }
    )();
    p.gauge = q(p.line, {
        dataLabels: {
            enabled: !0,
            defer: !1,
            y: 15,
            borderWidth: 1,
            borderColor: "silver",
            borderRadius: 3,
            crop: !1,
            style: {
                fontWeight: "bold"
            },
            verticalAlign: "top",
            zIndex: 2
        },
        dial: {},
        pivot: {},
        tooltip: {
            headerFormat: ""
        },
        showInLegend: !1
    });
    z = {
        type: "gauge",
        pointClass: v(H, {
            setState: function(a) {
                this.state = a
            }
        }),
        angular: !0,
        drawGraph: u,
        fixedBox: !0,
        forceDL: !0,
        trackerGroups: ["group", "dataLabelsGroup"],
        translate: function() {
            var a = this.yAxis
              , b = this.options
              , c = a.center;
            this.generatePoints();
            s(this.points, function(d) {
                var e = q(b.dial, d.dial)
                  , f = x(o(e.radius, 80)) * c[2] / 200
                  , h = x(o(e.baseLength, 70)) * f / 100
                  , j = x(o(e.rearLength, 10)) * f / 100
                  , k = e.baseWidth || 3
                  , m = e.topWidth || 1
                  , i = b.overshoot
                  , n = a.startAngleRad + a.translate(d.y, null, null, null, !0);
                i && typeof i === "number" ? (i = i / 180 * Math.PI,
                n = Math.max(a.startAngleRad - i, Math.min(a.endAngleRad + i, n))) : b.wrap === !1 && (n = Math.max(a.startAngleRad, Math.min(a.endAngleRad, n)));
                n = n * 180 / Math.PI;
                d.shapeType = "path";
                d.shapeArgs = {
                    d: e.path || ["M", -j, -k / 2, "L", h, -k / 2, f, -m / 2, f, m / 2, h, k / 2, -j, k / 2, "z"],
                    translateX: c[0],
                    translateY: c[1],
                    rotation: n
                };
                d.plotX = c[0];
                d.plotY = c[1]
            })
        },
        drawPoints: function() {
            var a = this
              , b = a.yAxis.center
              , c = a.pivot
              , d = a.options
              , e = d.pivot
              , f = a.chart.renderer;
            s(a.points, function(c) {
                var b = c.graphic
                  , k = c.shapeArgs
                  , e = k.d
                  , i = q(d.dial, c.dial);
                b ? (b.animate(k),
                k.d = e) : c.graphic = f[c.shapeType](k).attr({
                    stroke: i.borderColor || "none",
                    "stroke-width": i.borderWidth || 0,
                    fill: i.backgroundColor || "black",
                    rotation: k.rotation
                }).add(a.group)
            });
            c ? c.animate({
                translateX: b[0],
                translateY: b[1]
            }) : a.pivot = f.circle(0, 0, o(e.radius, 5)).attr({
                "stroke-width": e.borderWidth || 0,
                stroke: e.borderColor || "silver",
                fill: e.backgroundColor || "black"
            }).translate(b[0], b[1]).add(a.group)
        },
        animate: function(a) {
            var b = this;
            if (!a)
                s(b.points, function(a) {
                    var d = a.graphic;
                    d && (d.attr({
                        rotation: b.yAxis.startAngleRad * 180 / Math.PI
                    }),
                    d.animate({
                        rotation: a.shapeArgs.rotation
                    }, b.options.animation))
                }),
                b.animate = null
        },
        render: function() {
            this.group = this.plotGroup("group", "series", this.visible ? "visible" : "hidden", this.options.zIndex, this.chart.seriesGroup);
            t.prototype.render.call(this);
            this.group.clip(this.chart.clipRect)
        },
        setData: function(a, b) {
            t.prototype.setData.call(this, a, !1);
            this.processData();
            this.generatePoints();
            o(b, !0) && this.chart.redraw()
        },
        drawTracker: z && z.drawTrackerPoint
    };
    g.gauge = v(g.line, z);
    p.boxplot = q(p.column, {
        fillColor: "#FFFFFF",
        lineWidth: 1,
        medianWidth: 2,
        states: {
            hover: {
                brightness: -0.3
            }
        },
        threshold: null,
        tooltip: {
            pointFormat: '<span style="color:{series.color}">●</span> <b> {series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>'
        },
        whiskerLength: "50%",
        whiskerWidth: 2
    });
    g.boxplot = v(g.column, {
        type: "boxplot",
        pointArrayMap: ["low", "q1", "median", "q3", "high"],
        toYData: function(a) {
            return [a.low, a.q1, a.median, a.q3, a.high]
        },
        pointValKey: "high",
        pointAttrToOptions: {
            fill: "fillColor",
            stroke: "color",
            "stroke-width": "lineWidth"
        },
        drawDataLabels: u,
        translate: function() {
            var a = this.yAxis
              , b = this.pointArrayMap;
            g.column.prototype.translate.apply(this);
            s(this.points, function(c) {
                s(b, function(b) {
                    c[b] !== null && (c[b + "Plot"] = a.translate(c[b], 0, 1, 0, 1))
                })
            })
        },
        drawPoints: function() {
            var a = this, b = a.points, c = a.options, d = a.chart.renderer, e, f, h, j, k, m, i, n, g, l, p, I, r, q, J, u, v, t, w, x, z, y, E = a.doQuartiles !== !1, B = parseInt(a.options.whiskerLength, 10) / 100;
            s(b, function(b) {
                g = b.graphic;
                z = b.shapeArgs;
                p = {};
                q = {};
                u = {};
                y = b.color || a.color;
                if (b.plotY !== C)
                    if (e = b.pointAttr[b.selected ? "selected" : ""],
                    v = z.width,
                    t = A(z.x),
                    w = t + v,
                    x = D(v / 2),
                    f = A(E ? b.q1Plot : b.lowPlot),
                    h = A(E ? b.q3Plot : b.lowPlot),
                    j = A(b.highPlot),
                    k = A(b.lowPlot),
                    p.stroke = b.stemColor || c.stemColor || y,
                    p["stroke-width"] = o(b.stemWidth, c.stemWidth, c.lineWidth),
                    p.dashstyle = b.stemDashStyle || c.stemDashStyle,
                    q.stroke = b.whiskerColor || c.whiskerColor || y,
                    q["stroke-width"] = o(b.whiskerWidth, c.whiskerWidth, c.lineWidth),
                    u.stroke = b.medianColor || c.medianColor || y,
                    u["stroke-width"] = o(b.medianWidth, c.medianWidth, c.lineWidth),
                    u["stroke-linecap"] = "round",
                    i = p["stroke-width"] % 2 / 2,
                    n = t + x + i,
                    l = ["M", n, h, "L", n, j, "M", n, f, "L", n, k],
                    E && (i = e["stroke-width"] % 2 / 2,
                    n = A(n) + i,
                    f = A(f) + i,
                    h = A(h) + i,
                    t += i,
                    w += i,
                    I = ["M", t, h, "L", t, f, "L", w, f, "L", w, h, "L", t, h, "z"]),
                    B && (i = q["stroke-width"] % 2 / 2,
                    j += i,
                    k += i,
                    r = ["M", n - x * B, j, "L", n + x * B, j, "M", n - x * B, k, "L", n + x * B, k]),
                    i = u["stroke-width"] % 2 / 2,
                    m = D(b.medianPlot) + i,
                    J = ["M", t, m, "L", w, m],
                    g)
                        b.stem.animate({
                            d: l
                        }),
                        B && b.whiskers.animate({
                            d: r
                        }),
                        E && b.box.animate({
                            d: I
                        }),
                        b.medianShape.animate({
                            d: J
                        });
                    else {
                        b.graphic = g = d.g().add(a.group);
                        b.stem = d.path(l).attr(p).add(g);
                        if (B)
                            b.whiskers = d.path(r).attr(q).add(g);
                        if (E)
                            b.box = d.path(I).attr(e).add(g);
                        b.medianShape = d.path(J).attr(u).add(g)
                    }
            })
        }
    });
    p.errorbar = q(p.boxplot, {
        color: "#000000",
        grouping: !1,
        linkedTo: ":previous",
        tooltip: {
            pointFormat: '<span style="color:{series.color}">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'
        },
        whiskerWidth: null
    });
    g.errorbar = v(g.boxplot, {
        type: "errorbar",
        pointArrayMap: ["low", "high"],
        toYData: function(a) {
            return [a.low, a.high]
        },
        pointValKey: "high",
        doQuartiles: !1,
        drawDataLabels: g.arearange ? g.arearange.prototype.drawDataLabels : u,
        getColumnMetrics: function() {
            return this.linkedParent && this.linkedParent.columnMetrics || g.column.prototype.getColumnMetrics.call(this)
        }
    });
    p.waterfall = q(p.column, {
        lineWidth: 1,
        lineColor: "#333",
        dashStyle: "dot",
        borderColor: "#333",
        states: {
            hover: {
                lineWidthPlus: 0
            }
        }
    });
    g.waterfall = v(g.column, {
        type: "waterfall",
        upColorProp: "fill",
        pointArrayMap: ["low", "y"],
        pointValKey: "y",
        init: function(a, b) {
            b.stacking = !0;
            g.column.prototype.init.call(this, a, b)
        },
        translate: function() {
            var a = this.yAxis, b, c, d, e, f, h, j, k, m, i;
            b = this.options.threshold;
            g.column.prototype.translate.apply(this);
            k = m = b;
            d = this.points;
            for (c = 0,
            b = d.length; c < b; c++) {
                e = d[c];
                f = e.shapeArgs;
                h = this.getStack(c);
                i = h.points[this.index + "," + c];
                if (isNaN(e.y))
                    e.y = this.yData[c];
                j = N(k, k + e.y) + i[0];
                f.y = a.translate(j, 0, 1);
                e.isSum ? (f.y = a.translate(i[1], 0, 1),
                f.height = a.translate(i[0], 0, 1) - f.y) : e.isIntermediateSum ? (f.y = a.translate(i[1], 0, 1),
                f.height = a.translate(m, 0, 1) - f.y,
                m = i[1]) : k += h.total;
                f.height < 0 && (f.y += f.height,
                f.height *= -1);
                e.plotY = f.y = D(f.y) - this.borderWidth % 2 / 2;
                f.height = N(D(f.height), 0.001);
                e.yBottom = f.y + f.height;
                f = e.plotY + (e.negative ? f.height : 0);
                this.chart.inverted ? e.tooltipPos[0] = a.len - f : e.tooltipPos[1] = f
            }
        },
        processData: function(a) {
            var b = this.yData, c = this.points, d, e = b.length, f, h, j, k, m, i;
            h = f = j = k = this.options.threshold || 0;
            for (i = 0; i < e; i++)
                m = b[i],
                d = c && c[i] ? c[i] : {},
                m === "sum" || d.isSum ? b[i] = h : m === "intermediateSum" || d.isIntermediateSum ? b[i] = f : (h += m,
                f += m),
                j = Math.min(h, j),
                k = Math.max(h, k);
            t.prototype.processData.call(this, a);
            this.dataMin = j;
            this.dataMax = k
        },
        toYData: function(a) {
            if (a.isSum)
                return a.x === 0 ? null : "sum";
            else if (a.isIntermediateSum)
                return a.x === 0 ? null : "intermediateSum";
            return a.y
        },
        getAttribs: function() {
            g.column.prototype.getAttribs.apply(this, arguments);
            var a = this.options
              , b = a.states
              , c = a.upColor || this.color
              , a = l.Color(c).brighten(0.1).get()
              , d = q(this.pointAttr)
              , e = this.upColorProp;
            d[""][e] = c;
            d.hover[e] = b.hover.upColor || a;
            d.select[e] = b.select.upColor || c;
            s(this.points, function(a) {
                if (a.y > 0 && !a.color)
                    a.pointAttr = d,
                    a.color = c
            })
        },
        getGraphPath: function() {
            var a = this.data, b = a.length, c = D(this.options.lineWidth + this.borderWidth) % 2 / 2, d = [], e, f, h;
            for (h = 1; h < b; h++)
                f = a[h].shapeArgs,
                e = a[h - 1].shapeArgs,
                f = ["M", e.x + e.width, e.y + c, "L", f.x, e.y + c],
                a[h - 1].y < 0 && (f[2] += e.height,
                f[5] += e.height),
                d = d.concat(f);
            return d
        },
        getExtremes: u,
        getStack: function(a) {
            var b = this.yAxis.stacks
              , c = this.stackKey;
            this.processedYData[a] < this.options.threshold && (c = "-" + c);
            return b[c][a]
        },
        drawGraph: t.prototype.drawGraph
    });
    p.bubble = q(p.scatter, {
        dataLabels: {
            formatter: function() {
                return this.point.z
            },
            inside: !0,
            style: {
                color: "white",
                textShadow: "0px 0px 3px black"
            },
            verticalAlign: "middle"
        },
        marker: {
            lineColor: null,
            lineWidth: 1
        },
        minSize: 8,
        maxSize: "20%",
        states: {
            hover: {
                halo: {
                    size: 5
                }
            }
        },
        tooltip: {
            pointFormat: "({point.x}, {point.y}), Size: {point.z}"
        },
        turboThreshold: 0,
        zThreshold: 0
    });
    z = v(H, {
        haloPath: function() {
            return H.prototype.haloPath.call(this, this.shapeArgs.r + this.series.options.states.hover.halo.size)
        }
    });
    g.bubble = v(g.scatter, {
        type: "bubble",
        pointClass: z,
        pointArrayMap: ["y", "z"],
        parallelArrays: ["x", "y", "z"],
        trackerGroups: ["group", "dataLabelsGroup"],
        bubblePadding: !0,
        pointAttrToOptions: {
            stroke: "lineColor",
            "stroke-width": "lineWidth",
            fill: "fillColor"
        },
        applyOpacity: function(a) {
            var b = this.options.marker
              , c = o(b.fillOpacity, 0.5)
              , a = a || b.fillColor || this.color;
            c !== 1 && (a = U(a).setOpacity(c).get("rgba"));
            return a
        },
        convertAttribs: function() {
            var a = t.prototype.convertAttribs.apply(this, arguments);
            a.fill = this.applyOpacity(a.fill);
            return a
        },
        getRadii: function(a, b, c, d) {
            var e, f, h, j = this.zData, k = [], m = this.options.sizeBy !== "width";
            for (f = 0,
            e = j.length; f < e; f++)
                h = b - a,
                h = h > 0 ? (j[f] - a) / (b - a) : 0.5,
                m && h >= 0 && (h = Math.sqrt(h)),
                k.push(w.ceil(c + h * (d - c)) / 2);
            this.radii = k
        },
        animate: function(a) {
            var b = this.options.animation;
            if (!a)
                s(this.points, function(a) {
                    var d = a.graphic
                      , a = a.shapeArgs;
                    d && a && (d.attr("r", 1),
                    d.animate({
                        r: a.r
                    }, b))
                }),
                this.animate = null
        },
        translate: function() {
            var a, b = this.data, c, d, e = this.radii;
            g.scatter.prototype.translate.call(this);
            for (a = b.length; a--; )
                c = b[a],
                d = e ? e[a] : 0,
                c.negative = c.z < (this.options.zThreshold || 0),
                d >= this.minPxSize / 2 ? (c.shapeType = "circle",
                c.shapeArgs = {
                    x: c.plotX,
                    y: c.plotY,
                    r: d
                },
                c.dlBox = {
                    x: c.plotX - d,
                    y: c.plotY - d,
                    width: 2 * d,
                    height: 2 * d
                }) : c.shapeArgs = c.plotY = c.dlBox = C
        },
        drawLegendSymbol: function(a, b) {
            var c = x(a.itemStyle.fontSize) / 2;
            b.legendSymbol = this.chart.renderer.circle(c, a.baseline - c, c).attr({
                zIndex: 3
            }).add(b.legendGroup);
            b.legendSymbol.isMarker = !0
        },
        drawPoints: g.column.prototype.drawPoints,
        alignDataLabel: g.column.prototype.alignDataLabel
    });
    M.prototype.beforePadding = function() {
        var a = this
          , b = this.len
          , c = this.chart
          , d = 0
          , e = b
          , f = this.isXAxis
          , h = f ? "xData" : "yData"
          , j = this.min
          , k = {}
          , m = w.min(c.plotWidth, c.plotHeight)
          , i = Number.MAX_VALUE
          , n = -Number.MAX_VALUE
          , g = this.max - j
          , l = b / g
          , p = [];
        this.tickPositions && (s(this.series, function(b) {
            var h = b.options;
            if (b.bubblePadding && (b.visible || !c.options.chart.ignoreHiddenSeries))
                if (a.allowZoomOutside = !0,
                p.push(b),
                f)
                    s(["minSize", "maxSize"], function(a) {
                        var b = h[a]
                          , f = /%$/.test(b)
                          , b = x(b);
                        k[a] = f ? m * b / 100 : b
                    }),
                    b.minPxSize = k.minSize,
                    b = b.zData,
                    b.length && (i = o(h.zMin, w.min(i, w.max(P(b), h.displayNegative === !1 ? h.zThreshold : -Number.MAX_VALUE))),
                    n = o(h.zMax, w.max(n, Q(b))))
        }),
        s(p, function(a) {
            var b = a[h], c = b.length, m;
            f && a.getRadii(i, n, k.minSize, k.maxSize);
            if (g > 0)
                for (; c--; )
                    typeof b[c] === "number" && (m = a.radii[c],
                    d = Math.min((b[c] - j) * l - m, d),
                    e = Math.max((b[c] - j) * l + m, e))
        }),
        p.length && g > 0 && o(this.options.min, this.userMin) === C && o(this.options.max, this.userMax) === C && (e -= b,
        l *= (b + d - e) / b,
        this.min += d / l,
        this.max += e / l))
    }
    ;
    (function() {
        function a(a, b, c) {
            a.call(this, b, c);
            if (this.chart.polar)
                this.closeSegment = function(a) {
                    var b = this.xAxis.center;
                    a.push("L", b[0], b[1])
                }
                ,
                this.closedStacks = !0
        }
        function b(a, b) {
            var c = this.chart
              , d = this.options.animation
              , e = this.group
              , i = this.markerGroup
              , n = this.xAxis.center
              , g = c.plotLeft
              , l = c.plotTop;
            if (c.polar) {
                if (c.renderer.isSVG)
                    d === !0 && (d = {}),
                    b ? (c = {
                        translateX: n[0] + g,
                        translateY: n[1] + l,
                        scaleX: 0.001,
                        scaleY: 0.001
                    },
                    e.attr(c),
                    i && i.attr(c)) : (c = {
                        translateX: g,
                        translateY: l,
                        scaleX: 1,
                        scaleY: 1
                    },
                    e.animate(c, d),
                    i && i.animate(c, d),
                    this.animate = null)
            } else
                a.call(this, b)
        }
        var c = t.prototype, d = S.prototype, e;
        c.toXY = function(a) {
            var b, c = this.chart, d = a.plotX;
            b = a.plotY;
            a.rectPlotX = d;
            a.rectPlotY = b;
            d = (d / Math.PI * 180 + this.xAxis.pane.options.startAngle) % 360;
            d < 0 && (d += 360);
            a.clientX = d;
            b = this.xAxis.postTranslate(a.plotX, this.yAxis.len - b);
            a.plotX = a.polarPlotX = b.x - c.plotLeft;
            a.plotY = a.polarPlotY = b.y - c.plotTop
        }
        ;
        c.orderTooltipPoints = function(a) {
            if (this.chart.polar && (a.sort(function(a, b) {
                return a.clientX - b.clientX
            }),
            a[0]))
                a[0].wrappedClientX = a[0].clientX + 360,
                a.push(a[0])
        }
        ;
        g.area && r(g.area.prototype, "init", a);
        g.areaspline && r(g.areaspline.prototype, "init", a);
        g.spline && r(g.spline.prototype, "getPointSpline", function(a, b, c, d) {
            var e, i, n, g, l, p, o;
            if (this.chart.polar) {
                e = c.plotX;
                i = c.plotY;
                a = b[d - 1];
                n = b[d + 1];
                this.connectEnds && (a || (a = b[b.length - 2]),
                n || (n = b[1]));
                if (a && n)
                    g = a.plotX,
                    l = a.plotY,
                    b = n.plotX,
                    p = n.plotY,
                    g = (1.5 * e + g) / 2.5,
                    l = (1.5 * i + l) / 2.5,
                    n = (1.5 * e + b) / 2.5,
                    o = (1.5 * i + p) / 2.5,
                    b = Math.sqrt(Math.pow(g - e, 2) + Math.pow(l - i, 2)),
                    p = Math.sqrt(Math.pow(n - e, 2) + Math.pow(o - i, 2)),
                    g = Math.atan2(l - i, g - e),
                    l = Math.atan2(o - i, n - e),
                    o = Math.PI / 2 + (g + l) / 2,
                    Math.abs(g - o) > Math.PI / 2 && (o -= Math.PI),
                    g = e + Math.cos(o) * b,
                    l = i + Math.sin(o) * b,
                    n = e + Math.cos(Math.PI + o) * p,
                    o = i + Math.sin(Math.PI + o) * p,
                    c.rightContX = n,
                    c.rightContY = o;
                d ? (c = ["C", a.rightContX || a.plotX, a.rightContY || a.plotY, g || e, l || i, e, i],
                a.rightContX = a.rightContY = null) : c = ["M", e, i]
            } else
                c = a.call(this, b, c, d);
            return c
        });
        r(c, "translate", function(a) {
            a.call(this);
            if (this.chart.polar && !this.preventPostTranslate)
                for (var a = this.points, b = a.length; b--; )
                    this.toXY(a[b])
        });
        r(c, "getSegmentPath", function(a, b) {
            var c = this.points;
            if (this.chart.polar && this.options.connectEnds !== !1 && b[b.length - 1] === c[c.length - 1] && c[0].y !== null)
                this.connectEnds = !0,
                b = [].concat(b, [c[0]]);
            return a.call(this, b)
        });
        r(c, "animate", b);
        r(c, "setTooltipPoints", function(a, b) {
            this.chart.polar && F(this.xAxis, {
                tooltipLen: 360
            });
            return a.call(this, b)
        });
        if (g.column)
            e = g.column.prototype,
            r(e, "animate", b),
            r(e, "translate", function(a) {
                var b = this.xAxis, c = this.yAxis.len, d = b.center, e = b.startAngleRad, i = this.chart.renderer, g, l;
                this.preventPostTranslate = !0;
                a.call(this);
                if (b.isRadial) {
                    b = this.points;
                    for (l = b.length; l--; )
                        g = b[l],
                        a = g.barX + e,
                        g.shapeType = "path",
                        g.shapeArgs = {
                            d: i.symbols.arc(d[0], d[1], c - g.plotY, null, {
                                start: a,
                                end: a + g.pointWidth,
                                innerR: c - o(g.yBottom, c)
                            })
                        },
                        this.toXY(g),
                        g.tooltipPos = [g.plotX, g.plotY],
                        g.ttBelow = g.plotY > d[1]
                }
            }),
            r(e, "alignDataLabel", function(a, b, d, e, g, i) {
                if (this.chart.polar) {
                    a = b.rectPlotX / Math.PI * 180;
                    if (e.align === null)
                        e.align = a > 20 && a < 160 ? "left" : a > 200 && a < 340 ? "right" : "center";
                    if (e.verticalAlign === null)
                        e.verticalAlign = a < 45 || a > 315 ? "bottom" : a > 135 && a < 225 ? "top" : "middle";
                    c.alignDataLabel.call(this, b, d, e, g, i)
                } else
                    a.call(this, b, d, e, g, i)
            });
        r(d, "getIndex", function(a, b) {
            var c, d = this.chart, e;
            d.polar ? (e = d.xAxis[0].center,
            c = b.chartX - e[0] - d.plotLeft,
            d = b.chartY - e[1] - d.plotTop,
            c = 180 - Math.round(Math.atan2(c, d) / Math.PI * 180)) : c = a.call(this, b);
            return c
        });
        r(d, "getCoordinates", function(a, b) {
            var c = this.chart
              , d = {
                xAxis: [],
                yAxis: []
            };
            c.polar ? s(c.axes, function(a) {
                var e = a.isXAxis
                  , f = a.center
                  , g = b.chartX - f[0] - c.plotLeft
                  , f = b.chartY - f[1] - c.plotTop;
                d[e ? "xAxis" : "yAxis"].push({
                    axis: a,
                    value: a.translate(e ? Math.PI - Math.atan2(g, f) : Math.sqrt(Math.pow(g, 2) + Math.pow(f, 2)), !0)
                })
            }) : d = a.call(this, b);
            return d
        })
    }
    )()
}
)(Highcharts);

(function(a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery", "jquery-ui"], a)
    } else {
        a(jQuery)
    }
}(function($) {
    $.ui.timepicker = $.ui.timepicker || {};
    if ($.ui.timepicker.version) {
        return
    }
    $.extend($.ui, {
        timepicker: {
            version: "@@version"
        }
    });
    var Timepicker = function() {
        this.regional = [];
        this.regional[""] = {
            currentText: "Now",
            closeText: "Done",
            amNames: ["AM", "A"],
            pmNames: ["PM", "P"],
            timeFormat: "HH:mm",
            timeSuffix: "",
            timeOnlyTitle: "Choose Time",
            timeText: "Time",
            hourText: "Hour",
            minuteText: "Minute",
            secondText: "Second",
            millisecText: "Millisecond",
            microsecText: "Microsecond",
            timezoneText: "Time Zone",
            isRTL: false
        };
        this._defaults = {
            showButtonPanel: true,
            timeOnly: false,
            timeOnlyShowDate: false,
            showHour: null,
            showMinute: null,
            showSecond: null,
            showMillisec: null,
            showMicrosec: null,
            showTimezone: null,
            showTime: true,
            stepHour: 1,
            stepMinute: 1,
            stepSecond: 1,
            stepMillisec: 1,
            stepMicrosec: 1,
            hour: 0,
            minute: 0,
            second: 0,
            millisec: 0,
            microsec: 0,
            timezone: null,
            hourMin: 0,
            minuteMin: 0,
            secondMin: 0,
            millisecMin: 0,
            microsecMin: 0,
            hourMax: 23,
            minuteMax: 59,
            secondMax: 59,
            millisecMax: 999,
            microsecMax: 999,
            minDateTime: null,
            maxDateTime: null,
            maxTime: null,
            minTime: null,
            onSelect: null,
            hourGrid: 0,
            minuteGrid: 0,
            secondGrid: 0,
            millisecGrid: 0,
            microsecGrid: 0,
            alwaysSetTime: true,
            separator: " ",
            altFieldTimeOnly: true,
            altTimeFormat: null,
            altSeparator: null,
            altTimeSuffix: null,
            altRedirectFocus: true,
            pickerTimeFormat: null,
            pickerTimeSuffix: null,
            showTimepicker: true,
            timezoneList: null,
            addSliderAccess: false,
            sliderAccessArgs: null,
            controlType: "slider",
            oneLine: false,
            defaultValue: null,
            parse: "strict",
            afterInject: null
        };
        $.extend(this._defaults, this.regional[""])
    };
    $.extend(Timepicker.prototype, {
        $input: null,
        $altInput: null,
        $timeObj: null,
        inst: null,
        hour_slider: null,
        minute_slider: null,
        second_slider: null,
        millisec_slider: null,
        microsec_slider: null,
        timezone_select: null,
        maxTime: null,
        minTime: null,
        hour: 0,
        minute: 0,
        second: 0,
        millisec: 0,
        microsec: 0,
        timezone: null,
        hourMinOriginal: null,
        minuteMinOriginal: null,
        secondMinOriginal: null,
        millisecMinOriginal: null,
        microsecMinOriginal: null,
        hourMaxOriginal: null,
        minuteMaxOriginal: null,
        secondMaxOriginal: null,
        millisecMaxOriginal: null,
        microsecMaxOriginal: null,
        ampm: "",
        formattedDate: "",
        formattedTime: "",
        formattedDateTime: "",
        timezoneList: null,
        units: ["hour", "minute", "second", "millisec", "microsec"],
        support: {},
        control: null,
        setDefaults: function(settings) {
            extendRemove(this._defaults, settings || {});
            return this
        },
        _newInst: function($input, opts) {
            var tp_inst = new Timepicker(), inlineSettings = {}, fns = {}, overrides, i;
            for (var attrName in this._defaults) {
                if (this._defaults.hasOwnProperty(attrName)) {
                    var attrValue = $input.attr("time:" + attrName);
                    if (attrValue) {
                        try {
                            inlineSettings[attrName] = eval(attrValue)
                        } catch (err) {
                            inlineSettings[attrName] = attrValue
                        }
                    }
                }
            }
            overrides = {
                beforeShow: function(input, dp_inst) {
                    if ($.isFunction(tp_inst._defaults.evnts.beforeShow)) {
                        return tp_inst._defaults.evnts.beforeShow.call($input[0], input, dp_inst, tp_inst)
                    }
                },
                onChangeMonthYear: function(year, month, dp_inst) {
                    if ($.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)) {
                        tp_inst._defaults.evnts.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst)
                    }
                },
                onClose: function(dateText, dp_inst) {
                    if (tp_inst.timeDefined === true && $input.val() !== "") {
                        tp_inst._updateDateTime(dp_inst)
                    }
                    if ($.isFunction(tp_inst._defaults.evnts.onClose)) {
                        tp_inst._defaults.evnts.onClose.call($input[0], dateText, dp_inst, tp_inst)
                    }
                }
            };
            for (i in overrides) {
                if (overrides.hasOwnProperty(i)) {
                    fns[i] = opts[i] || this._defaults[i] || null
                }
            }
            tp_inst._defaults = $.extend({}, this._defaults, inlineSettings, opts, overrides, {
                evnts: fns,
                timepicker: tp_inst
            });
            tp_inst.amNames = $.map(tp_inst._defaults.amNames, function(val) {
                return val.toUpperCase()
            });
            tp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function(val) {
                return val.toUpperCase()
            });
            tp_inst.support = detectSupport(tp_inst._defaults.timeFormat + (tp_inst._defaults.pickerTimeFormat ? tp_inst._defaults.pickerTimeFormat : "") + (tp_inst._defaults.altTimeFormat ? tp_inst._defaults.altTimeFormat : ""));
            if (typeof (tp_inst._defaults.controlType) === "string") {
                if (tp_inst._defaults.controlType === "slider" && typeof ($.ui.slider) === "undefined") {
                    tp_inst._defaults.controlType = "select"
                }
                tp_inst.control = tp_inst._controls[tp_inst._defaults.controlType]
            } else {
                tp_inst.control = tp_inst._defaults.controlType
            }
            var timezoneList = [-720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240, -210, -180, -120, -60, 0, 60, 120, 180, 210, 240, 270, 300, 330, 345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720, 765, 780, 840];
            if (tp_inst._defaults.timezoneList !== null) {
                timezoneList = tp_inst._defaults.timezoneList
            }
            var tzl = timezoneList.length
              , tzi = 0
              , tzv = null;
            if (tzl > 0 && typeof timezoneList[0] !== "object") {
                for (; tzi < tzl; tzi++) {
                    tzv = timezoneList[tzi];
                    timezoneList[tzi] = {
                        value: tzv,
                        label: $.timepicker.timezoneOffsetString(tzv, tp_inst.support.iso8601)
                    }
                }
            }
            tp_inst._defaults.timezoneList = timezoneList;
            tp_inst.timezone = tp_inst._defaults.timezone !== null ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone) : ((new Date()).getTimezoneOffset() * -1);
            tp_inst.hour = tp_inst._defaults.hour < tp_inst._defaults.hourMin ? tp_inst._defaults.hourMin : tp_inst._defaults.hour > tp_inst._defaults.hourMax ? tp_inst._defaults.hourMax : tp_inst._defaults.hour;
            tp_inst.minute = tp_inst._defaults.minute < tp_inst._defaults.minuteMin ? tp_inst._defaults.minuteMin : tp_inst._defaults.minute > tp_inst._defaults.minuteMax ? tp_inst._defaults.minuteMax : tp_inst._defaults.minute;
            tp_inst.second = tp_inst._defaults.second < tp_inst._defaults.secondMin ? tp_inst._defaults.secondMin : tp_inst._defaults.second > tp_inst._defaults.secondMax ? tp_inst._defaults.secondMax : tp_inst._defaults.second;
            tp_inst.millisec = tp_inst._defaults.millisec < tp_inst._defaults.millisecMin ? tp_inst._defaults.millisecMin : tp_inst._defaults.millisec > tp_inst._defaults.millisecMax ? tp_inst._defaults.millisecMax : tp_inst._defaults.millisec;
            tp_inst.microsec = tp_inst._defaults.microsec < tp_inst._defaults.microsecMin ? tp_inst._defaults.microsecMin : tp_inst._defaults.microsec > tp_inst._defaults.microsecMax ? tp_inst._defaults.microsecMax : tp_inst._defaults.microsec;
            tp_inst.ampm = "";
            tp_inst.$input = $input;
            if (tp_inst._defaults.altField) {
                tp_inst.$altInput = $(tp_inst._defaults.altField);
                if (tp_inst._defaults.altRedirectFocus === true) {
                    tp_inst.$altInput.css({
                        cursor: "pointer"
                    }).focus(function() {
                        $input.trigger("focus")
                    })
                }
            }
            if (tp_inst._defaults.minDate === 0 || tp_inst._defaults.minDateTime === 0) {
                tp_inst._defaults.minDate = new Date()
            }
            if (tp_inst._defaults.maxDate === 0 || tp_inst._defaults.maxDateTime === 0) {
                tp_inst._defaults.maxDate = new Date()
            }
            if (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {
                tp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime())
            }
            if (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {
                tp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime())
            }
            if (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {
                tp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime())
            }
            if (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {
                tp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime())
            }
            tp_inst.$input.bind("focus", function() {
                tp_inst._onFocus()
            });
            return tp_inst
        },
        _addTimePicker: function(dp_inst) {
            var currDT = $.trim((this.$altInput && this._defaults.altFieldTimeOnly) ? this.$input.val() + " " + this.$altInput.val() : this.$input.val());
            this.timeDefined = this._parseTime(currDT);
            this._limitMinMaxDateTime(dp_inst, false);
            this._injectTimePicker();
            this._afterInject()
        },
        _parseTime: function(timeString, withDate) {
            if (!this.inst) {
                this.inst = $.datepicker._getInst(this.$input[0])
            }
            if (withDate || !this._defaults.timeOnly) {
                var dp_dateFormat = $.datepicker._get(this.inst, "dateFormat");
                try {
                    var parseRes = parseDateTimeInternal(dp_dateFormat, this._defaults.timeFormat, timeString, $.datepicker._getFormatConfig(this.inst), this._defaults);
                    if (!parseRes.timeObj) {
                        return false
                    }
                    $.extend(this, parseRes.timeObj)
                } catch (err) {
                    $.timepicker.log("Error parsing the date/time string: " + err + "\ndate/time string = " + timeString + "\ntimeFormat = " + this._defaults.timeFormat + "\ndateFormat = " + dp_dateFormat);
                    return false
                }
                return true
            } else {
                var timeObj = $.datepicker.parseTime(this._defaults.timeFormat, timeString, this._defaults);
                if (!timeObj) {
                    return false
                }
                $.extend(this, timeObj);
                return true
            }
        },
        _afterInject: function() {
            var o = this.inst.settings;
            if ($.isFunction(o.afterInject)) {
                o.afterInject.call(this)
            }
        },
        _injectTimePicker: function() {
            var $dp = this.inst.dpDiv
              , o = this.inst.settings
              , tp_inst = this
              , litem = ""
              , uitem = ""
              , show = null
              , max = {}
              , gridSize = {}
              , size = null
              , i = 0
              , l = 0;
            if ($dp.find("div.ui-timepicker-div").length === 0 && o.showTimepicker) {
                var noDisplay = " ui_tpicker_unit_hide"
                  , html = '<div class="ui-timepicker-div' + (o.isRTL ? " ui-timepicker-rtl" : "") + (o.oneLine && o.controlType === "select" ? " ui-timepicker-oneLine" : "") + '"><dl><dt class="ui_tpicker_time_label' + ((o.showTime) ? "" : noDisplay) + '">' + o.timeText + '</dt><dd class="ui_tpicker_time ' + ((o.showTime) ? "" : noDisplay) + '"><input class="ui_tpicker_time_input" ' + (o.timeInput ? "" : "disabled") + "/></dd>";
                for (i = 0,
                l = this.units.length; i < l; i++) {
                    litem = this.units[i];
                    uitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);
                    show = o["show" + uitem] !== null ? o["show" + uitem] : this.support[litem];
                    max[litem] = parseInt((o[litem + "Max"] - ((o[litem + "Max"] - o[litem + "Min"]) % o["step" + uitem])), 10);
                    gridSize[litem] = 0;
                    html += '<dt class="ui_tpicker_' + litem + "_label" + (show ? "" : noDisplay) + '">' + o[litem + "Text"] + '</dt><dd class="ui_tpicker_' + litem + (show ? "" : noDisplay) + '"><div class="ui_tpicker_' + litem + "_slider" + (show ? "" : noDisplay) + '"></div>';
                    if (show && o[litem + "Grid"] > 0) {
                        html += '<div style="padding-left: 1px"><table class="ui-tpicker-grid-label"><tr>';
                        if (litem === "hour") {
                            for (var h = o[litem + "Min"]; h <= max[litem]; h += parseInt(o[litem + "Grid"], 10)) {
                                gridSize[litem]++;
                                var tmph = $.datepicker.formatTime(this.support.ampm ? "hht" : "HH", {
                                    hour: h
                                }, o);
                                html += '<td data-for="' + litem + '">' + tmph + "</td>"
                            }
                        } else {
                            for (var m = o[litem + "Min"]; m <= max[litem]; m += parseInt(o[litem + "Grid"], 10)) {
                                gridSize[litem]++;
                                html += '<td data-for="' + litem + '">' + ((m < 10) ? "0" : "") + m + "</td>"
                            }
                        }
                        html += "</tr></table></div>"
                    }
                    html += "</dd>"
                }
                var showTz = o.showTimezone !== null ? o.showTimezone : this.support.timezone;
                html += '<dt class="ui_tpicker_timezone_label' + (showTz ? "" : noDisplay) + '">' + o.timezoneText + "</dt>";
                html += '<dd class="ui_tpicker_timezone' + (showTz ? "" : noDisplay) + '"></dd>';
                html += "</dl></div>";
                var $tp = $(html);
                if (o.timeOnly === true) {
                    $tp.prepend('<div class="ui-widget-header ui-helper-clearfix ui-corner-all"><div class="ui-datepicker-title">' + o.timeOnlyTitle + "</div></div>");
                    $dp.find(".ui-datepicker-header, .ui-datepicker-calendar").hide()
                }
                for (i = 0,
                l = tp_inst.units.length; i < l; i++) {
                    litem = tp_inst.units[i];
                    uitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);
                    show = o["show" + uitem] !== null ? o["show" + uitem] : this.support[litem];
                    tp_inst[litem + "_slider"] = tp_inst.control.create(tp_inst, $tp.find(".ui_tpicker_" + litem + "_slider"), litem, tp_inst[litem], o[litem + "Min"], max[litem], o["step" + uitem]);
                    if (show && o[litem + "Grid"] > 0) {
                        size = 100 * gridSize[litem] * o[litem + "Grid"] / (max[litem] - o[litem + "Min"]);
                        $tp.find(".ui_tpicker_" + litem + " table").css({
                            width: size + "%",
                            marginLeft: o.isRTL ? "0" : ((size / (-2 * gridSize[litem])) + "%"),
                            marginRight: o.isRTL ? ((size / (-2 * gridSize[litem])) + "%") : "0",
                            borderCollapse: "collapse"
                        }).find("td").click(function(e) {
                            var $t = $(this)
                              , h = $t.html()
                              , n = parseInt(h.replace(/[^0-9]/g), 10)
                              , ap = h.replace(/[^apm]/ig)
                              , f = $t.data("for");
                            if (f === "hour") {
                                if (ap.indexOf("p") !== -1 && n < 12) {
                                    n += 12
                                } else {
                                    if (ap.indexOf("a") !== -1 && n === 12) {
                                        n = 0
                                    }
                                }
                            }
                            tp_inst.control.value(tp_inst, tp_inst[f + "_slider"], litem, n);
                            tp_inst._onTimeChange();
                            tp_inst._onSelectHandler()
                        }).css({
                            cursor: "pointer",
                            width: (100 / gridSize[litem]) + "%",
                            textAlign: "center",
                            overflow: "hidden"
                        })
                    }
                }
                this.timezone_select = $tp.find(".ui_tpicker_timezone").append("<select></select>").find("select");
                $.fn.append.apply(this.timezone_select, $.map(o.timezoneList, function(val, idx) {
                    return $("<option />").val(typeof val === "object" ? val.value : val).text(typeof val === "object" ? val.label : val)
                }));
                if (typeof (this.timezone) !== "undefined" && this.timezone !== null && this.timezone !== "") {
                    var local_timezone = (new Date(this.inst.selectedYear,this.inst.selectedMonth,this.inst.selectedDay,12)).getTimezoneOffset() * -1;
                    if (local_timezone === this.timezone) {
                        selectLocalTimezone(tp_inst)
                    } else {
                        this.timezone_select.val(this.timezone)
                    }
                } else {
                    if (typeof (this.hour) !== "undefined" && this.hour !== null && this.hour !== "") {
                        this.timezone_select.val(o.timezone)
                    } else {
                        selectLocalTimezone(tp_inst)
                    }
                }
                this.timezone_select.change(function() {
                    tp_inst._onTimeChange();
                    tp_inst._onSelectHandler();
                    tp_inst._afterInject()
                });
                var $buttonPanel = $dp.find(".ui-datepicker-buttonpane");
                if ($buttonPanel.length) {
                    $buttonPanel.before($tp)
                } else {
                    $dp.append($tp)
                }
                this.$timeObj = $tp.find(".ui_tpicker_time_input");
                this.$timeObj.change(function() {
                    var timeFormat = tp_inst.inst.settings.timeFormat;
                    var parsedTime = $.datepicker.parseTime(timeFormat, this.value);
                    var update = new Date();
                    if (parsedTime) {
                        update.setHours(parsedTime.hour);
                        update.setMinutes(parsedTime.minute);
                        update.setSeconds(parsedTime.second);
                        $.datepicker._setTime(tp_inst.inst, update)
                    } else {
                        this.value = tp_inst.formattedTime;
                        this.blur()
                    }
                });
                if (this.inst !== null) {
                    var timeDefined = this.timeDefined;
                    this._onTimeChange();
                    this.timeDefined = timeDefined
                }
                if (this._defaults.addSliderAccess) {
                    var sliderAccessArgs = this._defaults.sliderAccessArgs
                      , rtl = this._defaults.isRTL;
                    sliderAccessArgs.isRTL = rtl;
                    setTimeout(function() {
                        if ($tp.find(".ui-slider-access").length === 0) {
                            $tp.find(".ui-slider:visible").sliderAccess(sliderAccessArgs);
                            var sliderAccessWidth = $tp.find(".ui-slider-access:eq(0)").outerWidth(true);
                            if (sliderAccessWidth) {
                                $tp.find("table:visible").each(function() {
                                    var $g = $(this)
                                      , oldWidth = $g.outerWidth()
                                      , oldMarginLeft = $g.css(rtl ? "marginRight" : "marginLeft").toString().replace("%", "")
                                      , newWidth = oldWidth - sliderAccessWidth
                                      , newMarginLeft = ((oldMarginLeft * newWidth) / oldWidth) + "%"
                                      , css = {
                                        width: newWidth,
                                        marginRight: 0,
                                        marginLeft: 0
                                    };
                                    css[rtl ? "marginRight" : "marginLeft"] = newMarginLeft;
                                    $g.css(css)
                                })
                            }
                        }
                    }, 10)
                }
                tp_inst._limitMinMaxDateTime(this.inst, true)
            }
        },
        _limitMinMaxDateTime: function(dp_inst, adjustSliders) {
            var o = this._defaults
              , dp_date = new Date(dp_inst.selectedYear,dp_inst.selectedMonth,dp_inst.selectedDay);
            if (!this._defaults.showTimepicker) {
                return
            }
            if ($.datepicker._get(dp_inst, "minDateTime") !== null && $.datepicker._get(dp_inst, "minDateTime") !== undefined && dp_date) {
                var minDateTime = $.datepicker._get(dp_inst, "minDateTime")
                  , minDateTimeDate = new Date(minDateTime.getFullYear(),minDateTime.getMonth(),minDateTime.getDate(),0,0,0,0);
                if (this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null || this.millisecMinOriginal === null || this.microsecMinOriginal === null) {
                    this.hourMinOriginal = o.hourMin;
                    this.minuteMinOriginal = o.minuteMin;
                    this.secondMinOriginal = o.secondMin;
                    this.millisecMinOriginal = o.millisecMin;
                    this.microsecMinOriginal = o.microsecMin
                }
                if (dp_inst.settings.timeOnly || minDateTimeDate.getTime() === dp_date.getTime()) {
                    this._defaults.hourMin = minDateTime.getHours();
                    if (this.hour <= this._defaults.hourMin) {
                        this.hour = this._defaults.hourMin;
                        this._defaults.minuteMin = minDateTime.getMinutes();
                        if (this.minute <= this._defaults.minuteMin) {
                            this.minute = this._defaults.minuteMin;
                            this._defaults.secondMin = minDateTime.getSeconds();
                            if (this.second <= this._defaults.secondMin) {
                                this.second = this._defaults.secondMin;
                                this._defaults.millisecMin = minDateTime.getMilliseconds();
                                if (this.millisec <= this._defaults.millisecMin) {
                                    this.millisec = this._defaults.millisecMin;
                                    this._defaults.microsecMin = minDateTime.getMicroseconds()
                                } else {
                                    if (this.microsec < this._defaults.microsecMin) {
                                        this.microsec = this._defaults.microsecMin
                                    }
                                    this._defaults.microsecMin = this.microsecMinOriginal
                                }
                            } else {
                                this._defaults.millisecMin = this.millisecMinOriginal;
                                this._defaults.microsecMin = this.microsecMinOriginal
                            }
                        } else {
                            this._defaults.secondMin = this.secondMinOriginal;
                            this._defaults.millisecMin = this.millisecMinOriginal;
                            this._defaults.microsecMin = this.microsecMinOriginal
                        }
                    } else {
                        this._defaults.minuteMin = this.minuteMinOriginal;
                        this._defaults.secondMin = this.secondMinOriginal;
                        this._defaults.millisecMin = this.millisecMinOriginal;
                        this._defaults.microsecMin = this.microsecMinOriginal
                    }
                } else {
                    this._defaults.hourMin = this.hourMinOriginal;
                    this._defaults.minuteMin = this.minuteMinOriginal;
                    this._defaults.secondMin = this.secondMinOriginal;
                    this._defaults.millisecMin = this.millisecMinOriginal;
                    this._defaults.microsecMin = this.microsecMinOriginal
                }
            }
            if ($.datepicker._get(dp_inst, "maxDateTime") !== null && $.datepicker._get(dp_inst, "maxDateTime") !== undefined && dp_date) {
                var maxDateTime = $.datepicker._get(dp_inst, "maxDateTime")
                  , maxDateTimeDate = new Date(maxDateTime.getFullYear(),maxDateTime.getMonth(),maxDateTime.getDate(),0,0,0,0);
                if (this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null || this.millisecMaxOriginal === null) {
                    this.hourMaxOriginal = o.hourMax;
                    this.minuteMaxOriginal = o.minuteMax;
                    this.secondMaxOriginal = o.secondMax;
                    this.millisecMaxOriginal = o.millisecMax;
                    this.microsecMaxOriginal = o.microsecMax
                }
                if (dp_inst.settings.timeOnly || maxDateTimeDate.getTime() === dp_date.getTime()) {
                    this._defaults.hourMax = maxDateTime.getHours();
                    if (this.hour >= this._defaults.hourMax) {
                        this.hour = this._defaults.hourMax;
                        this._defaults.minuteMax = maxDateTime.getMinutes();
                        if (this.minute >= this._defaults.minuteMax) {
                            this.minute = this._defaults.minuteMax;
                            this._defaults.secondMax = maxDateTime.getSeconds();
                            if (this.second >= this._defaults.secondMax) {
                                this.second = this._defaults.secondMax;
                                this._defaults.millisecMax = maxDateTime.getMilliseconds();
                                if (this.millisec >= this._defaults.millisecMax) {
                                    this.millisec = this._defaults.millisecMax;
                                    this._defaults.microsecMax = maxDateTime.getMicroseconds()
                                } else {
                                    if (this.microsec > this._defaults.microsecMax) {
                                        this.microsec = this._defaults.microsecMax
                                    }
                                    this._defaults.microsecMax = this.microsecMaxOriginal
                                }
                            } else {
                                this._defaults.millisecMax = this.millisecMaxOriginal;
                                this._defaults.microsecMax = this.microsecMaxOriginal
                            }
                        } else {
                            this._defaults.secondMax = this.secondMaxOriginal;
                            this._defaults.millisecMax = this.millisecMaxOriginal;
                            this._defaults.microsecMax = this.microsecMaxOriginal
                        }
                    } else {
                        this._defaults.minuteMax = this.minuteMaxOriginal;
                        this._defaults.secondMax = this.secondMaxOriginal;
                        this._defaults.millisecMax = this.millisecMaxOriginal;
                        this._defaults.microsecMax = this.microsecMaxOriginal
                    }
                } else {
                    this._defaults.hourMax = this.hourMaxOriginal;
                    this._defaults.minuteMax = this.minuteMaxOriginal;
                    this._defaults.secondMax = this.secondMaxOriginal;
                    this._defaults.millisecMax = this.millisecMaxOriginal;
                    this._defaults.microsecMax = this.microsecMaxOriginal
                }
            }
            if (dp_inst.settings.minTime !== null) {
                var tempMinTime = new Date("01/01/1970 " + dp_inst.settings.minTime);
                if (this.hour < tempMinTime.getHours()) {
                    this.hour = this._defaults.hourMin = tempMinTime.getHours();
                    this.minute = this._defaults.minuteMin = tempMinTime.getMinutes()
                } else {
                    if (this.hour === tempMinTime.getHours() && this.minute < tempMinTime.getMinutes()) {
                        this.minute = this._defaults.minuteMin = tempMinTime.getMinutes()
                    } else {
                        if (this._defaults.hourMin < tempMinTime.getHours()) {
                            this._defaults.hourMin = tempMinTime.getHours();
                            this._defaults.minuteMin = tempMinTime.getMinutes()
                        } else {
                            if (this._defaults.hourMin === tempMinTime.getHours() === this.hour && this._defaults.minuteMin < tempMinTime.getMinutes()) {
                                this._defaults.minuteMin = tempMinTime.getMinutes()
                            } else {
                                this._defaults.minuteMin = 0
                            }
                        }
                    }
                }
            }
            if (dp_inst.settings.maxTime !== null) {
                var tempMaxTime = new Date("01/01/1970 " + dp_inst.settings.maxTime);
                if (this.hour > tempMaxTime.getHours()) {
                    this.hour = this._defaults.hourMax = tempMaxTime.getHours();
                    this.minute = this._defaults.minuteMax = tempMaxTime.getMinutes()
                } else {
                    if (this.hour === tempMaxTime.getHours() && this.minute > tempMaxTime.getMinutes()) {
                        this.minute = this._defaults.minuteMax = tempMaxTime.getMinutes()
                    } else {
                        if (this._defaults.hourMax > tempMaxTime.getHours()) {
                            this._defaults.hourMax = tempMaxTime.getHours();
                            this._defaults.minuteMax = tempMaxTime.getMinutes()
                        } else {
                            if (this._defaults.hourMax === tempMaxTime.getHours() === this.hour && this._defaults.minuteMax > tempMaxTime.getMinutes()) {
                                this._defaults.minuteMax = tempMaxTime.getMinutes()
                            } else {
                                this._defaults.minuteMax = 59
                            }
                        }
                    }
                }
            }
            if (adjustSliders !== undefined && adjustSliders === true) {
                var hourMax = parseInt((this._defaults.hourMax - ((this._defaults.hourMax - this._defaults.hourMin) % this._defaults.stepHour)), 10)
                  , minMax = parseInt((this._defaults.minuteMax - ((this._defaults.minuteMax - this._defaults.minuteMin) % this._defaults.stepMinute)), 10)
                  , secMax = parseInt((this._defaults.secondMax - ((this._defaults.secondMax - this._defaults.secondMin) % this._defaults.stepSecond)), 10)
                  , millisecMax = parseInt((this._defaults.millisecMax - ((this._defaults.millisecMax - this._defaults.millisecMin) % this._defaults.stepMillisec)), 10)
                  , microsecMax = parseInt((this._defaults.microsecMax - ((this._defaults.microsecMax - this._defaults.microsecMin) % this._defaults.stepMicrosec)), 10);
                if (this.hour_slider) {
                    this.control.options(this, this.hour_slider, "hour", {
                        min: this._defaults.hourMin,
                        max: hourMax,
                        step: this._defaults.stepHour
                    });
                    this.control.value(this, this.hour_slider, "hour", this.hour - (this.hour % this._defaults.stepHour))
                }
                if (this.minute_slider) {
                    this.control.options(this, this.minute_slider, "minute", {
                        min: this._defaults.minuteMin,
                        max: minMax,
                        step: this._defaults.stepMinute
                    });
                    this.control.value(this, this.minute_slider, "minute", this.minute - (this.minute % this._defaults.stepMinute))
                }
                if (this.second_slider) {
                    this.control.options(this, this.second_slider, "second", {
                        min: this._defaults.secondMin,
                        max: secMax,
                        step: this._defaults.stepSecond
                    });
                    this.control.value(this, this.second_slider, "second", this.second - (this.second % this._defaults.stepSecond))
                }
                if (this.millisec_slider) {
                    this.control.options(this, this.millisec_slider, "millisec", {
                        min: this._defaults.millisecMin,
                        max: millisecMax,
                        step: this._defaults.stepMillisec
                    });
                    this.control.value(this, this.millisec_slider, "millisec", this.millisec - (this.millisec % this._defaults.stepMillisec))
                }
                if (this.microsec_slider) {
                    this.control.options(this, this.microsec_slider, "microsec", {
                        min: this._defaults.microsecMin,
                        max: microsecMax,
                        step: this._defaults.stepMicrosec
                    });
                    this.control.value(this, this.microsec_slider, "microsec", this.microsec - (this.microsec % this._defaults.stepMicrosec))
                }
            }
        },
        _onTimeChange: function() {
            if (!this._defaults.showTimepicker) {
                return
            }
            var hour = (this.hour_slider) ? this.control.value(this, this.hour_slider, "hour") : false
              , minute = (this.minute_slider) ? this.control.value(this, this.minute_slider, "minute") : false
              , second = (this.second_slider) ? this.control.value(this, this.second_slider, "second") : false
              , millisec = (this.millisec_slider) ? this.control.value(this, this.millisec_slider, "millisec") : false
              , microsec = (this.microsec_slider) ? this.control.value(this, this.microsec_slider, "microsec") : false
              , timezone = (this.timezone_select) ? this.timezone_select.val() : false
              , o = this._defaults
              , pickerTimeFormat = o.pickerTimeFormat || o.timeFormat
              , pickerTimeSuffix = o.pickerTimeSuffix || o.timeSuffix;
            if (typeof (hour) === "object") {
                hour = false
            }
            if (typeof (minute) === "object") {
                minute = false
            }
            if (typeof (second) === "object") {
                second = false
            }
            if (typeof (millisec) === "object") {
                millisec = false
            }
            if (typeof (microsec) === "object") {
                microsec = false
            }
            if (typeof (timezone) === "object") {
                timezone = false
            }
            if (hour !== false) {
                hour = parseInt(hour, 10)
            }
            if (minute !== false) {
                minute = parseInt(minute, 10)
            }
            if (second !== false) {
                second = parseInt(second, 10)
            }
            if (millisec !== false) {
                millisec = parseInt(millisec, 10)
            }
            if (microsec !== false) {
                microsec = parseInt(microsec, 10)
            }
            if (timezone !== false) {
                timezone = timezone.toString()
            }
            var ampm = o[hour < 12 ? "amNames" : "pmNames"][0];
            var hasChanged = (hour !== parseInt(this.hour, 10) || minute !== parseInt(this.minute, 10) || second !== parseInt(this.second, 10) || millisec !== parseInt(this.millisec, 10) || microsec !== parseInt(this.microsec, 10) || (this.ampm.length > 0 && (hour < 12) !== ($.inArray(this.ampm.toUpperCase(), this.amNames) !== -1)) || (this.timezone !== null && timezone !== this.timezone.toString()));
            if (hasChanged) {
                if (hour !== false) {
                    this.hour = hour
                }
                if (minute !== false) {
                    this.minute = minute
                }
                if (second !== false) {
                    this.second = second
                }
                if (millisec !== false) {
                    this.millisec = millisec
                }
                if (microsec !== false) {
                    this.microsec = microsec
                }
                if (timezone !== false) {
                    this.timezone = timezone
                }
                if (!this.inst) {
                    this.inst = $.datepicker._getInst(this.$input[0])
                }
                this._limitMinMaxDateTime(this.inst, true)
            }
            if (this.support.ampm) {
                this.ampm = ampm
            }
            this.formattedTime = $.datepicker.formatTime(o.timeFormat, this, o);
            if (this.$timeObj) {
                if (pickerTimeFormat === o.timeFormat) {
                    this.$timeObj.val(this.formattedTime + pickerTimeSuffix)
                } else {
                    this.$timeObj.val($.datepicker.formatTime(pickerTimeFormat, this, o) + pickerTimeSuffix)
                }
                if (this.$timeObj[0].setSelectionRange) {
                    var sPos = this.$timeObj[0].selectionStart;
                    var ePos = this.$timeObj[0].selectionEnd;
                    this.$timeObj[0].setSelectionRange(sPos, ePos)
                }
            }
            this.timeDefined = true;
            if (hasChanged) {
                this._updateDateTime()
            }
        },
        _onSelectHandler: function() {
            var onSelect = this._defaults.onSelect || this.inst.settings.onSelect;
            var inputEl = this.$input ? this.$input[0] : null;
            if (onSelect && inputEl) {
                onSelect.apply(inputEl, [this.formattedDateTime, this])
            }
        },
        _updateDateTime: function(dp_inst) {
            dp_inst = this.inst || dp_inst;
            var dtTmp = (dp_inst.currentYear > 0 ? new Date(dp_inst.currentYear,dp_inst.currentMonth,dp_inst.currentDay) : new Date(dp_inst.selectedYear,dp_inst.selectedMonth,dp_inst.selectedDay))
              , dt = $.datepicker._daylightSavingAdjust(dtTmp)
              , dateFmt = $.datepicker._get(dp_inst, "dateFormat")
              , formatCfg = $.datepicker._getFormatConfig(dp_inst)
              , timeAvailable = dt !== null && this.timeDefined;
            this.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);
            var formattedDateTime = this.formattedDate;
            if (dp_inst.lastVal === "") {
                dp_inst.currentYear = dp_inst.selectedYear;
                dp_inst.currentMonth = dp_inst.selectedMonth;
                dp_inst.currentDay = dp_inst.selectedDay
            }
            if (this._defaults.timeOnly === true && this._defaults.timeOnlyShowDate === false) {
                formattedDateTime = this.formattedTime
            } else {
                if ((this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) || (this._defaults.timeOnly === true && this._defaults.timeOnlyShowDate === true)) {
                    formattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix
                }
            }
            this.formattedDateTime = formattedDateTime;
            if (!this._defaults.showTimepicker) {
                this.$input.val(this.formattedDate)
            } else {
                if (this.$altInput && this._defaults.timeOnly === false && this._defaults.altFieldTimeOnly === true) {
                    this.$altInput.val(this.formattedTime);
                    this.$input.val(this.formattedDate)
                } else {
                    if (this.$altInput) {
                        this.$input.val(formattedDateTime);
                        var altFormattedDateTime = ""
                          , altSeparator = this._defaults.altSeparator !== null ? this._defaults.altSeparator : this._defaults.separator
                          , altTimeSuffix = this._defaults.altTimeSuffix !== null ? this._defaults.altTimeSuffix : this._defaults.timeSuffix;
                        if (!this._defaults.timeOnly) {
                            if (this._defaults.altFormat) {
                                altFormattedDateTime = $.datepicker.formatDate(this._defaults.altFormat, (dt === null ? new Date() : dt), formatCfg)
                            } else {
                                altFormattedDateTime = this.formattedDate
                            }
                            if (altFormattedDateTime) {
                                altFormattedDateTime += altSeparator
                            }
                        }
                        if (this._defaults.altTimeFormat !== null) {
                            altFormattedDateTime += $.datepicker.formatTime(this._defaults.altTimeFormat, this, this._defaults) + altTimeSuffix
                        } else {
                            altFormattedDateTime += this.formattedTime + altTimeSuffix
                        }
                        this.$altInput.val(altFormattedDateTime)
                    } else {
                        this.$input.val(formattedDateTime)
                    }
                }
            }
            this.$input.trigger("change")
        },
        _onFocus: function() {
            if (!this.$input.val() && this._defaults.defaultValue) {
                this.$input.val(this._defaults.defaultValue);
                var inst = $.datepicker._getInst(this.$input.get(0))
                  , tp_inst = $.datepicker._get(inst, "timepicker");
                if (tp_inst) {
                    if (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {
                        try {
                            $.datepicker._updateDatepicker(inst)
                        } catch (err) {
                            $.timepicker.log(err)
                        }
                    }
                }
            }
        },
        _controls: {
            slider: {
                create: function(tp_inst, obj, unit, val, min, max, step) {
                    var rtl = tp_inst._defaults.isRTL;
                    return obj.prop("slide", null).slider({
                        orientation: "horizontal",
                        value: rtl ? val * -1 : val,
                        min: rtl ? max * -1 : min,
                        max: rtl ? min * -1 : max,
                        step: step,
                        slide: function(event, ui) {
                            tp_inst.control.value(tp_inst, $(this), unit, rtl ? ui.value * -1 : ui.value);
                            tp_inst._onTimeChange()
                        },
                        stop: function(event, ui) {
                            tp_inst._onSelectHandler()
                        }
                    })
                },
                options: function(tp_inst, obj, unit, opts, val) {
                    if (tp_inst._defaults.isRTL) {
                        if (typeof (opts) === "string") {
                            if (opts === "min" || opts === "max") {
                                if (val !== undefined) {
                                    return obj.slider(opts, val * -1)
                                }
                                return Math.abs(obj.slider(opts))
                            }
                            return obj.slider(opts)
                        }
                        var min = opts.min
                          , max = opts.max;
                        opts.min = opts.max = null;
                        if (min !== undefined) {
                            opts.max = min * -1
                        }
                        if (max !== undefined) {
                            opts.min = max * -1
                        }
                        return obj.slider(opts)
                    }
                    if (typeof (opts) === "string" && val !== undefined) {
                        return obj.slider(opts, val)
                    }
                    return obj.slider(opts)
                },
                value: function(tp_inst, obj, unit, val) {
                    if (tp_inst._defaults.isRTL) {
                        if (val !== undefined) {
                            return obj.slider("value", val * -1)
                        }
                        return Math.abs(obj.slider("value"))
                    }
                    if (val !== undefined) {
                        return obj.slider("value", val)
                    }
                    return obj.slider("value")
                }
            },
            select: {
                create: function(tp_inst, obj, unit, val, min, max, step) {
                    var sel = '<select class="ui-timepicker-select ui-state-default ui-corner-all" data-unit="' + unit + '" data-min="' + min + '" data-max="' + max + '" data-step="' + step + '">'
                      , format = tp_inst._defaults.pickerTimeFormat || tp_inst._defaults.timeFormat;
                    for (var i = min; i <= max; i += step) {
                        sel += '<option value="' + i + '"' + (i === val ? " selected" : "") + ">";
                        if (unit === "hour") {
                            sel += $.datepicker.formatTime($.trim(format.replace(/[^ht ]/ig, "")), {
                                hour: i
                            }, tp_inst._defaults)
                        } else {
                            if (unit === "millisec" || unit === "microsec" || i >= 10) {
                                sel += i
                            } else {
                                sel += "0" + i.toString()
                            }
                        }
                        sel += "</option>"
                    }
                    sel += "</select>";
                    obj.children("select").remove();
                    $(sel).appendTo(obj).change(function(e) {
                        tp_inst._onTimeChange();
                        tp_inst._onSelectHandler();
                        tp_inst._afterInject()
                    });
                    return obj
                },
                options: function(tp_inst, obj, unit, opts, val) {
                    var o = {}
                      , $t = obj.children("select");
                    if (typeof (opts) === "string") {
                        if (val === undefined) {
                            return $t.data(opts)
                        }
                        o[opts] = val
                    } else {
                        o = opts
                    }
                    return tp_inst.control.create(tp_inst, obj, $t.data("unit"), $t.val(), o.min >= 0 ? o.min : $t.data("min"), o.max || $t.data("max"), o.step || $t.data("step"))
                },
                value: function(tp_inst, obj, unit, val) {
                    var $t = obj.children("select");
                    if (val !== undefined) {
                        return $t.val(val)
                    }
                    return $t.val()
                }
            }
        }
    });
    $.fn.extend({
        timepicker: function(o) {
            o = o || {};
            var tmp_args = Array.prototype.slice.call(arguments);
            if (typeof o === "object") {
                tmp_args[0] = $.extend(o, {
                    timeOnly: true
                })
            }
            return $(this).each(function() {
                $.fn.datetimepicker.apply($(this), tmp_args)
            })
        },
        datetimepicker: function(o) {
            o = o || {};
            var tmp_args = arguments;
            if (typeof (o) === "string") {
                if (o === "getDate" || (o === "option" && tmp_args.length === 2 && typeof (tmp_args[1]) === "string")) {
                    return $.fn.datepicker.apply($(this[0]), tmp_args)
                } else {
                    return this.each(function() {
                        var $t = $(this);
                        $t.datepicker.apply($t, tmp_args)
                    })
                }
            } else {
                return this.each(function() {
                    var $t = $(this);
                    $t.datepicker($.timepicker._newInst($t, o)._defaults)
                })
            }
        }
    });
    $.datepicker.parseDateTime = function(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {
        var parseRes = parseDateTimeInternal(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings);
        if (parseRes.timeObj) {
            var t = parseRes.timeObj;
            parseRes.date.setHours(t.hour, t.minute, t.second, t.millisec);
            parseRes.date.setMicroseconds(t.microsec)
        }
        return parseRes.date
    }
    ;
    $.datepicker.parseTime = function(timeFormat, timeString, options) {
        var o = extendRemove(extendRemove({}, $.timepicker._defaults), options || {})
          , iso8601 = (timeFormat.replace(/\'.*?\'/g, "").indexOf("Z") !== -1);
        var strictParse = function(f, s, o) {
            var getPatternAmpm = function(amNames, pmNames) {
                var markers = [];
                if (amNames) {
                    $.merge(markers, amNames)
                }
                if (pmNames) {
                    $.merge(markers, pmNames)
                }
                markers = $.map(markers, function(val) {
                    return val.replace(/[.*+?|()\[\]{}\\]/g, "\\$&")
                });
                return "(" + markers.join("|") + ")?"
            };
            var getFormatPositions = function(timeFormat) {
                var finds = timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g)
                  , orders = {
                    h: -1,
                    m: -1,
                    s: -1,
                    l: -1,
                    c: -1,
                    t: -1,
                    z: -1
                };
                if (finds) {
                    for (var i = 0; i < finds.length; i++) {
                        if (orders[finds[i].toString().charAt(0)] === -1) {
                            orders[finds[i].toString().charAt(0)] = i + 1
                        }
                    }
                }
                return orders
            };
            var regstr = "^" + f.toString().replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function(match) {
                var ml = match.length;
                switch (match.charAt(0).toLowerCase()) {
                case "h":
                    return ml === 1 ? "(\\d?\\d)" : "(\\d{" + ml + "})";
                case "m":
                    return ml === 1 ? "(\\d?\\d)" : "(\\d{" + ml + "})";
                case "s":
                    return ml === 1 ? "(\\d?\\d)" : "(\\d{" + ml + "})";
                case "l":
                    return "(\\d?\\d?\\d)";
                case "c":
                    return "(\\d?\\d?\\d)";
                case "z":
                    return "(z|[-+]\\d\\d:?\\d\\d|\\S+)?";
                case "t":
                    return getPatternAmpm(o.amNames, o.pmNames);
                default:
                    return "(" + match.replace(/\'/g, "").replace(/(\.|\$|\^|\\|\/|\(|\)|\[|\]|\?|\+|\*)/g, function(m) {
                        return "\\" + m
                    }) + ")?"
                }
            }).replace(/\s/g, "\\s?") + o.timeSuffix + "$", order = getFormatPositions(f), ampm = "", treg;
            treg = s.match(new RegExp(regstr,"i"));
            var resTime = {
                hour: 0,
                minute: 0,
                second: 0,
                millisec: 0,
                microsec: 0
            };
            if (treg) {
                if (order.t !== -1) {
                    if (treg[order.t] === undefined || treg[order.t].length === 0) {
                        ampm = "";
                        resTime.ampm = ""
                    } else {
                        ampm = $.inArray(treg[order.t].toUpperCase(), $.map(o.amNames, function(x, i) {
                            return x.toUpperCase()
                        })) !== -1 ? "AM" : "PM";
                        resTime.ampm = o[ampm === "AM" ? "amNames" : "pmNames"][0]
                    }
                }
                if (order.h !== -1) {
                    if (ampm === "AM" && treg[order.h] === "12") {
                        resTime.hour = 0
                    } else {
                        if (ampm === "PM" && treg[order.h] !== "12") {
                            resTime.hour = parseInt(treg[order.h], 10) + 12
                        } else {
                            resTime.hour = Number(treg[order.h])
                        }
                    }
                }
                if (order.m !== -1) {
                    resTime.minute = Number(treg[order.m])
                }
                if (order.s !== -1) {
                    resTime.second = Number(treg[order.s])
                }
                if (order.l !== -1) {
                    resTime.millisec = Number(treg[order.l])
                }
                if (order.c !== -1) {
                    resTime.microsec = Number(treg[order.c])
                }
                if (order.z !== -1 && treg[order.z] !== undefined) {
                    resTime.timezone = $.timepicker.timezoneOffsetNumber(treg[order.z])
                }
                return resTime
            }
            return false
        };
        var looseParse = function(f, s, o) {
            try {
                var d = new Date("2012-01-01 " + s);
                if (isNaN(d.getTime())) {
                    d = new Date("2012-01-01T" + s);
                    if (isNaN(d.getTime())) {
                        d = new Date("01/01/2012 " + s);
                        if (isNaN(d.getTime())) {
                            throw "Unable to parse time with native Date: " + s
                        }
                    }
                }
                return {
                    hour: d.getHours(),
                    minute: d.getMinutes(),
                    second: d.getSeconds(),
                    millisec: d.getMilliseconds(),
                    microsec: d.getMicroseconds(),
                    timezone: d.getTimezoneOffset() * -1
                }
            } catch (err) {
                try {
                    return strictParse(f, s, o)
                } catch (err2) {
                    $.timepicker.log("Unable to parse \ntimeString: " + s + "\ntimeFormat: " + f)
                }
            }
            return false
        };
        if (typeof o.parse === "function") {
            return o.parse(timeFormat, timeString, o)
        }
        if (o.parse === "loose") {
            return looseParse(timeFormat, timeString, o)
        }
        return strictParse(timeFormat, timeString, o)
    }
    ;
    $.datepicker.formatTime = function(format, time, options) {
        options = options || {};
        options = $.extend({}, $.timepicker._defaults, options);
        time = $.extend({
            hour: 0,
            minute: 0,
            second: 0,
            millisec: 0,
            microsec: 0,
            timezone: null
        }, time);
        var tmptime = format
          , ampmName = options.amNames[0]
          , hour = parseInt(time.hour, 10);
        if (hour > 11) {
            ampmName = options.pmNames[0]
        }
        tmptime = tmptime.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function(match) {
            switch (match) {
            case "HH":
                return ("0" + hour).slice(-2);
            case "H":
                return hour;
            case "hh":
                return ("0" + convert24to12(hour)).slice(-2);
            case "h":
                return convert24to12(hour);
            case "mm":
                return ("0" + time.minute).slice(-2);
            case "m":
                return time.minute;
            case "ss":
                return ("0" + time.second).slice(-2);
            case "s":
                return time.second;
            case "l":
                return ("00" + time.millisec).slice(-3);
            case "c":
                return ("00" + time.microsec).slice(-3);
            case "z":
                return $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, false);
            case "Z":
                return $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, true);
            case "T":
                return ampmName.charAt(0).toUpperCase();
            case "TT":
                return ampmName.toUpperCase();
            case "t":
                return ampmName.charAt(0).toLowerCase();
            case "tt":
                return ampmName.toLowerCase();
            default:
                return match.replace(/'/g, "")
            }
        });
        return tmptime
    }
    ;
    $.datepicker._base_selectDate = $.datepicker._selectDate;
    $.datepicker._selectDate = function(id, dateStr) {
        var inst = this._getInst($(id)[0]), tp_inst = this._get(inst, "timepicker"), was_inline;
        if (tp_inst && inst.settings.showTimepicker) {
            tp_inst._limitMinMaxDateTime(inst, true);
            was_inline = inst.inline;
            inst.inline = inst.stay_open = true;
            this._base_selectDate(id, dateStr);
            inst.inline = was_inline;
            inst.stay_open = false;
            this._notifyChange(inst);
            this._updateDatepicker(inst)
        } else {
            this._base_selectDate(id, dateStr)
        }
    }
    ;
    $.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;
    $.datepicker._updateDatepicker = function(inst) {
        var input = inst.input[0];
        if ($.datepicker._curInst && $.datepicker._curInst !== inst && $.datepicker._datepickerShowing && $.datepicker._lastInput !== input) {
            return
        }
        if (typeof (inst.stay_open) !== "boolean" || inst.stay_open === false) {
            this._base_updateDatepicker(inst);
            var tp_inst = this._get(inst, "timepicker");
            if (tp_inst) {
                tp_inst._addTimePicker(inst)
            }
        }
    }
    ;
    $.datepicker._base_doKeyPress = $.datepicker._doKeyPress;
    $.datepicker._doKeyPress = function(event) {
        var inst = $.datepicker._getInst(event.target)
          , tp_inst = $.datepicker._get(inst, "timepicker");
        if (tp_inst) {
            if ($.datepicker._get(inst, "constrainInput")) {
                var ampm = tp_inst.support.ampm
                  , tz = tp_inst._defaults.showTimezone !== null ? tp_inst._defaults.showTimezone : tp_inst.support.timezone
                  , dateChars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"))
                  , datetimeChars = tp_inst._defaults.timeFormat.toString().replace(/[hms]/g, "").replace(/TT/g, ampm ? "APM" : "").replace(/Tt/g, ampm ? "AaPpMm" : "").replace(/tT/g, ampm ? "AaPpMm" : "").replace(/T/g, ampm ? "AP" : "").replace(/tt/g, ampm ? "apm" : "").replace(/t/g, ampm ? "ap" : "") + " " + tp_inst._defaults.separator + tp_inst._defaults.timeSuffix + (tz ? tp_inst._defaults.timezoneList.join("") : "") + (tp_inst._defaults.amNames.join("")) + (tp_inst._defaults.pmNames.join("")) + dateChars
                  , chr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);
                return event.ctrlKey || (chr < " " || !dateChars || datetimeChars.indexOf(chr) > -1)
            }
        }
        return $.datepicker._base_doKeyPress(event)
    }
    ;
    $.datepicker._base_updateAlternate = $.datepicker._updateAlternate;
    $.datepicker._updateAlternate = function(inst) {
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            var altField = tp_inst._defaults.altField;
            if (altField) {
                var altFormat = tp_inst._defaults.altFormat || tp_inst._defaults.dateFormat
                  , date = this._getDate(inst)
                  , formatCfg = $.datepicker._getFormatConfig(inst)
                  , altFormattedDateTime = ""
                  , altSeparator = tp_inst._defaults.altSeparator ? tp_inst._defaults.altSeparator : tp_inst._defaults.separator
                  , altTimeSuffix = tp_inst._defaults.altTimeSuffix ? tp_inst._defaults.altTimeSuffix : tp_inst._defaults.timeSuffix
                  , altTimeFormat = tp_inst._defaults.altTimeFormat !== null ? tp_inst._defaults.altTimeFormat : tp_inst._defaults.timeFormat;
                altFormattedDateTime += $.datepicker.formatTime(altTimeFormat, tp_inst, tp_inst._defaults) + altTimeSuffix;
                if (!tp_inst._defaults.timeOnly && !tp_inst._defaults.altFieldTimeOnly && date !== null) {
                    if (tp_inst._defaults.altFormat) {
                        altFormattedDateTime = $.datepicker.formatDate(tp_inst._defaults.altFormat, date, formatCfg) + altSeparator + altFormattedDateTime
                    } else {
                        altFormattedDateTime = tp_inst.formattedDate + altSeparator + altFormattedDateTime
                    }
                }
                $(altField).val(inst.input.val() ? altFormattedDateTime : "")
            }
        } else {
            $.datepicker._base_updateAlternate(inst)
        }
    }
    ;
    $.datepicker._base_doKeyUp = $.datepicker._doKeyUp;
    $.datepicker._doKeyUp = function(event) {
        var inst = $.datepicker._getInst(event.target)
          , tp_inst = $.datepicker._get(inst, "timepicker");
        if (tp_inst) {
            if (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {
                try {
                    $.datepicker._updateDatepicker(inst)
                } catch (err) {
                    $.timepicker.log(err)
                }
            }
        }
        return $.datepicker._base_doKeyUp(event)
    }
    ;
    $.datepicker._base_gotoToday = $.datepicker._gotoToday;
    $.datepicker._gotoToday = function(id) {
        var inst = this._getInst($(id)[0]);
        this._base_gotoToday(id);
        var tp_inst = this._get(inst, "timepicker");
        if (!tp_inst) {
            return
        }
        var tzoffset = $.timepicker.timezoneOffsetNumber(tp_inst.timezone);
        var now = new Date();
        now.setMinutes(now.getMinutes() + now.getTimezoneOffset() + parseInt(tzoffset, 10));
        this._setTime(inst, now);
        this._setDate(inst, now);
        tp_inst._onSelectHandler()
    }
    ;
    $.datepicker._disableTimepickerDatepicker = function(target) {
        var inst = this._getInst(target);
        if (!inst) {
            return
        }
        var tp_inst = this._get(inst, "timepicker");
        $(target).datepicker("getDate");
        if (tp_inst) {
            inst.settings.showTimepicker = false;
            tp_inst._defaults.showTimepicker = false;
            tp_inst._updateDateTime(inst)
        }
    }
    ;
    $.datepicker._enableTimepickerDatepicker = function(target) {
        var inst = this._getInst(target);
        if (!inst) {
            return
        }
        var tp_inst = this._get(inst, "timepicker");
        $(target).datepicker("getDate");
        if (tp_inst) {
            inst.settings.showTimepicker = true;
            tp_inst._defaults.showTimepicker = true;
            tp_inst._addTimePicker(inst);
            tp_inst._updateDateTime(inst)
        }
    }
    ;
    $.datepicker._setTime = function(inst, date) {
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            var defaults = tp_inst._defaults;
            tp_inst.hour = date ? date.getHours() : defaults.hour;
            tp_inst.minute = date ? date.getMinutes() : defaults.minute;
            tp_inst.second = date ? date.getSeconds() : defaults.second;
            tp_inst.millisec = date ? date.getMilliseconds() : defaults.millisec;
            tp_inst.microsec = date ? date.getMicroseconds() : defaults.microsec;
            tp_inst._limitMinMaxDateTime(inst, true);
            tp_inst._onTimeChange();
            tp_inst._updateDateTime(inst)
        }
    }
    ;
    $.datepicker._setTimeDatepicker = function(target, date, withDate) {
        var inst = this._getInst(target);
        if (!inst) {
            return
        }
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            this._setDateFromField(inst);
            var tp_date;
            if (date) {
                if (typeof date === "string") {
                    tp_inst._parseTime(date, withDate);
                    tp_date = new Date();
                    tp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);
                    tp_date.setMicroseconds(tp_inst.microsec)
                } else {
                    tp_date = new Date(date.getTime());
                    tp_date.setMicroseconds(date.getMicroseconds())
                }
                if (tp_date.toString() === "Invalid Date") {
                    tp_date = undefined
                }
                this._setTime(inst, tp_date)
            }
        }
    }
    ;
    $.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;
    $.datepicker._setDateDatepicker = function(target, _date) {
        var inst = this._getInst(target);
        var date = _date;
        if (!inst) {
            return
        }
        if (typeof (_date) === "string") {
            date = new Date(_date);
            if (!date.getTime()) {
                this._base_setDateDatepicker.apply(this, arguments);
                date = $(target).datepicker("getDate")
            }
        }
        var tp_inst = this._get(inst, "timepicker");
        var tp_date;
        if (date instanceof Date) {
            tp_date = new Date(date.getTime());
            tp_date.setMicroseconds(date.getMicroseconds())
        } else {
            tp_date = date
        }
        if (tp_inst && tp_date) {
            if (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {
                tp_inst.timezone = tp_date.getTimezoneOffset() * -1
            }
            date = $.timepicker.timezoneAdjust(date, $.timepicker.timezoneOffsetString(-date.getTimezoneOffset()), tp_inst.timezone);
            tp_date = $.timepicker.timezoneAdjust(tp_date, $.timepicker.timezoneOffsetString(-tp_date.getTimezoneOffset()), tp_inst.timezone)
        }
        this._updateDatepicker(inst);
        this._base_setDateDatepicker.apply(this, arguments);
        this._setTimeDatepicker(target, tp_date, true)
    }
    ;
    $.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;
    $.datepicker._getDateDatepicker = function(target, noDefault) {
        var inst = this._getInst(target);
        if (!inst) {
            return
        }
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            if (inst.lastVal === undefined) {
                this._setDateFromField(inst, noDefault)
            }
            var date = this._getDate(inst);
            var currDT = null;
            if (tp_inst.$altInput && tp_inst._defaults.altFieldTimeOnly) {
                currDT = tp_inst.$input.val() + " " + tp_inst.$altInput.val()
            } else {
                if (tp_inst.$input.get(0).tagName !== "INPUT" && tp_inst.$altInput) {
                    currDT = tp_inst.$altInput.val()
                } else {
                    currDT = tp_inst.$input.val()
                }
            }
            if (date && tp_inst._parseTime(currDT, !inst.settings.timeOnly)) {
                date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);
                date.setMicroseconds(tp_inst.microsec);
                if (tp_inst.timezone != null) {
                    if (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {
                        tp_inst.timezone = date.getTimezoneOffset() * -1
                    }
                    date = $.timepicker.timezoneAdjust(date, tp_inst.timezone, $.timepicker.timezoneOffsetString(-date.getTimezoneOffset()))
                }
            }
            return date
        }
        return this._base_getDateDatepicker(target, noDefault)
    }
    ;
    $.datepicker._base_parseDate = $.datepicker.parseDate;
    $.datepicker.parseDate = function(format, value, settings) {
        var date;
        try {
            date = this._base_parseDate(format, value, settings)
        } catch (err) {
            if (err.indexOf(":") >= 0) {
                date = this._base_parseDate(format, value.substring(0, value.length - (err.length - err.indexOf(":") - 2)), settings);
                $.timepicker.log("Error parsing the date string: " + err + "\ndate string = " + value + "\ndate format = " + format)
            } else {
                throw err
            }
        }
        return date
    }
    ;
    $.datepicker._base_formatDate = $.datepicker._formatDate;
    $.datepicker._formatDate = function(inst, day, month, year) {
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            tp_inst._updateDateTime(inst);
            return tp_inst.$input.val()
        }
        return this._base_formatDate(inst)
    }
    ;
    $.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker;
    $.datepicker._optionDatepicker = function(target, name, value) {
        var inst = this._getInst(target), name_clone;
        if (!inst) {
            return null
        }
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            var min = null, max = null, onselect = null, overrides = tp_inst._defaults.evnts, fns = {}, prop, ret, oldVal, $target;
            if (typeof name === "string") {
                if (name === "minDate" || name === "minDateTime") {
                    min = value
                } else {
                    if (name === "maxDate" || name === "maxDateTime") {
                        max = value
                    } else {
                        if (name === "onSelect") {
                            onselect = value
                        } else {
                            if (overrides.hasOwnProperty(name)) {
                                if (typeof (value) === "undefined") {
                                    return overrides[name]
                                }
                                fns[name] = value;
                                name_clone = {}
                            }
                        }
                    }
                }
            } else {
                if (typeof name === "object") {
                    if (name.minDate) {
                        min = name.minDate
                    } else {
                        if (name.minDateTime) {
                            min = name.minDateTime
                        } else {
                            if (name.maxDate) {
                                max = name.maxDate
                            } else {
                                if (name.maxDateTime) {
                                    max = name.maxDateTime
                                }
                            }
                        }
                    }
                    for (prop in overrides) {
                        if (overrides.hasOwnProperty(prop) && name[prop]) {
                            fns[prop] = name[prop]
                        }
                    }
                }
            }
            for (prop in fns) {
                if (fns.hasOwnProperty(prop)) {
                    overrides[prop] = fns[prop];
                    if (!name_clone) {
                        name_clone = $.extend({}, name)
                    }
                    delete name_clone[prop]
                }
            }
            if (name_clone && isEmptyObject(name_clone)) {
                return
            }
            if (min) {
                if (min === 0) {
                    min = new Date()
                } else {
                    min = new Date(min)
                }
                tp_inst._defaults.minDate = min;
                tp_inst._defaults.minDateTime = min
            } else {
                if (max) {
                    if (max === 0) {
                        max = new Date()
                    } else {
                        max = new Date(max)
                    }
                    tp_inst._defaults.maxDate = max;
                    tp_inst._defaults.maxDateTime = max
                } else {
                    if (onselect) {
                        tp_inst._defaults.onSelect = onselect
                    }
                }
            }
            if (min || max) {
                $target = $(target);
                oldVal = $target.datetimepicker("getDate");
                ret = this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);
                $target.datetimepicker("setDate", oldVal);
                return ret
            }
        }
        if (value === undefined) {
            return this._base_optionDatepicker.call($.datepicker, target, name)
        }
        return this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value)
    }
    ;
    var isEmptyObject = function(obj) {
        var prop;
        for (prop in obj) {
            if (obj.hasOwnProperty(prop)) {
                return false
            }
        }
        return true
    };
    var extendRemove = function(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] === null || props[name] === undefined) {
                target[name] = props[name]
            }
        }
        return target
    };
    var detectSupport = function(timeFormat) {
        var tf = timeFormat.replace(/'.*?'/g, "").toLowerCase()
          , isIn = function(f, t) {
            return f.indexOf(t) !== -1 ? true : false
        };
        return {
            hour: isIn(tf, "h"),
            minute: isIn(tf, "m"),
            second: isIn(tf, "s"),
            millisec: isIn(tf, "l"),
            microsec: isIn(tf, "c"),
            timezone: isIn(tf, "z"),
            ampm: isIn(tf, "t") && isIn(timeFormat, "h"),
            iso8601: isIn(timeFormat, "Z")
        }
    };
    var convert24to12 = function(hour) {
        hour %= 12;
        if (hour === 0) {
            hour = 12
        }
        return String(hour)
    };
    var computeEffectiveSetting = function(settings, property) {
        return settings && settings[property] ? settings[property] : $.timepicker._defaults[property]
    };
    var splitDateTime = function(dateTimeString, timeSettings) {
        var separator = computeEffectiveSetting(timeSettings, "separator")
          , format = computeEffectiveSetting(timeSettings, "timeFormat")
          , timeParts = format.split(separator)
          , timePartsLen = timeParts.length
          , allParts = dateTimeString.split(separator)
          , allPartsLen = allParts.length;
        if (allPartsLen > 1) {
            return {
                dateString: allParts.splice(0, allPartsLen - timePartsLen).join(separator),
                timeString: allParts.splice(0, timePartsLen).join(separator)
            }
        }
        return {
            dateString: dateTimeString,
            timeString: ""
        }
    };
    var parseDateTimeInternal = function(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {
        var date, parts, parsedTime;
        parts = splitDateTime(dateTimeString, timeSettings);
        date = $.datepicker._base_parseDate(dateFormat, parts.dateString, dateSettings);
        if (parts.timeString === "") {
            return {
                date: date
            }
        }
        parsedTime = $.datepicker.parseTime(timeFormat, parts.timeString, timeSettings);
        if (!parsedTime) {
            throw "Wrong time format"
        }
        return {
            date: date,
            timeObj: parsedTime
        }
    };
    var selectLocalTimezone = function(tp_inst, date) {
        if (tp_inst && tp_inst.timezone_select) {
            var now = date || new Date();
            tp_inst.timezone_select.val(-now.getTimezoneOffset())
        }
    };
    $.timepicker = new Timepicker();
    $.timepicker.timezoneOffsetString = function(tzMinutes, iso8601) {
        if (isNaN(tzMinutes) || tzMinutes > 840 || tzMinutes < -720) {
            return tzMinutes
        }
        var off = tzMinutes
          , minutes = off % 60
          , hours = (off - minutes) / 60
          , iso = iso8601 ? ":" : ""
          , tz = (off >= 0 ? "+" : "-") + ("0" + Math.abs(hours)).slice(-2) + iso + ("0" + Math.abs(minutes)).slice(-2);
        if (tz === "+00:00") {
            return "Z"
        }
        return tz
    }
    ;
    $.timepicker.timezoneOffsetNumber = function(tzString) {
        var normalized = tzString.toString().replace(":", "");
        if (normalized.toUpperCase() === "Z") {
            return 0
        }
        if (!/^(\-|\+)\d{4}$/.test(normalized)) {
            return parseInt(tzString, 10)
        }
        return ((normalized.substr(0, 1) === "-" ? -1 : 1) * ((parseInt(normalized.substr(1, 2), 10) * 60) + parseInt(normalized.substr(3, 2), 10)))
    }
    ;
    $.timepicker.timezoneAdjust = function(date, fromTimezone, toTimezone) {
        var fromTz = $.timepicker.timezoneOffsetNumber(fromTimezone);
        var toTz = $.timepicker.timezoneOffsetNumber(toTimezone);
        if (!isNaN(toTz)) {
            date.setMinutes(date.getMinutes() + (-fromTz) - (-toTz))
        }
        return date
    }
    ;
    $.timepicker.timeRange = function(startTime, endTime, options) {
        return $.timepicker.handleRange("timepicker", startTime, endTime, options)
    }
    ;
    $.timepicker.datetimeRange = function(startTime, endTime, options) {
        $.timepicker.handleRange("datetimepicker", startTime, endTime, options)
    }
    ;
    $.timepicker.dateRange = function(startTime, endTime, options) {
        $.timepicker.handleRange("datepicker", startTime, endTime, options)
    }
    ;
    $.timepicker.handleRange = function(method, startTime, endTime, options) {
        options = $.extend({}, {
            minInterval: 0,
            maxInterval: 0,
            start: {},
            end: {}
        }, options);
        var timeOnly = false;
        if (method === "timepicker") {
            timeOnly = true;
            method = "datetimepicker"
        }
        function checkDates(changed, other) {
            var startdt = startTime[method]("getDate")
              , enddt = endTime[method]("getDate")
              , changeddt = changed[method]("getDate");
            if (startdt !== null) {
                var minDate = new Date(startdt.getTime())
                  , maxDate = new Date(startdt.getTime());
                minDate.setMilliseconds(minDate.getMilliseconds() + options.minInterval);
                maxDate.setMilliseconds(maxDate.getMilliseconds() + options.maxInterval);
                if (options.minInterval > 0 && minDate > enddt) {
                    endTime[method]("setDate", minDate)
                } else {
                    if (options.maxInterval > 0 && maxDate < enddt) {
                        endTime[method]("setDate", maxDate)
                    } else {
                        if (startdt > enddt) {
                            other[method]("setDate", changeddt)
                        }
                    }
                }
            }
        }
        function selected(changed, other, option) {
            if (!changed.val()) {
                return
            }
            var date = changed[method].call(changed, "getDate");
            if (date !== null && options.minInterval > 0) {
                if (option === "minDate") {
                    date.setMilliseconds(date.getMilliseconds() + options.minInterval)
                }
                if (option === "maxDate") {
                    date.setMilliseconds(date.getMilliseconds() - options.minInterval)
                }
            }
            if (date.getTime) {
                other[method].call(other, "option", option, date)
            }
        }
        $.fn[method].call(startTime, $.extend({
            timeOnly: timeOnly,
            onClose: function(dateText, inst) {
                checkDates($(this), endTime)
            },
            onSelect: function(selectedDateTime) {
                selected($(this), endTime, "minDate")
            }
        }, options, options.start));
        $.fn[method].call(endTime, $.extend({
            timeOnly: timeOnly,
            onClose: function(dateText, inst) {
                checkDates($(this), startTime)
            },
            onSelect: function(selectedDateTime) {
                selected($(this), startTime, "maxDate")
            }
        }, options, options.end));
        checkDates(startTime, endTime);
        selected(startTime, endTime, "minDate");
        selected(endTime, startTime, "maxDate");
        return $([startTime.get(0), endTime.get(0)])
    }
    ;
    $.timepicker.log = function() {
        if (window.console && window.console.log && window.console.log.apply) {
            window.console.log.apply(window.console, Array.prototype.slice.call(arguments))
        }
    }
    ;
    $.timepicker._util = {
        _extendRemove: extendRemove,
        _isEmptyObject: isEmptyObject,
        _convert24to12: convert24to12,
        _detectSupport: detectSupport,
        _selectLocalTimezone: selectLocalTimezone,
        _computeEffectiveSetting: computeEffectiveSetting,
        _splitDateTime: splitDateTime,
        _parseDateTimeInternal: parseDateTimeInternal
    };
    if (!Date.prototype.getMicroseconds) {
        Date.prototype.microseconds = 0;
        Date.prototype.getMicroseconds = function() {
            return this.microseconds
        }
        ;
        Date.prototype.setMicroseconds = function(m) {
            this.setMilliseconds(this.getMilliseconds() + Math.floor(m / 1000));
            this.microseconds = m % 1000;
            return this
        }
    }
    $.timepicker.version = "@@version"
}));
/*
 HTML5 Shiv v3.7.0 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed
*/
(function(l, f) {
    function m() {
        var a = e.elements;
        return "string" == typeof a ? a.split(" ") : a
    }
    function i(a) {
        var b = n[a[o]];
        b || (b = {},
        h++,
        a[o] = h,
        n[h] = b);
        return b
    }
    function p(a, b, c) {
        b || (b = f);
        if (g)
            return b.createElement(a);
        c || (c = i(b));
        b = c.cache[a] ? c.cache[a].cloneNode() : r.test(a) ? (c.cache[a] = c.createElem(a)).cloneNode() : c.createElem(a);
        return b.canHaveChildren && !s.test(a) ? c.frag.appendChild(b) : b
    }
    function t(a, b) {
        if (!b.cache)
            b.cache = {},
            b.createElem = a.createElement,
            b.createFrag = a.createDocumentFragment,
            b.frag = b.createFrag();
        a.createElement = function(c) {
            return !e.shivMethods ? b.createElem(c) : p(c, a, b)
        }
        ;
        a.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + m().join().replace(/[\w\-]+/g, function(a) {
            b.createElem(a);
            b.frag.createElement(a);
            return 'c("' + a + '")'
        }) + ");return n}")(e, b.frag)
    }
    function q(a) {
        a || (a = f);
        var b = i(a);
        if (e.shivCSS && !j && !b.hasCSS) {
            var c, d = a;
            c = d.createElement("p");
            d = d.getElementsByTagName("head")[0] || d.documentElement;
            c.innerHTML = "x<style>article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}</style>";
            c = d.insertBefore(c.lastChild, d.firstChild);
            b.hasCSS = !!c
        }
        g || t(a, b);
        return a
    }
    var k = l.html5 || {}, s = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, r = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, j, o = "_html5shiv", h = 0, n = {}, g;
    (function() {
        try {
            var a = f.createElement("a");
            a.innerHTML = "<xyz></xyz>";
            j = "hidden"in a;
            var b;
            if (!(b = 1 == a.childNodes.length)) {
                f.createElement("a");
                var c = f.createDocumentFragment();
                b = "undefined" == typeof c.cloneNode || "undefined" == typeof c.createDocumentFragment || "undefined" == typeof c.createElement
            }
            g = b
        } catch (d) {
            g = j = !0
        }
    }
    )();
    var e = {
        elements: k.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",
        version: "3.7.0",
        shivCSS: !1 !== k.shivCSS,
        supportsUnknownElements: g,
        shivMethods: !1 !== k.shivMethods,
        type: "default",
        shivDocument: q,
        createElement: p,
        createDocumentFragment: function(a, b) {
            a || (a = f);
            if (g)
                return a.createDocumentFragment();
            for (var b = b || i(a), c = b.frag.cloneNode(), d = 0, e = m(), h = e.length; d < h; d++)
                c.createElement(e[d]);
            return c
        }
    };
    l.html5 = e;
    q(f)
}
)(this, document);

if (!document.createElement("canvas").getContext) {
    (function() {
        var v = Math;
        var w = v.round;
        var s = v.sin;
        var E = v.cos;
        var n = v.abs;
        var D = v.sqrt;
        var a = 10;
        var o = a / 2;
        function h() {
            return this.context_ || (this.context_ = new q(this))
        }
        var u = Array.prototype.slice;
        function F(j, m, G) {
            var i = u.call(arguments, 2);
            return function() {
                return j.apply(m, i.concat(u.call(arguments)))
            }
        }
        var k = {
            init: function(i) {
                if (/MSIE/.test(navigator.userAgent) && !window.opera) {
                    var j = i || document;
                    j.createElement("canvas");
                    j.attachEvent("onreadystatechange", F(this.init_, this, j))
                }
            },
            init_: function(H) {
                if (!H.namespaces.g_vml_) {
                    H.namespaces.add("g_vml_", "urn:schemas-microsoft-com:vml", "#default#VML")
                }
                if (!H.namespaces.g_o_) {
                    H.namespaces.add("g_o_", "urn:schemas-microsoft-com:office:office", "#default#VML")
                }
                if (!H.styleSheets.ex_canvas_) {
                    var G = H.createStyleSheet();
                    G.owningElement.id = "ex_canvas_";
                    G.cssText = "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}g_vml_\\:*{behavior:url(#default#VML)}g_o_\\:*{behavior:url(#default#VML)}"
                }
                var m = H.getElementsByTagName("canvas");
                for (var j = 0; j < m.length; j++) {
                    this.initElement(m[j])
                }
            },
            initElement: function(j) {
                if (!j.getContext) {
                    j.getContext = h;
                    j.innerHTML = "";
                    j.attachEvent("onpropertychange", C);
                    j.attachEvent("onresize", b);
                    var i = j.attributes;
                    if (i.width && i.width.specified) {
                        j.style.width = i.width.nodeValue + "px"
                    } else {
                        j.width = j.clientWidth
                    }
                    if (i.height && i.height.specified) {
                        j.style.height = i.height.nodeValue + "px"
                    } else {
                        j.height = j.clientHeight
                    }
                }
                return j
            }
        };
        function C(j) {
            var i = j.srcElement;
            switch (j.propertyName) {
            case "width":
                i.style.width = i.attributes.width.nodeValue + "px";
                i.getContext().clearRect();
                break;
            case "height":
                i.style.height = i.attributes.height.nodeValue + "px";
                i.getContext().clearRect();
                break
            }
        }
        function b(j) {
            var i = j.srcElement;
            if (i.firstChild) {
                i.firstChild.style.width = i.clientWidth + "px";
                i.firstChild.style.height = i.clientHeight + "px"
            }
        }
        k.init();
        var e = [];
        for (var z = 0; z < 16; z++) {
            for (var y = 0; y < 16; y++) {
                e[z * 16 + y] = z.toString(16) + y.toString(16)
            }
        }
        function r() {
            return [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
        }
        function d(G, m) {
            var j = r();
            for (var i = 0; i < 3; i++) {
                for (var J = 0; J < 3; J++) {
                    var H = 0;
                    for (var I = 0; I < 3; I++) {
                        H += G[i][I] * m[I][J]
                    }
                    j[i][J] = H
                }
            }
            return j
        }
        function x(j, i) {
            i.fillStyle = j.fillStyle;
            i.lineCap = j.lineCap;
            i.lineJoin = j.lineJoin;
            i.lineWidth = j.lineWidth;
            i.miterLimit = j.miterLimit;
            i.shadowBlur = j.shadowBlur;
            i.shadowColor = j.shadowColor;
            i.shadowOffsetX = j.shadowOffsetX;
            i.shadowOffsetY = j.shadowOffsetY;
            i.strokeStyle = j.strokeStyle;
            i.globalAlpha = j.globalAlpha;
            i.arcScaleX_ = j.arcScaleX_;
            i.arcScaleY_ = j.arcScaleY_;
            i.lineScale_ = j.lineScale_
        }
        function c(m) {
            var I, H = 1;
            m = String(m);
            if (m.substring(0, 3) == "rgb") {
                var K = m.indexOf("(", 3);
                var j = m.indexOf(")", K + 1);
                var J = m.substring(K + 1, j).split(",");
                I = "#";
                for (var G = 0; G < 3; G++) {
                    I += e[Number(J[G])]
                }
                if (J.length == 4 && m.substr(3, 1) == "a") {
                    H = J[3]
                }
            } else {
                I = m
            }
            return {
                color: I,
                alpha: H
            }
        }
        function t(i) {
            switch (i) {
            case "butt":
                return "flat";
            case "round":
                return "round";
            case "square":
            default:
                return "square"
            }
        }
        function q(j) {
            this.m_ = r();
            this.mStack_ = [];
            this.aStack_ = [];
            this.currentPath_ = [];
            this.strokeStyle = "#000";
            this.fillStyle = "#000";
            this.lineWidth = 1;
            this.lineJoin = "miter";
            this.lineCap = "butt";
            this.miterLimit = a * 1;
            this.globalAlpha = 1;
            this.canvas = j;
            var i = j.ownerDocument.createElement("div");
            i.style.width = j.clientWidth + "px";
            i.style.height = j.clientHeight + "px";
            i.style.overflow = "hidden";
            i.style.position = "absolute";
            j.appendChild(i);
            this.element_ = i;
            this.arcScaleX_ = 1;
            this.arcScaleY_ = 1;
            this.lineScale_ = 1
        }
        var l = q.prototype;
        l.clearRect = function() {
            this.element_.innerHTML = ""
        }
        ;
        l.beginPath = function() {
            this.currentPath_ = []
        }
        ;
        l.moveTo = function(j, i) {
            var m = this.getCoords_(j, i);
            this.currentPath_.push({
                type: "moveTo",
                x: m.x,
                y: m.y
            });
            this.currentX_ = m.x;
            this.currentY_ = m.y
        }
        ;
        l.lineTo = function(j, i) {
            var m = this.getCoords_(j, i);
            this.currentPath_.push({
                type: "lineTo",
                x: m.x,
                y: m.y
            });
            this.currentX_ = m.x;
            this.currentY_ = m.y
        }
        ;
        l.bezierCurveTo = function(m, j, L, K, J, H) {
            var i = this.getCoords_(J, H);
            var I = this.getCoords_(m, j);
            var G = this.getCoords_(L, K);
            p(this, I, G, i)
        }
        ;
        function p(i, G, m, j) {
            i.currentPath_.push({
                type: "bezierCurveTo",
                cp1x: G.x,
                cp1y: G.y,
                cp2x: m.x,
                cp2y: m.y,
                x: j.x,
                y: j.y
            });
            i.currentX_ = j.x;
            i.currentY_ = j.y
        }
        l.quadraticCurveTo = function(J, m, j, i) {
            var I = this.getCoords_(J, m);
            var H = this.getCoords_(j, i);
            var K = {
                x: this.currentX_ + 2 / 3 * (I.x - this.currentX_),
                y: this.currentY_ + 2 / 3 * (I.y - this.currentY_)
            };
            var G = {
                x: K.x + (H.x - this.currentX_) / 3,
                y: K.y + (H.y - this.currentY_) / 3
            };
            p(this, K, G, H)
        }
        ;
        l.arc = function(M, K, L, H, j, m) {
            L *= a;
            var Q = m ? "at" : "wa";
            var N = M + E(H) * L - o;
            var P = K + s(H) * L - o;
            var i = M + E(j) * L - o;
            var O = K + s(j) * L - o;
            if (N == i && !m) {
                N += 0.125
            }
            var G = this.getCoords_(M, K);
            var J = this.getCoords_(N, P);
            var I = this.getCoords_(i, O);
            this.currentPath_.push({
                type: Q,
                x: G.x,
                y: G.y,
                radius: L,
                xStart: J.x,
                yStart: J.y,
                xEnd: I.x,
                yEnd: I.y
            })
        }
        ;
        l.rect = function(m, j, i, G) {
            this.moveTo(m, j);
            this.lineTo(m + i, j);
            this.lineTo(m + i, j + G);
            this.lineTo(m, j + G);
            this.closePath()
        }
        ;
        l.strokeRect = function(m, j, i, G) {
            var H = this.currentPath_;
            this.beginPath();
            this.moveTo(m, j);
            this.lineTo(m + i, j);
            this.lineTo(m + i, j + G);
            this.lineTo(m, j + G);
            this.closePath();
            this.stroke();
            this.currentPath_ = H
        }
        ;
        l.fillRect = function(m, j, i, G) {
            var H = this.currentPath_;
            this.beginPath();
            this.moveTo(m, j);
            this.lineTo(m + i, j);
            this.lineTo(m + i, j + G);
            this.lineTo(m, j + G);
            this.closePath();
            this.fill();
            this.currentPath_ = H
        }
        ;
        l.createLinearGradient = function(j, G, i, m) {
            var H = new A("gradient");
            H.x0_ = j;
            H.y0_ = G;
            H.x1_ = i;
            H.y1_ = m;
            return H
        }
        ;
        l.createRadialGradient = function(G, I, m, j, H, i) {
            var J = new A("gradientradial");
            J.x0_ = G;
            J.y0_ = I;
            J.r0_ = m;
            J.x1_ = j;
            J.y1_ = H;
            J.r1_ = i;
            return J
        }
        ;
        l.drawImage = function(T, m) {
            var M, K, O, ab, R, P, V, ad;
            var N = T.runtimeStyle.width;
            var S = T.runtimeStyle.height;
            T.runtimeStyle.width = "auto";
            T.runtimeStyle.height = "auto";
            var L = T.width;
            var Z = T.height;
            T.runtimeStyle.width = N;
            T.runtimeStyle.height = S;
            if (arguments.length == 3) {
                M = arguments[1];
                K = arguments[2];
                R = P = 0;
                V = O = L;
                ad = ab = Z
            } else {
                if (arguments.length == 5) {
                    M = arguments[1];
                    K = arguments[2];
                    O = arguments[3];
                    ab = arguments[4];
                    R = P = 0;
                    V = L;
                    ad = Z
                } else {
                    if (arguments.length == 9) {
                        R = arguments[1];
                        P = arguments[2];
                        V = arguments[3];
                        ad = arguments[4];
                        M = arguments[5];
                        K = arguments[6];
                        O = arguments[7];
                        ab = arguments[8]
                    } else {
                        throw Error("Invalid number of arguments")
                    }
                }
            }
            var ac = this.getCoords_(M, K);
            var G = V / 2;
            var j = ad / 2;
            var aa = [];
            var i = 10;
            var J = 10;
            aa.push(" <g_vml_:group", ' coordsize="', a * i, ",", a * J, '"', ' coordorigin="0,0"', ' style="width:', i, "px;height:", J, "px;position:absolute;");
            if (this.m_[0][0] != 1 || this.m_[0][1]) {
                var I = [];
                I.push("M11=", this.m_[0][0], ",", "M12=", this.m_[1][0], ",", "M21=", this.m_[0][1], ",", "M22=", this.m_[1][1], ",", "Dx=", w(ac.x / a), ",", "Dy=", w(ac.y / a), "");
                var Y = ac;
                var X = this.getCoords_(M + O, K);
                var U = this.getCoords_(M, K + ab);
                var Q = this.getCoords_(M + O, K + ab);
                Y.x = v.max(Y.x, X.x, U.x, Q.x);
                Y.y = v.max(Y.y, X.y, U.y, Q.y);
                aa.push("padding:0 ", w(Y.x / a), "px ", w(Y.y / a), "px 0;filter:progid:DXImageTransform.Microsoft.Matrix(", I.join(""), ", sizingmethod='clip');")
            } else {
                aa.push("top:", w(ac.y / a), "px;left:", w(ac.x / a), "px;")
            }
            aa.push(' ">', '<g_vml_:image src="', T.src, '"', ' style="width:', a * O, "px;", " height:", a * ab, 'px;"', ' cropleft="', R / L, '"', ' croptop="', P / Z, '"', ' cropright="', (L - R - V) / L, '"', ' cropbottom="', (Z - P - ad) / Z, '"', " />", "</g_vml_:group>");
            this.element_.insertAdjacentHTML("BeforeEnd", aa.join(""))
        }
        ;
        l.stroke = function(ag) {
            var L = [];
            var M = false;
            var ar = c(ag ? this.fillStyle : this.strokeStyle);
            var ac = ar.color;
            var am = ar.alpha * this.globalAlpha;
            var I = 10;
            var O = 10;
            L.push("<g_vml_:shape", ' filled="', !!ag, '"', ' style="position:absolute;width:', I, "px;height:", O, 'px;"', ' coordorigin="0 0" coordsize="', a * I, " ", a * O, '"', ' stroked="', !ag, '"', ' path="');
            var N = false;
            var aq = {
                x: null,
                y: null
            };
            var Y = {
                x: null,
                y: null
            };
            for (var al = 0; al < this.currentPath_.length; al++) {
                var ak = this.currentPath_[al];
                var ap;
                switch (ak.type) {
                case "moveTo":
                    ap = ak;
                    L.push(" m ", w(ak.x), ",", w(ak.y));
                    break;
                case "lineTo":
                    L.push(" l ", w(ak.x), ",", w(ak.y));
                    break;
                case "close":
                    L.push(" x ");
                    ak = null;
                    break;
                case "bezierCurveTo":
                    L.push(" c ", w(ak.cp1x), ",", w(ak.cp1y), ",", w(ak.cp2x), ",", w(ak.cp2y), ",", w(ak.x), ",", w(ak.y));
                    break;
                case "at":
                case "wa":
                    L.push(" ", ak.type, " ", w(ak.x - this.arcScaleX_ * ak.radius), ",", w(ak.y - this.arcScaleY_ * ak.radius), " ", w(ak.x + this.arcScaleX_ * ak.radius), ",", w(ak.y + this.arcScaleY_ * ak.radius), " ", w(ak.xStart), ",", w(ak.yStart), " ", w(ak.xEnd), ",", w(ak.yEnd));
                    break
                }
                if (ak) {
                    if (aq.x == null || ak.x < aq.x) {
                        aq.x = ak.x
                    }
                    if (Y.x == null || ak.x > Y.x) {
                        Y.x = ak.x
                    }
                    if (aq.y == null || ak.y < aq.y) {
                        aq.y = ak.y
                    }
                    if (Y.y == null || ak.y > Y.y) {
                        Y.y = ak.y
                    }
                }
            }
            L.push(' ">');
            if (!ag) {
                var X = this.lineScale_ * this.lineWidth;
                if (X < 1) {
                    am *= X
                }
                L.push("<g_vml_:stroke", ' opacity="', am, '"', ' joinstyle="', this.lineJoin, '"', ' miterlimit="', this.miterLimit, '"', ' endcap="', t(this.lineCap), '"', ' weight="', X, 'px"', ' color="', ac, '" />')
            } else {
                if (typeof this.fillStyle == "object") {
                    var P = this.fillStyle;
                    var U = 0;
                    var aj = {
                        x: 0,
                        y: 0
                    };
                    var ad = 0;
                    var S = 1;
                    if (P.type_ == "gradient") {
                        var R = P.x0_ / this.arcScaleX_;
                        var m = P.y0_ / this.arcScaleY_;
                        var Q = P.x1_ / this.arcScaleX_;
                        var at = P.y1_ / this.arcScaleY_;
                        var ao = this.getCoords_(R, m);
                        var an = this.getCoords_(Q, at);
                        var K = an.x - ao.x;
                        var J = an.y - ao.y;
                        U = Math.atan2(K, J) * 180 / Math.PI;
                        if (U < 0) {
                            U += 360
                        }
                        if (U < 0.000001) {
                            U = 0
                        }
                    } else {
                        var ao = this.getCoords_(P.x0_, P.y0_);
                        var j = Y.x - aq.x;
                        var G = Y.y - aq.y;
                        aj = {
                            x: (ao.x - aq.x) / j,
                            y: (ao.y - aq.y) / G
                        };
                        j /= this.arcScaleX_ * a;
                        G /= this.arcScaleY_ * a;
                        var ai = v.max(j, G);
                        ad = 2 * P.r0_ / ai;
                        S = 2 * P.r1_ / ai - ad
                    }
                    var ab = P.colors_;
                    ab.sort(function(H, i) {
                        return H.offset - i.offset
                    });
                    var V = ab.length;
                    var aa = ab[0].color;
                    var Z = ab[V - 1].color;
                    var af = ab[0].alpha * this.globalAlpha;
                    var ae = ab[V - 1].alpha * this.globalAlpha;
                    var ah = [];
                    for (var al = 0; al < V; al++) {
                        var T = ab[al];
                        ah.push(T.offset * S + ad + " " + T.color)
                    }
                    L.push('<g_vml_:fill type="', P.type_, '"', ' method="none" focus="100%"', ' color="', aa, '"', ' color2="', Z, '"', ' colors="', ah.join(","), '"', ' opacity="', ae, '"', ' g_o_:opacity2="', af, '"', ' angle="', U, '"', ' focusposition="', aj.x, ",", aj.y, '" />')
                } else {
                    L.push('<g_vml_:fill color="', ac, '" opacity="', am, '" />')
                }
            }
            L.push("</g_vml_:shape>");
            this.element_.insertAdjacentHTML("beforeEnd", L.join(""))
        }
        ;
        l.fill = function() {
            this.stroke(true)
        }
        ;
        l.closePath = function() {
            this.currentPath_.push({
                type: "close"
            })
        }
        ;
        l.getCoords_ = function(G, j) {
            var i = this.m_;
            return {
                x: a * (G * i[0][0] + j * i[1][0] + i[2][0]) - o,
                y: a * (G * i[0][1] + j * i[1][1] + i[2][1]) - o
            }
        }
        ;
        l.save = function() {
            var i = {};
            x(this, i);
            this.aStack_.push(i);
            this.mStack_.push(this.m_);
            this.m_ = d(r(), this.m_)
        }
        ;
        l.restore = function() {
            x(this.aStack_.pop(), this);
            this.m_ = this.mStack_.pop()
        }
        ;
        function g(i) {
            for (var H = 0; H < 3; H++) {
                for (var G = 0; G < 2; G++) {
                    if (!isFinite(i[H][G]) || isNaN(i[H][G])) {
                        return false
                    }
                }
            }
            return true
        }
        function B(j, i, G) {
            if (!g(i)) {
                return
            }
            j.m_ = i;
            if (G) {
                var H = i[0][0] * i[1][1] - i[0][1] * i[1][0];
                j.lineScale_ = D(n(H))
            }
        }
        l.translate = function(m, j) {
            var i = [[1, 0, 0], [0, 1, 0], [m, j, 1]];
            B(this, d(i, this.m_), false)
        }
        ;
        l.rotate = function(j) {
            var G = E(j);
            var m = s(j);
            var i = [[G, m, 0], [-m, G, 0], [0, 0, 1]];
            B(this, d(i, this.m_), false)
        }
        ;
        l.scale = function(m, j) {
            this.arcScaleX_ *= m;
            this.arcScaleY_ *= j;
            var i = [[m, 0, 0], [0, j, 0], [0, 0, 1]];
            B(this, d(i, this.m_), true)
        }
        ;
        l.transform = function(H, G, J, I, j, i) {
            var m = [[H, G, 0], [J, I, 0], [j, i, 1]];
            B(this, d(m, this.m_), true)
        }
        ;
        l.setTransform = function(I, H, K, J, G, j) {
            var i = [[I, H, 0], [K, J, 0], [G, j, 1]];
            B(this, i, true)
        }
        ;
        l.clip = function() {}
        ;
        l.arcTo = function() {}
        ;
        l.createPattern = function() {
            return new f
        }
        ;
        function A(i) {
            this.type_ = i;
            this.x0_ = 0;
            this.y0_ = 0;
            this.r0_ = 0;
            this.x1_ = 0;
            this.y1_ = 0;
            this.r1_ = 0;
            this.colors_ = []
        }
        A.prototype.addColorStop = function(j, i) {
            i = c(i);
            this.colors_.push({
                offset: j,
                color: i.color,
                alpha: i.alpha
            })
        }
        ;
        function f() {}
        G_vmlCanvasManager = k;
        CanvasRenderingContext2D = q;
        CanvasGradient = A;
        CanvasPattern = f
    }
    )()
}
;(function(a) {
    a.easyPieChart = function(d, l) {
        var f, g, i, j, c, k, e, b, h = this;
        this.el = d;
        this.$el = a(d);
        this.$el.data("easyPieChart", this);
        this.init = function() {
            var n, m;
            h.options = a.extend({}, a.easyPieChart.defaultOptions, l);
            n = parseInt(h.$el.data("percent"), 10);
            h.percentage = 0;
            h.canvas = a("<canvas width='" + h.options.size + "' height='" + h.options.size + "'></canvas>").get(0);
            h.$el.append(h.canvas);
            if (typeof G_vmlCanvasManager !== "undefined" && G_vmlCanvasManager !== null) {
                G_vmlCanvasManager.initElement(h.canvas)
            }
            h.ctx = h.canvas.getContext("2d");
            if (window.devicePixelRatio > 1) {
                m = window.devicePixelRatio;
                a(h.canvas).css({
                    width: h.options.size,
                    height: h.options.size
                });
                h.canvas.width *= m;
                h.canvas.height *= m;
                h.ctx.scale(m, m)
            }
            h.ctx.translate(h.options.size / 2, h.options.size / 2);
            h.ctx.rotate(h.options.rotate * Math.PI / 180);
            h.$el.addClass("easyPieChart");
            h.$el.css({
                width: h.options.size,
                height: h.options.size,
                lineHeight: "" + h.options.size + "px"
            });
            h.update(n);
            return h
        }
        ;
        this.update = function(m) {
            m = parseFloat(m) || 0;
            if (h.options.animate === false) {
                i(m)
            } else {
                if (h.options.delay) {
                    g(h.percentage, 0);
                    setTimeout(function() {
                        return g(h.percentage, m)
                    }, h.options.delay)
                } else {
                    g(h.percentage, m)
                }
            }
            return h
        }
        ;
        e = function() {
            var n, o, m;
            h.ctx.fillStyle = h.options.scaleColor;
            h.ctx.lineWidth = 1;
            m = [];
            for (n = o = 0; o <= 24; n = ++o) {
                m.push(f(n))
            }
            return m
        }
        ;
        f = function(m) {
            var n;
            n = m % 6 === 0 ? 0 : h.options.size * 0.017;
            h.ctx.save();
            h.ctx.rotate(m * Math.PI / 12);
            h.ctx.fillRect(h.options.size / 2 - n, 0, -h.options.size * 0.05 + n, 1);
            h.ctx.restore()
        }
        ;
        b = function() {
            var m;
            m = h.options.size / 2 - h.options.lineWidth / 2;
            if (h.options.scaleColor !== false) {
                m -= h.options.size * 0.08
            }
            h.ctx.beginPath();
            h.ctx.arc(0, 0, m, 0, Math.PI * 2, true);
            h.ctx.closePath();
            h.ctx.strokeStyle = h.options.trackColor;
            h.ctx.lineWidth = h.options.lineWidth;
            h.ctx.stroke()
        }
        ;
        k = function() {
            if (h.options.scaleColor !== false) {
                e()
            }
            if (h.options.trackColor !== false) {
                b()
            }
        }
        ;
        i = function(m) {
            var n;
            k();
            h.ctx.strokeStyle = a.isFunction(h.options.barColor) ? h.options.barColor(m) : h.options.barColor;
            h.ctx.lineCap = h.options.lineCap;
            h.ctx.lineWidth = h.options.lineWidth;
            n = h.options.size / 2 - h.options.lineWidth / 2;
            if (h.options.scaleColor !== false) {
                n -= h.options.size * 0.08
            }
            h.ctx.save();
            h.ctx.rotate(-Math.PI / 2);
            h.ctx.beginPath();
            h.ctx.arc(0, 0, n, 0, Math.PI * 2 * m / 100, false);
            h.ctx.stroke();
            h.ctx.restore()
        }
        ;
        c = (function() {
            return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(m) {
                return window.setTimeout(m, 1000 / 60)
            }
        }
        )();
        g = function(p, o) {
            var n, m;
            h.options.onStart.call(h);
            h.percentage = o;
            Date.now || (Date.now = function() {
                return +(new Date)
            }
            );
            m = Date.now();
            n = function() {
                var q, r;
                r = Math.min(Date.now() - m, h.options.animate);
                h.ctx.clearRect(-h.options.size / 2, -h.options.size / 2, h.options.size, h.options.size);
                k.call(h);
                q = [j(r, p, o - p, h.options.animate)];
                h.options.onStep.call(h, q);
                i.call(h, q);
                if (r >= h.options.animate) {
                    return h.options.onStop.call(h, q, o)
                } else {
                    return c(n)
                }
            }
            ;
            c(n)
        }
        ;
        j = function(o, n, r, p) {
            var m, q;
            m = function(s) {
                return Math.pow(s, 2)
            }
            ;
            q = function(s) {
                if (s < 1) {
                    return m(s)
                } else {
                    return 2 - m((s / 2) * -2 + 2)
                }
            }
            ;
            o /= p / 2;
            return r / 2 * q(o) + n
        }
        ;
        return this.init()
    }
    ;
    a.easyPieChart.defaultOptions = {
        barColor: "#ef1e25",
        trackColor: "#f2f2f2",
        scaleColor: "#dfe0e0",
        lineCap: "round",
        rotate: 0,
        size: 44,
        lineWidth: 2,
        animate: false,
        delay: false,
        onStart: a.noop,
        onStop: a.noop,
        onStep: a.noop
    };
    a.fn.easyPieChart = function(b) {
        return a.each(this, function(d, e) {
            var c, f;
            c = a(e);
            if (!c.data("easyPieChart")) {
                f = a.extend({}, b, c.data());
                return c.data("easyPieChart", new a.easyPieChart(e,f))
            }
        })
    }
    ;
    return void 0
}
)(jQuery);
var superTable = function(tableId, options) {
    options = options || {};
    this.cssSkin = options.cssSkin || "";
    this.headerRows = parseInt(options.headerRows || "1");
    this.fixedCols = parseInt(options.fixedCols || "0");
    this.colWidths = options.colWidths || [];
    this.initFunc = options.onStart || null;
    this.callbackFunc = options.onFinish || null;
    this.initFunc && this.initFunc();
    this.sBase = document.createElement("DIV");
    this.sFHeader = this.sBase.cloneNode(false);
    this.sHeader = this.sBase.cloneNode(false);
    this.sHeaderInner = this.sBase.cloneNode(false);
    this.sFData = this.sBase.cloneNode(false);
    this.sFDataInner = this.sBase.cloneNode(false);
    this.sData = this.sBase.cloneNode(false);
    this.sColGroup = document.createElement("COLGROUP");
    this.sDataTable = document.getElementById(tableId);
    this.sDataTable.style.margin = "0px";
    if (this.cssSkin !== "") {
        this.sDataTable.className += " " + this.cssSkin
    }
    if (this.sDataTable.getElementsByTagName("COLGROUP").length > 0) {
        this.sDataTable.removeChild(this.sDataTable.getElementsByTagName("COLGROUP")[0])
    }
    this.sParent = this.sDataTable.parentNode;
    this.sParentHeight = this.sParent.offsetHeight;
    this.sParentWidth = this.sParent.offsetWidth;
    this.sBase.className = "sBase";
    this.sFHeader.className = "sFHeader";
    this.sHeader.className = "sHeader";
    this.sHeaderInner.className = "sHeaderInner";
    this.sFData.className = "sFData";
    this.sFDataInner.className = "sFDataInner";
    this.sData.className = "sData";
    var alpha, beta, touched, clean, cleanRow, i, j, k, m, n, p;
    this.sHeaderTable = this.sDataTable.cloneNode(false);
    if (this.sDataTable.tHead) {
        alpha = this.sDataTable.tHead;
        this.sHeaderTable.appendChild(alpha.cloneNode(false));
        beta = this.sHeaderTable.tHead
    } else {
        alpha = this.sDataTable.tBodies[0];
        this.sHeaderTable.appendChild(alpha.cloneNode(false));
        beta = this.sHeaderTable.tBodies[0]
    }
    alpha = alpha.rows;
    for (i = 0; i < this.headerRows; i++) {
        beta.appendChild(alpha[i].cloneNode(true))
    }
    this.sHeaderInner.appendChild(this.sHeaderTable);
    if (this.fixedCols > 0) {
        this.sFHeaderTable = this.sHeaderTable.cloneNode(true);
        this.sFHeader.appendChild(this.sFHeaderTable);
        this.sFDataTable = this.sDataTable.cloneNode(true);
        this.sFDataInner.appendChild(this.sFDataTable)
    }
    alpha = this.sDataTable.tBodies[0].rows;
    for (i = 0,
    j = alpha.length; i < j; i++) {
        clean = true;
        for (k = 0,
        m = alpha[i].cells.length; k < m; k++) {
            if (alpha[i].cells[k].colSpan !== 1 || alpha[i].cells[k].rowSpan !== 1) {
                i += alpha[i].cells[k].rowSpan - 1;
                clean = false;
                break
            }
        }
        if (clean === true) {
            break
        }
    }
    cleanRow = (clean === true) ? i : 0;
    for (i = 0,
    j = alpha[cleanRow].cells.length; i < j; i++) {
        if (i === this.colWidths.length || this.colWidths[i] === -1) {
            this.colWidths[i] = alpha[cleanRow].cells[i].offsetWidth
        }
    }
    for (i = 0,
    j = this.colWidths.length; i < j; i++) {
        this.sColGroup.appendChild(document.createElement("COL"));
        this.sColGroup.lastChild.setAttribute("width", this.colWidths[i])
    }
    this.sDataTable.insertBefore(this.sColGroup.cloneNode(true), this.sDataTable.firstChild);
    this.sHeaderTable.insertBefore(this.sColGroup.cloneNode(true), this.sHeaderTable.firstChild);
    if (this.fixedCols > 0) {
        this.sFDataTable.insertBefore(this.sColGroup.cloneNode(true), this.sFDataTable.firstChild);
        this.sFHeaderTable.insertBefore(this.sColGroup.cloneNode(true), this.sFHeaderTable.firstChild)
    }
    if (this.cssSkin !== "") {
        this.sDataTable.className += " " + this.cssSkin + "-Main";
        this.sHeaderTable.className += " " + this.cssSkin + "-Headers";
        if (this.fixedCols > 0) {
            this.sFDataTable.className += " " + this.cssSkin + "-Fixed";
            this.sFHeaderTable.className += " " + this.cssSkin + "-FixedHeaders"
        }
    }
    if (this.fixedCols > 0) {
        this.sBase.appendChild(this.sFHeader)
    }
    this.sHeader.appendChild(this.sHeaderInner);
    this.sBase.appendChild(this.sHeader);
    if (this.fixedCols > 0) {
        this.sFData.appendChild(this.sFDataInner);
        this.sBase.appendChild(this.sFData)
    }
    this.sBase.appendChild(this.sData);
    this.sParent.insertBefore(this.sBase, this.sDataTable);
    this.sData.appendChild(this.sDataTable);
    var sDataStyles, sDataTableStyles;
    this.sHeaderHeight = this.sDataTable.tBodies[0].rows[(this.sDataTable.tHead) ? 0 : this.headerRows].offsetTop;
    sDataTableStyles = "margin-top: " + (this.sHeaderHeight * -1) + "px;";
    sDataStyles = "margin-top: " + this.sHeaderHeight + "px;";
    sDataStyles += "height: " + (this.sParentHeight - this.sHeaderHeight) + "px;";
    if (this.fixedCols > 0) {
        this.sFHeaderWidth = this.sDataTable.tBodies[0].rows[cleanRow].cells[this.fixedCols].offsetLeft;
        if (window.getComputedStyle) {
            alpha = document.defaultView;
            beta = this.sDataTable.tBodies[0].rows[0].cells[0];
            if (navigator.taintEnabled) {
                this.sFHeaderWidth += Math.ceil(parseInt(alpha.getComputedStyle(beta, null).getPropertyValue("border-right-width")) / 2)
            } else {
                this.sFHeaderWidth += parseInt(alpha.getComputedStyle(beta, null).getPropertyValue("border-right-width"))
            }
        } else {
            if (/*@cc_on!@*/
            0) {
                alpha = this.sDataTable.tBodies[0].rows[0].cells[0];
                beta = [alpha.currentStyle.borderRightWidth, alpha.currentStyle.borderLeftWidth];
                if (/px/i.test(beta[0]) && /px/i.test(beta[1])) {
                    beta = [parseInt(beta[0]), parseInt(beta[1])].sort();
                    this.sFHeaderWidth += Math.ceil(parseInt(beta[1]) / 2)
                }
            }
        }
        if (window.opera) {
            this.sFData.style.height = this.sParentHeight + "px"
        }
        this.sFHeader.style.width = this.sFHeaderWidth + "px";
        sDataTableStyles += "margin-left: " + (this.sFHeaderWidth * -1) + "px;";
        sDataStyles += "margin-left: " + this.sFHeaderWidth + "px;";
        sDataStyles += "width: " + (this.sParentWidth - this.sFHeaderWidth) + "px;"
    } else {
        sDataStyles += "width: " + this.sParentWidth + "px;"
    }
    this.sData.style.cssText = sDataStyles;
    this.sDataTable.style.cssText = sDataTableStyles;
    (function(st) {
        if (st.fixedCols > 0) {
            st.sData.onscroll = function() {
                st.sHeaderInner.style.right = st.sData.scrollLeft + "px";
                st.sFDataInner.style.top = (st.sData.scrollTop * -1) + "px"
            }
        } else {
            st.sData.onscroll = function() {
                st.sHeaderInner.style.right = st.sData.scrollLeft + "px"
            }
        }
        if (/*@cc_on!@*/
        0) {
            window.attachEvent("onunload", function() {
                st.sData.onscroll = null;
                st = null
            })
        }
    }
    )(this);
    this.callbackFunc && this.callbackFunc()
};
var intListCountLimit = 5;
var intCtr = 0;
var intTotalListCount;
function ShowScroll() {
    intTotalListCount = jQuery(".curmdCnt ul li").length;
    if (jQuery(".curmdCnt ul li").length > intListCountLimit) {
        for (var a = intListCountLimit; a <= intTotalListCount; a++) {
            jQuery(".curmdCnt ul li").eq(a).hide()
        }
        jQuery(".button_class").css("display", "block")
    } else {
        jQuery(".button_class").css("display", "none")
    }
}
function BackButton() {
    if (intCtr > 0) {
        intCtr--;
        intListCountLimit--;
        jQuery(".curmdCnt ul li").eq(intCtr).show();
        jQuery(".curmdCnt ul li").eq(intListCountLimit).hide()
    }
}
function NextButton() {
    if (intListCountLimit < intTotalListCount) {
        intCtr++;
        intListCountLimit++;
        jQuery(".curmdCnt ul li").eq(intCtr - 1).hide();
        jQuery(".curmdCnt ul li").eq(intListCountLimit - 1).show()
    }
}
;(function(a) {
    a.fn.extend({
        spinit: function(b) {
            var c = a.extend({
                min: 0,
                max: 100,
                initValue: 0,
                callback: null,
                stepInc: 1,
                pageInc: 10,
                width: 50,
                height: 15,
                btnWidth: 10,
                mask: ""
            }, b);
            return this.each(function() {
                var t = 38;
                var p = 40;
                var j = 33;
                var i = 34;
                var l = false;
                var q = false;
                var f;
                var o = "none";
                var s = false;
                var r = Math.max(c.initValue, c.min);
                var e = a(this).val(r).css("width", (c.width) + "px").css("height", c.height + "px").addClass("smartspinner");
                k(r);
                if (c.mask != "") {
                    e.val(c.mask)
                }
                a.fn.reset = function(u) {
                    if (isNaN(u)) {
                        u = 0
                    }
                    r = Math.max(u, c.min);
                    a(this).val(r);
                    k(r)
                }
                ;
                function d(u) {
                    o = u;
                    s = false;
                    switch (u) {
                    case "up":
                        n("up");
                        break;
                    case "down":
                        n("down");
                        break;
                    case "pup":
                        s = true;
                        n("up");
                        break;
                    case "pdown":
                        s = true;
                        n("down");
                        break;
                    case "none":
                        n("");
                        break
                    }
                }
                e.focusin(function() {
                    e.val(r)
                });
                e.click(function(u) {
                    l = true;
                    s = false;
                    clearInterval(f);
                    g()
                });
                e.mouseenter(function(u) {
                    e.val(r)
                });
                e.mousemove(function(u) {
                    if (u.pageX > (e.offset().left + c.width) - c.btnWidth - 4) {
                        if (u.pageY < e.offset().top + c.height / 2) {
                            d("up")
                        } else {
                            d("down")
                        }
                    } else {
                        d("none")
                    }
                });
                e.mousedown(function(u) {
                    s = false;
                    clearInterval(f);
                    f = setInterval(g, 100)
                });
                e.mouseup(function(u) {
                    l = false;
                    s = false;
                    clearInterval(f)
                });
                e.mouseleave(function(u) {
                    d("none");
                    if (c.mask != "") {
                        e.val(c.mask)
                    }
                });
                e.keydown(function(u) {
                    switch (u.which) {
                    case t:
                        d("up");
                        g();
                        break;
                    case p:
                        d("down");
                        g();
                        break;
                    case j:
                        d("pup");
                        g();
                        break;
                    case i:
                        d("pdown");
                        g();
                        break;
                    default:
                        d("none");
                        break
                    }
                });
                e.keyup(function(u) {
                    d("none")
                });
                e.keypress(function(w) {
                    if (e.val() == c.mask) {
                        e.val(r)
                    }
                    var v = m();
                    if (v != "") {
                        v = e.val().replace(v, "");
                        e.val(v)
                    }
                    if (w.which >= 48 && w.which <= 57) {
                        var u = parseFloat(e.val() + (w.which - 48));
                        if (u >= c.min && u <= c.max) {
                            r = u;
                            k(r)
                        } else {
                            w.preventDefault()
                        }
                    }
                });
                e.blur(function() {
                    if (c.mask == "") {
                        if (e.val() == "") {
                            e.val(c.min)
                        }
                    } else {
                        e.val(c.mask)
                    }
                });
                e.bind("mousewheel", function(u) {
                    if (u.wheelDelta >= 120) {
                        d("down");
                        g()
                    } else {
                        if (u.wheelDelta <= -120) {
                            d("up");
                            g()
                        }
                    }
                    u.preventDefault()
                });
                if (this.addEventListener) {
                    this.addEventListener("DOMMouseScroll", function(u) {
                        if (u.detail > 0) {
                            d("down");
                            g()
                        } else {
                            if (u.detail < 0) {
                                d("up");
                                g()
                            }
                        }
                        u.preventDefault()
                    }, false)
                }
                function k(u) {
                    if (c.callback != null) {
                        c.callback(u)
                    }
                }
                function m() {
                    var v = e.get(0).selectionStart;
                    var u = e.get(0).selectionEnd;
                    var w = document.selection;
                    if (w && w.createRange().text.length != 0) {
                        return w.createRange().text
                    } else {
                        if (!w && e.val().substring(v, u).length != 0) {
                            return e.val().substring(v, u)
                        }
                    }
                    return ""
                }
                function h(v, u) {
                    if (v >= c.min && v <= c.max) {
                        r = u
                    }
                    e.val(r)
                }
                function g() {
                    if (o == "up") {
                        r += c.stepInc;
                        if (r > c.max) {
                            r = c.max
                        }
                        h(parseFloat(e.val()), r)
                    }
                    if (o == "down") {
                        r -= c.stepInc;
                        if (r < c.min) {
                            r = c.min
                        }
                        h(parseFloat(e.val()), r)
                    }
                    if (o == "pup") {
                        r += c.pageInc;
                        if (r > c.max) {
                            r = c.max
                        }
                        h(parseFloat(e.val()), r)
                    }
                    if (o == "pdown") {
                        r -= c.pageInc;
                        if (r < c.min) {
                            r = c.min
                        }
                        h(parseFloat(e.val()), r)
                    }
                    k(r)
                }
                function n(u) {
                    e.removeClass("up").removeClass("down");
                    if (u != "") {
                        e.addClass(u)
                    }
                }
            })
        }
    })
}
)(jQuery);
/*! ****************************************************************************
	jquery.dynatree.js
	Dynamic tree view control, with support for lazy loading of branches.

	Copyright (c) 2006-2013, Martin Wendt (http://wwWendt.de)
	Dual licensed under the MIT or GPL Version 2 licenses.
	http://code.google.com/p/dynatree/wiki/LicenseInfo

	A current version and some documentation is available at
		http://dynatree.googlecode.com/

	@version: DEVELOPMENT
	@date:    DEVELOPMENT

	@depends: jquery.js
	@depends: jquery.ui.core.js
	@depends: jquery.cookie.js
*******************************************************************************/
var _canLog = false;
function _log(g, f) {
    if (!_canLog) {
        return
    }
    var b = Array.prototype.slice.apply(arguments, [1]);
    var c = new Date();
    var a = c.getHours() + ":" + c.getMinutes() + ":" + c.getSeconds() + "." + c.getMilliseconds();
    b[0] = a + " - " + b[0];
    try {
        switch (g) {
        case "info":
            window.console.info.apply(window.console, b);
            break;
        case "warn":
            window.console.warn.apply(window.console, b);
            break;
        default:
            window.console.log.apply(window.console, b);
            break
        }
    } catch (d) {
        if (!window.console) {
            _canLog = false
        } else {
            if (d.number === -2146827850) {
                window.console.log(b.join(", "))
            }
        }
    }
}
function logMsg(a) {
    Array.prototype.unshift.apply(arguments, ["debug"]);
    _log.apply(this, arguments)
}
var getDynaTreePersistData = null;
var DTNodeStatus_Error = -1;
var DTNodeStatus_Loading = 1;
var DTNodeStatus_Ok = 0;
(function($) {
    var Class = {
        create: function() {
            return function() {
                this.initialize.apply(this, arguments)
            }
        }
    };
    function getDtNodeFromElement(el) {
        alert("getDtNodeFromElement is deprecated");
        return $.ui.dynatree.getNode(el)
    }
    function noop() {}
    function offsetString(n) {
        return n === 0 ? "" : ((n > 0) ? ("+" + n) : ("" + n))
    }
    function _checkBrowser() {
        var matched, browser;
        function uaMatch(ua) {
            ua = ua.toLowerCase();
            var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
            return {
                browser: match[1] || "",
                version: match[2] || "0"
            }
        }
        matched = uaMatch(navigator.userAgent);
        browser = {};
        if (matched.browser) {
            browser[matched.browser] = true;
            browser.version = matched.version
        }
        if (browser.chrome) {
            browser.webkit = true
        } else {
            if (browser.webkit) {
                browser.safari = true
            }
        }
        return browser
    }
    function versionCompare(v1, v2) {
        var v1parts = ("" + v1).split("."), v2parts = ("" + v2).split("."), minLength = Math.min(v1parts.length, v2parts.length), p1, p2, i;
        for (i = 0; i < minLength; i++) {
            p1 = parseInt(v1parts[i], 10);
            p2 = parseInt(v2parts[i], 10);
            if (isNaN(p1)) {
                p1 = v1parts[i]
            }
            if (isNaN(p2)) {
                p2 = v2parts[i]
            }
            if (p1 == p2) {
                continue
            } else {
                if (p1 > p2) {
                    return 1
                } else {
                    if (p1 < p2) {
                        return -1
                    }
                }
            }
            return NaN
        }
        if (v1parts.length === v2parts.length) {
            return 0
        }
        return (v1parts.length < v2parts.length) ? -1 : 1
    }
    var BROWSER = _checkBrowser();
    var jquerySupports = {
        positionMyOfs: versionCompare($.ui.version, "1.9") >= 0
    };
    var DynaTreeNode = Class.create();
    DynaTreeNode.prototype = {
        initialize: function(parent, tree, data) {
            this.parent = parent;
            this.tree = tree;
            if (typeof data === "string") {
                data = {
                    title: data
                }
            }
            if (data.key == null) {
                data.key = "_" + tree._nodeCount++
            } else {
                data.key = "" + data.key
            }
            this.data = $.extend({}, $.ui.dynatree.nodedatadefaults, data);
            this.li = null;
            this.span = null;
            this.ul = null;
            this.childList = null;
            this._isLoading = false;
            this.hasSubSel = false;
            this.bExpanded = false;
            this.bSelected = false
        },
        toString: function() {
            return "DynaTreeNode<" + this.data.key + ">: '" + this.data.title + "'"
        },
        toDict: function(recursive, callback) {
            var node, dict = $.extend({}, this.data);
            dict.activate = (this.tree.activeNode === this);
            dict.focus = (this.tree.focusNode === this);
            dict.expand = this.bExpanded;
            dict.select = this.bSelected;
            if (callback) {
                callback(dict)
            }
            if (recursive && this.childList) {
                dict.children = [];
                for (var i = 0, l = this.childList.length; i < l; i++) {
                    node = this.childList[i];
                    if (!node.isStatusNode()) {
                        dict.children.push(node.toDict(true, callback))
                    }
                }
            } else {
                delete dict.children
            }
            return dict
        },
        fromDict: function(dict) {
            var children = dict.children;
            if (children === undefined) {
                this.data = $.extend(this.data, dict);
                this.render();
                return
            }
            dict = $.extend({}, dict);
            dict.children = undefined;
            this.data = $.extend(this.data, dict);
            this.removeChildren();
            this.addChild(children)
        },
        _getInnerHtml: function() {
            var tree = this.tree, opts = tree.options, cache = tree.cache, level = this.getLevel(), data = this.data, res = "", imageSrc;
            if (level < opts.minExpandLevel) {
                if (level > 1) {
                    res += cache.tagConnector
                }
            } else {
                if (this.hasChildren() !== false) {
                    res += cache.tagExpander
                } else {
                    res += cache.tagConnector
                }
            }
            if (opts.checkbox && data.hideCheckbox !== true && !data.isStatusNode) {
                res += cache.tagCheckbox
            }
            if (data.icon) {
                if (data.icon.charAt(0) === "/") {
                    imageSrc = data.icon
                } else {
                    imageSrc = opts.imagePath + data.icon
                }
                res += "<img src='" + imageSrc + "' alt='' />"
            } else {
                if (data.icon === false) {} else {
                    if (data.iconClass) {
                        res += "<span class=' " + data.iconClass + "'></span>"
                    } else {
                        res += cache.tagNodeIcon
                    }
                }
            }
            var nodeTitle = "";
            if (opts.onCustomRender) {
                nodeTitle = opts.onCustomRender.call(tree, this) || ""
            }
            if (!nodeTitle) {
                var tooltip = data.tooltip ? ' title="' + data.tooltip.replace(/\"/g, "&quot;") + '"' : ""
                  , href = data.href || "#";
                if (opts.noLink || data.noLink) {
                    nodeTitle = '<span style="display:inline-block;" class="' + opts.classNames.title + '"' + tooltip + ">" + data.title + "</span>"
                } else {
                    nodeTitle = '<a href="' + href + '" class="' + opts.classNames.title + '"' + tooltip + ">" + data.title + "</a>"
                }
            }
            res += nodeTitle;
            return res
        },
        _fixOrder: function() {
            var cl = this.childList;
            if (!cl || !this.ul) {
                return
            }
            var childLI = this.ul.firstChild;
            for (var i = 0, l = cl.length - 1; i < l; i++) {
                var childNode1 = cl[i];
                var childNode2 = childLI.dtnode;
                if (childNode1 !== childNode2) {
                    this.tree.logDebug("_fixOrder: mismatch at index " + i + ": " + childNode1 + " != " + childNode2);
                    this.ul.insertBefore(childNode1.li, childNode2.li)
                } else {
                    childLI = childLI.nextSibling
                }
            }
        },
        render: function(useEffects, includeInvisible) {
            var tree = this.tree
              , parent = this.parent
              , data = this.data
              , opts = tree.options
              , cn = opts.classNames
              , isLastSib = this.isLastSibling()
              , firstTime = false;
            if (!parent && !this.ul) {
                this.li = this.span = null;
                this.ul = document.createElement("ul");
                if (opts.minExpandLevel > 1) {
                    this.ul.className = cn.container + " " + cn.noConnector
                } else {
                    this.ul.className = cn.container
                }
            } else {
                if (parent) {
                    if (!this.li) {
                        firstTime = true;
                        this.li = document.createElement("li");
                        this.li.dtnode = this;
                        if (data.key && opts.generateIds) {
                            this.li.id = opts.idPrefix + data.key
                        }
                        this.span = document.createElement("span");
                        this.span.className = cn.title;
                        this.li.appendChild(this.span);
                        if (!parent.ul) {
                            parent.ul = document.createElement("ul");
                            parent.ul.style.display = "none";
                            parent.li.appendChild(parent.ul)
                        }
                        parent.ul.appendChild(this.li)
                    }
                    this.span.innerHTML = this._getInnerHtml();
                    var cnList = [];
                    cnList.push(cn.node);
                    if (data.isFolder) {
                        cnList.push(cn.folder)
                    }
                    if (this.bExpanded) {
                        cnList.push(cn.expanded)
                    }
                    if (this.hasChildren() !== false) {
                        cnList.push(cn.hasChildren)
                    }
                    if (data.isLazy && this.childList === null) {
                        cnList.push(cn.lazy)
                    }
                    if (isLastSib) {
                        cnList.push(cn.lastsib)
                    }
                    if (this.bSelected) {
                        cnList.push(cn.selected)
                    }
                    if (this.hasSubSel) {
                        cnList.push(cn.partsel)
                    }
                    if (tree.activeNode === this) {
                        cnList.push(cn.active)
                    }
                    if (data.addClass) {
                        cnList.push(data.addClass)
                    }
                    cnList.push(cn.combinedExpanderPrefix + (this.bExpanded ? "e" : "c") + (data.isLazy && this.childList === null ? "d" : "") + (isLastSib ? "l" : ""));
                    cnList.push(cn.combinedIconPrefix + (this.bExpanded ? "e" : "c") + (data.isFolder ? "f" : ""));
                    this.span.className = cnList.join(" ");
                    this.li.className = isLastSib ? cn.lastsib : "";
                    if (firstTime && opts.onCreate) {
                        opts.onCreate.call(tree, this, this.span)
                    }
                    if (opts.onRender) {
                        opts.onRender.call(tree, this, this.span)
                    }
                }
            }
            if ((this.bExpanded || includeInvisible === true) && this.childList) {
                for (var i = 0, l = this.childList.length; i < l; i++) {
                    this.childList[i].render(false, includeInvisible)
                }
                this._fixOrder()
            }
            if (this.ul) {
                var isHidden = (this.ul.style.display === "none");
                var isExpanded = !!this.bExpanded;
                if (useEffects && opts.fx && (isHidden === isExpanded)) {
                    var duration = opts.fx.duration || 200;
                    $(this.ul).animate(opts.fx, duration)
                } else {
                    this.ul.style.display = (this.bExpanded || !parent) ? "" : "none"
                }
            }
        },
        getKeyPath: function(excludeSelf) {
            var path = [];
            this.visitParents(function(node) {
                if (node.parent) {
                    path.unshift(node.data.key)
                }
            }, !excludeSelf);
            return "/" + path.join(this.tree.options.keyPathSeparator)
        },
        getParent: function() {
            return this.parent
        },
        getChildren: function() {
            if (this.hasChildren() === undefined) {
                return undefined
            }
            return this.childList
        },
        hasChildren: function() {
            if (this.data.isLazy) {
                if (this.childList === null || this.childList === undefined) {
                    return undefined
                } else {
                    if (this.childList.length === 0) {
                        return false
                    } else {
                        if (this.childList.length === 1 && this.childList[0].isStatusNode()) {
                            return undefined
                        }
                    }
                }
                return true
            }
            return !!this.childList
        },
        isFirstSibling: function() {
            var p = this.parent;
            return !p || p.childList[0] === this
        },
        isLastSibling: function() {
            var p = this.parent;
            return !p || p.childList[p.childList.length - 1] === this
        },
        isLoading: function() {
            return !!this._isLoading
        },
        getPrevSibling: function() {
            if (!this.parent) {
                return null
            }
            var ac = this.parent.childList;
            for (var i = 1, l = ac.length; i < l; i++) {
                if (ac[i] === this) {
                    return ac[i - 1]
                }
            }
            return null
        },
        getNextSibling: function() {
            if (!this.parent) {
                return null
            }
            var ac = this.parent.childList;
            for (var i = 0, l = ac.length - 1; i < l; i++) {
                if (ac[i] === this) {
                    return ac[i + 1]
                }
            }
            return null
        },
        isStatusNode: function() {
            return (this.data.isStatusNode === true)
        },
        isChildOf: function(otherNode) {
            return (this.parent && this.parent === otherNode)
        },
        isDescendantOf: function(otherNode) {
            if (!otherNode) {
                return false
            }
            var p = this.parent;
            while (p) {
                if (p === otherNode) {
                    return true
                }
                p = p.parent
            }
            return false
        },
        countChildren: function() {
            var cl = this.childList;
            if (!cl) {
                return 0
            }
            var n = cl.length;
            for (var i = 0, l = n; i < l; i++) {
                var child = cl[i];
                n += child.countChildren()
            }
            return n
        },
        sortChildren: function(cmp, deep) {
            var cl = this.childList;
            if (!cl) {
                return
            }
            cmp = cmp || function(a, b) {
                var x = a.data.title.toLowerCase()
                  , y = b.data.title.toLowerCase();
                return x === y ? 0 : x > y ? 1 : -1
            }
            ;
            cl.sort(cmp);
            if (deep) {
                for (var i = 0, l = cl.length; i < l; i++) {
                    if (cl[i].childList) {
                        cl[i].sortChildren(cmp, "$norender$")
                    }
                }
            }
            if (deep !== "$norender$") {
                this.render()
            }
        },
        _setStatusNode: function(data) {
            var firstChild = (this.childList ? this.childList[0] : null);
            if (!data) {
                if (firstChild && firstChild.isStatusNode()) {
                    try {
                        if (this.ul) {
                            this.ul.removeChild(firstChild.li);
                            firstChild.li = null
                        }
                    } catch (e) {}
                    if (this.childList.length === 1) {
                        this.childList = []
                    } else {
                        this.childList.shift()
                    }
                }
            } else {
                if (firstChild) {
                    data.isStatusNode = true;
                    data.key = "_statusNode";
                    firstChild.data = data;
                    firstChild.render()
                } else {
                    data.isStatusNode = true;
                    data.key = "_statusNode";
                    firstChild = this.addChild(data)
                }
            }
        },
        setLazyNodeStatus: function(lts, opts) {
            var tooltip = (opts && opts.tooltip) ? opts.tooltip : null
              , info = (opts && opts.info) ? " (" + opts.info + ")" : "";
            switch (lts) {
            case DTNodeStatus_Ok:
                this._setStatusNode(null);
                $(this.span).removeClass(this.tree.options.classNames.nodeLoading);
                this._isLoading = false;
                if (this.tree.options.autoFocus) {
                    if (this === this.tree.tnRoot && this.childList && this.childList.length > 0) {
                        this.childList[0].focus()
                    } else {
                        this.focus()
                    }
                }
                break;
            case DTNodeStatus_Loading:
                this._isLoading = true;
                $(this.span).addClass(this.tree.options.classNames.nodeLoading);
                if (!this.parent) {
                    this._setStatusNode({
                        title: this.tree.options.strings.loading + info,
                        tooltip: tooltip,
                        addClass: this.tree.options.classNames.nodeWait
                    })
                }
                break;
            case DTNodeStatus_Error:
                this._isLoading = false;
                this._setStatusNode({
                    title: this.tree.options.strings.loadError + info,
                    tooltip: tooltip,
                    addClass: this.tree.options.classNames.nodeError
                });
                break;
            default:
                throw "Bad LazyNodeStatus: '" + lts + "'."
            }
        },
        _parentList: function(includeRoot, includeSelf) {
            var l = [];
            var dtn = includeSelf ? this : this.parent;
            while (dtn) {
                if (includeRoot || dtn.parent) {
                    l.unshift(dtn)
                }
                dtn = dtn.parent
            }
            return l
        },
        getLevel: function() {
            var level = 0;
            var dtn = this.parent;
            while (dtn) {
                level++;
                dtn = dtn.parent
            }
            return level
        },
        _getTypeForOuterNodeEvent: function(event) {
            var cns = this.tree.options.classNames;
            var target = event.target;
            if (target.className.indexOf(cns.node) < 0) {
                return null
            }
            var eventX = event.pageX - target.offsetLeft;
            var eventY = event.pageY - target.offsetTop;
            for (var i = 0, l = target.childNodes.length; i < l; i++) {
                var cn = target.childNodes[i];
                var x = cn.offsetLeft - target.offsetLeft;
                var y = cn.offsetTop - target.offsetTop;
                var nx = cn.clientWidth
                  , ny = cn.clientHeight;
                if (eventX >= x && eventX <= (x + nx) && eventY >= y && eventY <= (y + ny)) {
                    if (cn.className == cns.title) {
                        return "title"
                    } else {
                        if (cn.className == cns.expander) {
                            return "expander"
                        } else {
                            if (cn.className == cns.checkbox) {
                                return "checkbox"
                            } else {
                                if (cn.className == cns.nodeIcon) {
                                    return "icon"
                                }
                            }
                        }
                    }
                }
            }
            return "prefix"
        },
        getEventTargetType: function(event) {
            var tcn = event && event.target ? event.target.className : ""
              , cns = this.tree.options.classNames;
            if (tcn.indexOf(cns.title) >= 0) {
                return "title"
            } else {
                if (tcn.indexOf(cns.expander) >= 0) {
                    return "expander"
                } else {
                    if (tcn.indexOf(cns.checkbox) >= 0) {
                        return "checkbox"
                    } else {
                        if (tcn.indexOf(cns.nodeIcon) >= 0) {
                            return "icon"
                        } else {
                            if (tcn.indexOf(cns.empty) >= 0 || tcn.indexOf(cns.vline) >= 0 || tcn.indexOf(cns.connector) >= 0) {
                                return "prefix"
                            } else {
                                if (tcn.indexOf(cns.node) >= 0) {
                                    return this._getTypeForOuterNodeEvent(event)
                                }
                            }
                        }
                    }
                }
            }
            return null
        },
        isVisible: function() {
            var parents = this._parentList(true, false);
            for (var i = 0, l = parents.length; i < l; i++) {
                if (!parents[i].bExpanded) {
                    return false
                }
            }
            return true
        },
        makeVisible: function() {
            var parents = this._parentList(true, false);
            for (var i = 0, l = parents.length; i < l; i++) {
                parents[i]._expand(true)
            }
        },
        focus: function() {
            this.makeVisible();
            try {
                $(this.span).find(">a").focus()
            } catch (e) {}
        },
        isFocused: function() {
            return (this.tree.tnFocused === this)
        },
        _activate: function(flag, fireEvents) {
            this.tree.logDebug("dtnode._activate(%o, fireEvents=%o) - %o", flag, fireEvents, this);
            var opts = this.tree.options;
            if (this.data.isStatusNode) {
                return
            }
            if (fireEvents && opts.onQueryActivate && opts.onQueryActivate.call(this.tree, flag, this) === false) {
                return
            }
            if (flag) {
                if (this.tree.activeNode) {
                    if (this.tree.activeNode === this) {
                        return
                    }
                    this.tree.activeNode.deactivate()
                }
                if (opts.activeVisible) {
                    this.makeVisible()
                }
                this.tree.activeNode = this;
                if (opts.persist) {
                    $.cookie(opts.cookieId + "-active", this.data.key, opts.cookie)
                }
                this.tree.persistence.activeKey = this.data.key;
                $(this.span).addClass(opts.classNames.active);
                if (fireEvents && opts.onActivate) {
                    opts.onActivate.call(this.tree, this)
                }
            } else {
                if (this.tree.activeNode === this) {
                    if (opts.onQueryActivate && opts.onQueryActivate.call(this.tree, false, this) === false) {
                        return
                    }
                    $(this.span).removeClass(opts.classNames.active);
                    if (opts.persist) {
                        $.cookie(opts.cookieId + "-active", "", opts.cookie)
                    }
                    this.tree.persistence.activeKey = null;
                    this.tree.activeNode = null;
                    if (fireEvents && opts.onDeactivate) {
                        opts.onDeactivate.call(this.tree, this)
                    }
                }
            }
        },
        activate: function() {
            this._activate(true, true)
        },
        activateSilently: function() {
            this._activate(true, false)
        },
        deactivate: function() {
            this._activate(false, true)
        },
        isActive: function() {
            return (this.tree.activeNode === this)
        },
        _userActivate: function() {
            var activate = true;
            var expand = false;
            if (this.data.isFolder) {
                switch (this.tree.options.clickFolderMode) {
                case 2:
                    activate = false;
                    expand = true;
                    break;
                case 3:
                    activate = expand = true;
                    break
                }
            }
            if (this.parent === null) {
                expand = false
            }
            if (expand) {
                this.toggleExpand();
                this.focus()
            }
            if (activate) {
                this.activate()
            }
        },
        _setSubSel: function(hasSubSel) {
            if (hasSubSel) {
                this.hasSubSel = true;
                $(this.span).addClass(this.tree.options.classNames.partsel)
            } else {
                this.hasSubSel = false;
                $(this.span).removeClass(this.tree.options.classNames.partsel)
            }
        },
        _updatePartSelectionState: function() {
            var sel;
            if (!this.hasChildren()) {
                sel = (this.bSelected && !this.data.unselectable && !this.data.isStatusNode);
                this._setSubSel(false);
                return sel
            }
            var i, l, cl = this.childList, allSelected = true, allDeselected = true;
            for (i = 0,
            l = cl.length; i < l; i++) {
                var n = cl[i]
                  , s = n._updatePartSelectionState();
                if (s !== false) {
                    allDeselected = false
                }
                if (s !== true) {
                    allSelected = false
                }
            }
            if (allSelected) {
                sel = true
            } else {
                if (allDeselected) {
                    sel = false
                } else {
                    sel = undefined
                }
            }
            this._setSubSel(sel === undefined);
            this.bSelected = (sel === true);
            return sel
        },
        _fixSelectionState: function() {
            var p, i, l;
            if (this.bSelected) {
                this.visit(function(node) {
                    node.parent._setSubSel(true);
                    if (!node.data.unselectable) {
                        node._select(true, false, false)
                    }
                });
                p = this.parent;
                while (p) {
                    p._setSubSel(true);
                    var allChildsSelected = true;
                    for (i = 0,
                    l = p.childList.length; i < l; i++) {
                        var n = p.childList[i];
                        if (!n.bSelected && !n.data.isStatusNode && !n.data.unselectable) {
                            allChildsSelected = false;
                            break
                        }
                    }
                    if (allChildsSelected) {
                        p._select(true, false, false)
                    }
                    p = p.parent
                }
            } else {
                this._setSubSel(false);
                this.visit(function(node) {
                    node._setSubSel(false);
                    node._select(false, false, false)
                });
                p = this.parent;
                while (p) {
                    p._select(false, false, false);
                    var isPartSel = false;
                    for (i = 0,
                    l = p.childList.length; i < l; i++) {
                        if (p.childList[i].bSelected || p.childList[i].hasSubSel) {
                            isPartSel = true;
                            break
                        }
                    }
                    p._setSubSel(isPartSel);
                    p = p.parent
                }
            }
        },
        _select: function(sel, fireEvents, deep) {
            var opts = this.tree.options;
            if (this.data.isStatusNode) {
                return
            }
            if (this.bSelected === sel) {
                return
            }
            if (fireEvents && opts.onQuerySelect && opts.onQuerySelect.call(this.tree, sel, this) === false) {
                return
            }
            if (opts.selectMode == 1 && sel) {
                this.tree.visit(function(node) {
                    if (node.bSelected) {
                        node._select(false, false, false);
                        return false
                    }
                })
            }
            this.bSelected = sel;
            if (sel) {
                if (opts.persist) {
                    this.tree.persistence.addSelect(this.data.key)
                }
                $(this.span).addClass(opts.classNames.selected);
                if (deep && opts.selectMode === 3) {
                    this._fixSelectionState()
                }
                if (fireEvents && opts.onSelect) {
                    opts.onSelect.call(this.tree, true, this)
                }
            } else {
                if (opts.persist) {
                    this.tree.persistence.clearSelect(this.data.key)
                }
                $(this.span).removeClass(opts.classNames.selected);
                if (deep && opts.selectMode === 3) {
                    this._fixSelectionState()
                }
                if (fireEvents && opts.onSelect) {
                    opts.onSelect.call(this.tree, false, this)
                }
            }
        },
        select: function(sel) {
            if (this.data.unselectable) {
                return this.bSelected
            }
            return this._select(sel !== false, true, true)
        },
        toggleSelect: function() {
            return this.select(!this.bSelected)
        },
        isSelected: function() {
            return this.bSelected
        },
        isLazy: function() {
            return !!this.data.isLazy
        },
        _loadContent: function() {
            try {
                var opts = this.tree.options;
                this.tree.logDebug("_loadContent: start - %o", this);
                this.setLazyNodeStatus(DTNodeStatus_Loading);
                if (true === opts.onLazyRead.call(this.tree, this)) {
                    this.setLazyNodeStatus(DTNodeStatus_Ok);
                    this.tree.logDebug("_loadContent: succeeded - %o", this)
                }
            } catch (e) {
                this.tree.logWarning("_loadContent: failed - %o", e);
                this.setLazyNodeStatus(DTNodeStatus_Error, {
                    tooltip: "" + e
                })
            }
        },
        _expand: function(bExpand, forceSync) {
            if (this.bExpanded === bExpand) {
                this.tree.logDebug("dtnode._expand(%o) IGNORED - %o", bExpand, this);
                return
            }
            this.tree.logDebug("dtnode._expand(%o) - %o", bExpand, this);
            var opts = this.tree.options;
            if (!bExpand && this.getLevel() < opts.minExpandLevel) {
                this.tree.logDebug("dtnode._expand(%o) prevented collapse - %o", bExpand, this);
                return
            }
            if (opts.onQueryExpand && opts.onQueryExpand.call(this.tree, bExpand, this) === false) {
                return
            }
            this.bExpanded = bExpand;
            if (opts.persist) {
                if (bExpand) {
                    this.tree.persistence.addExpand(this.data.key)
                } else {
                    this.tree.persistence.clearExpand(this.data.key)
                }
            }
            var allowEffects = !(this.data.isLazy && this.childList === null) && !this._isLoading && !forceSync;
            this.render(allowEffects);
            if (this.bExpanded && this.parent && opts.autoCollapse) {
                var parents = this._parentList(false, true);
                for (var i = 0, l = parents.length; i < l; i++) {
                    parents[i].collapseSiblings()
                }
            }
            if (opts.activeVisible && this.tree.activeNode && !this.tree.activeNode.isVisible()) {
                this.tree.activeNode.deactivate()
            }
            if (bExpand && this.data.isLazy && this.childList === null && !this._isLoading) {
                this._loadContent();
                return
            }
            if (opts.onExpand) {
                opts.onExpand.call(this.tree, bExpand, this)
            }
        },
        isExpanded: function() {
            return this.bExpanded
        },
        expand: function(flag) {
            flag = (flag !== false);
            if (!this.childList && !this.data.isLazy && flag) {
                return
            } else {
                if (this.parent === null && !flag) {
                    return
                }
            }
            this._expand(flag)
        },
        scheduleAction: function(mode, ms) {
            if (this.tree.timer) {
                clearTimeout(this.tree.timer);
                this.tree.logDebug("clearTimeout(%o)", this.tree.timer)
            }
            var self = this;
            switch (mode) {
            case "cancel":
                break;
            case "expand":
                this.tree.timer = setTimeout(function() {
                    self.tree.logDebug("setTimeout: trigger expand");
                    self.expand(true)
                }, ms);
                break;
            case "activate":
                this.tree.timer = setTimeout(function() {
                    self.tree.logDebug("setTimeout: trigger activate");
                    self.activate()
                }, ms);
                break;
            default:
                throw "Invalid mode " + mode
            }
            this.tree.logDebug("setTimeout(%s, %s): %s", mode, ms, this.tree.timer)
        },
        toggleExpand: function() {
            this.expand(!this.bExpanded)
        },
        collapseSiblings: function() {
            if (this.parent === null) {
                return
            }
            var ac = this.parent.childList;
            for (var i = 0, l = ac.length; i < l; i++) {
                if (ac[i] !== this && ac[i].bExpanded) {
                    ac[i]._expand(false)
                }
            }
        },
        _onClick: function(event) {
            var targetType = this.getEventTargetType(event);
            if (targetType === "expander") {
                this.toggleExpand();
                this.focus()
            } else {
                if (targetType === "checkbox") {
                    this.toggleSelect()
                } else {
                    this._userActivate();
                    var aTag = this.span.getElementsByTagName("a");
                    if (aTag[0]) {
                        if (!(BROWSER.msie && parseInt(BROWSER.version, 10) < 9)) {
                            aTag[0].focus()
                        }
                    } else {
                        return true
                    }
                }
            }
            event.preventDefault()
        },
        _onDblClick: function(event) {},
        _onKeydown: function(event) {
            var handled = true, sib;
            switch (event.which) {
            case 107:
            case 187:
                if (!this.bExpanded) {
                    this.toggleExpand()
                }
                break;
            case 109:
            case 189:
                if (this.bExpanded) {
                    this.toggleExpand()
                }
                break;
            case 32:
                this._userActivate();
                break;
            case 8:
                if (this.parent) {
                    this.parent.focus()
                }
                break;
            case 37:
                if (this.bExpanded) {
                    this.toggleExpand();
                    this.focus()
                } else {
                    if (this.parent && this.parent.parent) {
                        this.parent.focus()
                    }
                }
                break;
            case 39:
                if (!this.bExpanded && (this.childList || this.data.isLazy)) {
                    this.toggleExpand();
                    this.focus()
                } else {
                    if (this.childList) {
                        this.childList[0].focus()
                    }
                }
                break;
            case 38:
                sib = this.getPrevSibling();
                while (sib && sib.bExpanded && sib.childList) {
                    sib = sib.childList[sib.childList.length - 1]
                }
                if (!sib && this.parent && this.parent.parent) {
                    sib = this.parent
                }
                if (sib) {
                    sib.focus()
                }
                break;
            case 40:
                if (this.bExpanded && this.childList) {
                    sib = this.childList[0]
                } else {
                    var parents = this._parentList(false, true);
                    for (var i = parents.length - 1; i >= 0; i--) {
                        sib = parents[i].getNextSibling();
                        if (sib) {
                            break
                        }
                    }
                }
                if (sib) {
                    sib.focus()
                }
                break;
            default:
                handled = false
            }
            if (handled) {
                event.preventDefault()
            }
        },
        _onKeypress: function(event) {},
        _onFocus: function(event) {
            var opts = this.tree.options;
            if (event.type == "blur" || event.type == "focusout") {
                if (opts.onBlur) {
                    opts.onBlur.call(this.tree, this)
                }
                if (this.tree.tnFocused) {
                    $(this.tree.tnFocused.span).removeClass(opts.classNames.focused)
                }
                this.tree.tnFocused = null;
                if (opts.persist) {
                    $.cookie(opts.cookieId + "-focus", "", opts.cookie)
                }
            } else {
                if (event.type == "focus" || event.type == "focusin") {
                    if (this.tree.tnFocused && this.tree.tnFocused !== this) {
                        this.tree.logDebug("dtnode.onFocus: out of sync: curFocus: %o", this.tree.tnFocused);
                        $(this.tree.tnFocused.span).removeClass(opts.classNames.focused)
                    }
                    this.tree.tnFocused = this;
                    if (opts.onFocus) {
                        opts.onFocus.call(this.tree, this)
                    }
                    $(this.tree.tnFocused.span).addClass(opts.classNames.focused);
                    if (opts.persist) {
                        $.cookie(opts.cookieId + "-focus", this.data.key, opts.cookie)
                    }
                }
            }
        },
        visit: function(fn, includeSelf) {
            var res = true;
            if (includeSelf === true) {
                res = fn(this);
                if (res === false || res === "skip") {
                    return res
                }
            }
            if (this.childList) {
                for (var i = 0, l = this.childList.length; i < l; i++) {
                    res = this.childList[i].visit(fn, true);
                    if (res === false) {
                        break
                    }
                }
            }
            return res
        },
        visitParents: function(fn, includeSelf) {
            if (includeSelf && fn(this) === false) {
                return false
            }
            var p = this.parent;
            while (p) {
                if (fn(p) === false) {
                    return false
                }
                p = p.parent
            }
            return true
        },
        remove: function() {
            if (this === this.tree.root) {
                throw "Cannot remove system root"
            }
            return this.parent.removeChild(this)
        },
        removeChild: function(tn) {
            var ac = this.childList;
            if (ac.length === 1) {
                if (tn !== ac[0]) {
                    throw "removeChild: invalid child"
                }
                return this.removeChildren()
            }
            if (tn === this.tree.activeNode) {
                tn.deactivate()
            }
            if (this.tree.options.persist) {
                if (tn.bSelected) {
                    this.tree.persistence.clearSelect(tn.data.key)
                }
                if (tn.bExpanded) {
                    this.tree.persistence.clearExpand(tn.data.key)
                }
            }
            tn.removeChildren(true);
            if (this.ul && tn.li) {
                this.ul.removeChild(tn.li)
            }
            for (var i = 0, l = ac.length; i < l; i++) {
                if (ac[i] === tn) {
                    this.childList.splice(i, 1);
                    break
                }
            }
        },
        removeChildren: function(isRecursiveCall, retainPersistence) {
            this.tree.logDebug("%s.removeChildren(%o)", this, isRecursiveCall);
            var tree = this.tree;
            var ac = this.childList;
            if (ac) {
                for (var i = 0, l = ac.length; i < l; i++) {
                    var tn = ac[i];
                    if (tn === tree.activeNode && !retainPersistence) {
                        tn.deactivate()
                    }
                    if (this.tree.options.persist && !retainPersistence) {
                        if (tn.bSelected) {
                            this.tree.persistence.clearSelect(tn.data.key)
                        }
                        if (tn.bExpanded) {
                            this.tree.persistence.clearExpand(tn.data.key)
                        }
                    }
                    tn.removeChildren(true, retainPersistence);
                    if (this.ul && tn.li) {
                        $("li", $(this.ul)).remove()
                    }
                }
                this.childList = null
            }
            if (!isRecursiveCall) {
                this._isLoading = false;
                this.render()
            }
        },
        setTitle: function(title) {
            this.fromDict({
                title: title
            })
        },
        reload: function(force) {
            throw "Use reloadChildren() instead"
        },
        reloadChildren: function(callback) {
            if (this.parent === null) {
                throw "Use tree.reload() instead"
            } else {
                if (!this.data.isLazy) {
                    throw "node.reloadChildren() requires lazy nodes."
                }
            }
            if (callback) {
                var self = this;
                var eventType = "nodeLoaded.dynatree." + this.tree.$tree.attr("id") + "." + this.data.key;
                this.tree.$tree.bind(eventType, function(e, node, isOk) {
                    self.tree.$tree.unbind(eventType);
                    self.tree.logDebug("loaded %o, %o, %o", e, node, isOk);
                    if (node !== self) {
                        throw "got invalid load event"
                    }
                    callback.call(self.tree, node, isOk)
                })
            }
            this.removeChildren();
            this._loadContent()
        },
        _loadKeyPath: function(keyPath, callback) {
            var tree = this.tree;
            tree.logDebug("%s._loadKeyPath(%s)", this, keyPath);
            if (keyPath === "") {
                throw "Key path must not be empty"
            }
            var segList = keyPath.split(tree.options.keyPathSeparator);
            if (segList[0] === "") {
                throw "Key path must be relative (don't start with '/')"
            }
            var seg = segList.shift();
            if (this.childList) {
                for (var i = 0, l = this.childList.length; i < l; i++) {
                    var child = this.childList[i];
                    if (child.data.key === seg) {
                        if (segList.length === 0) {
                            callback.call(tree, child, "ok")
                        } else {
                            if (child.data.isLazy && (child.childList === null || child.childList === undefined)) {
                                tree.logDebug("%s._loadKeyPath(%s) -> reloading %s...", this, keyPath, child);
                                var self = this;
                                child.reloadChildren(function(node, isOk) {
                                    if (isOk) {
                                        tree.logDebug("%s._loadKeyPath(%s) -> reloaded %s.", node, keyPath, node);
                                        callback.call(tree, child, "loaded");
                                        node._loadKeyPath(segList.join(tree.options.keyPathSeparator), callback)
                                    } else {
                                        tree.logWarning("%s._loadKeyPath(%s) -> reloadChildren() failed.", self, keyPath);
                                        callback.call(tree, child, "error")
                                    }
                                })
                            } else {
                                callback.call(tree, child, "loaded");
                                child._loadKeyPath(segList.join(tree.options.keyPathSeparator), callback)
                            }
                        }
                        return
                    }
                }
            }
            callback.call(tree, undefined, "notfound", seg, segList.length === 0);
            tree.logWarning("Node not found: " + seg);
            return
        },
        resetLazy: function() {
            if (this.parent === null) {
                throw "Use tree.reload() instead"
            } else {
                if (!this.data.isLazy) {
                    throw "node.resetLazy() requires lazy nodes."
                }
            }
            this.expand(false);
            this.removeChildren()
        },
        _addChildNode: function(dtnode, beforeNode) {
            var tree = this.tree
              , opts = tree.options
              , pers = tree.persistence;
            dtnode.parent = this;
            if (this.childList === null) {
                this.childList = []
            } else {
                if (!beforeNode) {
                    if (this.childList.length > 0) {
                        $(this.childList[this.childList.length - 1].span).removeClass(opts.classNames.lastsib)
                    }
                }
            }
            if (beforeNode) {
                var iBefore = $.inArray(beforeNode, this.childList);
                if (iBefore < 0) {
                    throw "<beforeNode> must be a child of <this>"
                }
                this.childList.splice(iBefore, 0, dtnode)
            } else {
                this.childList.push(dtnode)
            }
            var isInitializing = tree.isInitializing();
            if (opts.persist && pers.cookiesFound && isInitializing) {
                if (pers.activeKey === dtnode.data.key) {
                    tree.activeNode = dtnode
                }
                if (pers.focusedKey === dtnode.data.key) {
                    tree.focusNode = dtnode
                }
                dtnode.bExpanded = ($.inArray(dtnode.data.key, pers.expandedKeyList) >= 0);
                dtnode.bSelected = ($.inArray(dtnode.data.key, pers.selectedKeyList) >= 0)
            } else {
                if (dtnode.data.activate) {
                    tree.activeNode = dtnode;
                    if (opts.persist) {
                        pers.activeKey = dtnode.data.key
                    }
                }
                if (dtnode.data.focus) {
                    tree.focusNode = dtnode;
                    if (opts.persist) {
                        pers.focusedKey = dtnode.data.key
                    }
                }
                dtnode.bExpanded = (dtnode.data.expand === true);
                if (dtnode.bExpanded && opts.persist) {
                    pers.addExpand(dtnode.data.key)
                }
                dtnode.bSelected = (dtnode.data.select === true);
                if (dtnode.bSelected && opts.persist) {
                    pers.addSelect(dtnode.data.key)
                }
            }
            if (opts.minExpandLevel >= dtnode.getLevel()) {
                this.bExpanded = true
            }
            if (dtnode.bSelected && opts.selectMode == 3) {
                var p = this;
                while (p) {
                    if (!p.hasSubSel) {
                        p._setSubSel(true)
                    }
                    p = p.parent
                }
            }
            if (tree.bEnableUpdate) {
                this.render()
            }
            return dtnode
        },
        addChild: function(obj, beforeNode) {
            if (typeof (obj) == "string") {
                throw "Invalid data type for " + obj
            } else {
                if (!obj || obj.length === 0) {
                    return
                } else {
                    if (obj instanceof DynaTreeNode) {
                        return this._addChildNode(obj, beforeNode)
                    }
                }
            }
            if (!obj.length) {
                obj = [obj]
            }
            var prevFlag = this.tree.enableUpdate(false);
            var tnFirst = null;
            for (var i = 0, l = obj.length; i < l; i++) {
                var data = obj[i];
                var dtnode = this._addChildNode(new DynaTreeNode(this,this.tree,data), beforeNode);
                if (!tnFirst) {
                    tnFirst = dtnode
                }
                if (data.children) {
                    dtnode.addChild(data.children, null)
                }
            }
            this.tree.enableUpdate(prevFlag);
            return tnFirst
        },
        append: function(obj) {
            this.tree.logWarning("node.append() is deprecated (use node.addChild() instead).");
            return this.addChild(obj, null)
        },
        appendAjax: function(ajaxOptions) {
            var self = this;
            this.removeChildren(false, true);
            this.setLazyNodeStatus(DTNodeStatus_Loading);
            if (ajaxOptions.debugLazyDelay) {
                var ms = ajaxOptions.debugLazyDelay;
                ajaxOptions.debugLazyDelay = 0;
                this.tree.logInfo("appendAjax: waiting for debugLazyDelay " + ms);
                setTimeout(function() {
                    self.appendAjax(ajaxOptions)
                }, ms);
                return
            }
            var orgSuccess = ajaxOptions.success
              , orgError = ajaxOptions.error
              , eventType = "nodeLoaded.dynatree." + this.tree.$tree.attr("id") + "." + this.data.key;
            var options = $.extend({}, this.tree.options.ajaxDefaults, ajaxOptions, {
                success: function(data, textStatus, jqXHR) {
                    var prevPhase = self.tree.phase;
                    self.tree.phase = "init";
                    if (options.postProcess) {
                        data = options.postProcess.call(this, data, this.dataType)
                    } else {
                        if (data && data.hasOwnProperty("d")) {
                            data = (typeof data.d) == "string" ? $.parseJSON(data.d) : data.d
                        }
                    }
                    if (!$.isArray(data) || data.length !== 0) {
                        self.addChild(data, null)
                    }
                    self.tree.phase = "postInit";
                    if (orgSuccess) {
                        orgSuccess.call(options, self, data, textStatus)
                    }
                    self.tree.logDebug("trigger " + eventType);
                    self.tree.$tree.trigger(eventType, [self, true]);
                    self.tree.phase = prevPhase;
                    self.setLazyNodeStatus(DTNodeStatus_Ok);
                    if ($.isArray(data) && data.length === 0) {
                        self.childList = [];
                        self.render()
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    self.tree.logWarning("appendAjax failed:", textStatus, ":\n", jqXHR, "\n", errorThrown);
                    if (orgError) {
                        orgError.call(options, self, jqXHR, textStatus, errorThrown)
                    }
                    self.tree.$tree.trigger(eventType, [self, false]);
                    self.setLazyNodeStatus(DTNodeStatus_Error, {
                        info: textStatus,
                        tooltip: "" + errorThrown
                    })
                }
            });
            $.ajax(options)
        },
        move: function(targetNode, mode) {
            var pos;
            if (this === targetNode) {
                return
            }
            if (!this.parent) {
                throw "Cannot move system root"
            }
            if (mode === undefined || mode == "over") {
                mode = "child"
            }
            var prevParent = this.parent;
            var targetParent = (mode === "child") ? targetNode : targetNode.parent;
            if (targetParent.isDescendantOf(this)) {
                throw "Cannot move a node to it's own descendant"
            }
            if (this.parent.childList.length == 1) {
                this.parent.childList = this.parent.data.isLazy ? [] : null;
                this.parent.bExpanded = false
            } else {
                pos = $.inArray(this, this.parent.childList);
                if (pos < 0) {
                    throw "Internal error"
                }
                this.parent.childList.splice(pos, 1)
            }
            if (this.parent.ul) {
                this.parent.ul.removeChild(this.li)
            }
            this.parent = targetParent;
            if (targetParent.hasChildren()) {
                switch (mode) {
                case "child":
                    targetParent.childList.push(this);
                    break;
                case "before":
                    pos = $.inArray(targetNode, targetParent.childList);
                    if (pos < 0) {
                        throw "Internal error"
                    }
                    targetParent.childList.splice(pos, 0, this);
                    break;
                case "after":
                    pos = $.inArray(targetNode, targetParent.childList);
                    if (pos < 0) {
                        throw "Internal error"
                    }
                    targetParent.childList.splice(pos + 1, 0, this);
                    break;
                default:
                    throw "Invalid mode " + mode
                }
            } else {
                targetParent.childList = [this]
            }
            if (!targetParent.ul) {
                targetParent.ul = document.createElement("ul");
                targetParent.ul.style.display = "none";
                targetParent.li.appendChild(targetParent.ul)
            }
            if (this.li) {
                targetParent.ul.appendChild(this.li)
            }
            if (this.tree !== targetNode.tree) {
                this.visit(function(node) {
                    node.tree = targetNode.tree
                }, null, true);
                throw "Not yet implemented."
            }
            if (!prevParent.isDescendantOf(targetParent)) {
                prevParent.render()
            }
            if (!targetParent.isDescendantOf(prevParent)) {
                targetParent.render()
            }
        },
        lastentry: undefined
    };
    var DynaTreeStatus = Class.create();
    DynaTreeStatus._getTreePersistData = function(cookieId, cookieOpts) {
        var ts = new DynaTreeStatus(cookieId,cookieOpts);
        ts.read();
        return ts.toDict()
    }
    ;
    getDynaTreePersistData = DynaTreeStatus._getTreePersistData;
    DynaTreeStatus.prototype = {
        initialize: function(cookieId, cookieOpts) {
            if (cookieId === undefined) {
                cookieId = $.ui.dynatree.prototype.options.cookieId
            }
            cookieOpts = $.extend({}, $.ui.dynatree.prototype.options.cookie, cookieOpts);
            this.cookieId = cookieId;
            this.cookieOpts = cookieOpts;
            this.cookiesFound = undefined;
            this.activeKey = null;
            this.focusedKey = null;
            this.expandedKeyList = null;
            this.selectedKeyList = null
        },
        _log: function(msg) {
            Array.prototype.unshift.apply(arguments, ["debug"]);
            _log.apply(this, arguments)
        },
        read: function() {
            this.cookiesFound = false;
            var cookie = $.cookie(this.cookieId + "-active");
            this.activeKey = cookie || "";
            if (cookie) {
                this.cookiesFound = true
            }
            cookie = $.cookie(this.cookieId + "-focus");
            this.focusedKey = cookie || "";
            if (cookie) {
                this.cookiesFound = true
            }
            cookie = $.cookie(this.cookieId + "-expand");
            this.expandedKeyList = cookie ? cookie.split(",") : [];
            if (cookie) {
                this.cookiesFound = true
            }
            cookie = $.cookie(this.cookieId + "-select");
            this.selectedKeyList = cookie ? cookie.split(",") : [];
            if (cookie) {
                this.cookiesFound = true
            }
        },
        write: function() {
            $.cookie(this.cookieId + "-active", (this.activeKey === null) ? "" : this.activeKey, this.cookieOpts);
            $.cookie(this.cookieId + "-focus", (this.focusedKey === null) ? "" : this.focusedKey, this.cookieOpts);
            $.cookie(this.cookieId + "-expand", (this.expandedKeyList === null) ? "" : this.expandedKeyList.join(","), this.cookieOpts);
            $.cookie(this.cookieId + "-select", (this.selectedKeyList === null) ? "" : this.selectedKeyList.join(","), this.cookieOpts)
        },
        addExpand: function(key) {
            if ($.inArray(key, this.expandedKeyList) < 0) {
                this.expandedKeyList.push(key);
                $.cookie(this.cookieId + "-expand", this.expandedKeyList.join(","), this.cookieOpts)
            }
        },
        clearExpand: function(key) {
            var idx = $.inArray(key, this.expandedKeyList);
            if (idx >= 0) {
                this.expandedKeyList.splice(idx, 1);
                $.cookie(this.cookieId + "-expand", this.expandedKeyList.join(","), this.cookieOpts)
            }
        },
        addSelect: function(key) {
            if ($.inArray(key, this.selectedKeyList) < 0) {
                this.selectedKeyList.push(key);
                $.cookie(this.cookieId + "-select", this.selectedKeyList.join(","), this.cookieOpts)
            }
        },
        clearSelect: function(key) {
            var idx = $.inArray(key, this.selectedKeyList);
            if (idx >= 0) {
                this.selectedKeyList.splice(idx, 1);
                $.cookie(this.cookieId + "-select", this.selectedKeyList.join(","), this.cookieOpts)
            }
        },
        isReloading: function() {
            return this.cookiesFound === true
        },
        toDict: function() {
            return {
                cookiesFound: this.cookiesFound,
                activeKey: this.activeKey,
                focusedKey: this.activeKey,
                expandedKeyList: this.expandedKeyList,
                selectedKeyList: this.selectedKeyList
            }
        },
        lastentry: undefined
    };
    var DynaTree = Class.create();
    DynaTree.version = "@@Version";
    DynaTree.prototype = {
        initialize: function($widget) {
            this.phase = "init";
            this.$widget = $widget;
            this.options = $widget.options;
            this.$tree = $widget.element;
            this.timer = null;
            this.divTree = this.$tree.get(0);
            _initDragAndDrop(this)
        },
        _load: function(callback) {
            var $widget = this.$widget;
            var opts = this.options
              , self = this;
            this.bEnableUpdate = true;
            this._nodeCount = 1;
            this.activeNode = null;
            this.focusNode = null;
            if (opts.rootVisible !== undefined) {
                this.logWarning("Option 'rootVisible' is no longer supported.")
            }
            if (opts.minExpandLevel < 1) {
                this.logWarning("Option 'minExpandLevel' must be >= 1.");
                opts.minExpandLevel = 1
            }
            if (opts.classNames !== $.ui.dynatree.prototype.options.classNames) {
                opts.classNames = $.extend({}, $.ui.dynatree.prototype.options.classNames, opts.classNames)
            }
            if (opts.ajaxDefaults !== $.ui.dynatree.prototype.options.ajaxDefaults) {
                opts.ajaxDefaults = $.extend({}, $.ui.dynatree.prototype.options.ajaxDefaults, opts.ajaxDefaults)
            }
            if (opts.dnd !== $.ui.dynatree.prototype.options.dnd) {
                opts.dnd = $.extend({}, $.ui.dynatree.prototype.options.dnd, opts.dnd)
            }
            if (!opts.imagePath) {
                $("script").each(function() {
                    var _rexDtLibName = /.*dynatree[^\/]*\.js$/i;
                    if (this.src.search(_rexDtLibName) >= 0) {
                        if (this.src.indexOf("/") >= 0) {
                            opts.imagePath = this.src.slice(0, this.src.lastIndexOf("/")) + "/skin/"
                        } else {
                            opts.imagePath = "skin/"
                        }
                        self.logDebug("Guessing imagePath from '%s': '%s'", this.src, opts.imagePath);
                        return false
                    }
                })
            }
            this.persistence = new DynaTreeStatus(opts.cookieId,opts.cookie);
            if (opts.persist) {
                if (!$.cookie) {
                    _log("warn", "Please include jquery.cookie.js to use persistence.")
                }
                this.persistence.read()
            }
            this.logDebug("DynaTree.persistence: %o", this.persistence.toDict());
            this.cache = {
                tagEmpty: "<span class='" + opts.classNames.empty + "'></span>",
                tagVline: "<span class='" + opts.classNames.vline + "'></span>",
                tagExpander: "<span class='" + opts.classNames.expander + "'></span>",
                tagConnector: "<span class='" + opts.classNames.connector + "'></span>",
                tagNodeIcon: "<span class='" + opts.classNames.nodeIcon + "'></span>",
                tagCheckbox: "<span class='" + opts.classNames.checkbox + "'></span>",
                lastentry: undefined
            };
            if (opts.children || (opts.initAjax && opts.initAjax.url) || opts.initId) {
                $(this.divTree).empty()
            }
            var $ulInitialize = this.$tree.find(">ul:first").hide();
            this.tnRoot = new DynaTreeNode(null,this,{});
            this.tnRoot.bExpanded = true;
            this.tnRoot.render();
            this.divTree.appendChild(this.tnRoot.ul);
            var root = this.tnRoot
              , isReloading = (opts.persist && this.persistence.isReloading())
              , isLazy = false
              , prevFlag = this.enableUpdate(false);
            this.logDebug("Dynatree._load(): read tree structure...");
            if (opts.children) {
                root.addChild(opts.children)
            } else {
                if (opts.initAjax && opts.initAjax.url) {
                    isLazy = true;
                    root.data.isLazy = true;
                    this._reloadAjax(callback)
                } else {
                    if (opts.initId) {
                        this._createFromTag(root, $("#" + opts.initId))
                    } else {
                        this._createFromTag(root, $ulInitialize);
                        $ulInitialize.remove()
                    }
                }
            }
            this._checkConsistency();
            if (!isLazy && opts.selectMode == 3) {
                root._updatePartSelectionState()
            }
            this.logDebug("Dynatree._load(): render nodes...");
            this.enableUpdate(prevFlag);
            this.logDebug("Dynatree._load(): bind events...");
            this.$widget.bind();
            this.logDebug("Dynatree._load(): postInit...");
            this.phase = "postInit";
            if (opts.persist) {
                this.persistence.write()
            }
            if (this.focusNode && this.focusNode.isVisible()) {
                this.logDebug("Focus on init: %o", this.focusNode);
                this.focusNode.focus()
            }
            if (!isLazy) {
                if (opts.onPostInit) {
                    opts.onPostInit.call(this, isReloading, false)
                }
                if (callback) {
                    callback.call(this, "ok")
                }
            }
            this.phase = "idle"
        },
        _reloadAjax: function(callback) {
            var opts = this.options;
            if (!opts.initAjax || !opts.initAjax.url) {
                throw "tree.reload() requires 'initAjax' mode."
            }
            var pers = this.persistence;
            var ajaxOpts = $.extend({}, opts.initAjax);
            if (ajaxOpts.addActiveKey) {
                ajaxOpts.data.activeKey = pers.activeKey
            }
            if (ajaxOpts.addFocusedKey) {
                ajaxOpts.data.focusedKey = pers.focusedKey
            }
            if (ajaxOpts.addExpandedKeyList) {
                ajaxOpts.data.expandedKeyList = pers.expandedKeyList.join(",")
            }
            if (ajaxOpts.addSelectedKeyList) {
                ajaxOpts.data.selectedKeyList = pers.selectedKeyList.join(",")
            }
            if (ajaxOpts.success) {
                this.logWarning("initAjax: success callback is ignored; use onPostInit instead.")
            }
            if (ajaxOpts.error) {
                this.logWarning("initAjax: error callback is ignored; use onPostInit instead.")
            }
            var isReloading = pers.isReloading();
            ajaxOpts.success = function(dtnode, data, textStatus) {
                if (opts.selectMode == 3) {
                    dtnode.tree.tnRoot._updatePartSelectionState()
                }
                if (opts.onPostInit) {
                    opts.onPostInit.call(dtnode.tree, isReloading, false)
                }
                if (callback) {
                    callback.call(dtnode.tree, "ok")
                }
            }
            ;
            ajaxOpts.error = function(dtnode, XMLHttpRequest, textStatus, errorThrown) {
                if (opts.onPostInit) {
                    opts.onPostInit.call(dtnode.tree, isReloading, true, XMLHttpRequest, textStatus, errorThrown)
                }
                if (callback) {
                    callback.call(dtnode.tree, "error", XMLHttpRequest, textStatus, errorThrown)
                }
            }
            ;
            this.logDebug("Dynatree._init(): send Ajax request...");
            this.tnRoot.appendAjax(ajaxOpts)
        },
        toString: function() {
            return "Dynatree '" + this.$tree.attr("id") + "'"
        },
        toDict: function(includeRoot) {
            var dict = this.tnRoot.toDict(true);
            return includeRoot ? dict : dict.children
        },
        serializeArray: function(stopOnParents) {
            var nodeList = this.getSelectedNodes(stopOnParents)
              , name = this.$tree.attr("name") || this.$tree.attr("id")
              , arr = [];
            for (var i = 0, l = nodeList.length; i < l; i++) {
                arr.push({
                    name: name,
                    value: nodeList[i].data.key
                })
            }
            return arr
        },
        getPersistData: function() {
            return this.persistence.toDict()
        },
        logDebug: function(msg) {
            if (this.options.debugLevel >= 2) {
                Array.prototype.unshift.apply(arguments, ["debug"]);
                _log.apply(this, arguments)
            }
        },
        logInfo: function(msg) {
            if (this.options.debugLevel >= 1) {
                Array.prototype.unshift.apply(arguments, ["info"]);
                _log.apply(this, arguments)
            }
        },
        logWarning: function(msg) {
            Array.prototype.unshift.apply(arguments, ["warn"]);
            _log.apply(this, arguments)
        },
        isInitializing: function() {
            return (this.phase == "init" || this.phase == "postInit")
        },
        isReloading: function() {
            return (this.phase == "init" || this.phase == "postInit") && this.options.persist && this.persistence.cookiesFound
        },
        isUserEvent: function() {
            return (this.phase == "userEvent")
        },
        redraw: function() {
            this.tnRoot.render(false, false)
        },
        renderInvisibleNodes: function() {
            this.tnRoot.render(false, true)
        },
        reload: function(callback) {
            this._load(callback)
        },
        getRoot: function() {
            return this.tnRoot
        },
        enable: function() {
            this.$widget.enable()
        },
        disable: function() {
            this.$widget.disable()
        },
        getNodeByKey: function(key) {
            var el = document.getElementById(this.options.idPrefix + key);
            if (el) {
                return el.dtnode ? el.dtnode : null
            }
            var match = null;
            this.visit(function(node) {
                if (node.data.key === key) {
                    match = node;
                    return false
                }
            }, true);
            return match
        },
        getActiveNode: function() {
            return this.activeNode
        },
        reactivate: function(setFocus) {
            var node = this.activeNode;
            if (node) {
                this.activeNode = null;
                node.activate();
                if (setFocus) {
                    node.focus()
                }
            }
        },
        getSelectedNodes: function(stopOnParents) {
            var nodeList = [];
            this.tnRoot.visit(function(node) {
                if (node.bSelected) {
                    nodeList.push(node);
                    if (stopOnParents === true) {
                        return "skip"
                    }
                }
            });
            return nodeList
        },
        activateKey: function(key) {
            var dtnode = (key === null) ? null : this.getNodeByKey(key);
            if (!dtnode) {
                if (this.activeNode) {
                    this.activeNode.deactivate()
                }
                this.activeNode = null;
                return null
            }
            dtnode.focus();
            dtnode.activate();
            return dtnode
        },
        loadKeyPath: function(keyPath, callback) {
            var segList = keyPath.split(this.options.keyPathSeparator);
            if (segList[0] === "") {
                segList.shift()
            }
            if (segList[0] == this.tnRoot.data.key) {
                this.logDebug("Removed leading root key.");
                segList.shift()
            }
            keyPath = segList.join(this.options.keyPathSeparator);
            return this.tnRoot._loadKeyPath(keyPath, callback)
        },
        selectKey: function(key, select) {
            var dtnode = this.getNodeByKey(key);
            if (!dtnode) {
                return null
            }
            dtnode.select(select);
            return dtnode
        },
        enableUpdate: function(bEnable) {
            if (this.bEnableUpdate == bEnable) {
                return bEnable
            }
            this.bEnableUpdate = bEnable;
            if (bEnable) {
                this.redraw()
            }
            return !bEnable
        },
        count: function() {
            return this.tnRoot.countChildren()
        },
        visit: function(fn, includeRoot) {
            return this.tnRoot.visit(fn, includeRoot)
        },
        _createFromTag: function(parentTreeNode, $ulParent) {
            var self = this;
            $ulParent.find(">li").each(function() {
                var $li = $(this), $liSpan = $li.find(">span:first"), $liA = $li.find(">a:first"), title, href = null, target = null, tooltip;
                if ($liSpan.length) {
                    title = $liSpan.html()
                } else {
                    if ($liA.length) {
                        title = $liA.html();
                        href = $liA.attr("href");
                        target = $liA.attr("target");
                        tooltip = $liA.attr("title")
                    } else {
                        title = $li.html();
                        var iPos = title.search(/<ul/i);
                        if (iPos >= 0) {
                            title = $.trim(title.substring(0, iPos))
                        } else {
                            title = $.trim(title)
                        }
                    }
                }
                var data = {
                    title: title,
                    tooltip: tooltip,
                    isFolder: $li.hasClass("folder"),
                    isLazy: $li.hasClass("lazy"),
                    expand: $li.hasClass("expanded"),
                    select: $li.hasClass("selected"),
                    activate: $li.hasClass("active"),
                    focus: $li.hasClass("focused"),
                    noLink: $li.hasClass("noLink")
                };
                if (href) {
                    data.href = href;
                    data.target = target
                }
                if ($li.attr("title")) {
                    data.tooltip = $li.attr("title")
                }
                if ($li.attr("id")) {
                    data.key = "" + $li.attr("id")
                }
                if ($li.attr("data")) {
                    var dataAttr = $.trim($li.attr("data"));
                    if (dataAttr) {
                        if (dataAttr.charAt(0) != "{") {
                            dataAttr = "{" + dataAttr + "}"
                        }
                        try {
                            $.extend(data, eval("(" + dataAttr + ")"))
                        } catch (e) {
                            throw ("Error parsing node data: " + e + "\ndata:\n'" + dataAttr + "'")
                        }
                    }
                }
                var childNode = parentTreeNode.addChild(data);
                var $ul = $li.find(">ul:first");
                if ($ul.length) {
                    self._createFromTag(childNode, $ul)
                }
            })
        },
        _checkConsistency: function() {},
        _setDndStatus: function(sourceNode, targetNode, helper, hitMode, accept) {
            var $source = sourceNode ? $(sourceNode.span) : null, $target = $(targetNode.span), posOpts, markerOffsetX = 0, markerAt = "center";
            if (!this.$dndMarker) {
                this.$dndMarker = $("<div id='dynatree-drop-marker'></div>").hide().css({
                    "z-index": 1000
                }).prependTo($(this.divTree).parent())
            }
            if (hitMode === "after" || hitMode === "before" || hitMode === "over") {
                switch (hitMode) {
                case "before":
                    this.$dndMarker.removeClass("dynatree-drop-after dynatree-drop-over");
                    this.$dndMarker.addClass("dynatree-drop-before");
                    markerAt = "top";
                    break;
                case "after":
                    this.$dndMarker.removeClass("dynatree-drop-before dynatree-drop-over");
                    this.$dndMarker.addClass("dynatree-drop-after");
                    markerAt = "bottom";
                    break;
                default:
                    this.$dndMarker.removeClass("dynatree-drop-after dynatree-drop-before");
                    this.$dndMarker.addClass("dynatree-drop-over");
                    $target.addClass("dynatree-drop-target");
                    markerOffsetX = 8
                }
                if (jquerySupports.positionMyOfs) {
                    posOpts = {
                        my: "left" + offsetString(markerOffsetX) + " center",
                        at: "left " + markerAt,
                        of: $target
                    }
                } else {
                    posOpts = {
                        my: "left center",
                        at: "left " + markerAt,
                        of: $target,
                        offset: "" + markerOffsetX + " 0"
                    }
                }
                this.$dndMarker.show().position(posOpts)
            } else {
                $target.removeClass("dynatree-drop-target");
                this.$dndMarker.hide()
            }
            if (hitMode === "after") {
                $target.addClass("dynatree-drop-after")
            } else {
                $target.removeClass("dynatree-drop-after")
            }
            if (hitMode === "before") {
                $target.addClass("dynatree-drop-before")
            } else {
                $target.removeClass("dynatree-drop-before")
            }
            if (accept === true) {
                if ($source) {
                    $source.addClass("dynatree-drop-accept")
                }
                $target.addClass("dynatree-drop-accept");
                helper.addClass("dynatree-drop-accept")
            } else {
                if ($source) {
                    $source.removeClass("dynatree-drop-accept")
                }
                $target.removeClass("dynatree-drop-accept");
                helper.removeClass("dynatree-drop-accept")
            }
            if (accept === false) {
                if ($source) {
                    $source.addClass("dynatree-drop-reject")
                }
                $target.addClass("dynatree-drop-reject");
                helper.addClass("dynatree-drop-reject")
            } else {
                if ($source) {
                    $source.removeClass("dynatree-drop-reject")
                }
                $target.removeClass("dynatree-drop-reject");
                helper.removeClass("dynatree-drop-reject")
            }
        },
        _onDragEvent: function(eventName, node, otherNode, event, ui, draggable) {
            var hitMode, enterResponse, r, dnd = this.options.dnd, res = null, nodeTag = $(node.span);
            switch (eventName) {
            case "helper":
                var $helper = $("<div class='dynatree-drag-helper'><span class='dynatree-drag-helper-img' /></div>").append($(event.target).closest(".dynatree-title").clone());
                $("ul.dynatree-container", node.tree.divTree).append($helper);
                $helper.data("dtSourceNode", node);
                res = $helper;
                break;
            case "start":
                if (node.isStatusNode()) {
                    res = false
                } else {
                    if (dnd.onDragStart) {
                        res = dnd.onDragStart(node)
                    }
                }
                if (res === false) {
                    this.logDebug("tree.onDragStart() cancelled");
                    ui.helper.trigger("mouseup");
                    ui.helper.hide()
                } else {
                    nodeTag.addClass("dynatree-drag-source")
                }
                break;
            case "enter":
                r = dnd.onDragEnter ? dnd.onDragEnter(node, otherNode, ui, draggable) : null;
                if (!r) {
                    res = false
                } else {
                    if ($.isArray(r)) {
                        res = {
                            over: ($.inArray("over", r) >= 0),
                            before: ($.inArray("before", r) >= 0),
                            after: ($.inArray("after", r) >= 0)
                        }
                    } else {
                        res = {
                            over: ((r === true) || (r === "over")),
                            before: ((r === true) || (r === "before")),
                            after: ((r === true) || (r === "after"))
                        }
                    }
                }
                ui.helper.data("enterResponse", res);
                break;
            case "over":
                enterResponse = ui.helper.data("enterResponse");
                hitMode = null;
                if (enterResponse === false) {} else {
                    if (typeof enterResponse === "string") {
                        hitMode = enterResponse
                    } else {
                        var nodeOfs = nodeTag.offset();
                        var relPos = {
                            x: event.pageX - nodeOfs.left,
                            y: event.pageY - nodeOfs.top
                        };
                        var relPos2 = {
                            x: relPos.x / nodeTag.width(),
                            y: relPos.y / nodeTag.height()
                        };
                        if (enterResponse.after && relPos2.y > 0.75) {
                            hitMode = "after"
                        } else {
                            if (!enterResponse.over && enterResponse.after && relPos2.y > 0.5) {
                                hitMode = "after"
                            } else {
                                if (enterResponse.before && relPos2.y <= 0.25) {
                                    hitMode = "before"
                                } else {
                                    if (!enterResponse.over && enterResponse.before && relPos2.y <= 0.5) {
                                        hitMode = "before"
                                    } else {
                                        if (enterResponse.over) {
                                            hitMode = "over"
                                        }
                                    }
                                }
                            }
                        }
                        if (dnd.preventVoidMoves) {
                            if (node === otherNode) {
                                hitMode = null
                            } else {
                                if (hitMode === "before" && otherNode && node === otherNode.getNextSibling()) {
                                    hitMode = null
                                } else {
                                    if (hitMode === "after" && otherNode && node === otherNode.getPrevSibling()) {
                                        hitMode = null
                                    } else {
                                        if (hitMode === "over" && otherNode && otherNode.parent === node && otherNode.isLastSibling()) {
                                            hitMode = null
                                        }
                                    }
                                }
                            }
                        }
                        ui.helper.data("hitMode", hitMode)
                    }
                }
                if (hitMode === "over" && dnd.autoExpandMS && node.hasChildren() !== false && !node.bExpanded) {
                    node.scheduleAction("expand", dnd.autoExpandMS)
                }
                if (hitMode && dnd.onDragOver) {
                    res = dnd.onDragOver(node, otherNode, hitMode, ui, draggable);
                    if (res === "over" || res === "before" || res === "after") {
                        hitMode = res
                    }
                }
                this._setDndStatus(otherNode, node, ui.helper, hitMode, res !== false && hitMode !== null);
                break;
            case "drop":
                var isForbidden = ui.helper.hasClass("dynatree-drop-reject");
                hitMode = ui.helper.data("hitMode");
                if (hitMode && dnd.onDrop && !isForbidden) {
                    dnd.onDrop(node, otherNode, hitMode, ui, draggable)
                }
                break;
            case "leave":
                node.scheduleAction("cancel");
                ui.helper.data("enterResponse", null);
                ui.helper.data("hitMode", null);
                this._setDndStatus(otherNode, node, ui.helper, "out", undefined);
                if (dnd.onDragLeave) {
                    dnd.onDragLeave(node, otherNode, ui, draggable)
                }
                break;
            case "stop":
                nodeTag.removeClass("dynatree-drag-source");
                if (dnd.onDragStop) {
                    dnd.onDragStop(node)
                }
                break;
            default:
                throw "Unsupported drag event: " + eventName
            }
            return res
        },
        cancelDrag: function() {
            var dd = $.ui.ddmanager.current;
            if (dd) {
                dd.cancel()
            }
        },
        lastentry: undefined
    };
    $.widget("ui.dynatree", {
        _init: function() {
            if (versionCompare($.ui.version, "1.8") < 0) {
                if (this.options.debugLevel >= 0) {
                    _log("warn", "ui.dynatree._init() was called; you should upgrade to jquery.ui.core.js v1.8 or higher.")
                }
                return this._create()
            }
            if (this.options.debugLevel >= 2) {
                _log("debug", "ui.dynatree._init() was called; no current default functionality.")
            }
        },
        _create: function() {
            var opts = this.options;
            if (opts.debugLevel >= 1) {
                logMsg("Dynatree._create(): version='%s', debugLevel=%o.", $.ui.dynatree.version, this.options.debugLevel)
            }
            this.options.event += ".dynatree";
            var divTree = this.element.get(0);
            this.tree = new DynaTree(this);
            this.tree._load();
            this.tree.logDebug("Dynatree._init(): done.")
        },
        bind: function() {
            this.unbind();
            var eventNames = "click.dynatree dblclick.dynatree";
            if (this.options.keyboard) {
                eventNames += " keypress.dynatree keydown.dynatree"
            }
            this.element.bind(eventNames, function(event) {
                var dtnode = $.ui.dynatree.getNode(event.target);
                if (!dtnode) {
                    return true
                }
                var tree = dtnode.tree;
                var o = tree.options;
                tree.logDebug("event(%s): dtnode: %s", event.type, dtnode);
                var prevPhase = tree.phase;
                tree.phase = "userEvent";
                try {
                    switch (event.type) {
                    case "click":
                        return (o.onClick && o.onClick.call(tree, dtnode, event) === false) ? false : dtnode._onClick(event);
                    case "dblclick":
                        return (o.onDblClick && o.onDblClick.call(tree, dtnode, event) === false) ? false : dtnode._onDblClick(event);
                    case "keydown":
                        return (o.onKeydown && o.onKeydown.call(tree, dtnode, event) === false) ? false : dtnode._onKeydown(event);
                    case "keypress":
                        return (o.onKeypress && o.onKeypress.call(tree, dtnode, event) === false) ? false : dtnode._onKeypress(event)
                    }
                } catch (e) {
                    var _ = null;
                    tree.logWarning("bind(%o): dtnode: %o, error: %o", event, dtnode, e)
                } finally {
                    tree.phase = prevPhase
                }
            });
            function __focusHandler(event) {
                event = $.event.fix(event || window.event);
                var dtnode = $.ui.dynatree.getNode(event.target);
                return dtnode ? dtnode._onFocus(event) : false
            }
            var div = this.tree.divTree;
            if (div.addEventListener) {
                div.addEventListener("focus", __focusHandler, true);
                div.addEventListener("blur", __focusHandler, true)
            } else {
                div.onfocusin = div.onfocusout = __focusHandler
            }
        },
        unbind: function() {
            this.element.unbind(".dynatree")
        },
        enable: function() {
            this.bind();
            $.Widget.prototype.enable.apply(this, arguments)
        },
        disable: function() {
            this.unbind();
            $.Widget.prototype.disable.apply(this, arguments)
        },
        getTree: function() {
            return this.tree
        },
        getRoot: function() {
            return this.tree.getRoot()
        },
        getActiveNode: function() {
            return this.tree.getActiveNode()
        },
        getSelectedNodes: function() {
            return this.tree.getSelectedNodes()
        },
        lastentry: undefined
    });
    if (versionCompare($.ui.version, "1.8") < 0) {
        $.ui.dynatree.getter = "getTree getRoot getActiveNode getSelectedNodes"
    }
    $.extend($.ui.dynatree, {
        version: "DEVELOPMENT",
        buildType: "DEVELOP",
        _DynaTreeClass: DynaTree,
        _DynaTreeNodeClass: DynaTreeNode,
        getNode: function(el) {
            if (el instanceof DynaTreeNode) {
                return el
            }
            if (el.selector !== undefined) {
                el = el[0]
            }
            while (el) {
                if (el.dtnode) {
                    return el.dtnode
                }
                el = el.parentNode
            }
            return null
        },
        getPersistData: DynaTreeStatus._getTreePersistData
    });
    $.ui.dynatree.prototype.options = {
        title: "Dynatree",
        minExpandLevel: 1,
        imagePath: null,
        children: null,
        initId: null,
        initAjax: null,
        autoFocus: true,
        keyboard: true,
        persist: false,
        autoCollapse: false,
        clickFolderMode: 3,
        activeVisible: true,
        checkbox: false,
        selectMode: 2,
        fx: null,
        noLink: false,
        onClick: null,
        onDblClick: null,
        onKeydown: null,
        onKeypress: null,
        onFocus: null,
        onBlur: null,
        onQueryActivate: null,
        onQuerySelect: null,
        onQueryExpand: null,
        onPostInit: null,
        onActivate: null,
        onDeactivate: null,
        onSelect: null,
        onExpand: null,
        onLazyRead: null,
        onCustomRender: null,
        onCreate: null,
        onRender: null,
        postProcess: null,
        dnd: {
            onDragStart: null,
            onDragStop: null,
            revert: false,
            autoExpandMS: 1000,
            preventVoidMoves: true,
            onDragEnter: null,
            onDragOver: null,
            onDrop: null,
            onDragLeave: null
        },
        ajaxDefaults: {
            cache: false,
            timeout: 0,
            dataType: "json"
        },
        strings: {
            loading: "Loading&#8230;",
            loadError: "Load error!"
        },
        generateIds: false,
        idPrefix: "dynatree-id-",
        keyPathSeparator: "/",
        cookieId: "dynatree",
        cookie: {
            expires: null
        },
        classNames: {
            container: "dynatree-container",
            node: "dynatree-node",
            folder: "dynatree-folder",
            empty: "dynatree-empty",
            vline: "dynatree-vline",
            expander: "dynatree-expander",
            connector: "dynatree-connector",
            checkbox: "dynatree-checkbox",
            nodeIcon: "dynatree-icon",
            title: "dynatree-title",
            noConnector: "dynatree-no-connector",
            nodeError: "dynatree-statusnode-error",
            nodeWait: "dynatree-statusnode-wait",
            hidden: "dynatree-hidden",
            combinedExpanderPrefix: "dynatree-exp-",
            combinedIconPrefix: "dynatree-ico-",
            nodeLoading: "dynatree-loading",
            hasChildren: "dynatree-has-children",
            active: "dynatree-active",
            selected: "dynatree-selected",
            expanded: "dynatree-expanded",
            lazy: "dynatree-lazy",
            focused: "dynatree-focused",
            partsel: "dynatree-partsel",
            lastsib: "dynatree-lastsib"
        },
        debugLevel: 2,
        lastentry: undefined
    };
    if (versionCompare($.ui.version, "1.8") < 0) {
        $.ui.dynatree.defaults = $.ui.dynatree.prototype.options
    }
    $.ui.dynatree.nodedatadefaults = {
        title: null,
        key: null,
        isFolder: false,
        isLazy: false,
        tooltip: null,
        href: null,
        icon: null,
        addClass: null,
        noLink: false,
        activate: false,
        focus: false,
        expand: false,
        select: false,
        hideCheckbox: false,
        unselectable: false,
        children: null,
        lastentry: undefined
    };
    function _initDragAndDrop(tree) {
        var dnd = tree.options.dnd || null;
        if (dnd && (dnd.onDragStart || dnd.onDrop)) {
            _registerDnd()
        }
        if (dnd && dnd.onDragStart) {
            tree.$tree.draggable({
                addClasses: false,
                appendTo: "body",
                containment: false,
                delay: 0,
                distance: 4,
                revert: dnd.revert !== true ? false : function(dropped) {
                    logMsg("draggable.revert(), dropped=", dropped);
                    if (typeof dropped === "boolean") {
                        return !dropped
                    }
                    var helper = $.ui.ddmanager && $.ui.ddmanager.current && $.ui.ddmanager.current.helper;
                    var isRejected = helper && helper.hasClass("dynatree-drop-reject");
                    return isRejected
                }
                ,
                scroll: true,
                scrollSpeed: 7,
                scrollSensitivity: 10,
                connectToDynatree: true,
                helper: function(event) {
                    var sourceNode = $.ui.dynatree.getNode(event.target);
                    if (!sourceNode) {
                        return "<div></div>"
                    }
                    return sourceNode.tree._onDragEvent("helper", sourceNode, null, event, null, null)
                },
                start: function(event, ui) {
                    var sourceNode = ui.helper.data("dtSourceNode");
                    return !!sourceNode
                }
            })
        }
        if (dnd && dnd.onDrop) {
            tree.$tree.droppable({
                addClasses: false,
                tolerance: "pointer",
                greedy: false
            })
        }
    }
    var didRegisterDnd = false;
    var _registerDnd = function() {
        if (didRegisterDnd) {
            return
        }
        $.ui.plugin.add("draggable", "connectToDynatree", {
            start: function(event, ui) {
                var draggable = $(this).data("ui-draggable") || $(this).data("draggable")
                  , sourceNode = ui.helper.data("dtSourceNode") || null;
                if (sourceNode) {
                    draggable.offset.click.top = -2;
                    draggable.offset.click.left = +16;
                    return sourceNode.tree._onDragEvent("start", sourceNode, null, event, ui, draggable)
                }
            },
            drag: function(event, ui) {
                var draggable = $(this).data("ui-draggable") || $(this).data("draggable")
                  , sourceNode = ui.helper.data("dtSourceNode") || null
                  , prevTargetNode = ui.helper.data("dtTargetNode") || null
                  , targetNode = $.ui.dynatree.getNode(event.target);
                if (event.target && !targetNode) {
                    var isHelper = $(event.target).closest("div.dynatree-drag-helper,#dynatree-drop-marker").length > 0;
                    if (isHelper) {
                        return
                    }
                }
                ui.helper.data("dtTargetNode", targetNode);
                if (prevTargetNode && prevTargetNode !== targetNode) {
                    prevTargetNode.tree._onDragEvent("leave", prevTargetNode, sourceNode, event, ui, draggable)
                }
                if (targetNode) {
                    if (!targetNode.tree.options.dnd.onDrop) {} else {
                        if (targetNode === prevTargetNode) {
                            targetNode.tree._onDragEvent("over", targetNode, sourceNode, event, ui, draggable)
                        } else {
                            targetNode.tree._onDragEvent("enter", targetNode, sourceNode, event, ui, draggable)
                        }
                    }
                }
            },
            stop: function(event, ui) {
                var draggable = $(this).data("ui-draggable") || $(this).data("draggable")
                  , sourceNode = ui.helper.data("dtSourceNode") || null
                  , targetNode = ui.helper.data("dtTargetNode") || null
                  , eventType = event.type
                  , dropped = (eventType == "mouseup" && event.which == 1);
                logMsg("draggable-connectToDynatree.stop: targetNode(from event): %s, dtTargetNode: %s", targetNode, ui.helper.data("dtTargetNode"));
                if (!dropped) {
                    logMsg("Drag was cancelled")
                }
                if (targetNode) {
                    if (dropped) {
                        targetNode.tree._onDragEvent("drop", targetNode, sourceNode, event, ui, draggable)
                    }
                    targetNode.tree._onDragEvent("leave", targetNode, sourceNode, event, ui, draggable)
                }
                if (sourceNode) {
                    sourceNode.tree._onDragEvent("stop", sourceNode, null, event, ui, draggable)
                }
            }
        });
        didRegisterDnd = true
    }
}(jQuery));
/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011–2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
(function(b) {
    b.support.touch = "ontouchend"in document;
    if (!b.support.touch) {
        return
    }
    var d = b.ui.mouse.prototype, f = d._mouseInit, c = d._mouseDestroy, a;
    function e(h, i) {
        if (h.originalEvent.touches.length > 1) {
            return
        }
        h.preventDefault();
        var j = h.originalEvent.changedTouches[0]
          , g = document.createEvent("MouseEvents");
        g.initMouseEvent(i, true, true, window, 1, j.screenX, j.screenY, j.clientX, j.clientY, false, false, false, false, 0, null);
        h.target.dispatchEvent(g)
    }
    d._touchStart = function(h) {
        var g = this;
        if (a || !g._mouseCapture(h.originalEvent.changedTouches[0])) {
            return
        }
        a = true;
        g._touchMoved = false;
        e(h, "mouseover");
        e(h, "mousemove");
        e(h, "mousedown")
    }
    ;
    d._touchMove = function(g) {
        if (!a) {
            return
        }
        this._touchMoved = true;
        e(g, "mousemove")
    }
    ;
    d._touchEnd = function(g) {
        if (!a) {
            return
        }
        e(g, "mouseup");
        e(g, "mouseout");
        if (!this._touchMoved) {
            e(g, "click")
        }
        a = false
    }
    ;
    d._mouseInit = function() {
        var g = this;
        g.element.bind({
            touchstart: b.proxy(g, "_touchStart"),
            touchmove: b.proxy(g, "_touchMove"),
            touchend: b.proxy(g, "_touchEnd")
        });
        f.call(g)
    }
    ;
    d._mouseDestroy = function() {
        var g = this;
        g.element.unbind({
            touchstart: b.proxy(g, "_touchStart"),
            touchmove: b.proxy(g, "_touchMove"),
            touchend: b.proxy(g, "_touchEnd")
        });
        c.call(g)
    }
}
)(jQuery);
function UserDashboardWidget(a, f, b, e, d, c) {
    this.iconMap = {
        checkbox_quiz: "quiz-white",
        checkbox_dq: "discussion-white",
        checkbox_assignment: "assignment-white",
        checkbox_participation: "participation-white",
        checkbox_quiz_gradebook: "quiz-white",
        checkbox_dq_gradebook: "discussion-white",
        checkbox_assignment_gradebook: "assignment-white",
        checkbox_participation_gradebook: "participation-white",
        checkbox_scorm: "scorm-white",
        checkbox_scorm_gradebook: "scorm-white",
        checkbox_third_party: "approvedthird-white",
        checkbox_LA_gradebook: "thirdparty-white",
        checkbox_LA: "thirdparty-white"
    };
    this.jsonStr = a;
    this.sequenceOrder = f;
    this.allWidgetsArray = new Array();
    this.sequenceOrderArray = new Array();
    this.roleId = b;
    this.previousSequenceOrder = null;
    this.classSpecific = e;
    this.widgetCssOrder = d;
    this.isObsrMntrOrGuard = c;
    this.widgetCssArray = new Array();
    this.loadDataSize = 0;
    this.loadedDataCount = 0;
    this.addRemoveWidgetPermission = false;
    this.setAddRemoveWidgetPermission = function(g) {
        if (g == null || g == undefined || jQuery.trim(g).length <= 0) {
            g = false
        }
        this.addRemoveWidgetPermission = g
    }
    ;
    this.parseJsonString = function() {
        this.allWidgetsArray = jQuery.parseJSON(this.jsonStr);
        this.loadUserDashboardWidget()
    }
    ;
    this.loadUserDashboardWidget = function() {
        var k = this;
        if (this.sequenceOrder != "") {
            this.previousSequenceOrder = this.sequenceOrder;
            if (this.sequenceOrder.indexOf(",") != -1) {
                this.sequenceOrderArray = this.sequenceOrder.split(",")
            } else {
                this.sequenceOrderArray.push(this.sequenceOrder)
            }
            if (this.widgetCssOrder.indexOf(",") != -1) {
                this.widgetCssArray = this.widgetCssOrder.split(",")
            } else {
                this.widgetCssArray.push(this.widgetCssOrder)
            }
            this.loadDataSize = this.sequenceOrderArray.length;
            for (var h = 0; h < this.sequenceOrderArray.length; h++) {
                var j = this.allWidgetsArray[this.findIdMatchLocation(this.sequenceOrderArray[h], this.allWidgetsArray)];
                var g = '<div class="loader_grey" id="loader_' + j.widgetId + '"><img class="smallLoader" src="' + appNavObj.appBasePath + '/images/1569445563950/gif-load.gif"/></div>';
                jQuery("#columns").append('<div class="column ' + j.widgetCss + '" id="' + j.widgetId + '">' + g + "</div>");
                var l = (this.widgetCssArray[h] != "" && this.widgetCssArray[h] != undefined) ? this.widgetCssArray[h] : "";
                var m = appNavObj.appBasePath + j.widgetUrl + "&classSpecific=" + this.classSpecific + "&dashBoradWidgetId=" + j.widgetId + "&tempDate=" + new Date().getTime() + "&widgetColorCssToAdd=" + encodeURIComponent(l);
                jQuery("#" + j.widgetId).load(m, function() {
                    k.loadedDataCount = k.loadedDataCount + 1;
                    if (k.loadedDataCount == k.loadDataSize) {
                        k.addDragDropEvents()
                    }
                })
            }
        } else {
            this.previousSequenceOrder = "";
            this.loadDataSize = this.allWidgetsArray.length;
            for (var h = 0; h < this.allWidgetsArray.length; h++) {
                if (this.allWidgetsArray[h].defaultWidget || this.allWidgetsArray[h].fixed) {
                    this.previousSequenceOrder = this.previousSequenceOrder + this.allWidgetsArray[h].widgetId + ",";
                    var g = '<div class="loader_grey" id="loader_' + this.allWidgetsArray[h].widgetId + '"><img class="smallLoader"  src="' + appNavObj.appBasePath + '/images/1569445563950/gif-load.gif"  /></div>';
                    jQuery("#columns").append('<div class="column ' + this.allWidgetsArray[h].widgetCss + '" id="' + this.allWidgetsArray[h].widgetId + '">' + g + "</div>");
                    var m = appNavObj.appBasePath + this.allWidgetsArray[h].widgetUrl + "&classSpecific=" + this.classSpecific + "&dashBoradWidgetId=" + this.allWidgetsArray[h].widgetId + "&tempDate=" + new Date().getTime();
                    jQuery("#" + this.allWidgetsArray[h].widgetId).load(m, function() {
                        k.loadedDataCount = k.loadedDataCount + 1;
                        if (k.loadedDataCount == k.loadDataSize) {
                            k.addDragDropEvents()
                        }
                    })
                } else {
                    k.loadedDataCount = k.loadedDataCount + 1;
                    if (k.loadedDataCount == k.loadDataSize) {
                        k.addDragDropEvents()
                    }
                }
            }
            if (this.previousSequenceOrder != "") {
                this.previousSequenceOrder = this.previousSequenceOrder.substring(0, (this.previousSequenceOrder.length - 1))
            }
        }
        this.prepareWidgetToolBar()
    }
    ;
    this.prepareWidgetToolBar = function() {
        var j = '<ul id="widgetToolBarUl"><li><a href="javascript:void(0);" class="restoreDefault' + (this.addRemoveWidgetPermission ? "" : " noPermission") + '" ' + (this.addRemoveWidgetPermission ? 'onclick="javascript:userDashboardWidget.restoreDefaultConfig();"' : "") + '>Restore Default</a></li><li><ul class="widgetList">';
        var k;
        for (var h = 0; h < this.allWidgetsArray.length; h++) {
            if (this.roleId == "2" && this.allWidgetsArray[h].widgetId == "5") {
                k = i18n("today.event1")
            } else {
                if (this.allWidgetsArray[h].widgetId == "1") {
                    k = i18n("my.courses.competency.based", COURSE_PLURAL_CAPS, COMPETENCY_SINGULAR_CAPS)
                } else {
                    if (this.allWidgetsArray[h].widgetId == "3") {
                        k = i18n("my.courses.credit.based", COURSE_PLURAL_CAPS)
                    } else {
                        if (this.allWidgetsArray[h].widgetId == "13") {
                            k = i18n("planner", PLANNER_SINGULAR_CAPS)
                        } else {
                            if (this.allWidgetsArray[h].widgetId == "14") {
                                k = i18n("course.competencies", COURSE_SINGULAR_CAPS, COMPETENCY_PLURAL_CAPS)
                            } else {
                                if (this.allWidgetsArray[h].widgetId == "16") {
                                    k = i18n("gradebook", GRADEBOOK_SINGULAR_CAPS)
                                } else {
                                    k = this.allWidgetsArray[h].widgetToolbarTitle
                                }
                            }
                        }
                    }
                }
            }
            if (!this.allWidgetsArray[h].fixed) {
                j = j + "<li>";
                var g = true;
                if (this.allWidgetsArray[h].fixed && !this.allWidgetsArray[h].removed) {} else {
                    if (this.allWidgetsArray[h].defaultWidget && !this.allWidgetsArray[h].removed) {
                        j = j + '<a class="dm-chkWidget' + (this.addRemoveWidgetPermission ? "" : " noPermission") + '" href="javascript:void(0);" ' + (this.addRemoveWidgetPermission ? "onclick=\"javascript:userDashboardWidget.addRemoveWidget(this,'" + this.allWidgetsArray[h].widgetId + "','" + this.allWidgetsArray[h].defaultWidget + "');\"" : "") + ' aria-label="' + k + '"  title="' + i18n("remove.widget") + '" id="toolBarchk_' + this.allWidgetsArray[h].widgetId + '"  custom_default_widget="true"></a>'
                    } else {
                        if (!this.allWidgetsArray[h].removed) {
                            j = j + '<a class="dm-chkWidget' + (this.addRemoveWidgetPermission ? "" : " noPermission") + '" href="javascript:void(0);" ' + (this.addRemoveWidgetPermission ? "onclick=\"javascript:userDashboardWidget.addRemoveWidget(this,'" + this.allWidgetsArray[h].widgetId + "','" + this.allWidgetsArray[h].defaultWidget + "');\"" : "") + ' aria-label="' + k + '"  title="' + i18n("remove.widget") + '"  title="' + i18n("remove.widget") + '" id="toolBarchk_' + this.allWidgetsArray[h].widgetId + '"  custom_default_widget="false"></a>'
                        } else {
                            j = j + '<a class="dm-unchkWidget' + (this.addRemoveWidgetPermission ? "" : " noPermission") + '" href="javascript:void(0);" ' + (this.addRemoveWidgetPermission ? "onclick=\"javascript:userDashboardWidget.addRemoveWidget(this,'" + this.allWidgetsArray[h].widgetId + "','" + this.allWidgetsArray[h].defaultWidget + "');\"" : "") + ' aria-label="' + k + '"  title="' + i18n("add.widget") + '" title="' + i18n("add.widget") + '" id="toolBarchk_' + this.allWidgetsArray[h].widgetId + '"  custom_default_widget="false"></a>'
                        }
                    }
                }
                if (this.roleId == "2" && this.allWidgetsArray[h].widgetId == "5") {
                    j = j + '<span class="' + this.allWidgetsArray[h].widgetToolBarCssClass + '"></span>' + i18n("today.event1") + "</li>"
                } else {
                    j = j + '<span class="' + this.allWidgetsArray[h].widgetToolBarCssClass + '"></span>';
                    if (this.allWidgetsArray[h].widgetId == "1") {
                        j = j + i18n("my.courses.competency.based", COURSE_PLURAL_CAPS, COMPETENCY_SINGULAR_CAPS)
                    } else {
                        if (this.allWidgetsArray[h].widgetId == "3") {
                            j = j + i18n("my.courses.credit.based", COURSE_PLURAL_CAPS)
                        } else {
                            if (this.allWidgetsArray[h].widgetId == "13") {
                                j = j + i18n("planner", PLANNER_SINGULAR_CAPS)
                            } else {
                                if (this.allWidgetsArray[h].widgetId == "14") {
                                    j = j + i18n("course.competencies", COURSE_SINGULAR_CAPS, COMPETENCY_PLURAL_CAPS)
                                } else {
                                    if (this.allWidgetsArray[h].widgetId == "16") {
                                        j = j + i18n("gradebook", GRADEBOOK_SINGULAR_CAPS)
                                    } else {
                                        j = j + this.allWidgetsArray[h].widgetToolbarTitle + "</li>"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        j = j + '</ul></li></ul><div class="widget-slide"><a href="javascript:void(0);" aria-label="Slide Up" class="wd-slide-up disabled"></a><a href="javascript:void(0);" aria-label="Slide Down" class="wd-slide-down"></a></div>';
        jQuery("#dashBrdMenuList").html(j)
    }
    ;
    this.showWidgetToolBar = function(g) {
        this.toggleWidgetToolBar(g)
    }
    ;
    this.toggleWidgetToolBar = function(g) {
        jQuery(g).next(".dashBrd-options-list").toggle("slow", function() {
            var j = jQuery(".dashBrd-options-list").find("li:first").offset().top;
            var p = jQuery(".footer").offset().top;
            var o = jQuery(".widgetList").find("li").length;
            var m = jQuery(".dashBrd-options-list");
            var n = jQuery(".widgetList");
            var l = n.height();
            var k = m.height();
            if (jQuery(".dashBrd-options-list").height() < (p - j)) {
                jQuery(".widget-slide").find("a").addClass("disabled")
            } else {
                var h = ((Math.round(((p - j) / 65)) * 65) - 27);
                jQuery(".dashBrd-options-list").height(h);
                jQuery('a.wd-slide-down:not(".disabled")').on("click", function() {
                    jQuery("a.wd-slide-up").removeClass("disabled");
                    var q = jQuery("ul.widgetList").css("margin-top").replace("px", "");
                    if (Math.abs(jQuery("ul.widgetList").css("margin-top").replace("px", "")) < (l - h)) {
                        jQuery(".widgetList").css("margin-top", q - 65)
                    }
                    if ((l - h) - Math.abs(jQuery("ul.widgetList").css("margin-top").replace("px", "")) < 45) {
                        jQuery("a.wd-slide-down").addClass("disabled")
                    }
                });
                jQuery('a.wd-slide-up:not(".disabled")').on("click", function() {
                    jQuery("a.wd-slide-down").removeClass("disabled");
                    var q = Math.round(jQuery("ul.widgetList").css("margin-top").replace("px", ""));
                    if (q < 0) {
                        jQuery(".widgetList").css("margin-top", q + 65)
                    }
                    if (q == "-65") {
                        jQuery("a.wd-slide-up").addClass("disabled")
                    }
                })
            }
        });
        jQuery(g).toggleClass("active");
        if (jQuery(g).hasClass("active")) {
            jQuery(g).attr("aria-label", "Expanded")
        } else {
            jQuery(g).attr("aria-label", "Collapsed")
        }
    }
    ;
    this.addRemoveWidget = function(j, k, l) {
        if (this.isObsrMntrOrGuard == "true") {
            return
        }
        var g = false;
        var m = this;
        if (jQuery(j).hasClass("dm-unchkWidget")) {
            jQuery(j).removeClass("dm-unchkWidget");
            jQuery(j).addClass("dm-chkWidget");
            jQuery(j).attr("title", i18n("remove.widget"))
        } else {
            jQuery(j).addClass("dm-unchkWidget");
            jQuery(j).removeClass("dm-chkWidget");
            jQuery(j).attr("title", i18n("add.widget"));
            g = true
        }
        var o = "";
        var n = "";
        jQuery(".column").each(function() {
            if (g && k != jQuery(this).attr("id")) {
                o = o + jQuery(this).attr("id") + ","
            } else {
                if (!g) {
                    o = o + jQuery(this).attr("id") + ","
                }
            }
            n += jQuery(this).children("div").eq(0).attr("class") + ","
        });
        if (!g) {
            o = o + k + ","
        }
        var h = appNavObj.appBasePath + "/dashboardWidget/dashboardWidget.lc?operation=addRemoveWidget&widgetId=" + k + "&isRemoved=" + g + "&sequenceOrder=" + (o.substring(0, (o.length - 1))) + "&isDefaultWidget=" + l + "&classSpecific=" + this.classSpecific + "&tempDate=" + new Date().getTime() + "&widgetCss=" + (n != "" ? n.substring(0, (n.length - 1)) : "");
        appNavObj.showInprogressPopup(1);
        jQuery.getJSON(h, function(r) {
            appNavObj.closeInprogressPopup();
            if (r = "1") {
                var q = m.allWidgetsArray[m.findIdMatchLocation(k, m.allWidgetsArray)];
                if (g) {
                    jQuery("#" + q.widgetId).remove()
                } else {
                    jQuery("#columns").sortable("destroy");
                    var p = '<div class="loader_grey" id="loader_' + q.widgetId + '"><img class="smallLoader" src="' + appNavObj.appBasePath + '/images/1569445563950/gif-load.gif"/></div>';
                    jQuery("#columns").append('<div class="column ' + q.widgetCss + '" id="' + q.widgetId + '">' + p + "</div>");
                    jQuery("#" + q.widgetId).load(appNavObj.appBasePath + q.widgetUrl + "&dashBoradWidgetId=" + q.widgetId + "&tempDate=" + new Date().getTime() + "&classSpecific=" + m.classSpecific, function() {
                        m.addDragDropEvents()
                    })
                }
            }
        })
    }
    ;
    this.findIdMatchLocation = function(k, g) {
        if (k == null) {
            return
        }
        var h = null;
        for (h = 0; h < g.length; h++) {
            var j = (g[h].widgetId).toString();
            if (k.toString() == j) {
                return h
            }
        }
        return null
    }
    ;
    this.addDragDropEvents = function() {
        if (this.addRemoveWidgetPermission) {
            var g = this;
            jQuery("#columns").sortable({
                stop: function(h, j) {
                    g.reOrderWidgets()
                },
                tolerance: "pointer",
                containment: "parent"
            })
        }
    }
    ;
    this.reOrderWidgets = function() {
        var j = "";
        var h = "";
        jQuery(".column").each(function() {
            j = j + jQuery(this).attr("id") + ",";
            h += jQuery(this).find("div:first").attr("class") + ","
        });
        var g = appNavObj.appBasePath + "/dashboardWidget/dashboardWidget.lc?operation=reOrderWidgets&i=1&classSpecific=" + this.classSpecific + "&sequenceOrder=" + (j != "" ? j.substring(0, (j.length - 1)) : "") + "&tempDate=" + new Date().getTime() + "&widgetCss=" + (h != "" ? h.substring(0, (h.length - 1)) : "");
        appNavObj.showInprogressPopup(1);
        jQuery.getJSON(g, function(k) {
            appNavObj.closeInprogressPopup()
        })
    }
    ;
    this.showAndHideFilterPopUp = function(g) {
        jQuery(".blkpopup").not(jQuery(g).next("blkpopup")).hide();
        jQuery(".fc-settingLink").not(jQuery(g)).removeClass("active");
        if (!jQuery(g).hasClass("active")) {
            jQuery(g).next().show();
            jQuery(g).addClass("active").attr("aria-expanded", "true")
        } else {
            jQuery(g).next().hide();
            jQuery(g).removeClass("active").attr("aria-expanded", "false")
        }
        jQuery(".currentColorSelection").next().hide()
    }
    ;
    this.showOptions = function(h) {
        var g = jQuery(h).next();
        jQuery(h).next().toggle();
        jQuery(h).closest(".tac-filter-select").toggleClass("active");
        jQuery(".currentColorSelection").next().hide();
        if (g.is(":visible")) {
            jQuery(h).closest(".tac-filter-select").find("ul").attr({
                "aria-hidden": "false"
            });
            jQuery(h).find("a.downArrofl").attr({
                "aria-expanded": "true"
            })
        } else {
            jQuery(h).closest(".tac-filter-select").find("ul").attr({
                "aria-hidden": "true"
            });
            jQuery(h).find("a.downArrofl").attr({
                "aria-expanded": "false"
            })
        }
    }
    ;
    this.sortAccordingToDate = function(m, l, n, h, k) {
        var j = new Array(0);
        jQuery(k).attr({
            "aria-pressed": "true"
        });
        jQuery(k).siblings("input[type='submit']").attr({
            "aria-pressed": "false"
        });
        if (l == "true") {
            jQuery("#" + n).find("tr").each(function() {
                if (jQuery(this).attr(h)) {
                    var o = new Date(jQuery(this).attr(h)).getTime();
                    j.push({
                        obj: (jQuery(this)),
                        createdDate: o
                    })
                }
            })
        } else {
            jQuery("#" + n).find("li").each(function() {
                if (jQuery(this).attr(h)) {
                    var o = new Date(jQuery(this).attr(h)).getTime();
                    j.push({
                        obj: (jQuery(this)),
                        createdDate: o
                    })
                }
            })
        }
        if (m == "true") {
            jQuery(k).next().removeClass("active");
            jQuery(k).addClass("active");
            j.sort(function(p, o) {
                if (p.createdDate > o.createdDate) {
                    return 1
                } else {
                    if (p.createdDate < o.createdDate) {
                        return -1
                    } else {
                        return 0
                    }
                }
            })
        } else {
            jQuery(k).prev().removeClass("active");
            jQuery(k).addClass("active");
            j.sort(function(p, o) {
                if (p.createdDate > o.createdDate) {
                    return -1
                } else {
                    if (p.createdDate < o.createdDate) {
                        return 1
                    } else {
                        return 0
                    }
                }
            })
        }
        for (var g = 0; g < j.length; g++) {
            jQuery("#" + n).append(j[g].obj)
        }
    }
    ;
    this.removeWidget = function(h) {
        if (this.addRemoveWidgetPermission == false) {
            new Boxy("#noPermissionDialog");
            return
        }
        var k = this;
        var l = "";
        jQuery(".column").each(function() {
            if (jQuery(this).attr("id") != h) {
                l = l + jQuery(this).attr("id") + ","
            }
        });
        var j = k.allWidgetsArray[k.findIdMatchLocation(h, k.allWidgetsArray)];
        var g = appNavObj.appBasePath + "/dashboardWidget/dashboardWidget.lc?operation=addRemoveWidget&widgetId=" + h + "&classSpecific=" + this.classSpecific + "&isRemoved=true&sequenceOrder=" + (l.substring(0, (l.length - 1))) + "&isDefaultWidget=" + j.defaultWidget + "&&tempDate=" + new Date().getTime();
        appNavObj.showInprogressPopup(1);
        jQuery.getJSON(g, function(m) {
            appNavObj.closeInprogressPopup();
            if (m = "1") {
                jQuery("#" + j.widgetId).remove();
                jQuery("#toolBarchk_" + j.widgetId).removeClass("dm-chkWidget");
                jQuery("#toolBarchk_" + j.widgetId).addClass("dm-unchkWidget")
            }
        })
    }
    ;
    this.showCalendar = function(h) {
        if (h != "") {
            var g = "/user/users.lc?operation=loggedIn&classId=" + h + "#" + appNavObj.appBasePath + "/calendar/calendar.lc?operation=getMasterCalendar&t=calendarMenuoption&c=prepareMasterCalendar";
            window.location = appNavObj.appBasePath + "/user/users.lc?operation=loggedIn&navClassId=" + h + "&navigateURL=" + g
        } else {
            if (this.roleId == "2") {
                var g = "/user/users.lc?operation=loggedIn#" + appNavObj.appBasePath + "/calendar/calendar.lc?operation=getUserCalendar&t=calendarMenuoption&c=prepareCalendar";
                window.location = appNavObj.appBasePath + "/user/users.lc?operation=loggedIn&navigateURL=" + g
            }
        }
    }
    ;
    this.navigateToUrl = function(g, h) {
        var j;
        if (h != "") {
            j = "/user/users.lc?operation=loggedIn&classId=" + h + "#" + g;
            if (this.isObsrMntrOrGuard == "true") {
                appNavObj.setURL(g)
            } else {
                window.location = appNavObj.appBasePath + "/user/users.lc?operation=loggedIn&navClassId=" + h + "&navigateURL=" + j + "&t=competencyClassesMenuOption"
            }
        } else {
            if (this.isObsrMntrOrGuard == "true") {
                appNavObj.setURL(g)
            } else {
                j = "/user/users.lc?operation=loggedIn#" + g;
                window.location = appNavObj.appBasePath + "/user/users.lc?operation=loggedIn&navigateURL=" + j
            }
        }
    }
    ;
    this.filterByClass = function(l) {
        for (var h = 0; h < this.allWidgetsArray.length; h++) {
            var k = this.allWidgetsArray[h];
            switch (parseInt(k.widgetId)) {
            case 2:
                var j = this.clientSideFilter(2, l, parseInt(jQuery("#tasksConter").html()));
                jQuery("#tasksConter").html(j);
                break;
            case 4:
                var j = this.clientSideFilter(4, l, parseInt(jQuery("#submissionsConter").html()));
                jQuery("#submissionsConter").html(j);
                break;
            case 5:
                var j = this.clientSideFilter(5, l);
                break;
            case 6:
                var j = this.clientSideFilter(6, l, parseInt(jQuery("#recentlyAccessedCounter").html()));
                jQuery("#recentlyAccessedCounter").html(j);
                break;
            case 7:
                var g = appNavObj.appBasePath + k.widgetUrl + "&dashBoradWidgetId=" + k.widgetId + "&tempDate=" + new Date().getTime();
                if (l != "-1") {
                    g = appNavObj.appBasePath + k.widgetUrl + "&classId=" + l + "&dashBoradWidgetId=" + k.widgetId + "&tempDate=" + new Date().getTime()
                }
                jQuery("#" + k.widgetId).load(g, function() {});
                break;
            case 8:
                var g = appNavObj.appBasePath + k.widgetUrl + "&dashBoradWidgetId=" + k.widgetId + "&tempDate=" + new Date().getTime();
                if (l != "-1") {
                    g = appNavObj.appBasePath + k.widgetUrl + "&classId=" + l + "&dashBoradWidgetId=" + k.widgetId + "&tempDate=" + new Date().getTime()
                }
                jQuery("#" + k.widgetId).load(g, function() {});
                break;
            case 10:
                var j = this.clientSideFilter(10, l, parseInt(jQuery("#ungradedTasksConter").html()));
                jQuery("#ungradedTasksConter").html(j);
                break;
            case 11:
                var g = appNavObj.appBasePath + k.widgetUrl + "&dashBoradWidgetId=" + k.widgetId + "&tempDate=" + new Date().getTime();
                if (l != "-1") {
                    g = appNavObj.appBasePath + k.widgetUrl + "&classId=" + l + "&dashBoradWidgetId=" + k.widgetId + "&tempDate=" + new Date().getTime()
                }
                jQuery("#" + k.widgetId).load(g, function() {});
                break
            }
        }
    }
    ;
    this.clientSideFilter = function(h, j, g) {
        if (j == "-1") {
            jQuery("#" + h + " .tac-dashboard-box-content").find("li").each(function() {
                if (jQuery(this).is(":hidden")) {
                    g++
                }
                jQuery(this).show()
            })
        } else {
            jQuery("#" + h + " .tac-dashboard-box-content").find("li").each(function() {
                var k = jQuery(this).attr("data-custom-class");
                if (typeof k != "undefined") {
                    if (jQuery(this).attr("data-custom-class") != j) {
                        if (!jQuery(this).is(":hidden")) {
                            g--
                        }
                        jQuery(this).hide()
                    } else {
                        if (jQuery(this).is(":hidden")) {
                            g++
                        }
                        jQuery(this).show()
                    }
                }
            })
        }
        return g
    }
    ;
    this.filterClasses = function(m, j, o) {
        var h = new Array(0);
        var q = jQuery("#" + j).find("tr");
        var l = new Date().getTime();
        var n = new Date().getTime();
        var o = o;
        if (q.length > 0) {
            var k = 0;
            var p = "";
            for (i = 0; i < q.length; i++) {
                l = new Date(jQuery(q[i]).attr("data-custom-start-date")).getTime();
                n = new Date(jQuery(q[i]).attr("data-custom-end-date")).getTime();
                switch (m) {
                case "1":
                    if (o > l && o < n) {
                        jQuery(q[i]).show();
                        jQuery(q[i + 1]).show();
                        k++
                    } else {
                        jQuery(q[i]).hide();
                        jQuery(q[i + 1]).hide()
                    }
                    break;
                case "2":
                    if (o > n) {
                        jQuery(q[i]).show();
                        jQuery(q[i + 1]).show();
                        k++
                    } else {
                        jQuery(q[i]).hide();
                        jQuery(q[i + 1]).hide()
                    }
                    break;
                case "3":
                    if (o < l) {
                        jQuery(q[i]).show();
                        jQuery(q[i + 1]).show();
                        k++
                    } else {
                        jQuery(q[i]).hide();
                        jQuery(q[i + 1]).hide()
                    }
                    break
                }
                i = i + 1
            }
            if (k == 0) {
                jQuery("#noClassesAvailable").show()
            } else {
                jQuery("#noClassesAvailable").hide()
            }
            jQuery("#" + j).parent().addClass("posRel");
            var g = document.querySelector("#" + j).parentNode;
            new PerfectScrollbar(g,{
                suppressScrollX: true
            })
        }
    }
    ;
    this.sortClasses = function(j, h, n, k) {
        var g = new Array(0);
        jQuery(k).attr({
            "aria-pressed": "true"
        });
        jQuery(k).siblings("input[type='submit']").attr({
            "aria-pressed": "false"
        });
        var p = jQuery("#" + h).find("tr");
        var m = "";
        if (p.length > 0) {
            var o = "";
            for (l = 0; l < p.length; l++) {
                m = new Date(jQuery(p[l]).attr(n)).getTime();
                g.push({
                    classRow: jQuery(p[l]),
                    progressBarRow: jQuery(p[l + 1]),
                    startDate: m
                });
                l = l + 1
            }
        }
        if (j == "true") {
            jQuery(k).next().removeClass("active");
            jQuery(k).addClass("active");
            g.sort(function(r, q) {
                if (r.startDate > q.startDate) {
                    return 1
                } else {
                    if (r.startDate < q.startDate) {
                        return -1
                    } else {
                        return 0
                    }
                }
            })
        } else {
            jQuery(k).prev().removeClass("active");
            jQuery(k).addClass("active");
            g.sort(function(r, q) {
                if (r.startDate > q.startDate) {
                    return -1
                } else {
                    if (r.startDate < q.startDate) {
                        return 1
                    } else {
                        return 0
                    }
                }
            })
        }
        if (g.length > 0) {
            for (var l = 0; l < g.length; l++) {
                jQuery("#" + h).append(g[l].classRow);
                jQuery("#" + h).append(g[l].progressBarRow)
            }
        }
    }
    ;
    this.filterByTask = function(n, o, k, j, m) {
        if (jQuery(n).attr("id") != j) {
            if (jQuery("#" + j).prop("checked")) {
                jQuery("#" + j).prop("checked", false)
            }
            this.checkAllTaskBox(n, j)
        }
        this.toggleAllTypeFilter(n, j);
        var g = jQuery(n).parent().parent();
        var l = this;
        var h = 0;
        jQuery(g).find("input[type='checkbox']").each(function() {
            var q = jQuery(this).attr("id");
            var p = false;
            if (jQuery(this).prop("checked")) {
                p = true
            }
            if (p) {
                jQuery("#" + o).find("li").each(function() {
                    if (jQuery(this).hasClass(l.iconMap[q])) {
                        h += jQuery(this).outerHeight(true);
                        jQuery(this).show()
                    }
                });
                jQuery("#" + o).height(h)
            } else {
                jQuery("#" + o).find("li").each(function() {
                    if (jQuery(this).hasClass(l.iconMap[q])) {
                        h += jQuery(this).height();
                        jQuery(this).hide()
                    }
                });
                jQuery("#" + o).height(h)
            }
        });
        this.updateCount(k, o);
        if (parseInt(jQuery("#" + k).html()) == 0) {
            jQuery("#" + m).show()
        } else {
            jQuery("#" + m).hide()
        }
    }
    ;
    this.checkAllTaskBox = function(k, j) {
        var g = 0;
        var h = jQuery(k).parent().parent();
        var l = jQuery(h).children().length;
        jQuery(h).find("input[type='checkbox']").each(function() {
            if (jQuery(this).attr("id") != j && jQuery(this).is(":checked")) {
                g++
            }
        });
        if (g == (l - 1)) {
            jQuery("#" + j).prop("checked", "checked")
        } else {
            jQuery("#" + j).prop("checked", false)
        }
    }
    ;
    this.showAllTasks = function(m, o, l, k, n) {
        var g = true;
        var j;
        if (!jQuery(m).prop("checked")) {
            g = false
        }
        var h = jQuery(m).parent().parent();
        jQuery(h).find("input[type='checkbox']").each(function() {
            if (jQuery(this).attr("id") != k) {
                if (g) {
                    jQuery(this).prop("checked", "checked")
                } else {
                    jQuery(this).prop("checked", false)
                }
            }
            j += jQuery(this).outerHeight(true);
            jQuery("#" + o).height(j)
        });
        this.filterByTask(m, o, l, k, n)
    }
    ;
    this.toggleAllTypeFilter = function(k, j) {
        var g = true;
        var h = jQuery(k).parent().parent();
        jQuery(h).find("li").each(function() {
            if (!jQuery(this).find("a").hasClass("dashbd-cehckclsNew") && jQuery(this).find("a").attr("id") != j) {
                g = false
            }
        });
        if (!g) {
            jQuery("#" + j).removeClass("dashbd-cehckclsNew")
        } else {
            jQuery("#" + j).addClass("dashbd-cehckclsNew")
        }
    }
    ;
    this.updateCount = function(h, j) {
        var g = 0;
        jQuery("#" + j).find("li").each(function() {
            var k = jQuery(this).attr("data-custom-class");
            if (typeof k != "undefined") {
                if (jQuery(this).is(":visible")) {
                    g++
                }
            }
        });
        jQuery("#" + h).html(g)
    }
    ;
    this.restoreDefaultConfig = function() {
        var g = this;
        jQuery.get(appNavObj.appBasePath + "/dashboardWidget/dashboardWidget.lc?operation=restoreDefaultConfig&classSpecific=" + this.classSpecific + "&tempDate=" + new Date(), function(h) {
            if (h.result == "1") {
                if (g.classSpecific == "true") {
                    window.location = appNavObj.appBasePath + "/user/users.lc?operation=loggedIn"
                } else {
                    if (h.classId) {
                        window.location = appNavObj.appBasePath + "/user/users.lc?operation=loggedIn&classId=" + h.classId
                    } else {
                        appNavObj.setURL(appNavObj.appBasePath + "/dashboardWidget/dashboardWidget.lc?operation=getUserDashBoard&c=prepareUserDashBoard&classSpecific=" + g.classSpecific)
                    }
                }
            }
        }, "json")
    }
    ;
    this.moveToClassOutlineIUView = function(g, h) {
        appNavObj.setURL(appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutlineIUView&c=prepareClassOutlineForm&folderContentId=" + g + "&classId=" + h + "&fromOtherPage=true&tempDate=" + new Date().getTime())
    }
    ;
    this.moveToClassCompetencyView = function(h, k, j, g) {
        appNavObj.setURL(appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutlineCompetencyView&c=prepareCompetenciesViewForm&t=coursesMenuOption&folderContentId=" + h + "&classId=" + k + "&classStatementId=" + j + "&viewType=" + g + "&fromOtherPage=true&fromDashBoard=true&tempDate=" + new Date().getTime())
    }
    ;
    this.changeWidgetBackGround = function(k, g, h, j) {
        if (this.addRemoveWidgetPermission == false) {
            new Boxy("#noPermissionDialog");
            return
        }
        jQuery("#" + k).removeClass();
        jQuery("#" + k).addClass("tac-dashboard-box " + g);
        jQuery(h).closest("ul").find("li").each(function() {
            jQuery(this).find("a").removeClass("selected")
        });
        jQuery(h).addClass("selected");
        jQuery("#" + j).removeClass();
        jQuery("#" + j).addClass(jQuery(h).attr("class"));
        jQuery(h).closest("ul").hide();
        this.reOrderWidgets()
    }
    ;
    this.showColoerPallete = function(g) {
        if (jQuery(g).next("ul").is(":visible")) {
            jQuery(g).find("a").attr({
                "aria-expanded": "false"
            });
            jQuery(g).next("ul").hide()
        } else {
            jQuery(g).find("a").attr({
                "aria-expanded": "true"
            });
            jQuery(g).next("ul").show()
        }
        jQuery(".tac-filter-select").removeClass("active");
        jQuery(".tac-filter-select ul").hide()
    }
    ;
    this.showSelectedColor = function(k, j, h) {
        var g = jQuery("#" + k);
        var l = "";
        if (jQuery("#" + j).hasClass("dashboard-box-yellow")) {
            g.find(".widget_color_yellow").addClass("selected");
            l = "widget_color_yellow"
        } else {
            if (jQuery("#" + j).hasClass("dashboard-box-red")) {
                g.find(".widget_color_red").addClass("selected");
                l = "widget_color_red"
            } else {
                if (jQuery("#" + j).hasClass("dashboard-box-crimson")) {
                    g.find(".widget_color_crimson").addClass("selected");
                    l = "widget_color_crimson"
                } else {
                    if (jQuery("#" + j).hasClass("dashboard-box-darkSlateGray")) {
                        g.find(".widget_color_darkSlateGray").addClass("selected");
                        l = "widget_color_darkSlateGray"
                    } else {
                        if (jQuery("#" + j).hasClass("dashboard-box-lightBlue")) {
                            g.find(".widget_color_lightBlue").addClass("selected");
                            l = "widget_color_lightBlue"
                        } else {
                            if (jQuery("#" + j).hasClass("dashboard-box-aquamarine")) {
                                g.find(".widget_color_aquamarine").addClass("selected");
                                l = "widget_color_aquamarine"
                            } else {
                                if (jQuery("#" + j).hasClass("dashboard-box-lightGreen")) {
                                    g.find(".widget_color_lightGreen").addClass("selected");
                                    l = "widget_color_lightGreen"
                                } else {
                                    if (jQuery("#" + j).hasClass("dashboard-box-goldenrod")) {
                                        g.find(".widget_color_goldenrod").addClass("selected");
                                        l = "widget_color_goldenrod"
                                    } else {
                                        if (jQuery("#" + j).hasClass("dashboard-box-whiteGray")) {
                                            g.find(".widget_color_whiteGray").addClass("selected");
                                            l = "widget_color_whiteGray"
                                        } else {
                                            if (jQuery("#" + j).hasClass("dashboard-box-mediumPurple")) {
                                                g.find(".widget_color_mediumPurple").addClass("selected");
                                                l = "widget_color_mediumPurple"
                                            } else {
                                                if (jQuery("#" + j).hasClass("dashboard-box-black")) {
                                                    g.find(".widget_color_black").addClass("selected");
                                                    l = "widget_color_black"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (l != "") {
            jQuery("#" + h).removeClass();
            jQuery("#" + h).addClass(l)
        }
    }
}
;(function(b) {
    var a = {
        init: function(c) {
            var d = {
                timer: null,
                timerSeconds: 10,
                callback: function() {},
                timerCurrent: 0,
                showPercentage: false,
                fill: false,
                color: "#CCC"
            };
            d = b.extend(d, c);
            return this.each(function() {
                var f = b(this);
                var e = f.data("pietimer");
                if (!e) {
                    f.addClass("pietimer");
                    f.css({
                        fontSize: f.width()
                    });
                    f.data("pietimer", d);
                    if (d.showPercentage) {
                        f.find(".percent").show()
                    }
                    if (d.fill) {
                        f.addClass("fill")
                    }
                    f.pietimer("start")
                }
            })
        },
        stopWatch: function() {
            var d = b(this).data("pietimer");
            if (d) {
                var e = (d.timerFinish - (new Date().getTime())) / 1000;
                if (e <= 0) {
                    clearInterval(d.timer);
                    b(this).pietimer("drawTimer", 100);
                    d.callback()
                } else {
                    var c = 100 - ((e / (d.timerSeconds)) * 100);
                    b(this).pietimer("drawTimer", c)
                }
            }
        },
        drawTimer: function(d) {
            $this = b(this);
            var e = $this.data("pietimer");
            if (e) {
                $this.html('<div class="percent"></div><div class="slice' + (d > 50 ? ' gt50"' : '"') + '><div class="pie"></div>' + (d > 50 ? '<div class="pie fill"></div>' : "") + "</div>");
                var c = 360 / 100 * d;
                $this.find(".slice .pie").css({
                    "-moz-transform": "rotate(" + c + "deg)",
                    "-webkit-transform": "rotate(" + c + "deg)",
                    "-o-transform": "rotate(" + c + "deg)",
                    transform: "rotate(" + c + "deg)"
                });
                $this.find(".percent").html(Math.round(d));
                if (e.showPercentage) {
                    $this.find(".percent").show()
                }
                if ($this.hasClass("fill")) {
                    $this.find(".slice .pie").css({
                        backgroundColor: e.color
                    })
                } else {
                    $this.find(".slice .pie").css({
                        borderColor: e.color
                    })
                }
            }
        },
        start: function() {
            var c = b(this).data("pietimer");
            if (c) {
                c.timerFinish = new Date().getTime() + (c.timerSeconds * 1000);
                b(this).pietimer("drawTimer", 0);
                c.timer = setInterval("$this.pietimer('stopWatch')", 50)
            }
        },
        reset: function() {
            var c = b(this).data("pietimer");
            if (c) {
                clearInterval(c.timer);
                b(this).pietimer("drawTimer", 0)
            }
        }
    };
    b.fn.pietimer = function(c) {
        if (a[c]) {
            return a[c].apply(this, Array.prototype.slice.call(arguments, 1))
        } else {
            if (typeof c === "object" || !c) {
                return a.init.apply(this, arguments)
            } else {
                b.error("Method " + c + " does not exist on jQuery.pietimer")
            }
        }
    }
}
)(jQuery);
/*!jQuery Knob*/
(function(d) {
    var b = {}
      , a = Math.max
      , c = Math.min;
    b.c = {};
    b.c.d = d(document);
    b.c.t = function(f) {
        return f.originalEvent.touches.length - 1
    }
    ;
    b.o = function() {
        var e = this;
        this.o = null;
        this.$ = null;
        this.i = null;
        this.g = null;
        this.v = null;
        this.cv = null;
        this.x = 0;
        this.y = 0;
        this.$c = null;
        this.c = null;
        this.t = 0;
        this.isInit = false;
        this.fgColor = null;
        this.pColor = null;
        this.dH = null;
        this.cH = null;
        this.eH = null;
        this.rH = null;
        this.run = function() {
            var f = function(i, h) {
                var g;
                for (g in h) {
                    e.o[g] = h[g]
                }
                e.init();
                e._configure()._draw()
            };
            if (this.$.data("kontroled")) {
                return
            }
            this.$.data("kontroled", true);
            this.extend();
            this.o = d.extend({
                min: this.$.data("min") || 0,
                max: this.$.data("max") || 100,
                stopper: true,
                readOnly: this.$.data("readonly"),
                cursor: (this.$.data("cursor") === true && 30) || this.$.data("cursor") || 0,
                thickness: this.$.data("thickness") || 0.35,
                lineCap: this.$.data("linecap") || "butt",
                width: this.$.data("width") || 200,
                height: this.$.data("height") || 200,
                displayInput: this.$.data("displayinput") == null || this.$.data("displayinput"),
                displayPrevious: this.$.data("displayprevious"),
                fgColor: this.$.data("fgcolor") || "#87CEEB",
                inputColor: this.$.data("inputcolor") || this.$.data("fgcolor") || "#87CEEB",
                inline: false,
                step: this.$.data("step") || 1,
                draw: null,
                change: null,
                cancel: null,
                release: null
            }, this.o);
            if (this.$.is("fieldset")) {
                this.v = {};
                this.i = this.$.find("input");
                this.i.each(function(g) {
                    var h = d(this);
                    e.i[g] = h;
                    e.v[g] = h.val();
                    h.bind("change", function() {
                        var i = {};
                        i[g] = h.val();
                        e.val(i)
                    })
                });
                this.$.find("legend").remove()
            } else {
                this.i = this.$;
                this.v = this.$.val();
                (this.v == "") && (this.v = this.o.min);
                this.$.bind("change", function() {
                    e.val(e._validate(e.$.val()))
                })
            }
            (!this.o.displayInput) && this.$.hide();
            this.$c = d('<canvas width="' + this.o.width + 'px" height="' + this.o.height + 'px"></canvas>');
            this.c = this.$c[0].getContext("2d");
            this.$.wrap(d('<div style="' + (this.o.inline ? "display:inline;" : "") + "width:" + this.o.width + "px;height:" + this.o.height + 'px;"></div>')).before(this.$c);
            if (this.v instanceof Object) {
                this.cv = {};
                this.copy(this.v, this.cv)
            } else {
                this.cv = this.v
            }
            this.$.bind("configure", f).parent().bind("configure", f);
            this._listen()._configure()._xy().init();
            this.isInit = true;
            this._draw();
            return this
        }
        ;
        this._draw = function() {
            var f = true
              , g = document.createElement("canvas");
            g.width = e.o.width;
            g.height = e.o.height;
            e.g = g.getContext("2d");
            e.clear();
            e.dH && (f = e.dH());
            (f !== false) && e.draw();
            e.c.drawImage(g, 0, 0);
            g = null
        }
        ;
        this._touch = function(f) {
            var g = function(i) {
                var h = e.xy2val(i.originalEvent.touches[e.t].pageX, i.originalEvent.touches[e.t].pageY);
                if (h == e.cv) {
                    return
                }
                if (e.cH && (e.cH(h) === false)) {
                    return
                }
                e.change(e._validate(h));
                e._draw()
            };
            this.t = b.c.t(f);
            g(f);
            b.c.d.bind("touchmove.k", g).bind("touchend.k", function() {
                b.c.d.unbind("touchmove.k touchend.k");
                if (e.rH && (e.rH(e.cv) === false)) {
                    return
                }
                e.val(e.cv)
            });
            return this
        }
        ;
        this._mouse = function(g) {
            var f = function(i) {
                var h = e.xy2val(i.pageX, i.pageY);
                if (h == e.cv) {
                    return
                }
                if (e.cH && (e.cH(h) === false)) {
                    return
                }
                e.change(e._validate(h));
                e._draw()
            };
            f(g);
            b.c.d.bind("mousemove.k", f).bind("keyup.k", function(h) {
                if (h.keyCode === 27) {
                    b.c.d.unbind("mouseup.k mousemove.k keyup.k");
                    if (e.eH && (e.eH() === false)) {
                        return
                    }
                    e.cancel()
                }
            }).bind("mouseup.k", function(h) {
                b.c.d.unbind("mousemove.k mouseup.k keyup.k");
                if (e.rH && (e.rH(e.cv) === false)) {
                    return
                }
                e.val(e.cv)
            });
            return this
        }
        ;
        this._xy = function() {
            var f = this.$c.offset();
            this.x = f.left;
            this.y = f.top;
            return this
        }
        ;
        this._listen = function() {
            if (!this.o.readOnly) {
                this.$c.bind("mousedown", function(f) {
                    f.preventDefault();
                    e._xy()._mouse(f)
                }).bind("touchstart", function(f) {
                    f.preventDefault();
                    e._xy()._touch(f)
                });
                this.listen()
            } else {
                this.$.attr("readonly", "readonly")
            }
            return this
        }
        ;
        this._configure = function() {
            if (this.o.draw) {
                this.dH = this.o.draw
            }
            if (this.o.change) {
                this.cH = this.o.change
            }
            if (this.o.cancel) {
                this.eH = this.o.cancel
            }
            if (this.o.release) {
                this.rH = this.o.release
            }
            if (this.o.displayPrevious) {
                this.pColor = this.h2rgba(this.o.fgColor, "0.4");
                this.fgColor = this.h2rgba(this.o.fgColor, "0.6")
            } else {
                this.fgColor = this.o.fgColor
            }
            return this
        }
        ;
        this._clear = function() {
            this.$c[0].width = this.$c[0].width
        }
        ;
        this._validate = function(f) {
            return (~~(((f < 0) ? -0.5 : 0.5) + (f / this.o.step))) * this.o.step
        }
        ;
        this.listen = function() {}
        ;
        this.extend = function() {}
        ;
        this.init = function() {}
        ;
        this.change = function(f) {}
        ;
        this.val = function(f) {}
        ;
        this.xy2val = function(f, g) {}
        ;
        this.draw = function() {}
        ;
        this.clear = function() {
            this._clear()
        }
        ;
        this.h2rgba = function(i, f) {
            var g;
            i = i.substring(1, 7);
            g = [parseInt(i.substring(0, 2), 16), parseInt(i.substring(2, 4), 16), parseInt(i.substring(4, 6), 16)];
            return "rgba(" + g[0] + "," + g[1] + "," + g[2] + "," + f + ")"
        }
        ;
        this.copy = function(j, h) {
            for (var g in j) {
                h[g] = j[g]
            }
        }
    }
    ;
    b.Dial = function() {
        b.o.call(this);
        this.startAngle = null;
        this.xy = null;
        this.radius = null;
        this.lineWidth = null;
        this.cursorExt = null;
        this.w2 = null;
        this.PI2 = 2 * Math.PI;
        this.extend = function() {
            this.o = d.extend({
                bgColor: this.$.data("bgcolor") || "#EEEEEE",
                angleOffset: this.$.data("angleoffset") || 0,
                angleArc: this.$.data("anglearc") || 360,
                inline: true
            }, this.o)
        }
        ;
        this.val = function(e) {
            if (null != e) {
                this.cv = this.o.stopper ? a(c(e, this.o.max), this.o.min) : e;
                this.v = this.cv;
                this.$.val(this.v);
                this._draw()
            } else {
                return this.v
            }
        }
        ;
        this.xy2val = function(e, h) {
            var f, g;
            f = Math.atan2(e - (this.x + this.w2), -(h - this.y - this.w2)) - this.angleOffset;
            if (this.angleArc != this.PI2 && (f < 0) && (f > -0.5)) {
                f = 0
            } else {
                if (f < 0) {
                    f += this.PI2
                }
            }
            g = ~~(0.5 + (f * (this.o.max - this.o.min) / this.angleArc)) + this.o.min;
            this.o.stopper && (g = a(c(g, this.o.max), this.o.min));
            return g
        }
        ;
        this.listen = function() {
            var f = this, j = function(o) {
                o.preventDefault();
                var n = o.originalEvent
                  , l = n.detail || n.wheelDeltaX
                  , k = n.detail || n.wheelDeltaY
                  , m = parseInt(f.$.val()) + (l > 0 || k > 0 ? f.o.step : l < 0 || k < 0 ? -f.o.step : 0);
                if (f.cH && (f.cH(m) === false)) {
                    return
                }
                f.val(m)
            }, h, i, e = 1, g = {
                37: -f.o.step,
                38: f.o.step,
                39: f.o.step,
                40: -f.o.step
            };
            this.$.bind("keydown", function(m) {
                var l = m.keyCode;
                if (l >= 96 && l <= 105) {
                    l = m.keyCode = l - 48
                }
                h = parseInt(String.fromCharCode(l));
                if (isNaN(h)) {
                    (l !== 13) && (l !== 8) && (l !== 9) && (l !== 189) && m.preventDefault();
                    if (d.inArray(l, [37, 38, 39, 40]) > -1) {
                        m.preventDefault();
                        var k = parseInt(f.$.val()) + g[l] * e;
                        f.o.stopper && (k = a(c(k, f.o.max), f.o.min));
                        f.change(k);
                        f._draw();
                        i = window.setTimeout(function() {
                            e *= 2
                        }, 30)
                    }
                }
            }).bind("keyup", function(k) {
                if (isNaN(h)) {
                    if (i) {
                        window.clearTimeout(i);
                        i = null;
                        e = 1;
                        f.val(f.$.val())
                    }
                } else {
                    (f.$.val() > f.o.max && f.$.val(f.o.max)) || (f.$.val() < f.o.min && f.$.val(f.o.min))
                }
            });
            this.$c.bind("mousewheel DOMMouseScroll", j);
            this.$.bind("mousewheel DOMMouseScroll", j)
        }
        ;
        this.init = function() {
            if (this.v < this.o.min || this.v > this.o.max) {
                this.v = this.o.min
            }
            this.$.val(this.v);
            this.w2 = this.o.width / 2;
            this.cursorExt = this.o.cursor / 100;
            this.xy = this.w2;
            this.lineWidth = this.xy * this.o.thickness;
            this.lineCap = this.o.lineCap;
            this.radius = this.xy - this.lineWidth / 2;
            this.o.angleOffset && (this.o.angleOffset = isNaN(this.o.angleOffset) ? 0 : this.o.angleOffset);
            this.o.angleArc && (this.o.angleArc = isNaN(this.o.angleArc) ? this.PI2 : this.o.angleArc);
            this.angleOffset = this.o.angleOffset * Math.PI / 180;
            this.angleArc = this.o.angleArc * Math.PI / 180;
            this.startAngle = 1.5 * Math.PI + this.angleOffset;
            this.endAngle = 1.5 * Math.PI + this.angleOffset + this.angleArc;
            var e = a(String(Math.abs(this.o.max)).length, String(Math.abs(this.o.min)).length, 2) + 2;
            this.o.displayInput && this.i.css({
                width: ((this.o.width / 2 + 4) >> 0) + "px",
                height: ((this.o.width / 3) >> 0) + "px",
                position: "absolute",
                "vertical-align": "middle",
                "margin-top": ((this.o.width / 3) >> 0) + "px",
                "margin-left": "-" + ((this.o.width * 3 / 4 + 2) >> 0) + "px",
                border: 0,
                background: "none",
                font: ((this.o.width / e) >> 0) + "px Arial",
                "text-align": "center",
                color: this.o.inputColor || this.o.fgColor,
                padding: "0px",
                "-webkit-appearance": "none"
            }) || this.i.css({
                width: "0px",
                visibility: "hidden"
            })
        }
        ;
        this.change = function(e) {
            this.cv = e;
            this.$.val(e)
        }
        ;
        this.angle = function(e) {
            return (e - this.o.min) * this.angleArc / (this.o.max - this.o.min)
        }
        ;
        this.draw = function() {
            var k = this.g, f = this.angle(this.cv), g = this.startAngle, h = g + f, e, i, j = 1;
            k.lineWidth = this.lineWidth;
            k.lineCap = this.lineCap;
            this.o.cursor && (g = h - this.cursorExt) && (h = h + this.cursorExt);
            k.beginPath();
            k.strokeStyle = this.o.bgColor;
            k.arc(this.xy, this.xy, this.radius, this.endAngle, this.startAngle, true);
            k.stroke();
            if (this.o.displayPrevious) {
                i = this.startAngle + this.angle(this.v);
                e = this.startAngle;
                this.o.cursor && (e = i - this.cursorExt) && (i = i + this.cursorExt);
                k.beginPath();
                k.strokeStyle = this.pColor;
                k.arc(this.xy, this.xy, this.radius, e, i, false);
                k.stroke();
                j = (this.cv == this.v)
            }
            k.beginPath();
            k.strokeStyle = j ? this.o.fgColor : this.fgColor;
            k.arc(this.xy, this.xy, this.radius, g, h, false);
            k.stroke()
        }
        ;
        this.cancel = function() {
            this.val(this.v)
        }
    }
    ;
    d.fn.dial = d.fn.knob = function(e) {
        return this.each(function() {
            var f = new b.Dial();
            f.o = e;
            f.$ = d(this);
            f.run()
        }).parent()
    }
}
)(jQuery);
(function(b) {
    var c, d, a;
    b.extend({
        roundaboutShapes: {
            def: "lazySusan",
            lazySusan: function(g, e, f) {
                return {
                    x: Math.sin(g + e),
                    y: (Math.sin(g + 3 * Math.PI / 2 + e) / 8) * f,
                    z: (Math.cos(g + e) + 1) / 2,
                    scale: (Math.sin(g + Math.PI / 2 + e) / 2) + 0.5
                }
            }
        }
    });
    c = {
        bearing: 0,
        tilt: 0,
        minZ: 100,
        maxZ: 280,
        minOpacity: 0.4,
        maxOpacity: 1,
        minScale: 0.4,
        maxScale: 1,
        duration: 600,
        btnNext: null,
        btnNextCallback: function() {},
        btnPrev: null,
        btnPrevCallback: function() {},
        btnToggleAutoplay: null,
        btnStartAutoplay: null,
        btnStopAutoplay: null,
        easing: "swing",
        clickToFocus: true,
        clickToFocusCallback: function() {},
        focusBearing: 0,
        shape: "lazySusan",
        debug: false,
        childSelector: "li",
        startingChild: null,
        reflect: false,
        floatComparisonThreshold: 0.001,
        autoplay: false,
        autoplayDuration: 1000,
        autoplayPauseOnHover: false,
        autoplayCallback: function() {},
        autoplayInitialDelay: 0,
        enableDrag: false,
        dropDuration: 600,
        dropEasing: "swing",
        dropAnimateTo: "nearest",
        dropCallback: function() {},
        dragAxis: "x",
        dragFactor: 4,
        triggerFocusEvents: true,
        triggerBlurEvents: true,
        responsive: false
    };
    d = {
        autoplayInterval: null,
        autoplayIsRunning: false,
        autoplayStartTimeout: null,
        animating: false,
        childInFocus: -1,
        touchMoveStartPosition: null,
        stopAnimation: false,
        lastAnimationStep: false
    };
    a = {
        init: function(f, i, h) {
            var g, e = (new Date()).getTime();
            f = (typeof f === "object") ? f : {};
            i = (b.isFunction(i)) ? i : function() {}
            ;
            i = (b.isFunction(f)) ? f : i;
            g = b.extend({}, c, f, d);
            return this.each(function() {
                var k = b(this)
                  , j = k.children(g.childSelector).length;
                var n = 360 / j;
                var m = (g.startingChild && g.startingChild > (j - 1)) ? (j - 1) : g.startingChild
                  , l = (g.startingChild === null) ? g.bearing : 360 - (m * n)
                  , o = (k.css("position") !== "static") ? k.css("position") : "relative";
                k.css({
                    padding: 0,
                    position: o
                }).addClass("roundabout-holder").data("roundabout", b.extend({}, g, {
                    startingChild: m,
                    bearing: l,
                    oppositeOfFocusBearing: a.normalize.apply(null, [g.focusBearing - 180]),
                    dragBearing: l,
                    period: n
                }));
                if (h) {
                    k.unbind(".roundabout").children(g.childSelector).unbind(".roundabout")
                } else {
                    if (g.responsive) {
                        b(window).bind("resize", function() {
                            a.stopAutoplay.apply(k);
                            a.relayoutChildren.apply(k)
                        })
                    }
                }
                if (g.clickToFocus) {
                    k.children(g.childSelector).each(function(p) {
                        b(this).bind("click.roundabout", function() {
                            var q = a.getPlacement.apply(k, [p]);
                            if (!a.isInFocus.apply(k, [q])) {
                                a.stopAnimation.apply(b(this));
                                if (!k.data("roundabout").animating) {
                                    a.animateBearingToFocus.apply(k, [q, k.data("roundabout").clickToFocusCallback])
                                }
                                return false
                            }
                        })
                    })
                }
                if (g.btnNext) {
                    b(g.btnNext).bind("click.roundabout", function() {
                        if (!k.data("roundabout").animating) {
                            a.animateToNextChild.apply(k, [k.data("roundabout").btnNextCallback])
                        }
                        return false
                    })
                }
                if (g.btnPrev) {
                    b(g.btnPrev).bind("click.roundabout", function() {
                        a.animateToPreviousChild.apply(k, [k.data("roundabout").btnPrevCallback]);
                        return false
                    })
                }
                if (g.btnToggleAutoplay) {
                    b(g.btnToggleAutoplay).bind("click.roundabout", function() {
                        a.toggleAutoplay.apply(k);
                        return false
                    })
                }
                if (g.btnStartAutoplay) {
                    b(g.btnStartAutoplay).bind("click.roundabout", function() {
                        a.startAutoplay.apply(k);
                        return false
                    })
                }
                if (g.btnStopAutoplay) {
                    b(g.btnStopAutoplay).bind("click.roundabout", function() {
                        a.stopAutoplay.apply(k);
                        return false
                    })
                }
                if (g.autoplayPauseOnHover) {
                    k.bind("mouseenter.roundabout.autoplay", function() {
                        a.stopAutoplay.apply(k, [true])
                    }).bind("mouseleave.roundabout.autoplay", function() {
                        a.startAutoplay.apply(k)
                    })
                }
                if (g.enableDrag) {
                    if (!b.isFunction(k.drag)) {
                        if (g.debug) {
                            alert("You do not have the drag plugin loaded.")
                        }
                    } else {
                        if (!b.isFunction(k.drop)) {
                            if (g.debug) {
                                alert("You do not have the drop plugin loaded.")
                            }
                        } else {
                            k.drag(function(r, p) {
                                var q = k.data("roundabout")
                                  , s = (q.dragAxis.toLowerCase() === "x") ? "deltaX" : "deltaY";
                                a.stopAnimation.apply(k);
                                a.setBearing.apply(k, [q.dragBearing + p[s] / q.dragFactor])
                            }).drop(function(q) {
                                var p = k.data("roundabout")
                                  , r = a.getAnimateToMethod(p.dropAnimateTo);
                                a.allowAnimation.apply(k);
                                a[r].apply(k, [p.dropDuration, p.dropEasing, p.dropCallback]);
                                p.dragBearing = p.period * a.getNearestChild.apply(k)
                            })
                        }
                    }
                    k.each(function() {
                        var p = b(this).get(0)
                          , r = b(this).data("roundabout")
                          , q = (r.dragAxis.toLowerCase() === "x") ? "pageX" : "pageY"
                          , s = a.getAnimateToMethod(r.dropAnimateTo);
                        if (p.addEventListener) {
                            p.addEventListener("touchstart", function(t) {
                                r.touchMoveStartPosition = t.touches[0][q]
                            }, false);
                            p.addEventListener("touchmove", function(t) {
                                var u = (t.touches[0][q] - r.touchMoveStartPosition) / r.dragFactor;
                                t.preventDefault();
                                a.stopAnimation.apply(b(this));
                                a.setBearing.apply(b(this), [r.dragBearing + u])
                            }, false);
                            p.addEventListener("touchend", function(t) {
                                t.preventDefault();
                                a.allowAnimation.apply(b(this));
                                s = a.getAnimateToMethod(r.dropAnimateTo);
                                a[s].apply(b(this), [r.dropDuration, r.dropEasing, r.dropCallback]);
                                r.dragBearing = r.period * a.getNearestChild.apply(b(this))
                            }, false)
                        }
                    })
                }
                a.initChildren.apply(k, [i, h])
            })
        },
        initChildren: function(h, f) {
            var e = b(this)
              , g = e.data("roundabout");
            h = h || function() {}
            ;
            e.children(g.childSelector).each(function(m) {
                var k, j, l, n = a.getPlacement.apply(e, [m]);
                if (f && b(this).data("roundabout")) {
                    k = b(this).data("roundabout").startWidth;
                    j = b(this).data("roundabout").startHeight;
                    l = b(this).data("roundabout").startFontSize
                }
                b(this).addClass("roundabout-moveable-item").css("position", "absolute");
                b(this).data("roundabout", {
                    startWidth: k || b(this).width(),
                    startHeight: j || b(this).height(),
                    startFontSize: l || parseInt(b(this).css("font-size"), 10),
                    degrees: n,
                    backDegrees: a.normalize.apply(null, [n - 180]),
                    childNumber: m,
                    currentScale: 1,
                    parent: e
                })
            });
            a.updateChildren.apply(e);
            if (g.autoplay) {
                g.autoplayStartTimeout = setTimeout(function() {
                    a.startAutoplay.apply(e)
                }, g.autoplayInitialDelay)
            }
            e.trigger("ready");
            h.apply(e);
            return e
        },
        updateChildren: function() {
            return this.each(function() {
                var e = b(this)
                  , f = e.data("roundabout")
                  , h = -3
                  , g = {
                    bearing: f.bearing,
                    tilt: f.tilt,
                    stage: {
                        width: Math.floor(b(this).width() * 0.9),
                        height: Math.floor(b(this).height() * 0.9)
                    },
                    animating: f.animating,
                    inFocus: f.childInFocus,
                    focusBearingRadian: a.degToRad.apply(null, [f.focusBearing]),
                    shape: b.roundaboutShapes[f.shape] || b.roundaboutShapes[b.roundaboutShapes.def]
                };
                g.midStage = {
                    width: g.stage.width / 2,
                    height: g.stage.height / 2
                };
                g.nudge = {
                    width: g.midStage.width + (g.stage.width * 0.05),
                    height: g.midStage.height + (g.stage.height * 0.05)
                };
                g.zValues = {
                    min: f.minZ,
                    max: f.maxZ,
                    diff: f.maxZ - f.minZ
                };
                g.opacity = {
                    min: f.minOpacity,
                    max: f.maxOpacity,
                    diff: f.maxOpacity - f.minOpacity
                };
                g.scale = {
                    min: f.minScale,
                    max: f.maxScale,
                    diff: f.maxScale - f.minScale
                };
                e.children(f.childSelector).each(function(j) {
                    if (a.updateChild.apply(e, [b(this), g, j, function() {
                        b(this).trigger("ready")
                    }
                    ]) && (!g.animating || f.lastAnimationStep)) {
                        h = j;
                        b(this).addClass("roundabout-in-focus")
                    } else {
                        b(this).removeClass("roundabout-in-focus")
                    }
                });
                if (h !== g.inFocus) {
                    if (f.triggerBlurEvents) {
                        e.children(f.childSelector).eq(g.inFocus).trigger("blur")
                    }
                    f.childInFocus = h;
                    if (f.triggerFocusEvents && h !== -1) {
                        e.children(f.childSelector).eq(h).trigger("focus")
                    }
                }
                e.trigger("childrenUpdated")
            })
        },
        updateChild: function(h, g, e, m) {
            var l, n = this, f = b(h), j = f.data("roundabout"), i = [], k = a.degToRad.apply(null, [(360 - j.degrees) + g.bearing]);
            m = m || function() {}
            ;
            k = a.normalizeRad.apply(null, [k]);
            l = g.shape(k, g.focusBearingRadian, g.tilt);
            l.scale = (l.scale > 1) ? 1 : l.scale;
            l.adjustedScale = (g.scale.min + (g.scale.diff * l.scale)).toFixed(4);
            l.width = (l.adjustedScale * j.startWidth).toFixed(4);
            l.height = (l.adjustedScale * j.startHeight).toFixed(4);
            f.css({
                left: ((l.x * g.midStage.width + g.nudge.width) - l.width / 2).toFixed(0) + "px",
                top: ((l.y * g.midStage.height + g.nudge.height) - l.height / 2).toFixed(0) + "px",
                width: l.width + "px",
                height: l.height + "px",
                opacity: (g.opacity.min + (g.opacity.diff * l.scale)).toFixed(2),
                zIndex: Math.round(g.zValues.min + (g.zValues.diff * l.z)),
                fontSize: (l.adjustedScale * j.startFontSize).toFixed(1) + "px"
            });
            j.currentScale = l.adjustedScale;
            if (n.data("roundabout").debug) {
                i.push('<div style="font-weight: normal; font-size: 10px; padding: 2px; width: ' + f.css("width") + '; background-color: #ffc;">');
                i.push('<strong style="font-size: 12px; white-space: nowrap;">Child ' + e + "</strong><br />");
                i.push("<strong>left:</strong> " + f.css("left") + "<br />");
                i.push("<strong>top:</strong> " + f.css("top") + "<br />");
                i.push("<strong>width:</strong> " + f.css("width") + "<br />");
                i.push("<strong>opacity:</strong> " + f.css("opacity") + "<br />");
                i.push("<strong>height:</strong> " + f.css("height") + "<br />");
                i.push("<strong>z-index:</strong> " + f.css("z-index") + "<br />");
                i.push("<strong>font-size:</strong> " + f.css("font-size") + "<br />");
                i.push("<strong>scale:</strong> " + f.data("roundabout").currentScale);
                i.push("</div>");
                f.html(i.join(""))
            }
            f.trigger("reposition");
            m.apply(n);
            return a.isInFocus.apply(n, [j.degrees])
        },
        setBearing: function(e, f) {
            f = f || function() {}
            ;
            e = a.normalize.apply(null, [e]);
            this.each(function() {
                var l, g, j, i = b(this), k = i.data("roundabout"), h = k.bearing;
                k.bearing = e;
                i.trigger("bearingSet");
                a.updateChildren.apply(i);
                l = Math.abs(h - e);
                if (!k.animating || l > 180) {
                    return
                }
                l = Math.abs(h - e);
                i.children(k.childSelector).each(function(n) {
                    var m;
                    if (a.isChildBackDegreesBetween.apply(b(this), [e, h])) {
                        m = (h > e) ? "Clockwise" : "Counterclockwise";
                        b(this).trigger("move" + m + "ThroughBack")
                    }
                })
            });
            f.apply(this);
            return this
        },
        adjustBearing: function(f, e) {
            e = e || function() {}
            ;
            if (f === 0) {
                return this
            }
            this.each(function() {
                a.setBearing.apply(b(this), [b(this).data("roundabout").bearing + f])
            });
            e.apply(this);
            return this
        },
        setTilt: function(e, f) {
            f = f || function() {}
            ;
            this.each(function() {
                b(this).data("roundabout").tilt = e;
                a.updateChildren.apply(b(this))
            });
            f.apply(this);
            return this
        },
        adjustTilt: function(f, e) {
            e = e || function() {}
            ;
            this.each(function() {
                a.setTilt.apply(b(this), [b(this).data("roundabout").tilt + f])
            });
            e.apply(this);
            return this
        },
        animateToBearing: function(f, g, j, h, i) {
            var e = (new Date()).getTime();
            i = i || function() {}
            ;
            if (b.isFunction(h)) {
                i = h;
                h = null
            } else {
                if (b.isFunction(j)) {
                    i = j;
                    j = null
                } else {
                    if (b.isFunction(g)) {
                        i = g;
                        g = null
                    }
                }
            }
            this.each(function() {
                var q, p, k, l = b(this), o = l.data("roundabout"), m = (!g) ? o.duration : g, n = (j) ? j : o.easing || "swing";
                if (!h) {
                    h = {
                        timerStart: e,
                        start: o.bearing,
                        totalTime: m
                    }
                }
                q = e - h.timerStart;
                if (o.stopAnimation) {
                    a.allowAnimation.apply(l);
                    o.animating = false;
                    return
                }
                if (q < m) {
                    if (!o.animating) {
                        l.trigger("animationStart")
                    }
                    o.animating = true;
                    if (typeof b.easing.def === "string") {
                        p = b.easing[n] || b.easing[b.easing.def];
                        k = p(null, q, h.start, f - h.start, h.totalTime)
                    } else {
                        k = b.easing[n]((q / h.totalTime), q, h.start, f - h.start, h.totalTime)
                    }
                    if (a.compareVersions.apply(null, [b().jquery, "1.7.2"]) >= 0 && !(b.easing.easeOutBack)) {
                        k = h.start + ((f - h.start) * k)
                    }
                    k = a.normalize.apply(null, [k]);
                    o.dragBearing = k;
                    a.setBearing.apply(l, [k, function() {
                        setTimeout(function() {
                            a.animateToBearing.apply(l, [f, m, n, h, i])
                        }, 0)
                    }
                    ])
                } else {
                    o.lastAnimationStep = true;
                    f = a.normalize.apply(null, [f]);
                    a.setBearing.apply(l, [f, function() {
                        l.trigger("animationEnd")
                    }
                    ]);
                    o.animating = false;
                    o.lastAnimationStep = false;
                    o.dragBearing = f;
                    i.apply(l)
                }
            });
            return this
        },
        animateToNearbyChild: function(e, g) {
            var f = e[0]
              , i = e[1]
              , h = e[2] || function() {}
            ;
            if (b.isFunction(i)) {
                h = i;
                i = null
            } else {
                if (b.isFunction(f)) {
                    h = f;
                    f = null
                }
            }
            return this.each(function() {
                var n, l, k = b(this), p = k.data("roundabout"), m = (!p.reflect) ? p.bearing % 360 : p.bearing, o = k.children(p.childSelector).length;
                if (!p.animating) {
                    if ((p.reflect && g === "previous") || (!p.reflect && g === "next")) {
                        m = (Math.abs(m) < p.floatComparisonThreshold) ? 360 : m;
                        for (n = 0; n < o; n += 1) {
                            l = {
                                lower: (p.period * n),
                                upper: (p.period * (n + 1))
                            };
                            l.upper = (n === o - 1) ? 360 : l.upper;
                            if (m <= Math.ceil(l.upper) && m >= Math.floor(l.lower)) {
                                if (o === 2 && m === 360) {
                                    a.animateToDelta.apply(k, [-180, f, i, h])
                                } else {
                                    a.animateBearingToFocus.apply(k, [l.lower, f, i, h])
                                }
                                break
                            }
                        }
                    } else {
                        m = (Math.abs(m) < p.floatComparisonThreshold || 360 - Math.abs(m) < p.floatComparisonThreshold) ? 0 : m;
                        for (n = o - 1; n >= 0; n -= 1) {
                            l = {
                                lower: p.period * n,
                                upper: p.period * (n + 1)
                            };
                            l.upper = (n === o - 1) ? 360 : l.upper;
                            if (m >= Math.floor(l.lower) && m < Math.ceil(l.upper)) {
                                if (o === 2 && m === 360) {
                                    a.animateToDelta.apply(k, [180, f, i, h])
                                } else {
                                    a.animateBearingToFocus.apply(k, [l.upper, f, i, h])
                                }
                                break
                            }
                        }
                    }
                }
            })
        },
        animateToNearestChild: function(e, g, f) {
            f = f || function() {}
            ;
            if (b.isFunction(g)) {
                f = g;
                g = null
            } else {
                if (b.isFunction(e)) {
                    f = e;
                    e = null
                }
            }
            return this.each(function() {
                var h = a.getNearestChild.apply(b(this));
                a.animateToChild.apply(b(this), [h, e, g, f])
            })
        },
        animateToChild: function(e, f, h, g) {
            g = g || function() {}
            ;
            if (b.isFunction(h)) {
                g = h;
                h = null
            } else {
                if (b.isFunction(f)) {
                    g = f;
                    f = null
                }
            }
            return this.each(function() {
                var k, i = b(this), j = i.data("roundabout");
                if (j.childInFocus !== e && !j.animating) {
                    k = i.children(j.childSelector).eq(e);
                    a.animateBearingToFocus.apply(i, [k.data("roundabout").degrees, f, h, g])
                }
            })
        },
        animateToNextChild: function(e, g, f) {
            return a.animateToNearbyChild.apply(this, [arguments, "next"])
        },
        animateToPreviousChild: function(e, g, f) {
            return a.animateToNearbyChild.apply(this, [arguments, "previous"])
        },
        animateToDelta: function(f, e, h, g) {
            g = g || function() {}
            ;
            if (b.isFunction(h)) {
                g = h;
                h = null
            } else {
                if (b.isFunction(e)) {
                    g = e;
                    e = null
                }
            }
            return this.each(function() {
                var i = b(this).data("roundabout").bearing + f;
                a.animateToBearing.apply(b(this), [i, e, h, g])
            })
        },
        animateBearingToFocus: function(f, e, h, g) {
            g = g || function() {}
            ;
            if (b.isFunction(h)) {
                g = h;
                h = null
            } else {
                if (b.isFunction(e)) {
                    g = e;
                    e = null
                }
            }
            return this.each(function() {
                var i = b(this).data("roundabout").bearing - f;
                i = (Math.abs(360 - i) < Math.abs(i)) ? 360 - i : -i;
                i = (i > 180) ? -(360 - i) : i;
                if (i !== 0) {
                    a.animateToDelta.apply(b(this), [i, e, h, g])
                }
            })
        },
        stopAnimation: function() {
            return this.each(function() {
                b(this).data("roundabout").stopAnimation = true
            })
        },
        allowAnimation: function() {
            return this.each(function() {
                b(this).data("roundabout").stopAnimation = false
            })
        },
        startAutoplay: function(e) {
            return this.each(function() {
                var f = b(this)
                  , g = f.data("roundabout");
                e = e || g.autoplayCallback || function() {}
                ;
                clearInterval(g.autoplayInterval);
                g.autoplayInterval = setInterval(function() {
                    a.animateToNextChild.apply(f, [e])
                }, g.autoplayDuration);
                g.autoplayIsRunning = true;
                f.trigger("autoplayStart")
            })
        },
        stopAutoplay: function(e) {
            return this.each(function() {
                clearInterval(b(this).data("roundabout").autoplayInterval);
                b(this).data("roundabout").autoplayInterval = null;
                b(this).data("roundabout").autoplayIsRunning = false;
                if (!e) {
                    b(this).unbind(".autoplay")
                }
                b(this).trigger("autoplayStop")
            })
        },
        toggleAutoplay: function(e) {
            return this.each(function() {
                var f = b(this)
                  , g = f.data("roundabout");
                e = e || g.autoplayCallback || function() {}
                ;
                if (!a.isAutoplaying.apply(b(this))) {
                    a.startAutoplay.apply(b(this), [e])
                } else {
                    a.stopAutoplay.apply(b(this), [e])
                }
            })
        },
        isAutoplaying: function() {
            return (this.data("roundabout").autoplayIsRunning)
        },
        changeAutoplayDuration: function(e) {
            return this.each(function() {
                var f = b(this)
                  , g = f.data("roundabout");
                g.autoplayDuration = e;
                if (a.isAutoplaying.apply(f)) {
                    a.stopAutoplay.apply(f);
                    setTimeout(function() {
                        a.startAutoplay.apply(f)
                    }, 10)
                }
            })
        },
        normalize: function(f) {
            var e = f % 360;
            return (e < 0) ? 360 + e : e
        },
        normalizeRad: function(e) {
            while (e < 0) {
                e += (Math.PI * 2)
            }
            while (e > (Math.PI * 2)) {
                e -= (Math.PI * 2)
            }
            return e
        },
        isChildBackDegreesBetween: function(f, e) {
            var g = b(this).data("roundabout").backDegrees;
            if (f > e) {
                return (g >= e && g < f)
            } else {
                return (g < e && g >= f)
            }
        },
        getAnimateToMethod: function(e) {
            e = e.toLowerCase();
            if (e === "next") {
                return "animateToNextChild"
            } else {
                if (e === "previous") {
                    return "animateToPreviousChild"
                }
            }
            return "animateToNearestChild"
        },
        relayoutChildren: function() {
            return this.each(function() {
                var e = b(this)
                  , f = b.extend({}, e.data("roundabout"));
                f.startingChild = e.data("roundabout").childInFocus;
                a.init.apply(e, [f, null, true])
            })
        },
        getNearestChild: function() {
            var e = b(this)
              , g = e.data("roundabout")
              , f = e.children(g.childSelector).length;
            if (!g.reflect) {
                return ((f) - (Math.round(g.bearing / g.period) % f)) % f
            } else {
                return (Math.round(g.bearing / g.period) % f)
            }
        },
        degToRad: function(e) {
            return a.normalize.apply(null, [e]) * Math.PI / 180
        },
        getPlacement: function(f) {
            var e = this.data("roundabout");
            return (!e.reflect) ? 360 - (e.period * f) : e.period * f
        },
        isInFocus: function(i) {
            var h, e = this, g = e.data("roundabout"), f = a.normalize.apply(null, [g.bearing]);
            i = a.normalize.apply(null, [i]);
            h = Math.abs(f - i);
            return (h <= g.floatComparisonThreshold || h >= 360 - g.floatComparisonThreshold)
        },
        getChildInFocus: function() {
            var e = b(this).data("roundabout");
            return (e.childInFocus > -1) ? e.childInFocus : false
        },
        compareVersions: function(e, k) {
            var g, j = e.split(/\./i), h = k.split(/\./i), f = (j.length > h.length) ? j.length : h.length;
            for (g = 0; g <= f; g++) {
                if (j[g] && !h[g] && parseInt(j[g], 10) !== 0) {
                    return 1
                } else {
                    if (h[g] && !j[g] && parseInt(h[g], 10) !== 0) {
                        return -1
                    } else {
                        if (j[g] === h[g]) {
                            continue
                        }
                    }
                }
                if (j[g] && h[g]) {
                    if (parseInt(j[g], 10) > parseInt(h[g], 10)) {
                        return 1
                    } else {
                        return -1
                    }
                }
            }
            return 0
        }
    };
    b.fn.roundabout = function(e) {
        if (a[e]) {
            return a[e].apply(this, Array.prototype.slice.call(arguments, 1))
        } else {
            if (typeof e === "object" || b.isFunction(e) || !e) {
                return a.init.apply(this, arguments)
            } else {
                b.error("Method " + e + " does not exist for jQuery.roundabout.")
            }
        }
    }
}
)(jQuery);
function viewLinkedContent(e, d, b, c, a, f) {
    this.folderContentId = e;
    this.linkedContentHtml = "";
    this.moduleName = d;
    this.noteText = b;
    this.roleId = c;
    this.linkedContentCount = 0;
    this.fromPage = f;
    this.showLinkedContent = function() {
        if (c != 2 || f == "COURSEOUTLINE") {
            a = true
        }
        var g = appNavObj.appBasePath + "/" + this.moduleName + "/content.lc?operation=getLinkedClassContent&folderContentId=" + e + "&i=1&onlyIUContentLinks=" + a;
        var h = this;
        if (this.linkedContentHtml == "") {
            jQuery.ajax({
                url: g,
                dataType: "json",
                async: false,
                success: function(m) {
                    if (m.cfcList != null) {
                        h.linkedContentHtml += '<div style="display:none;" id="linkedTo_popup" class="cbl_inlinePopUp"><a class="close" href="javascript:void(0)"></a><h2>Linked To</h2><div class="cbl_inlinePopUpContent"><ul class="document_added popupdoclist linkedContent" style="height: 263px;">';
                        var t = "";
                        var j = m.serverDate;
                        h.linkedContentCount = m.cfcList.length;
                        for (var n = 0; n < m.cfcList.length; n++) {
                            var p;
                            var s = "";
                            var r = ""
                              , k = true;
                            var u = m.cfcList[n].classContentTypeId;
                            var o = m.cfcList[n].folderContentId;
                            var q = m.cfcList[n].classId;
                            var l = 1;
                            if (u == 3 || u == 4 || u == 7 || u == 9 || u == 10 || u == 11 || u == 13) {
                                l = 2
                            }
                            switch (u) {
                            case 1:
                                s = m.cfcList[n].assignment.title;
                                r = "icon_preTest";
                                break;
                            case 2:
                                s = m.cfcList[n].quiz.title;
                                r = "icon_quiz";
                                break;
                            case 3:
                                s = m.cfcList[n].loudbook.title;
                                r = "icon_onlineReading";
                                break;
                            case 4:
                                s = m.cfcList[n].electronicResource.title;
                                r = "icon_externalLink";
                                break;
                            case 5:
                                s = m.cfcList[n].discussionQuestion.title;
                                r = "icon_participation";
                                break;
                            case 6:
                                s = m.cfcList[n].participation.title;
                                r = "icon_discussionQuestion";
                                break;
                            case 7:
                                s = m.cfcList[n].thirdPartyResource.title;
                                r = "icon_approvedTP";
                                break;
                            case 8:
                                s = m.cfcList[n].instruction.title;
                                r = "icon_instruction";
                                break;
                            case 9:
                                s = m.cfcList[n].readingMaterial.title;
                                r = "icon_requiredReading";
                                break;
                            case 10:
                                s = m.cfcList[n].webContent.title;
                                r = "icon_contentPackage";
                                break;
                            case 11:
                                s = m.cfcList[n].rssFeed.title;
                                r = "icon_RSS";
                                break;
                            case 12:
                                s = m.cfcList[n].scoDetails.scoTitle;
                                r = "icon_scorm";
                                break;
                            case 14:
                                s = m.cfcList[n].thirdPartyResource.title;
                                r = "icon_approvedTP";
                                break
                            }
                            switch (h.fromPage) {
                            case "COURSEOUTLINE":
                                if (c == 2) {
                                    p = appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutline&c=prepareClassOutlineForm&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                } else {
                                    if (c == 1 || c == 3) {
                                        p = appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutlineIUView&c=prepareClassOutlineForm&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                    }
                                }
                                break;
                            case "CONTENTREPOSITORY":
                                if (c == 2) {
                                    p = appNavObj.appBasePath + "/class/content.lc?operation=getClassContentRepository&c=prepareContentRepositoryForm&contentTypeId=" + u + "&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                } else {
                                    if (c == 1 || c == 3) {
                                        p = appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutlineContentListView&c=prepareClassContentViewForm&contentTypeId=" + u + "&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                    }
                                }
                                break;
                            case "COMPETENCYREPOSITORY":
                                if (c == 2) {
                                    p = appNavObj.appBasePath + "/outcomes/outcomes.lc?operation=getClassCompetenciesRepository&c=prepareCompetenciesRepositoryForm&contentTypeId=" + u + "&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                } else {
                                    if (c == 1 || c == 3) {
                                        p = appNavObj.appBasePath + "/class/syllabus.lc?operation=getClassOutlineCompetencyView&c=prepareCompetenciesViewForm&contentTypeId=" + u + "&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                    }
                                }
                                break;
                            case "CONTENTSTRUCTUREREPOSITORY":
                                if (c == 2) {
                                    p = appNavObj.appBasePath + "/class/content.lc?operation=getClassContent&c=prepareClassContentForm&contentTypeId=" + u + "&fromOtherPage=true&folderContentId=" + o + "&viewType=" + l + "&classId=" + q
                                }
                                break
                            }
                            h.linkedContentHtml += "<li><a onclick=\"navigateToLink('" + p + "'," + k + ')" title="' + s + '" href="javascript:void(0)" class="floatLeft"><span class="' + r + '"></span>' + s + "</a></li>"
                        }
                        h.linkedContentHtml += "</ul></div></div>"
                    }
                }
            })
        }
        return this.linkedContentHtml
    }
    ;
    this.escape = function(g) {
        return g.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
    }
}
function appendLinkedContentToPreview(f, e, a, d, h) {
    var b = new viewLinkedContent(f,e,a,d,false,h);
    var g = b.showLinkedContent();
    var c = b.linkedContentCount;
    jQuery("#linkedTo").html(c + " contents");
    if (c < 1) {
        jQuery("#linkedTo").addClass("disable-link-count");
        jQuery("#linkedTo").removeAttr("href")
    } else {
        jQuery("#linkedContentsInfo").show()
    }
    jQuery(g).insertAfter(jQuery("#linkedTo").parent());
    jQuery(".openInlinePopup").click(function(n) {
        var i = jQuery(this).attr("id");
        jQuery(".openInlinePopup").each(function() {
            if (jQuery(this).attr("id") != i) {
                jQuery("#" + jQuery(this).attr("id") + "_popup").hide()
            }
        });
        var j = jQuery(this).position().top;
        var l = (jQuery(this).offset().top - jQuery(window).scrollTop());
        var k = jQuery(window).height() - 50;
        var m = jQuery(this).parent().next().height();
        var o = k - l;
        if (o < m) {
            jQuery(this).parent().next().css({
                top: (j - m - 25) + "px"
            });
            jQuery(this).parent().next().addClass("cbl_inlinePopDown")
        } else {
            jQuery(this).parent().next().css({
                top: (j + 25) + "px"
            });
            jQuery(this).parent().next().removeClass("cbl_inlinePopDown")
        }
        jQuery(this).next(".cbl_inlinePopUp").show()
    });
    jQuery(".cbl_inlinePopUp a.close").click(function(i) {
        jQuery(this).closest(".cbl_inlinePopUp").slideUp()
    })
}
function navigateToLink(b, a) {
    if (a) {
        appNavObj.setURL(b)
    } else {
        Boxy.alert("This content is not visible at this moment.", null, {
            title: "Message"
        })
    }
}
;function googleDrive(googleDriveObj) {
    this.moduleName = googleDriveObj.moduleName;
    this.callbackFunction = googleDriveObj.callbackFunction;
    this.fileIdArray = null;
    this.fileNameArray = null;
    this.checkIfUserIsLoggedIn = function(googleDriveObj) {
        var obj = this;
        var googleDriveUrl = appNavObj.appBasePath + "/" + obj.moduleName + "/googleDrive.lc?operation=checkIfUserIsLoggedIn";
        jQuery.ajax({
            url: googleDriveUrl,
            cache: false,
            success: function(data) {
                if (data == "true") {
                    obj.getGoogleDriveFiles("", googleDriveObj)
                } else {
                    Boxy.ask(i18n("google.login"), [i18n("ok"), i18n("cancel")], function(val) {
                        var self = this;
                        if (val == i18n("ok")) {
                            var url = appNavObj.appBasePath + "/signin/google";
                            jQuery("#googleForm").attr("action", appNavObj.appBasePath + "/signin/google");
                            jQuery("#googleForm").submit()
                        }
                    }, {
                        title: i18n("message")
                    })
                }
            }
        })
    }
    ;
    this.getGoogleDriveFiles = function(searchQuery, googleDriveObj) {
        var obj = this;
        Boxy.load(appNavObj.appBasePath + "/" + obj.moduleName + "/googleDrive.lc?operation=getDriveFiles&searchQuery=" + searchQuery, {
            unloadOnHide: true,
            afterShow: function() {
                prepareAddFileFromGoogleDrive(googleDriveObj)
            }
        })
    }
    ;
    this.downloadFiles = function() {
        var obj = this;
        var fileIds = "";
        this.fileIdArray = new Array();
        this.fileNameArray = new Array();
        var allowedMaxFileSize = parseFloat(jQuery("#fileSettingSize").val());
        var filePermissions = jQuery("#filePermissions").val();
        var result = filePermissions.split(",");
        var fileLimit = true;
        var fileTitle = "";
        var fileExtensionTitle = "";
        var extensionType = true;
        jQuery("input[name='fileIdCheckBox']:checked").each(function() {
            var extensionTypePerFile = false;
            fileIds += "&fileIds=" + jQuery(this).val();
            var selFileSize = parseFloat(jQuery("#selectedFileSize_" + jQuery(this).val()).val());
            var selectedFileName = jQuery("#selectedFileName_" + jQuery(this).val()).val();
            var selectedFileMimeType = jQuery("#selectedFileMimeType_" + jQuery(this).val()).val();
            for (var i = 0; i < result.length; i++) {
                if (result[i] == selectedFileMimeType) {
                    extensionTypePerFile = true;
                    break
                }
            }
            if (selFileSize > allowedMaxFileSize) {
                fileTitle += "<br>" + selectedFileName;
                fileLimit = false
            }
            if (extensionTypePerFile == false) {
                fileExtensionTitle += "<br>" + selectedFileName;
                extensionType = false
            }
        });
        if (fileIds == "") {
            Boxy.alert("Please Select File.", null, {
                title: i18n("message")
            })
        } else {
            if (fileLimit == false) {
                Boxy.alert("File size exceeded for the following file(s) : " + fileTitle, null, {
                    title: i18n("message")
                })
            } else {
                if (extensionType == false) {
                    Boxy.alert("File extension is not valid for the following file(s) : " + fileExtensionTitle, null, {
                        title: i18n("message")
                    });
                    extensionType = false
                } else {
                    if (fileLimit == true && extensionType == true) {
                        jQuery.ajax({
                            beforeSend: function() {
                                jQuery(".processingRequestSpan").show();
                                jQuery("#addFilesSaveBtn").attr("disabled", true).addClass("disBtn");
                                return true
                            },
                            url: appNavObj.appBasePath + "/" + obj.moduleName + "/googleDrive.lc?operation=downloadDriveFiles" + fileIds,
                            dataType: "json",
                            success: function(data) {
                                jQuery(".processingRequestSpan").hide();
                                jQuery("#addFilesSaveBtn").attr("disabled", false).removeClass("disBtn");
                                if (data.status == "1") {
                                    for (var i = 0; i < data.fileIds.length; i++) {
                                        obj.fileIdArray.push(data.fileIds[i])
                                    }
                                    for (var i = 0; i < data.fileNames.length; i++) {
                                        obj.fileNameArray.push(data.fileNames[i])
                                    }
                                    eval(obj.callbackFunction + "()");
                                    jQuery(".close").click()
                                } else {
                                    Boxy.alert("File Save Failed. Please select some other File.", null, {
                                        title: i18n("message")
                                    })
                                }
                            }
                        })
                    }
                }
            }
        }
    }
}
;function microsoftDrive(microsoftDriveObj) {
    this.moduleName = microsoftDriveObj.moduleName;
    this.callbackFunction = microsoftDriveObj.callbackFunction;
    this.fileIdArray = null;
    this.fileNameArray = null;
    this.checkIfUserIsLoggedIn = function(microsoftDriveObj) {
        var obj = this;
        var microsoftDriveUrl = appNavObj.appBasePath + "/" + obj.moduleName + "/microsoftrDrive.lc?operation=checkIfUserIsLoggedIn";
        jQuery.ajax({
            url: microsoftDriveUrl,
            cache: false,
            success: function(data) {
                if (data == "true") {
                    obj.getMicroSoftOneDriveFiles("", microsoftDriveObj)
                } else {
                    Boxy.ask(i18n("microsoft.login"), [i18n("ok"), i18n("cancel")], function(val) {
                        var self = this;
                        if (val == i18n("ok")) {
                            var url = appNavObj.appBasePath + "/signin/live";
                            jQuery("#oneDriveForm").attr("action", appNavObj.appBasePath + "/signin/live");
                            jQuery("#oneDriveForm").submit()
                        }
                    }, {
                        title: i18n("message")
                    })
                }
            }
        })
    }
    ;
    this.getMicroSoftOneDriveFiles = function(searchQuery, microsoftDriveObj) {
        var obj = this;
        Boxy.load(appNavObj.appBasePath + "/" + obj.moduleName + "/microsoftrDrive.lc?operation=getDriveFiles&searchQuery=" + searchQuery, {
            unloadOnHide: true,
            afterShow: function() {
                prepareAddFileFromMicroSoftDrive(microsoftDriveObj)
            }
        })
    }
    ;
    this.downloadMicroSoftFiles = function() {
        var obj = this;
        var fileIds = "";
        this.fileIdArray = new Array();
        this.fileNameArray = new Array();
        var allowedMaxFileSize = parseFloat(jQuery("#fileSettingSize").val());
        var filePermissions = jQuery("#filePermissions").val();
        var result = filePermissions.split(",");
        var fileLimit = true;
        var fileTitle = "";
        var fileExtensionTitle = "";
        var extensionType = true;
        jQuery("input[name='fileIdCheckBox']:checked").each(function() {
            var extensionTypePerFile = false;
            fileIds += "&fileIds=" + jQuery(this).val();
            var selectedFileSize = jQuery(this).closest("tr").find('input[name="selectedFileSize"]').val();
            var selectedFileName = jQuery(this).closest("tr").find('input[name="selectedFileName"]').val();
            var selectedFileMimeType = jQuery(this).closest("tr").find('input[name="selectedFileMimeType"]').val();
            if (selectedFileSize > allowedMaxFileSize) {
                fileTitle += "<br>" + selectedFileName;
                fileLimit = false
            }
            for (var i = 0; i < result.length; i++) {
                if (result[i] == selectedFileMimeType) {
                    extensionTypePerFile = true;
                    break
                }
            }
            if (extensionTypePerFile == false) {
                fileExtensionTitle += "<br>" + selectedFileName;
                extensionType = false
            }
        });
        if (fileIds == "") {
            Boxy.alert("Please Select File.", null, {
                title: i18n("message")
            })
        } else {
            if (fileLimit == false) {
                Boxy.alert("File size exceeded for the following file(s) : " + fileTitle, null, {
                    title: i18n("message")
                })
            } else {
                if (extensionType == false) {
                    Boxy.alert("File extension is not valid for the following file(s) : " + fileExtensionTitle, null, {
                        title: i18n("message")
                    });
                    extensionType = false
                } else {
                    if (fileLimit == true && extensionType == true) {
                        jQuery.ajax({
                            beforeSend: function() {
                                jQuery(".processingRequestSpan").show();
                                jQuery("#addFilesSaveBtn").attr("disabled", true).addClass("disBtn");
                                return true
                            },
                            url: appNavObj.appBasePath + "/" + obj.moduleName + "/microsoftrDrive.lc?operation=downloadDriveFiles" + fileIds,
                            dataType: "json",
                            success: function(data) {
                                jQuery(".processingRequestSpan").hide();
                                jQuery("#addFilesSaveBtn").attr("disabled", false).removeClass("disBtn");
                                if (data.status == "1") {
                                    for (var i = 0; i < data.fileIds.length; i++) {
                                        obj.fileIdArray.push(data.fileIds[i])
                                    }
                                    for (var i = 0; i < data.fileNames.length; i++) {
                                        obj.fileNameArray.push(data.fileNames[i])
                                    }
                                    eval(obj.callbackFunction + "()");
                                    jQuery(".close").click()
                                } else {
                                    Boxy.alert("File Save Failed. Please select some other File.", null, {
                                        title: i18n("message")
                                    })
                                }
                            }
                        })
                    }
                }
            }
        }
    }
}
;